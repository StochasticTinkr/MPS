package jetbrains.mps.lang.editor.menus.contextAssistant.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import javax.swing.SwingUtilities;
import jetbrains.mps.openapi.editor.assist.ContextAssistantManager;
import junit.framework.Assert;
import java.util.List;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.nodeEditor.cells.EditorCell_ContextAssistantComponent;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;

@MPSLaunch
public class ContextAssistant_CollapseAndShowSecondAssistant_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(ContextAssistant_CollapseAndShowSecondAssistant_Test.class, "${mps_home}", "r:5a4d10fc-2567-46c5-982f-547e9102417b(jetbrains.mps.lang.editor.menus.contextAssistant.tests@tests)", false);

  public ContextAssistant_CollapseAndShowSecondAssistant_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_ContextAssistant_CollapseAndShowSecondAssistant() throws Throwable {
    new ContextAssistant_CollapseAndShowSecondAssistant_Test.TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("379023083996833851", "379023083996833853");
      invokeAction("jetbrains.mps.ide.editor.actions.Collapse_Action");
      SwingUtilities.invokeAndWait(new Runnable() {
        public void run() {
          ContextAssistantManager contextAssistantManager = getEditorComponent().getEditorContext().getContextAssistantManager();
          contextAssistantManager.updateImmediately();
          Assert.assertNotNull(contextAssistantManager.getActiveAssistant());
          List<TransformationMenuItem> activeItems = contextAssistantManager.getActiveMenuItems();
          Assert.assertNotNull(activeItems);
          Assert.assertTrue(activeItems.size() > 0);
          EditorCell_ContextAssistantComponent contextAssistantCell = CellFinderUtil.findChildByClass(getEditorComponent().getRootCell(), EditorCell_ContextAssistantComponent.class, true);
          Assert.assertTrue(contextAssistantCell.getComponent().isVisible());
        }
      });
    }
  }
}
