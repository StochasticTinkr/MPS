package jetbrains.mps.lang.editor.menus.contextAssistant.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import javax.swing.SwingUtilities;
import jetbrains.mps.openapi.editor.assist.ContextAssistantManager;
import junit.framework.Assert;
import java.util.List;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.nodeEditor.cells.EditorCell_ContextAssistantComponent;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;

@MPSLaunch
public class ContextAssistant_ExpandAndShowSecondAssistant_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(ContextAssistant_ExpandAndShowSecondAssistant_Test.class, "${mps_home}", "r:5a4d10fc-2567-46c5-982f-547e9102417b(jetbrains.mps.lang.editor.menus.contextAssistant.tests@tests)", false);

  public ContextAssistant_ExpandAndShowSecondAssistant_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_ContextAssistant_ExpandAndShowSecondAssistant() throws Throwable {
    runTest("jetbrains.mps.lang.editor.menus.contextAssistant.tests.ContextAssistant_ExpandAndShowSecondAssistant_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("379023083997059224", "379023083997059226");
      invokeAction("jetbrains.mps.ide.editor.actions.ExpandAll_Action");
      SwingUtilities.invokeAndWait(new Runnable() {
        public void run() {
          ContextAssistantManager contextAssistantManager = getEditorComponent().getEditorContext().getContextAssistantManager();
          contextAssistantManager.updateImmediately();
          Assert.assertNotNull(contextAssistantManager.getActiveAssistant());
          List<TransformationMenuItem> activeItems = contextAssistantManager.getActiveMenuItems();
          Assert.assertNotNull(activeItems);
          Assert.assertTrue(activeItems.size() > 0);
          EditorCell_ContextAssistantComponent firstContextAssistantCell = CellFinderUtil.findChildByClass(getEditorComponent().getRootCell(), EditorCell_ContextAssistantComponent.class, true);
          Assert.assertNotNull(firstContextAssistantCell);
          Assert.assertTrue(firstContextAssistantCell.getComponent().isVisible());
          EditorCell_ContextAssistantComponent secondContextAssistantCell = CellFinderUtil.findChildByClass(getEditorComponent().getRootCell(), EditorCell_ContextAssistantComponent.class, false);
          Assert.assertNotNull(secondContextAssistantCell);
          Assert.assertTrue(firstContextAssistantCell != secondContextAssistantCell);
          Assert.assertFalse(secondContextAssistantCell.getComponent().isVisible());
        }
      });
    }
  }
}
