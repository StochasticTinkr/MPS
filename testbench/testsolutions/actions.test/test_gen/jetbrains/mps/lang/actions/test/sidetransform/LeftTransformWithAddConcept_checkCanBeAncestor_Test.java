package jetbrains.mps.lang.actions.test.sidetransform;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import junit.framework.Assert;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

@MPSLaunch
public class LeftTransformWithAddConcept_checkCanBeAncestor_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(LeftTransformWithAddConcept_checkCanBeAncestor_Test.class, "${mps_home}", "r:3643c33a-b564-4832-938b-79a88b40b6f2(jetbrains.mps.lang.actions.test.sidetransform@tests)", false);

  public LeftTransformWithAddConcept_checkCanBeAncestor_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_LeftTransformWithAddConcept_checkCanBeAncestor() throws Throwable {
    new LeftTransformWithAddConcept_checkCanBeAncestor_Test.TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("6500338114639041775", "6500338114639041779");
      typeString(" ");
      invokeAction("jetbrains.mps.ide.editor.actions.Complete_Action");
      Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isVisible());
      Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isMenuEmpty());
      getEditorComponent().getNodeSubstituteChooser().setVisible(false);
      pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), " ESCAPE"));
    }
  }
}
