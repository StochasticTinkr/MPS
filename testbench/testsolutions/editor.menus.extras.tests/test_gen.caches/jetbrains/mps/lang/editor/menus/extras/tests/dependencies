<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.ActionLookupUtils" file="ActionLookupUtils.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.intentions.behavior.BaseIntentionDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.refactoring.framework.IRefactoring" />
    <classNode dependClassName="jetbrains.mps.refactoring.runtime.access.RefactoringAccess" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
  </dependency>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.ApplicableIntention_IncludedInMenu_Test" file="ApplicableIntention_IncludedInMenu_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.runtime.AbstractIntentionMenuPart" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.tests.ActionLookupUtils" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.tests.UsedLanguagesUtils" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseEditorTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem" />
    <classNode dependClassName="jetbrains.mps.openapi.intentions.IntentionExecutable" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="org.jetbrains.annotations.Nullable" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.InapplicableIntention_NotIncludedInMenu_Test" file="InapplicableIntention_NotIncludedInMenu_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.runtime.AbstractIntentionMenuPart" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.tests.ActionLookupUtils" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.tests.UsedLanguagesUtils" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseEditorTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem" />
    <classNode dependClassName="jetbrains.mps.openapi.intentions.IntentionExecutable" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="org.jetbrains.annotations.Nullable" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.PluginActionMenuItemBase_InapplicableAction_CannotExecute_Test" file="PluginActionMenuItemBase_InapplicableAction_CannotExecute_Test.java">
    <classNode dependClassName="com.intellij.openapi.actionSystem.AnAction" />
    <classNode dependClassName="com.intellij.openapi.actionSystem.AnActionEvent" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.runtime.PluginActionMenuItemBase" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseEditorTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.ActionItem" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.RefactoringMenuItemBase_ApplicableRefactoring_CanExecute_Test" file="RefactoringMenuItemBase_ApplicableRefactoring_CanExecute_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.runtime.RefactoringMenuItemBase" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.tests.ActionLookupUtils" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseEditorTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.ActionItem" />
    <classNode dependClassName="jetbrains.mps.refactoring.framework.IRefactoring" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.lang.editor.menus.extras.tests.RefactoringMenuItemBase_InapplicableRefactoring_CannotExecute_Test" file="RefactoringMenuItemBase_InapplicableRefactoring_CannotExecute_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.runtime.RefactoringMenuItemBase" />
    <classNode dependClassName="jetbrains.mps.lang.editor.menus.extras.tests.ActionLookupUtils" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseEditorTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.menus.transformation.ActionItem" />
    <classNode dependClassName="jetbrains.mps.refactoring.framework.IRefactoring" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
</dependenciesRoot>

