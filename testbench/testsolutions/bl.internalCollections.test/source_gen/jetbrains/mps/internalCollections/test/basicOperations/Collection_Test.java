package jetbrains.mps.internalCollections.test.basicOperations;

/*Generated by MPS */

import jetbrains.mps.internalCollections.test.closures.Util_Test;
import java.util.Collection;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;

public class Collection_Test extends Util_Test {
  public void test_cast() throws Exception {
    Collection<String> CS = new ArrayList<String>();
    CS.add("FOO");
    CS.add("BAR");
    Collection<String> cs = CS;
    assertIterableEquals(Sequence.fromArray(new String[]{"FOO", "BAR"}), cs);
  }
  public void test_create() throws Exception {
    List<String> list = ListSequence.fromListAndArray(new ArrayList<String>(), "a", "b", "c");
    Collection<String> cs = CollectionSequence.fromCollectionWithValues(new ArrayList<String>(), list);
    assertIterableEquals(list, cs);
    ListSequence.fromList(list).removeElement("b");
    CollectionSequence.fromCollection(cs).addElement("d");
    assertIterableEquals(Sequence.fromArray(new String[]{"a", "b", "c", "d"}), cs);
  }
  public void test_add() throws Exception {
    Collection<String> cs = CollectionSequence.fromCollectionAndArray(new ArrayList<String>(), "foo");
    CollectionSequence.fromCollection(cs).addElement("bar");
    assertIterableEquals(Sequence.fromArray(new String[]{"foo", "bar"}), cs);
  }
  public void test_remove() throws Exception {
    Collection<String> cs = CollectionSequence.fromCollectionAndArray(new ArrayList<String>(), "foo", "bar", "qux");
    CollectionSequence.fromCollection(cs).removeElement("bar");
    assertIterableEquals(Sequence.fromArray(new String[]{"foo", "qux"}), cs);
  }
}
