package jetbrains.mps.lang.editor.menus.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

@MPSLaunch
public class ContributionScopes_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(ContributionScopes_Test.class, "${mps_home}", "r:4f8193a2-048e-4ddf-b505-dfca00e8c910(jetbrains.mps.lang.editor.menus.tests@tests)", false);

  public ContributionScopes_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_ContributionScopes() throws Throwable {
    runTest("jetbrains.mps.lang.editor.menus.tests.ContributionScopes_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("6869361321631669331", "6869361321631669870");
      // Can't put cell annotation directly on the red "missing concept" cell since it has no ID, so move to it from 
      // a neighboring cell. 
      invokeAction("jetbrains.mps.ide.editor.actions.MoveRight_Action");
      invokeAction("jetbrains.mps.ide.editor.actions.Complete_Action");
      pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), " ENTER"));
    }
  }
}
