package jetbrains.mps.lang.editor.multiple.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.NodeEditorComponent;
import junit.framework.Assert;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;

@MPSLaunch
public class InspectorOfRichPresentation_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(InspectorOfRichPresentation_Test.class, "${mps_home}", "r:dbab6746-af91-4594-857e-d38a36667e17(jetbrains.mps.lang.editor.multiple.tests)", false);

  public InspectorOfRichPresentation_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_InspectorOfRichPresentation() throws Throwable {
    new InspectorOfRichPresentation_Test.TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2112659629360602523", "2112659629360602525");
      invokeAction("jetbrains.mps.ide.editor.actions.Insert_Action");
      EditorCell rootCell = ((NodeEditorComponent) getEditorComponent()).getInspector().getRootCell();
      Assert.assertTrue(rootCell instanceof EditorCell_Label && ((EditorCell_Label) rootCell).getText().equals("rich"));
    }
  }
}
