package jetbrains.mps.lang.editor.actions.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.EditorUtil;
import junit.framework.Assert;
import jetbrains.mps.editor.runtime.deletionApprover.DeletionApproverUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

@MPSLaunch
public class TwoStepDeleteChildWithAttributeChildSelected_Test extends BaseTransformationTest {
  @Test
  public void test_TwoStepDeleteChildWithAttributeChildSelected() throws Throwable {
    initTest("${mps_home}", "r:c44f4b8c-137c-4225-8bd9-38d232a9b736(jetbrains.mps.lang.editor.actions.test)");
    runTest("jetbrains.mps.lang.editor.actions.test.TwoStepDeleteChildWithAttributeChildSelected_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2420730201805048222", "2420730201805053591");
      EditorUtil.runWithTwoStepDeletion(new EditorUtil.EditorTestRunnable() {
        public void run() throws Exception {
          invokeAction("jetbrains.mps.ide.editor.actions.Backspace_Action");
          getEditorComponent().getEditorContext().getRepository().getModelAccess().runReadAction(new Runnable() {
            public void run() {
              Assert.assertTrue(DeletionApproverUtil.isApprovedForDeletion(getEditorComponent().getEditorContext(), SNodeOperations.cast(getNodeById("2420730201805053144"), SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, "jetbrains.mps.lang.editor.editorTest"), 0x2198294affa4d593L, "TwoStepDeleteAttribute")))));
            }
          });
          invokeAction("jetbrains.mps.ide.editor.actions.Backspace_Action");
        }
      }, true);
    }
  }
}
