package jetbrains.mps.lang.editor.menu.transformation.test;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.openapi.editor.EditorComponent;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.editor.menus.transformation.DefaultMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.nodeEditor.menus.transformation.DefaultTransformationMenuContext;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.lang.editor.menus.transformation.NamedMenuLookup;
import org.jetbrains.mps.openapi.module.SRepository;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class MenuLoadingUtils {
  public static List<MenuItem> loadDefaultMenu(EditorComponent editorComponent, String location) {
    EditorContext editorContext = editorComponent.getEditorContext();
    SNode node = editorComponent.getEditedNode();
    DefaultMenuLookup lookup = new DefaultMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()), SNodeOperations.getConcept(node));

    return DefaultTransformationMenuContext.createInitialContextForNode(editorContext, node, location).createItems(lookup);
  }
  public static List<MenuItem> loadNamedMenu(EditorComponent editorComponent, SNodeReference menuNodeReference, String location) {
    return loadNamedMenu(editorComponent, MenuLoadingUtils.getMenuFqName(menuNodeReference, editorComponent), location);
  }

  private static List<MenuItem> loadNamedMenu(EditorComponent editorComponent, String menuFqName, String location) {
    EditorContext editorContext = editorComponent.getEditorContext();
    SNode node = editorComponent.getEditedNode();

    NamedMenuLookup lookup = new NamedMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()), SNodeOperations.getConcept(node), menuFqName);

    return DefaultTransformationMenuContext.createInitialContextForNode(editorContext, node, location).createItems(lookup);
  }

  private static String getMenuFqName(final SNodeReference menuNode, EditorComponent editorComponent) {
    final SRepository repository = editorComponent.getEditorContext().getRepository();
    final Wrappers._T<String> fqName = new Wrappers._T<String>();
    repository.getModelAccess().runReadAction(new Runnable() {
      public void run() {
        fqName.value = INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SNodeOperations.cast(menuNode.resolve(repository), MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept")));
      }
    });
    return fqName.value;
  }
}
