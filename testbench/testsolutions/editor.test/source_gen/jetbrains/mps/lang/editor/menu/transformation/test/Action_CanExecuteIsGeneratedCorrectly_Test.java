package jetbrains.mps.lang.editor.menu.transformation.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import java.util.List;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItem;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import junit.framework.Assert;

@MPSLaunch
public class Action_CanExecuteIsGeneratedCorrectly_Test extends BaseTransformationTest {
  @Test
  public void test_Action_CanExecuteIsGeneratedCorrectly() throws Throwable {
    initTest("${mps_home}", "r:38424e2f-ff0f-4534-a6ea-12f0496db0de(jetbrains.mps.lang.editor.menu.transformation.test)");
    runTest("jetbrains.mps.lang.editor.menu.transformation.test.Action_CanExecuteIsGeneratedCorrectly_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("6202297022026376550", "");
      List<MenuItem> items = MenuLoadingUtils.loadNamedMenu(getEditorComponent(), new SNodePointer("r:3b1c2f8c-f04f-4186-97fc-85ed47ba8aeb(jetbrains.mps.lang.editor.transformationMenuTest.editor)", "6202297022026415601"), "test location");

      ActionItem item = (ActionItem) ListSequence.fromList(items).getElement(0);

      Assert.assertFalse("canExecute should return false for pattern = 'cannot'", item.canExecute("cannot"));
    }
  }
}
