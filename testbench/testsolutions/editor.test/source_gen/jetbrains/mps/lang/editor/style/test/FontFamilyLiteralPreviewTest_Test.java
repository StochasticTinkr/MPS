package jetbrains.mps.lang.editor.style.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import junit.framework.Assert;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;
import org.jetbrains.mps.util.Condition;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import java.util.Objects;

@MPSLaunch
public class FontFamilyLiteralPreviewTest_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(FontFamilyLiteralPreviewTest_Test.class, "${mps_home}", "r:e796bc79-24a8-4433-8903-c71c59526bf7(jetbrains.mps.lang.editor.style.test)", false);

  public FontFamilyLiteralPreviewTest_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_FontFamilyLiteralPreviewTest() throws Throwable {
    runTest("jetbrains.mps.lang.editor.style.test.FontFamilyLiteralPreviewTest_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("491383275436120141", "");
      Assert.assertNotNull(CellFinderUtil.findChildByCondition(getEditorComponent().getRootCell(), new Condition<EditorCell>() {
        public boolean met(EditorCell it) {
          return EditorCell_Label.class.isInstance(it) && Objects.equals(((EditorCell_Label) it).getFont().getFamily(), "Serif");
        }
      }, true, true));
    }
  }
}
