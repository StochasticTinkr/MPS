package jetbrains.mps.lang.editor.style.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.smodel.ModelAccess;
import junit.framework.Assert;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;
import org.jetbrains.mps.util.Condition;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;

@MPSLaunch
public class FontFamilyLiteralPreviewTest_Test extends BaseTransformationTest {
  @Test
  public void test_FontFamilyLiteralPreviewTest() throws Throwable {
    initTest("${mps_home}", "r:e796bc79-24a8-4433-8903-c71c59526bf7(jetbrains.mps.lang.editor.style.test)");
    runTest("jetbrains.mps.lang.editor.style.test.FontFamilyLiteralPreviewTest_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("491383275436120141", "");
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          Assert.assertNotNull(CellFinderUtil.findChildByCondition(getEditorComponent().getRootCell(), new Condition<EditorCell>() {
            public boolean met(EditorCell it) {
              return EditorCell_Label.class.isInstance(it) && eq_x0o4jd_a0a0a0a0b0a0a0a0a0a1a0c(((EditorCell_Label) it).getFont().getFamily(), "Serif");
            }
          }, true, true));
        }
      });
    }
    private static boolean eq_x0o4jd_a0a0a0a0b0a0a0a0a0a1a0c(Object a, Object b) {
      return (a != null ? a.equals(b) : a == b);
    }
  }
}
