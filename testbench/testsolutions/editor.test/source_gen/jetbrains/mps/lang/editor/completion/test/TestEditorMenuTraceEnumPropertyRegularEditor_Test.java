package jetbrains.mps.lang.editor.completion.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import junit.framework.Assert;
import jetbrains.mps.openapi.editor.cells.SubstituteAction;
import com.intellij.openapi.actionSystem.PlatformDataKeys;
import jetbrains.mps.openapi.editor.menus.EditorMenuTraceInfo;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

@MPSLaunch
public class TestEditorMenuTraceEnumPropertyRegularEditor_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(TestEditorMenuTraceEnumPropertyRegularEditor_Test.class, "${mps_home}", "r:f27d9626-8ef5-4cba-bce0-6aa6369f05ff(jetbrains.mps.lang.editor.completion.test)", false);

  public TestEditorMenuTraceEnumPropertyRegularEditor_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_TestEditorMenuTraceEnumPropertyRegularEditor() throws Throwable {
    runTest("jetbrains.mps.lang.editor.completion.test.TestEditorMenuTraceEnumPropertyRegularEditor_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("3631615103242345663", "3631615103242345661");
      invokeAction("jetbrains.mps.ide.editor.actions.Complete_Action");
      typeString("enum1");
      getEditorComponent().getEditorContext().getRepository().getModelAccess().runReadAction(new Runnable() {
        public void run() {
          Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isVisible());
          SubstituteAction action = (SubstituteAction) getEditorComponent().getData(PlatformDataKeys.SELECTED_ITEM.getName());
          Assert.assertTrue(action != null);

          EditorMenuTraceInfo editorMenuTraceInfo = action.getEditorMenuTraceInfo();
          SNodeReference enumMemberDeclaration = SNodeOperations.getPointer(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)", "3631615103242154418"), MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xfc26875dfbL, 0xfc32151efeL, "member"))).first());
          EditorMenuTraceTestUtil.checkTraceInfoPath(editorMenuTraceInfo, enumMemberDeclaration, null);
        }
      });
    }
  }
}
