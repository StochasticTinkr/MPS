package jetbrains.mps.lang.text.test.editor;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import junit.framework.Assert;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;

@MPSLaunch
public class MakeWordUnderlined_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(MakeWordUnderlined_Test.class, "${mps_home}", "r:6cf522f1-8af4-45dd-b0f5-721b6e5caab5(jetbrains.mps.lang.text.test.editor@tests)", false);

  public MakeWordUnderlined_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_MakeWordUnderlined() throws Throwable {
    new MakeWordUnderlined_Test.TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("6328114375522077965", "6328114375522077986");
      pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), "ctrl U"));
      Assert.assertTrue(((EditorCell_Label) getEditorComponent().getSelectedCell()).getRenderedTextLine().isUnderlined());

    }
  }
}
