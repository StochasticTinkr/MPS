package jetbrains.mps.baseLanguage.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.test.behavior.NodeCheckOperation__BehaviorDescriptor;

@MPSLaunch
public class CaseInsensitiveDuplicatedClassifierName_Test extends BaseTransformationTest {
  @Test
  public void test_NodeErrorCheck1005490780657563849() throws Throwable {
    initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    runTest("jetbrains.mps.baseLanguage.test.CaseInsensitiveDuplicatedClassifierName_Test$TestBody", "test_NodeErrorCheck1005490780657563849", true);
  }
  @Test
  public void test_NodeErrorCheck1005490780657563829() throws Throwable {
    initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    runTest("jetbrains.mps.baseLanguage.test.CaseInsensitiveDuplicatedClassifierName_Test$TestBody", "test_NodeErrorCheck1005490780657563829", true);
  }
  @Test
  public void test_NodeWarningCheck1005490780657563809() throws Throwable {
    initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    runTest("jetbrains.mps.baseLanguage.test.CaseInsensitiveDuplicatedClassifierName_Test$TestBody", "test_NodeWarningCheck1005490780657563809", true);
  }
  @Test
  public void test_ErrorMessagesCheck1005490780655151764() throws Throwable {
    initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    runTest("jetbrains.mps.baseLanguage.test.CaseInsensitiveDuplicatedClassifierName_Test$TestBody", "test_ErrorMessagesCheck1005490780655151764", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {

    public void test_NodeErrorCheck1005490780657563849() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("1005490780657563849"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      NodeCheckOperation__BehaviorDescriptor.perform_iddCRb6FLnvk.invoke(operation, getRealNodeById("1005490780655188848"));
    }
    public void test_NodeErrorCheck1005490780657563829() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("1005490780657563829"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      NodeCheckOperation__BehaviorDescriptor.perform_iddCRb6FLnvk.invoke(operation, getRealNodeById("1005490780655189011"));
    }
    public void test_NodeWarningCheck1005490780657563809() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("1005490780657563809"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      NodeCheckOperation__BehaviorDescriptor.perform_iddCRb6FLnvk.invoke(operation, getRealNodeById("1005490780655189178"));
    }
    public void test_ErrorMessagesCheck1005490780655151764() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("1005490780655151764"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      NodeCheckOperation__BehaviorDescriptor.perform_iddCRb6FLnvk.invoke(operation, getRealNodeById("1005490780655151743"));
    }

  }
}
