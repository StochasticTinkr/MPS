package jetbrains.mps.editorTest;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import org.jetbrains.mps.openapi.model.SNodeReference;
import junit.framework.Assert;

@MPSLaunch
public class ShowReflectiveEditorTwiceUndo_Test extends BaseTransformationTest {
  @Test
  public void test_ShowReflectiveEditorTwiceUndo() throws Throwable {
    initTest("${mps_home}", "r:914ee49a-537d-44b2-a5fb-bac87a54743d(jetbrains.mps.editorTest@tests)");
    runTest("jetbrains.mps.editorTest.ShowReflectiveEditorTwiceUndo_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("7075824227535190547", "");
      // TODO 
      // Test fails after copying "before:" to "result:" for some reason, so check just the node reference. 
      SNodeReference selectedNodeReference = getEditorComponent().getSelectedNode().getReference();

      invokeAction("jetbrains.mps.ide.editor.actions.SelectUp_Action");
      invokeAction("jetbrains.mps.ide.editor.actions.SelectUp_Action");

      invokeAction("jetbrains.mps.ide.editor.actions.ShowReflectiveEditorsForSubtree_Action");
      Assert.assertFalse(isActionApplicable("jetbrains.mps.ide.editor.actions.ShowReflectiveEditorsForSubtree_Action"));
      invokeAction("$Undo");
      Assert.assertTrue(isActionApplicable("jetbrains.mps.ide.editor.actions.ShowReflectiveEditorsForSubtree_Action"));
      invokeAction("$Redo");

      invokeAction("jetbrains.mps.ide.editor.actions.SelectDown_Action");
      invokeAction("jetbrains.mps.ide.editor.actions.ShowRegularEditor_Action");

      invokeAction("$Undo");
      invokeAction("$Undo");
      invokeAction("jetbrains.mps.ide.editor.actions.SelectDown_Action");

      Assert.assertEquals(selectedNodeReference, getEditorComponent().getSelectedNode().getReference());
    }
  }
}
