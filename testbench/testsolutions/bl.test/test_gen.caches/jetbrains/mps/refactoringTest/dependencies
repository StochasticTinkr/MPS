<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.refactoringTest.AddParameter_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.AddThrowDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.BreakStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeMethodName_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeMethodParametersForStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeParameterName_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeParameterType_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeParametersOrder_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeReturningType_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeSigantureOfInterface_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ChangeSignatureOfStaticMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.CheckInlineCanBePerformed_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodModel" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.CheckInlineWithThrow_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodModel" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.CheckStaticVisibility_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.CheckVisibility_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConceptFunctioParameterTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousAbstractClassTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousAbstractClassWithConstructorTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousGenGenericFields_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousInterfaceTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousToStaticTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousWithLocalVariablesTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousWithLocalVariables_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousWithParameterReference_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousWithTypeParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ConvertAnonymousWithTypeVariablesTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.DeclarationVariablesInMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractAddingNewDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractBreak_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithExitPoints" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractContinue_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithExitPoints" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractDefaultClassifierMethodDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractDifferentReturns_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithReturn" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromAnonymous_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromExpressionWithoutReturn_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromExpression_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromIntention_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromStatementWithReturnValue_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromStatementsEndsWithReturn_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractFromStatements_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodFromClosure_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodFromConstructor_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodWithOutputVaryableFromExpression_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodWithOutputVaryableFromStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodWithThrows_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractMethodWithUnusedAssignments_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractWithFieldReference_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ExtractWithStaticFieldReference_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.FindAndMoveFromIfForIntroduceLocalVar_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.FindForMethodWithIVariableLikeNodes_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.FindForMethodWithOutputVariable_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.FindInputVariables_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineAssignmentInClosure_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineAssignmentWithClosures_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineAssignment_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFieldBinaryOnDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFieldBinary_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFieldOperationBinaryOnDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceOperationRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFieldOperationBinary_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceOperationRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromAnotherBehavior_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromAnotherClass_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromBehaviorWithMethods_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromBehavior_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromConceptFunction_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableAssignmentRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineFromExpression_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineInBehaviorWithThis_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineInClosureWithOutsideAssignment_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineInsideClosure_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineLocalVariableReferenceWithoutDeclarationDeleting_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineLocalVariableReferense_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineManyReturns_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodInTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodThatChangesParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodWithConceptFunctionParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodWithReturnAtTheEnd_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodWithUnusedParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineMethodWithVoidType_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineModelWithConstants_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineRecursiveMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodModel" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineReferenceWithAssignment_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineStaticFromAnotherClass_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineVariableBinaryInBinaryOnDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineVariableBinaryInBinary_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineVariableBinaryInCastOnDeclaration_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineVariableBinaryInCast_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineVariableBinaryInTernary_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineWithNoSourcesAttached_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodModel" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineWithVoidTypeAndBug_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineWithoutDeclarationDeletion_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.InlineWithoutReturnStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.IntroduceConstantFromAnonimousClass_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceConstantRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.IntroduceFinalField_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceFieldRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.IntroduceFinalLocalVariable_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.IntroduceVariableFromAnonimousClass_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.IntroduceVariableFromWildcards_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MethodsWithoutReturnStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveMethodWithFields_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveMethodWithMethods_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveMethodWithParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveMethodWithUssages_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveStaticFieldSimpleTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticFieldRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.MoveStaticFieldWithUsageTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticFieldRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.OneReturnStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.OneReturnTransformation_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.OneReturnWithNotVariableParameters_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.OneReturnWithParameteres_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.OperandOfDotExpression_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.RemoveParameter_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ReplaceOutputVaryable_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.ReturnStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindAndMoveForIntroduceLocalVar_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForExtractFromExpression_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForExtractFromManyStatements_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForExtractFromStatement_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForExtractWithReturn_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForIntroduceConstant_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceConstantRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleFindForIntroduceLocalVariable_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleInlineVariable_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleInlineWithOneReturn_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleMoveMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.SimpleMoveStaticMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResult" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResults" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.StaticMethod_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.TwoParametersWithSameType_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.VariableDeclarationInitializer_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
  <dependency className="jetbrains.mps.refactoringTest.staticContainerClassTest_Test">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Throwable" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.MPSLaunch" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.test.matcher.NodesMatcher" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.BaseTestBody" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.RunWithCommand" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TestParametersCache" />
    <classNode dependClassName="jetbrains.mps.lang.test.runtime.TransformationTest" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.junit.ClassRule" />
    <classNode dependClassName="org.junit.Rule" />
    <classNode dependClassName="org.junit.Test" />
    <classNode extendsClassName="jetbrains.mps.lang.test.runtime.BaseTransformationTest" />
  </dependency>
</dependenciesRoot>

