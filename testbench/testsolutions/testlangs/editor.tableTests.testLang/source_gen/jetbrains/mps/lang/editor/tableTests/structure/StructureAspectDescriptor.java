package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(17);
  /*package*/ final ConceptDescriptor myConceptAbstractStateMachineElement = createDescriptorForAbstractStateMachineElement();
  /*package*/ final ConceptDescriptor myConceptContentElement = createDescriptorForContentElement();
  /*package*/ final ConceptDescriptor myConceptDataCell = createDescriptorForDataCell();
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptEventReference = createDescriptorForEventReference();
  /*package*/ final ConceptDescriptor myConceptHierarchycalTable = createDescriptorForHierarchycalTable();
  /*package*/ final ConceptDescriptor myConceptLightWeightDecisionTable = createDescriptorForLightWeightDecisionTable();
  /*package*/ final ConceptDescriptor myConceptMatrix = createDescriptorForMatrix();
  /*package*/ final ConceptDescriptor myConceptRow = createDescriptorForRow();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateMachine = createDescriptorForStateMachine();
  /*package*/ final ConceptDescriptor myConceptStateReference = createDescriptorForStateReference();
  /*package*/ final ConceptDescriptor myConceptTable = createDescriptorForTable();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  /*package*/ final ConceptDescriptor myConceptUltimateContainer = createDescriptorForUltimateContainer();
  /*package*/ final ConceptDescriptor myConceptXElement = createDescriptorForXElement();
  /*package*/ final ConceptDescriptor myConceptYElement = createDescriptorForYElement();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractStateMachineElement.getId(), 0);
    myIndexMap.put(myConceptContentElement.getId(), 1);
    myIndexMap.put(myConceptDataCell.getId(), 2);
    myIndexMap.put(myConceptEvent.getId(), 3);
    myIndexMap.put(myConceptEventReference.getId(), 4);
    myIndexMap.put(myConceptHierarchycalTable.getId(), 5);
    myIndexMap.put(myConceptLightWeightDecisionTable.getId(), 6);
    myIndexMap.put(myConceptMatrix.getId(), 7);
    myIndexMap.put(myConceptRow.getId(), 8);
    myIndexMap.put(myConceptState.getId(), 9);
    myIndexMap.put(myConceptStateMachine.getId(), 10);
    myIndexMap.put(myConceptStateReference.getId(), 11);
    myIndexMap.put(myConceptTable.getId(), 12);
    myIndexMap.put(myConceptTransition.getId(), 13);
    myIndexMap.put(myConceptUltimateContainer.getId(), 14);
    myIndexMap.put(myConceptXElement.getId(), 15);
    myIndexMap.put(myConceptYElement.getId(), 16);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractStateMachineElement, myConceptContentElement, myConceptDataCell, myConceptEvent, myConceptEventReference, myConceptHierarchycalTable, myConceptLightWeightDecisionTable, myConceptMatrix, myConceptRow, myConceptState, myConceptStateMachine, myConceptStateReference, myConceptTable, myConceptTransition, myConceptUltimateContainer, myConceptXElement, myConceptYElement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractStateMachineElement;
      case 1:
        return myConceptContentElement;
      case 2:
        return myConceptDataCell;
      case 3:
        return myConceptEvent;
      case 4:
        return myConceptEventReference;
      case 5:
        return myConceptHierarchycalTable;
      case 6:
        return myConceptLightWeightDecisionTable;
      case 7:
        return myConceptMatrix;
      case 8:
        return myConceptRow;
      case 9:
        return myConceptState;
      case 10:
        return myConceptStateMachine;
      case 11:
        return myConceptStateReference;
      case 12:
        return myConceptTable;
      case 13:
        return myConceptTransition;
      case 14:
        return myConceptUltimateContainer;
      case 15:
        return myConceptXElement;
      case 16:
        return myConceptYElement;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractStateMachineElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "AbstractStateMachineElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x6e3eaf7a54e76eeaL);
    b.class_(false, true, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/7943979732673457898");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContentElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "ContentElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a8L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/4379396156287809192");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataCell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "DataCell", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea4L);
    b.class_(false, false, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/2882388703616155300");
    b.prop("value", 0x28004d411fa3bea5L, "2882388703616155301");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "Event", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c845743bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x6e3eaf7a54e76eeaL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008729147");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEventReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "EventReference", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457446L);
    b.class_(false, false, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008729158");
    b.associate("event", 0xa99ffe1c8457447L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c845743bL).optional(false).origin("763922957008729159").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHierarchycalTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "HierarchycalTable", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x760c9302beb3e1d1L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.lang.editor.tableTests.structure.Table", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea0L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/8506335436194701777");
    b.aggregate("headers", 0x760c9302beb3e1d4L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea4L).optional(true).ordered(true).multiple(true).origin("8506335436194701780").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLightWeightDecisionTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "LightWeightDecisionTable", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x6a2febf37d11d3dfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/7651593722933662687");
    b.aggregate("column", 0x6a2febf37d121001L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("7651593722933678081").done();
    b.aggregate("row", 0x6a2febf37d121026L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("7651593722933678118").done();
    b.aggregate("body", 0x6a2febf37d121027L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(true).origin("7651593722933678119").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("decTable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMatrix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "Matrix", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23e4590L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/4379396156287763856");
    b.aggregate("xs", 0x3cc6bd99e23f0931L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a6L).optional(true).ordered(true).multiple(true).origin("4379396156287813937").done();
    b.aggregate("ys", 0x3cc6bd99e23f0932L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a7L).optional(true).ordered(true).multiple(true).origin("4379396156287813938").done();
    b.aggregate("contents", 0x3cc6bd99e23f0933L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a8L).optional(true).ordered(true).multiple(true).origin("4379396156287813939").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRow() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "Row", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea6L);
    b.class_(false, false, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/2882388703616155302");
    b.aggregate("cells", 0x28004d411fa3bea7L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea4L).optional(true).ordered(true).multiple(true).origin("2882388703616155303").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "State", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457442L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x6e3eaf7a54e76eeaL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008729154");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateMachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "StateMachine", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8456ba1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008726945");
    b.aggregate("events", 0xa99ffe1c8456ba3L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c845743bL).optional(true).ordered(true).multiple(true).origin("763922957008726947").done();
    b.aggregate("transitions", 0xa99ffe1c8456ba4L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c845743dL).optional(true).ordered(true).multiple(true).origin("763922957008726948").done();
    b.aggregate("states", 0xa99ffe1c8456ba5L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457442L).optional(true).ordered(true).multiple(true).origin("763922957008726949").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "StateReference", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457444L);
    b.class_(false, false, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008729156");
    b.associate("state", 0xa99ffe1c8457445L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457442L).optional(false).origin("763922957008729157").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "Table", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea0L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/2882388703616155296");
    b.prop("initialRowCount", 0x308ce302266628f9L, "3498420608933701881");
    b.prop("initialColumnCount", 0x308ce302266628faL, "3498420608933701882");
    b.aggregate("rows", 0x28004d411fa3bea2L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea6L).optional(true).ordered(true).multiple(true).origin("2882388703616155298").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "Transition", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c845743dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x6e3eaf7a54e76eeaL);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/763922957008729149");
    b.prop("condition", 0xa99ffe1c8457441L, "763922957008729153");
    b.aggregate("fromState", 0xa99ffe1c845743eL).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457444L).optional(false).ordered(true).multiple(false).origin("763922957008729150").done();
    b.aggregate("toState", 0xa99ffe1c8457440L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457444L).optional(false).ordered(true).multiple(false).origin("763922957008729152").done();
    b.aggregate("trigger", 0xa99ffe1c845743fL).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8457446L).optional(false).ordered(true).multiple(false).origin("763922957008729151").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUltimateContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "UltimateContainer", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x4c733427bdedcbd0L);
    b.class_(false, false, false);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/5508804114499095504");
    b.aggregate("stateMachines", 0x4c733427bdede058L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0xa99ffe1c8456ba1L).optional(true).ordered(true).multiple(true).origin("5508804114499100760").done();
    b.aggregate("tables", 0x4c733427bdede059L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x28004d411fa3bea0L).optional(true).ordered(true).multiple(true).origin("5508804114499100761").done();
    b.aggregate("matrixes", 0x3cc6bd99e23e4592L).target(0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23e4590L).optional(true).ordered(true).multiple(true).origin("4379396156287763858").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForXElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "XElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a6L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/4379396156287809190");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForYElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.tableTests", "YElement", 0xdf8799e7254a406fL, 0xbd67f4cc27337152L, 0x3cc6bd99e23ef6a7L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ed658292-9fbd-4bc1-94c2-435048f00105(jetbrains.mps.lang.editor.tableTests.structure)/4379396156287809191");
    return b.create();
  }
}
