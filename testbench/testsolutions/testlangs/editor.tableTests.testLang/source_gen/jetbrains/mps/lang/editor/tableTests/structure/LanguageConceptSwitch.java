package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractStateMachineElement = 0;
  public static final int ContentElement = 1;
  public static final int DataCell = 2;
  public static final int Event = 3;
  public static final int EventReference = 4;
  public static final int HierarchycalTable = 5;
  public static final int LightWeightDecisionTable = 6;
  public static final int Matrix = 7;
  public static final int Row = 8;
  public static final int State = 9;
  public static final int StateMachine = 10;
  public static final int StateReference = 11;
  public static final int Table = 12;
  public static final int Transition = 13;
  public static final int UltimateContainer = 14;
  public static final int XElement = 15;
  public static final int YElement = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xdf8799e7254a406fL, 0xbd67f4cc27337152L);
    builder.put(0x6e3eaf7a54e76eeaL, AbstractStateMachineElement);
    builder.put(0x3cc6bd99e23ef6a8L, ContentElement);
    builder.put(0x28004d411fa3bea4L, DataCell);
    builder.put(0xa99ffe1c845743bL, Event);
    builder.put(0xa99ffe1c8457446L, EventReference);
    builder.put(0x760c9302beb3e1d1L, HierarchycalTable);
    builder.put(0x6a2febf37d11d3dfL, LightWeightDecisionTable);
    builder.put(0x3cc6bd99e23e4590L, Matrix);
    builder.put(0x28004d411fa3bea6L, Row);
    builder.put(0xa99ffe1c8457442L, State);
    builder.put(0xa99ffe1c8456ba1L, StateMachine);
    builder.put(0xa99ffe1c8457444L, StateReference);
    builder.put(0x28004d411fa3bea0L, Table);
    builder.put(0xa99ffe1c845743dL, Transition);
    builder.put(0x4c733427bdedcbd0L, UltimateContainer);
    builder.put(0x3cc6bd99e23ef6a6L, XElement);
    builder.put(0x3cc6bd99e23ef6a7L, YElement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
