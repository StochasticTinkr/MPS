package jetbrains.mps.lang.editor.styleTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AdditionalStructurePropertiesImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_HugePriorityStyle = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LeafNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NodeContainer = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PriorityStyle = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PriorityStyleCopy = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestConceptWithStyleAttributes = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestInheritedAttribute = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSimpleAttribute = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_UnapplyPriorityStyleCopy = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0k.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_HugePriorityStyle;
          }
          break;
        case 1:
          if (true) {
            return props_LeafNode;
          }
          break;
        case 2:
          if (true) {
            return props_NodeContainer;
          }
          break;
        case 3:
          if (true) {
            return props_PriorityStyle;
          }
          break;
        case 4:
          if (true) {
            return props_PriorityStyleCopy;
          }
          break;
        case 5:
          if (true) {
            return props_TestConceptWithStyleAttributes;
          }
          break;
        case 6:
          if (true) {
            return props_TestInheritedAttribute;
          }
          break;
        case 7:
          if (true) {
            return props_TestSimpleAttribute;
          }
          break;
        case 8:
          if (true) {
            return props_UnapplyPriorityStyleCopy;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0k = buildConceptIndices(MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a36a0aL, "HugePriorityStyle"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x38990895c164873aL, "LeafNode"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x74e28664f056014cL, "NodeContainer"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a34c76L, "PriorityStyle"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a3689eL, "PriorityStyleCopy"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x5bb841570e741168L, "TestConceptWithStyleAttributes"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a35eddL, "TestInheritedAttribute"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a3595dL, "TestSimpleAttribute"), MetaAdapterFactory.getConcept(0xa936c42ccb2c4d64L, 0xa1dc12986579a998L, 0x7bc02723c1a36a0fL, "UnapplyPriorityStyleCopy"));
}
