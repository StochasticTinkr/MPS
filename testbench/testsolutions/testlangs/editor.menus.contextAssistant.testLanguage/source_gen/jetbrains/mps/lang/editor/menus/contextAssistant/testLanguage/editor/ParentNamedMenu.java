package jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import jetbrains.mps.openapi.editor.menus.transformation.CompletionActionItem;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.editor.menus.transformation.IncludeSubstituteMenuMenuPart;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.menus.transformation.MenuLookup;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import org.jetbrains.mps.openapi.module.SRepository;
import jetbrains.mps.lang.editor.menus.transformation.NamedSubstituteMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;

public class ParentNamedMenu extends TransformationMenuBase {
  @Override
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), SChildSubstituteInfo.SUBSTITUTE).contains(_context.getMenuLocation())) {
      result.add(new ParentNamedMenu.TransformationMenuPart_Action_bwf8lj_a0());
      result.add(new ParentNamedMenu.TransformationMenuPart_IncludeSubstituteMenu_bwf8lj_b0());
    }
    return result;
  }

  private static class TransformationMenuPart_Action_bwf8lj_a0 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Nullable
    protected TransformationMenuItem createItem(TransformationMenuContext context) {
      return new ParentNamedMenu.TransformationMenuPart_Action_bwf8lj_a0.Item(context);
    }

    private class Item extends ActionItemBase implements CompletionActionItem {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "set name to \"z\"";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SPropertyOperations.set(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "z");
      }

      @Override
      public String getShortDescriptionText(String pattern) {
        return "completion item";
      }
    }
  }
  public static class TransformationMenuPart_IncludeSubstituteMenu_bwf8lj_b0 extends IncludeSubstituteMenuMenuPart {

    @Override
    protected SNode getParentNode(TransformationMenuContext context) {
      return context.getNode();
    }
    @Override
    protected SNode getCurrentChild(TransformationMenuContext context) {
      return null;
    }
    @Override
    protected SContainmentLink getContainmentLink(TransformationMenuContext context) {
      return MetaAdapterFactory.getContainmentLink(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa4dL, 0x4d6a8b533e60aa58L, "children");
    }

    @Override
    protected MenuLookup<SubstituteMenu> getSubstituteMenuLookup(TransformationMenuContext context) {
      SRepository repository = context.getEditorContext().getRepository();
      return new NamedSubstituteMenuLookup(LanguageRegistry.getInstance(repository), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.structure.Child"), "jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.editor.substituteParameterized");
    }
  }
}
