package jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Child = 0;
  public static final int ISameMenuApplicable = 1;
  public static final int OtherSubconceptOfChild = 2;
  public static final int Parent = 3;
  public static final int ParentCollapsed = 4;
  public static final int SubconceptOfChild = 5;
  public static final int TestAssistant_Duplication_ChildIncludeDefaultAndNullMenu = 6;
  public static final int TestAssistant_Duplication_ChildIncludeDifferentMenusForDifferentNodes = 7;
  public static final int TestAssistant_Duplication_ChildIncludeDifferentMenusForSameNode = 8;
  public static final int TestAssistant_Duplication_ChildIncludeSameMenuForDifferentLocations = 9;
  public static final int TestAssistant_Duplication_ChildIncludeSameMenuForDifferentNodes = 10;
  public static final int TestAssistant_Duplication_ChildIncludeSameMenuTwiceForSameNode = 11;
  public static final int TestAssistant_Duplication_ChildSubconcept = 12;
  public static final int TestAssistant_Duplication_ChildToIncludeSubstituteMenu = 13;
  public static final int TestAssistant_Duplication_ChildWrapDifferentSubstituteMenus = 14;
  public static final int TestAssistant_Duplication_ChildWrapSameSubstituteMenuTwice = 15;
  public static final int TestAssistant_Duplication_Parent = 16;
  public static final int TestAssistant_Duplication_SubInterface1 = 17;
  public static final int TestAssistant_Duplication_SubInterface2 = 18;
  public static final int TestAssistant_Duplication_SuperInterface = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL);
    builder.put(0x4d6a8b533e60aa32L, Child);
    builder.put(0x3f759544c6a7e879L, ISameMenuApplicable);
    builder.put(0x7d40c2eb5957a904L, OtherSubconceptOfChild);
    builder.put(0x4d6a8b533e60aa4dL, Parent);
    builder.put(0x5428f7c9b49f682L, ParentCollapsed);
    builder.put(0x1b49c84ee1cc743bL, SubconceptOfChild);
    builder.put(0x41299cab94e578eeL, TestAssistant_Duplication_ChildIncludeDefaultAndNullMenu);
    builder.put(0x1a41c6fb280910b1L, TestAssistant_Duplication_ChildIncludeDifferentMenusForDifferentNodes);
    builder.put(0x41299cab94d8915aL, TestAssistant_Duplication_ChildIncludeDifferentMenusForSameNode);
    builder.put(0x41299cab94ea85efL, TestAssistant_Duplication_ChildIncludeSameMenuForDifferentLocations);
    builder.put(0x3f759544c6a7e877L, TestAssistant_Duplication_ChildIncludeSameMenuForDifferentNodes);
    builder.put(0x3f759544c6a7e861L, TestAssistant_Duplication_ChildIncludeSameMenuTwiceForSameNode);
    builder.put(0x3f759544c6a07047L, TestAssistant_Duplication_ChildSubconcept);
    builder.put(0x3f759544c6a82ca7L, TestAssistant_Duplication_ChildToIncludeSubstituteMenu);
    builder.put(0x1a41c6fb280c96b5L, TestAssistant_Duplication_ChildWrapDifferentSubstituteMenus);
    builder.put(0x3f759544c6a0709dL, TestAssistant_Duplication_ChildWrapSameSubstituteMenuTwice);
    builder.put(0x3f759544c6a0703eL, TestAssistant_Duplication_Parent);
    builder.put(0x3f759544c6a07041L, TestAssistant_Duplication_SubInterface1);
    builder.put(0x3f759544c6a07042L, TestAssistant_Duplication_SubInterface2);
    builder.put(0x3f759544c6a07040L, TestAssistant_Duplication_SuperInterface);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
