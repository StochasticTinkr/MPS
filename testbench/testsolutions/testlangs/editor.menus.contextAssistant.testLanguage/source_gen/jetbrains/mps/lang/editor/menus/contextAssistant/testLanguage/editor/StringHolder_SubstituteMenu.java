package jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.substitute.SingleItemSubstituteMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuItem;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class StringHolder_SubstituteMenu extends SubstituteMenuBase {
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new StringHolder_SubstituteMenu.SubstituteMenuPart_Parameterized_eqp4ql_a());
    return result;
  }
  private static class SubstituteMenuPart_Parameterized_eqp4ql_a extends ParameterizedMenuPart<Object, SubstituteMenuItem, SubstituteMenuContext> {
    @NotNull
    @Override
    protected List<SubstituteMenuItem> createItems(Object parameter, SubstituteMenuContext context) {
      return new StringHolder_SubstituteMenu.SubstituteMenuPart_Parameterized_eqp4ql_a.SubstituteMenuPart_Action_eqp4ql_a0(parameter).createItems(context);
    }
    @NotNull
    @Override
    protected List<? extends Object> getParameters(SubstituteMenuContext _context) {
      return ListSequence.fromListAndArray(new ArrayList<String>(), "x", "y", "z");
    }
    private static class SubstituteMenuPart_Action_eqp4ql_a0 extends SingleItemSubstituteMenuPart {
      private final Object myParameterObject;
      public SubstituteMenuPart_Action_eqp4ql_a0(Object parameterObject) {
        myParameterObject = parameterObject;
      }

      @Nullable
      @Override
      protected SubstituteMenuItem createItem(SubstituteMenuContext _context) {
        return new StringHolder_SubstituteMenu.SubstituteMenuPart_Parameterized_eqp4ql_a.SubstituteMenuPart_Action_eqp4ql_a0.Item(_context);
      }
      private class Item extends DefaultSubstituteMenuItem {
        private final SubstituteMenuContext _context;
        public Item(SubstituteMenuContext context) {
          super(context.getTargetConcept(), context.getParentNode(), context.getCurrentChild());
          _context = context;
        }

        @Override
        public String getMatchingText(String pattern) {
          return "string holder " + ((String) myParameterObject);
        }

        @Override
        public SNode createNode(String pattern) {
          SNode node = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x36f88ebb7cd00eb3L, "jetbrains.mps.lang.editor.menus.contextAssistant.testLanguage.structure.StringHolder")));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x36f88ebb7cd00eb3L, 0x36f88ebb7cd00eb4L, "stringProperty"), ((String) myParameterObject));
          return node;
        }
      }
    }

  }
}
