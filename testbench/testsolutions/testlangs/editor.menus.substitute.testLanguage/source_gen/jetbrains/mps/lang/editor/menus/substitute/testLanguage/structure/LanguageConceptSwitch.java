package jetbrains.mps.lang.editor.menus.substitute.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int TestConceptForMenuParameterizedByPrimitiveType = 0;
  public static final int TestSubstituteChild = 1;
  public static final int TestSubstituteChildBrother = 2;
  public static final int TestSubstituteChildSuper = 3;
  public static final int TestSubstituteConceptChildToReference = 4;
  public static final int TestSubstituteConceptToWrap = 5;
  public static final int TestSubstituteParent = 6;
  public static final int TestSubstituteParentToReference = 7;
  public static final int TestSubstituteSubChild1 = 8;
  public static final int TestSubstituteSubChild2 = 9;
  public static final int TestSubstituteSubChildSmartReference = 10;
  public static final int TestSubstituteSubConceptToWrap = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL);
    builder.put(0x75a761fb50351afbL, TestConceptForMenuParameterizedByPrimitiveType);
    builder.put(0x7ce1116e3a6fb0beL, TestSubstituteChild);
    builder.put(0x7f0007d60cfb69f5L, TestSubstituteChildBrother);
    builder.put(0x7f0007d60cfb698eL, TestSubstituteChildSuper);
    builder.put(0x7ce1116e3a6ff2b0L, TestSubstituteConceptChildToReference);
    builder.put(0x7ce1116e3a6ff2aaL, TestSubstituteConceptToWrap);
    builder.put(0x7ce1116e3a6fb0bdL, TestSubstituteParent);
    builder.put(0x7ce1116e3aa7c75fL, TestSubstituteParentToReference);
    builder.put(0x7ce1116e3a6ff2a8L, TestSubstituteSubChild1);
    builder.put(0x7ce1116e3a6ff2a9L, TestSubstituteSubChild2);
    builder.put(0x7ce1116e3a6ff2aeL, TestSubstituteSubChildSmartReference);
    builder.put(0x7ce1116e3a6ff2abL, TestSubstituteSubConceptToWrap);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
