package jetbrains.mps.lang.editor.menus.substitute.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int TestConceptForMenuParameterizedByPrimitiveType = 0;
  public static final int TestSubstituteAbstractChildAmbigousPosition = 1;
  public static final int TestSubstituteAbstractChildWithConstraints = 2;
  public static final int TestSubstituteAbstractSubChildAmbigousPosition = 3;
  public static final int TestSubstituteAttribute_RegularEditor = 4;
  public static final int TestSubstituteAttribute_TransientEditor = 5;
  public static final int TestSubstituteAttribute_WithReference = 6;
  public static final int TestSubstituteChild = 7;
  public static final int TestSubstituteChildAmbigousPosition1 = 8;
  public static final int TestSubstituteChildAmbigousPosition2 = 9;
  public static final int TestSubstituteChildBrother = 10;
  public static final int TestSubstituteChildOfWrapper = 11;
  public static final int TestSubstituteChildSuper = 12;
  public static final int TestSubstituteChildToReferenceSubconcept = 13;
  public static final int TestSubstituteChildToSpecialize = 14;
  public static final int TestSubstituteChildWithAttibute = 15;
  public static final int TestSubstituteChildWithConstraints1 = 16;
  public static final int TestSubstituteChildWithConstraints2 = 17;
  public static final int TestSubstituteChildWithConstraints3 = 18;
  public static final int TestSubstituteChildWithConstraintsAbstractWrapper = 19;
  public static final int TestSubstituteChildWithConstraintsToWrap = 20;
  public static final int TestSubstituteChildWithConstraintsWrapper1 = 21;
  public static final int TestSubstituteChildWithConstraintsWrapper2 = 22;
  public static final int TestSubstituteChildWithConstraintsWrapper3 = 23;
  public static final int TestSubstituteConceptChildToReference = 24;
  public static final int TestSubstituteExceptionActionCanSubstituteChild = 25;
  public static final int TestSubstituteExceptionActionDescriptionTextChild = 26;
  public static final int TestSubstituteExceptionActionIconChild = 27;
  public static final int TestSubstituteExceptionActionMatchingTextChild = 28;
  public static final int TestSubstituteExceptionActionTypeChild = 29;
  public static final int TestSubstituteExceptionConceptListChild = 30;
  public static final int TestSubstituteExceptionGroupChild = 31;
  public static final int TestSubstituteExceptionIncludeMenuChild = 32;
  public static final int TestSubstituteExceptionParameterizedChild = 33;
  public static final int TestSubstituteExceptionParent = 34;
  public static final int TestSubstituteExceptionReferenceDescriptionTextChild = 35;
  public static final int TestSubstituteExceptionReferenceMatchingTextChild = 36;
  public static final int TestSubstituteExceptionReferenceVisibleMatchingTextChild = 37;
  public static final int TestSubstituteExceptionSubconceptsChild = 38;
  public static final int TestSubstituteExceptionSubconceptsSubChild = 39;
  public static final int TestSubstituteExceptionWrapMenuChild = 40;
  public static final int TestSubstituteGrandChildWithConstraints = 41;
  public static final int TestSubstituteGrandChildWithConstraintsProhibited = 42;
  public static final int TestSubstituteNotSubconceptOfChild = 43;
  public static final int TestSubstituteParent = 44;
  public static final int TestSubstituteParentForChildrenWithAttibute = 45;
  public static final int TestSubstituteParentOfWrapper = 46;
  public static final int TestSubstituteParentPropertyAndReference = 47;
  public static final int TestSubstituteParentPropertyAndReference_Subconcept = 48;
  public static final int TestSubstituteParentToReference = 49;
  public static final int TestSubstituteParentWithConstraints = 50;
  public static final int TestSubstituteSmartRef_WithoutExplicitMenu = 51;
  public static final int TestSubstituteSmartRef_WithoutExplicitMenu_Subconcept = 52;
  public static final int TestSubstituteSpecialChild = 53;
  public static final int TestSubstituteSpecialChildAttribute = 54;
  public static final int TestSubstituteSpecialParent = 55;
  public static final int TestSubstituteSpecialSubChild = 56;
  public static final int TestSubstituteSubChild1 = 57;
  public static final int TestSubstituteSubChild2 = 58;
  public static final int TestSubstituteSubChildAmbigousPosition1 = 59;
  public static final int TestSubstituteSubChildAmbigousPosition2 = 60;
  public static final int TestSubstituteSubChildSmartReference_WithMenu = 61;
  public static final int TestSubstituteToWrapFromSubstituteMenu = 62;
  public static final int TestSubstituteToWrapFromTransformMenu = 63;
  public static final int TestSubstituteWrapper = 64;
  public static final int TestSubstitute_IncludeDefaultAndNullMenu = 65;
  public static final int TestSubstitute_IncludeDifferentMenus = 66;
  public static final int TestSubstitute_IncludeSameMenuTwice = 67;
  public static final int TestSubstitute_Interface = 68;
  public static final int TestSubstitute_Parent = 69;
  public static final int TestSubstitute_SubInterface1 = 70;
  public static final int TestSubstitute_SubInterface2 = 71;
  public static final int TestSubstitute_Subconcept = 72;
  public static final int TestSubstitute_WrapDifferentMenus = 73;
  public static final int TestSubstitute_WrapSameMenuTwice = 74;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL);
    builder.put(0x75a761fb50351afbL, TestConceptForMenuParameterizedByPrimitiveType);
    builder.put(0x7f53d2199235476bL, TestSubstituteAbstractChildAmbigousPosition);
    builder.put(0x9c8de75f2cc6e9bL, TestSubstituteAbstractChildWithConstraints);
    builder.put(0x7f53d21992362f22L, TestSubstituteAbstractSubChildAmbigousPosition);
    builder.put(0x446b8c93949517d6L, TestSubstituteAttribute_RegularEditor);
    builder.put(0x446b8c93949517d5L, TestSubstituteAttribute_TransientEditor);
    builder.put(0x446b8c93949517d7L, TestSubstituteAttribute_WithReference);
    builder.put(0x7ce1116e3a6fb0beL, TestSubstituteChild);
    builder.put(0x7f53d21992378bccL, TestSubstituteChildAmbigousPosition1);
    builder.put(0x7f53d21992378f83L, TestSubstituteChildAmbigousPosition2);
    builder.put(0x7f0007d60cfb69f5L, TestSubstituteChildBrother);
    builder.put(0x401156263ff3470cL, TestSubstituteChildOfWrapper);
    builder.put(0x7f0007d60cfb698eL, TestSubstituteChildSuper);
    builder.put(0x6723ebbaa4956096L, TestSubstituteChildToReferenceSubconcept);
    builder.put(0x38b257ae54d85a97L, TestSubstituteChildToSpecialize);
    builder.put(0x446b8c93949517d4L, TestSubstituteChildWithAttibute);
    builder.put(0x9c8de75f2ccf9b4L, TestSubstituteChildWithConstraints1);
    builder.put(0x9c8de75f2ccf9b3L, TestSubstituteChildWithConstraints2);
    builder.put(0x9c8de75f2ceddc8L, TestSubstituteChildWithConstraints3);
    builder.put(0x9c8de75f2d36adbL, TestSubstituteChildWithConstraintsAbstractWrapper);
    builder.put(0x9c8de75f2d21688L, TestSubstituteChildWithConstraintsToWrap);
    builder.put(0x9c8de75f2d21687L, TestSubstituteChildWithConstraintsWrapper1);
    builder.put(0x9c8de75f2d36ae2L, TestSubstituteChildWithConstraintsWrapper2);
    builder.put(0x9c8de75f2d41c8eL, TestSubstituteChildWithConstraintsWrapper3);
    builder.put(0x7ce1116e3a6ff2b0L, TestSubstituteConceptChildToReference);
    builder.put(0x63457d5cb580f352L, TestSubstituteExceptionActionCanSubstituteChild);
    builder.put(0x63457d5cb581957aL, TestSubstituteExceptionActionDescriptionTextChild);
    builder.put(0x63457d5cb581a862L, TestSubstituteExceptionActionIconChild);
    builder.put(0x63457d5cb5817a84L, TestSubstituteExceptionActionMatchingTextChild);
    builder.put(0x63457d5cb581c35cL, TestSubstituteExceptionActionTypeChild);
    builder.put(0x63457d5cb5822235L, TestSubstituteExceptionConceptListChild);
    builder.put(0x63457d5cb581f203L, TestSubstituteExceptionGroupChild);
    builder.put(0x63457d5cb58267deL, TestSubstituteExceptionIncludeMenuChild);
    builder.put(0x63457d5cb58283b9L, TestSubstituteExceptionParameterizedChild);
    builder.put(0x63457d5cb580f351L, TestSubstituteExceptionParent);
    builder.put(0x63457d5cb582c0d2L, TestSubstituteExceptionReferenceDescriptionTextChild);
    builder.put(0x63457d5cb582978bL, TestSubstituteExceptionReferenceMatchingTextChild);
    builder.put(0x63457d5cb582b4edL, TestSubstituteExceptionReferenceVisibleMatchingTextChild);
    builder.put(0x4c7dc5cc7a893d21L, TestSubstituteExceptionSubconceptsChild);
    builder.put(0x4c7dc5cc7a8a7122L, TestSubstituteExceptionSubconceptsSubChild);
    builder.put(0x28bb36fb7222267fL, TestSubstituteExceptionWrapMenuChild);
    builder.put(0x2d4683aef72697c0L, TestSubstituteGrandChildWithConstraints);
    builder.put(0x73096e13d1e2b4e1L, TestSubstituteGrandChildWithConstraintsProhibited);
    builder.put(0x7f53d21992314d41L, TestSubstituteNotSubconceptOfChild);
    builder.put(0x7ce1116e3a6fb0bdL, TestSubstituteParent);
    builder.put(0x446b8c93949517d3L, TestSubstituteParentForChildrenWithAttibute);
    builder.put(0x401156263ff2fe4cL, TestSubstituteParentOfWrapper);
    builder.put(0x69b757bd7bd1801L, TestSubstituteParentPropertyAndReference);
    builder.put(0x314f66c376dfa909L, TestSubstituteParentPropertyAndReference_Subconcept);
    builder.put(0x7ce1116e3aa7c75fL, TestSubstituteParentToReference);
    builder.put(0x9c8de75f2cc6e9aL, TestSubstituteParentWithConstraints);
    builder.put(0x6723ebbaa490bde6L, TestSubstituteSmartRef_WithoutExplicitMenu);
    builder.put(0x6723ebbaa49bf847L, TestSubstituteSmartRef_WithoutExplicitMenu_Subconcept);
    builder.put(0x38b257ae54d85a98L, TestSubstituteSpecialChild);
    builder.put(0x51ed57d5dc9c3b8L, TestSubstituteSpecialChildAttribute);
    builder.put(0x38b257ae54d85a99L, TestSubstituteSpecialParent);
    builder.put(0x77c1a85c9f90b75bL, TestSubstituteSpecialSubChild);
    builder.put(0x7ce1116e3a6ff2a8L, TestSubstituteSubChild1);
    builder.put(0x7ce1116e3a6ff2a9L, TestSubstituteSubChild2);
    builder.put(0x7f53d21992386b18L, TestSubstituteSubChildAmbigousPosition1);
    builder.put(0x7f53d21992386b19L, TestSubstituteSubChildAmbigousPosition2);
    builder.put(0x7ce1116e3a6ff2aeL, TestSubstituteSubChildSmartReference_WithMenu);
    builder.put(0x7ce1116e3a6ff2aaL, TestSubstituteToWrapFromSubstituteMenu);
    builder.put(0x7315fee8e56db2aeL, TestSubstituteToWrapFromTransformMenu);
    builder.put(0x401156263ff3470bL, TestSubstituteWrapper);
    builder.put(0x41299cab94ed9982L, TestSubstitute_IncludeDefaultAndNullMenu);
    builder.put(0x1a41c6fb28100fdcL, TestSubstitute_IncludeDifferentMenus);
    builder.put(0x3f759544c6a0709aL, TestSubstitute_IncludeSameMenuTwice);
    builder.put(0x3f759544c6a07040L, TestSubstitute_Interface);
    builder.put(0x3f759544c6a0703eL, TestSubstitute_Parent);
    builder.put(0x3f759544c6a07041L, TestSubstitute_SubInterface1);
    builder.put(0x3f759544c6a07042L, TestSubstitute_SubInterface2);
    builder.put(0x3f759544c6a07047L, TestSubstitute_Subconcept);
    builder.put(0x1a41c6fb2810192dL, TestSubstitute_WrapDifferentMenus);
    builder.put(0x3f759544c6a0709dL, TestSubstitute_WrapSameMenuTwice);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
