package jetbrains.mps.lang.editor.menus.substitute.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_TestConceptForMenuParameterizedByPrimitiveType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteChild = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteChildBrother = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteChildSuper = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteConceptChildToReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteConceptToWrap = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteParent = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteParentToReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteSubChild1 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteSubChild2 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteSubChildSmartReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TestSubstituteSubConceptToWrap = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.TestConceptForMenuParameterizedByPrimitiveType:
        return props_TestConceptForMenuParameterizedByPrimitiveType;
      case LanguageConceptSwitch.TestSubstituteChild:
        return props_TestSubstituteChild;
      case LanguageConceptSwitch.TestSubstituteChildBrother:
        return props_TestSubstituteChildBrother;
      case LanguageConceptSwitch.TestSubstituteChildSuper:
        return props_TestSubstituteChildSuper;
      case LanguageConceptSwitch.TestSubstituteConceptChildToReference:
        return props_TestSubstituteConceptChildToReference;
      case LanguageConceptSwitch.TestSubstituteConceptToWrap:
        return props_TestSubstituteConceptToWrap;
      case LanguageConceptSwitch.TestSubstituteParent:
        return props_TestSubstituteParent;
      case LanguageConceptSwitch.TestSubstituteParentToReference:
        return props_TestSubstituteParentToReference;
      case LanguageConceptSwitch.TestSubstituteSubChild1:
        return props_TestSubstituteSubChild1;
      case LanguageConceptSwitch.TestSubstituteSubChild2:
        return props_TestSubstituteSubChild2;
      case LanguageConceptSwitch.TestSubstituteSubChildSmartReference:
        return props_TestSubstituteSubChildSmartReference;
      case LanguageConceptSwitch.TestSubstituteSubConceptToWrap:
        return props_TestSubstituteSubConceptToWrap;
    }
    return null;
  }
}
