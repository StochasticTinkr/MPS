package jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.NamedMenuId;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0a = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt_a0a)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new TestSubstitituteChildOfWrapper_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new TestSubstitituteParentOfWrapper_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new TestSubstitituteWrapper_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteChild_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteChildWithConstraints1_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteChildWithConstraints2_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteChildWithConstraints3_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteExceptionParent_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteParent_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteParentToReference_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteParentWithConstraints_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSpecialChild_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSpecialChildAttribute_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSpecialParent_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSpecialSubChild_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSubChild1_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSubChild2_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteSubChildSmartReference_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new TestSubstituteToWrapFromTransformMenu_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new TestSubstitute_Parent_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredDefaultTransformationMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0d = concept;
    switch (index_xbvbvu_a0d.index(cncpt_a0d)) {
      case 0:
        return Collections.<TransformationMenu>singletonList(new TestSubstitituteWrapper_TransformationMenu());
      case 1:
        return Collections.<TransformationMenu>singletonList(new TestSubstituteChild_TransformationMenu());
      case 2:
        return Collections.<TransformationMenu>singletonList(new TestSubstituteChildWithConstraints1_TransformationMenu());
      case 3:
        return Collections.<TransformationMenu>singletonList(new TestSubstituteChildWithConstraints2_TransformationMenu());
      case 4:
        return Collections.<TransformationMenu>singletonList(new TestSubstituteGrandChildWithConstraints_TransformationMenu());
      case 5:
        return Collections.<TransformationMenu>singletonList(new TestSubstituteSpecialSubChild_TransformationMenu());
      case 6:
        return Collections.<TransformationMenu>singletonList(new TestSubstitute_IncludeDefaultAndNullMenu_TransformationMenu());
      default:
    }
    return Collections.<TransformationMenu>emptyList();
  }
  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredNamedTransformationMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt_a0e = (SAbstractConcept) menuId.getConcept();
    switch (index_xbvbvu_a0e.index(cncpt_a0e)) {
      case 0:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a4, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new NamedTransformationMenu()});
            default:
          }
        }
        break;
      case 1:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0b1a4, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new NamedTransformationMenu_EmptyCell()});
            case 1:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteParent_WrapDefaultSubstituteMenu()});
            case 2:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteParent_WrapDefaultSubstituteMenuWithFunction()});
            case 3:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteParent_WrapNamedSubstituteMenu()});
            default:
          }
        }
        break;
      case 2:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0c1a4, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteSpecialChild_TransformationMenu()});
            default:
          }
        }
        break;
      case 3:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0d1a4, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteSpecialParent_Multiple_EmptyCell_TransformationMenu()});
            case 1:
              return Arrays.asList(new TransformationMenu[]{new TestSubstituteSpecialParent_Single_EmptyCell_TransformationMenu()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<TransformationMenu>emptyList();
  }
  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0f = concept;
    switch (index_xbvbvu_a0f.index(cncpt_a0f)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitituteAbstractChildAmbigousPosition_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitituteChildOfWrapper_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitituteWrapper_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteChild_SubstituteMenu());
      case 4:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteChildWithConstraintsWrapper1_SubstituteMenu());
      case 5:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteChildWithConstraintsWrapper2_SubstituteMenu());
      case 6:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteChildWithConstraintsWrapper3_SubstituteMenu());
      case 7:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionActionCanSubstituteChild_SubstituteMenu());
      case 8:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionActionDescriptionTextChild_SubstituteMenu());
      case 9:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionActionIconChild_SubstituteMenu());
      case 10:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionActionMatchingTextChild_SubstituteMenu());
      case 11:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionActionTypeChild_SubstituteMenu());
      case 12:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionConceptListChild_SubstituteMenu());
      case 13:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionGroupChild_SubstituteMenu());
      case 14:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionIncludeMenuChild_SubstituteMenu());
      case 15:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionParameterizedChild_SubstituteMenu());
      case 16:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionReferenceDescriptionTextChild_SubstituteMenu());
      case 17:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionReferenceMatchingTextChild_SubstituteMenu());
      case 18:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionReferenceVisibleMatchingTextChild_SubstituteMenu());
      case 19:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionSubconceptsChild_SubstituteMenu());
      case 20:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteExceptionWrapMenuChild_SubstituteMenu());
      case 21:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteSubChildSmartReference_SubstituteMenu());
      case 22:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteToWrapFromSubstituteMenu_SubstituteMenu());
      case 23:
        return Collections.<SubstituteMenu>singletonList(new TestSubstituteToWrapFromTransformMenu_SubstituteMenu());
      case 24:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitute_IncludeDifferentMenus_SubstituteMenu());
      case 25:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitute_IncludeSameMenuTwice_SubstituteMenu());
      case 26:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitute_WrapDifferentMenus_SubstituteMenu());
      case 27:
        return Collections.<SubstituteMenu>singletonList(new TestSubstitute_WrapSameMenuTwice_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }
  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredNamedSubstituteMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt_a0g = (SAbstractConcept) menuId.getConcept();
    switch (index_xbvbvu_a0g.index(cncpt_a0g)) {
      case 0:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new ParameterizedByPrimitiveType()});
            default:
          }
        }
        break;
      case 1:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0b1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new NamedSubstituteMenu()});
            case 1:
              return Arrays.asList(new SubstituteMenu[]{new NamedSubstituteMenuForContribution()});
            case 2:
              return Arrays.asList(new SubstituteMenu[]{new NamedSubstituteMenu_EmptyCell()});
            default:
          }
        }
        break;
      case 2:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0c1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstituteSubChildSmartReference_SmartReference()});
            default:
          }
        }
        break;
      case 3:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0d1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new NamedSubstituteMenuToWrapFromSubstituteMenu()});
            default:
          }
        }
        break;
      case 4:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0e1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new NamedSubstituteMenuToWrapFromTransformMenu()});
            default:
          }
        }
        break;
      case 5:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0f1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new IncludeDefaultAndNullMenu()});
            default:
          }
        }
        break;
      case 6:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0g1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_Menu_ToInclude1()});
            case 1:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_Menu_ToInclude2()});
            default:
          }
        }
        break;
      case 7:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0h1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_SameMenu_ToInclude()});
            default:
          }
        }
        break;
      case 8:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0i1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_Menu_ToWrap1()});
            case 1:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_Menu_ToWrap2()});
            default:
          }
        }
        break;
      case 9:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0j1a6, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new SubstituteMenu[]{new TestSubstitute_SameMenu_ToWrap()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff3470cL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff2fe4cL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff3470bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0beL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2ccf9b4L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2ccf9b3L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2ceddc8L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb580f351L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0bdL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3aa7c75fL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2cc6e9aL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x38b257ae54d85a98L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x51ed57d5dc9c3b8L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x38b257ae54d85a99L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x77c1a85c9f90b75bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2a8L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2a9L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7315fee8e56db2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x3f759544c6a0703eL)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0d = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff3470bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0beL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2ccf9b4L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2ccf9b3L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x2d4683aef72697c0L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x77c1a85c9f90b75bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x41299cab94ed9982L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0e = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0beL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0bdL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x38b257ae54d85a98L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x38b257ae54d85a99L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0f = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7f53d2199235476bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff3470cL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x401156263ff3470bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0beL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2d21687L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2d36ae2L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x9c8de75f2d41c8eL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb580f352L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb581957aL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb581a862L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb5817a84L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb581c35cL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb5822235L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb581f203L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb58267deL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb58283b9L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb582c0d2L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb582978bL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x63457d5cb582b4edL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x4c7dc5cc7a893d21L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x28bb36fb7222267fL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2aaL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7315fee8e56db2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x1a41c6fb28100fdcL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x3f759544c6a0709aL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x1a41c6fb2810192dL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x3f759544c6a0709dL)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0g = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x75a761fb50351afbL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6fb0beL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7ce1116e3a6ff2aaL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x7315fee8e56db2aeL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x41299cab94ed9982L), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x1a41c6fb28100fdcL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x3f759544c6a0709aL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x1a41c6fb2810192dL), MetaIdFactory.conceptId(0xcb6d57037c8e46a9L, 0xb993c1373dc0942fL, 0x3f759544c6a0709dL)).seal();
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a1a4 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedTransformationMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0b1a4 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedTransformationMenu_EmptyCell", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteParent_WrapDefaultSubstituteMenu", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteParent_WrapDefaultSubstituteMenuWithFunction", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteParent_WrapNamedSubstituteMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0c1a4 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteSpecialChild_TransformationMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0d1a4 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteSpecialParent_Multiple_EmptyCell_TransformationMenu", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteSpecialParent_Single_EmptyCell_TransformationMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.ParameterizedByPrimitiveType"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0b1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedSubstituteMenu", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedSubstituteMenuForContribution", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedSubstituteMenu_EmptyCell"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0c1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstituteSubChildSmartReference_SmartReference"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0d1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedSubstituteMenuToWrapFromSubstituteMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0e1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.NamedSubstituteMenuToWrapFromTransformMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0f1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.IncludeDefaultAndNullMenu"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0g1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_Menu_ToInclude1", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_Menu_ToInclude2"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0h1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_SameMenu_ToInclude"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0i1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_Menu_ToWrap1", "jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_Menu_ToWrap2"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0j1a6 = new String[]{"jetbrains.mps.lang.editor.menus.substitute.testLanguage.editor.TestSubstitute_SameMenu_ToWrap"};
}
