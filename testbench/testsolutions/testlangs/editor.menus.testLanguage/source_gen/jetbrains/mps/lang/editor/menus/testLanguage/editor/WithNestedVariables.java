package jetbrains.mps.lang.editor.menus.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.util.Computable;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import org.jetbrains.annotations.NotNull;

public class WithNestedVariables extends TransformationMenuBase {
  @Override
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), "test location").contains(_context.getMenuLocation())) {
      result.add(new WithNestedVariables.TransformationMenuPart_Group_foze4d_a0());
    }
    return result;
  }

  public class TransformationMenuPart_Group_foze4d_a0 extends GroupMenuPart<TransformationMenuItem, TransformationMenuContext> {
    private int v;
    private int x;
    @Override
    protected void initialize(TransformationMenuContext _context) {
      super.initialize(_context);
      v = new Computable<Integer>() {
        public Integer compute() {
          return 10;
        }
      }.compute();
      x = new Computable<Integer>() {
        public Integer compute() {
          return v + 2;
        }
      }.compute();

    }
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      return true;
    }

    @Override
    protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
      return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new WithNestedVariables.TransformationMenuPart_Group_foze4d_a0.TransformationMenuPart_Group_foze4d_a0a());
    }
    public class TransformationMenuPart_Group_foze4d_a0a extends GroupMenuPart<TransformationMenuItem, TransformationMenuContext> {
      private int t;
      @Override
      protected void initialize(TransformationMenuContext _context) {
        super.initialize(_context);
        t = new Computable<Integer>() {
          public Integer compute() {
            return v + 1;
          }
        }.compute();

      }

      @Override
      protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
        return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new WithNestedVariables.TransformationMenuPart_Group_foze4d_a0.TransformationMenuPart_Group_foze4d_a0a.TransformationMenuPart_Action_foze4d_a0a0());
      }
      private class TransformationMenuPart_Action_foze4d_a0a0 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
        @Nullable
        protected TransformationMenuItem createItem(TransformationMenuContext context) {
          return new WithNestedVariables.TransformationMenuPart_Group_foze4d_a0.TransformationMenuPart_Group_foze4d_a0a.TransformationMenuPart_Action_foze4d_a0a0.Item(context);
        }

        private class Item extends ActionItemBase {
          private final TransformationMenuContext _context;

          private Item(TransformationMenuContext context) {
            _context = context;
          }

          @Nullable
          @Override
          public String getLabelText(String pattern) {
            return "v = " + v + ", t = " + t;
          }

          @Override
          public void execute(@NotNull String pattern) {
          }

        }
      }
    }
  }
}
