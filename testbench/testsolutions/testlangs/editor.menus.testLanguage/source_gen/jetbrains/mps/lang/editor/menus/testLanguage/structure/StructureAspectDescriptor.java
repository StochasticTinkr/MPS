package jetbrains.mps.lang.editor.menus.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBase = createDescriptorForBase();
  /*package*/ final ConceptDescriptor myConceptBaseWithNonEmptyMenu = createDescriptorForBaseWithNonEmptyMenu();
  /*package*/ final ConceptDescriptor myConceptChildOfParentWithEmptyCell = createDescriptorForChildOfParentWithEmptyCell();
  /*package*/ final ConceptDescriptor myConceptConceptWithoutDefaultMenu = createDescriptorForConceptWithoutDefaultMenu();
  /*package*/ final ConceptDescriptor myConceptDerived = createDescriptorForDerived();
  /*package*/ final ConceptDescriptor myConceptDerivedWithEmptyMenu = createDescriptorForDerivedWithEmptyMenu();
  /*package*/ final ConceptDescriptor myConceptNodeHolder = createDescriptorForNodeHolder();
  /*package*/ final ConceptDescriptor myConceptParentWithEmptyCell = createDescriptorForParentWithEmptyCell();
  /*package*/ final ConceptDescriptor myConceptScopesTestConceptBase = createDescriptorForScopesTestConceptBase();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuTestConcept = createDescriptorForTransformationMenuTestConcept();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBase, myConceptBaseWithNonEmptyMenu, myConceptChildOfParentWithEmptyCell, myConceptConceptWithoutDefaultMenu, myConceptDerived, myConceptDerivedWithEmptyMenu, myConceptNodeHolder, myConceptParentWithEmptyCell, myConceptScopesTestConceptBase, myConceptTransformationMenuTestConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Base:
        return myConceptBase;
      case LanguageConceptSwitch.BaseWithNonEmptyMenu:
        return myConceptBaseWithNonEmptyMenu;
      case LanguageConceptSwitch.ChildOfParentWithEmptyCell:
        return myConceptChildOfParentWithEmptyCell;
      case LanguageConceptSwitch.ConceptWithoutDefaultMenu:
        return myConceptConceptWithoutDefaultMenu;
      case LanguageConceptSwitch.Derived:
        return myConceptDerived;
      case LanguageConceptSwitch.DerivedWithEmptyMenu:
        return myConceptDerivedWithEmptyMenu;
      case LanguageConceptSwitch.NodeHolder:
        return myConceptNodeHolder;
      case LanguageConceptSwitch.ParentWithEmptyCell:
        return myConceptParentWithEmptyCell;
      case LanguageConceptSwitch.ScopesTestConceptBase:
        return myConceptScopesTestConceptBase;
      case LanguageConceptSwitch.TransformationMenuTestConcept:
        return myConceptTransformationMenuTestConcept;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForBase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "Base", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x258c7e2e22024953L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/2705676212746996051");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseWithNonEmptyMenu() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "BaseWithNonEmptyMenu", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x68cf8525aaf46e4bL);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/7552401496952041035");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChildOfParentWithEmptyCell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "ChildOfParentWithEmptyCell", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x7cc9c0c2af1b18deL);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/8991930073415882974");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptWithoutDefaultMenu() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "ConceptWithoutDefaultMenu", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x1de1fbd5fbf62470L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/2153278993333625968");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDerived() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "Derived", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x258c7e2e22024954L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.menus.testLanguage.structure.Base", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x258c7e2e22024953L);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/2705676212746996052");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDerivedWithEmptyMenu() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "DerivedWithEmptyMenu", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x68cf8525aaf46e4cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.menus.testLanguage.structure.BaseWithNonEmptyMenu", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x68cf8525aaf46e4bL);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/7552401496952041036");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeHolder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "NodeHolder", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x4a19acf9397f4948L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/5339489019635910984");
    b.aggregate("node", 0x4a19acf9397f4949L).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(true).ordered(true).multiple(false).origin("5339489019635910985").done();
    b.alias("node holder");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParentWithEmptyCell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "ParentWithEmptyCell", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x7cc9c0c2af1b18c2L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/8991930073415882946");
    b.aggregate("child", 0x7cc9c0c2af1b18faL).target(0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x7cc9c0c2af1b18deL).optional(true).ordered(true).multiple(false).origin("8991930073415883002").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScopesTestConceptBase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "ScopesTestConceptBase", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0xed49174618e8812L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/1068638940632614930");
    b.alias("scopes test concept - base");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransformationMenuTestConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.testLanguage", "TransformationMenuTestConcept", 0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x208970783ba43296L);
    b.class_(false, false, false);
    b.origin("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.menus.testLanguage.structure)/2344528742722056854");
    b.alias("transformation menu test concept");
    return b.create();
  }
}
