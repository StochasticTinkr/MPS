package jetbrains.mps.lang.editor.menus.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Base = 0;
  public static final int BaseWithNonEmptyMenu = 1;
  public static final int ChildOfParentWithEmptyCell = 2;
  public static final int ConceptWithoutDefaultMenu = 3;
  public static final int Derived = 4;
  public static final int DerivedWithEmptyMenu = 5;
  public static final int NodeHolder = 6;
  public static final int ParentWithEmptyCell = 7;
  public static final int ScopesTestConceptBase = 8;
  public static final int ScopesTestConceptChild = 9;
  public static final int ScopesTestConceptReference = 10;
  public static final int TransformationMenuTestConcept = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x4eb772b04df3414aL, 0xb89463abeb912f56L);
    builder.put(0x258c7e2e22024953L, Base);
    builder.put(0x68cf8525aaf46e4bL, BaseWithNonEmptyMenu);
    builder.put(0x7cc9c0c2af1b18deL, ChildOfParentWithEmptyCell);
    builder.put(0x1de1fbd5fbf62470L, ConceptWithoutDefaultMenu);
    builder.put(0x258c7e2e22024954L, Derived);
    builder.put(0x68cf8525aaf46e4cL, DerivedWithEmptyMenu);
    builder.put(0x4a19acf9397f4948L, NodeHolder);
    builder.put(0x7cc9c0c2af1b18c2L, ParentWithEmptyCell);
    builder.put(0xed49174618e8812L, ScopesTestConceptBase);
    builder.put(0x38c885e4a7f35aaeL, ScopesTestConceptChild);
    builder.put(0x38c885e4a7f35aafL, ScopesTestConceptReference);
    builder.put(0x208970783ba43296L, TransformationMenuTestConcept);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
