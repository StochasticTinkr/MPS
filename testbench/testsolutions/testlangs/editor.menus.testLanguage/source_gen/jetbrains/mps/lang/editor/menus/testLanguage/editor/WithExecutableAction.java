package jetbrains.mps.lang.editor.menus.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.transformation.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.transformation.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import org.jetbrains.annotations.NotNull;

public class WithExecutableAction extends TransformationMenuBase {
  @Override
  protected List<MenuPart> getParts(TransformationMenuContext _context) {
    List<MenuPart> result = new ArrayList<MenuPart>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), "test location").contains(_context.getMenuLocation())) {
      result.add(new WithExecutableAction.TransformationMenuPart_Action_mk0emr_a0());
    }
    return result;
  }

  private static class TransformationMenuPart_Action_mk0emr_a0 extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new WithExecutableAction.TransformationMenuPart_Action_mk0emr_a0.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "Executable action";
      }

      @Override
      public void execute(@NotNull String pattern) {
        ActionExecuteTestHelper.myCalled = true;
      }

    }
  }
}
