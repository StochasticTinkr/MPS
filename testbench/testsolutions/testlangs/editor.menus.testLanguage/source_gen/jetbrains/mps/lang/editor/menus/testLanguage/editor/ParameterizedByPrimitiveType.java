package jetbrains.mps.lang.editor.menus.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.annotations.NotNull;
import java.util.Arrays;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISequenceClosure;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;

public class ParameterizedByPrimitiveType extends TransformationMenuBase {
  @Override
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), "test location").contains(_context.getMenuLocation())) {
      result.add(new ParameterizedByPrimitiveType.TransformationMenuPart_Parameterized_ud82js_a0());
    }
    return result;
  }

  private static class TransformationMenuPart_Parameterized_ud82js_a0 extends ParameterizedMenuPart<Integer, TransformationMenuItem, TransformationMenuContext> {

    @NotNull
    @Override
    protected List<TransformationMenuItem> createItems(Integer parameter, TransformationMenuContext context) {
      return new ParameterizedByPrimitiveType.TransformationMenuPart_Action_ud82js_a0a(parameter).createItems(context);
    }
    @NotNull
    @Override
    protected Iterable<? extends Integer> getParameters(TransformationMenuContext _context) {
      int i = 10;
      if (i > 5) {
        return Arrays.asList(1, 2, 3);
      } else {
        return Sequence.fromClosure(new ISequenceClosure<Integer>() {
          public Iterable<Integer> iterable() {
            return new Iterable<Integer>() {
              public Iterator<Integer> iterator() {
                return new YieldingIterator<Integer>() {
                  private int __CP__ = 0;
                  protected boolean moveToNext() {
__loop__:
                    do {
__switch__:
                      switch (this.__CP__) {
                        case -1:
                          assert false : "Internal error";
                          return false;
                        case 2:
                          this.__CP__ = 3;
                          this.yield(1);
                          return true;
                        case 3:
                          this.__CP__ = 4;
                          this.yield(2);
                          return true;
                        case 4:
                          this.__CP__ = 1;
                          this.yield(3);
                          return true;
                        case 0:
                          this.__CP__ = 2;
                          break;
                        default:
                          break __loop__;
                      }
                    } while (true);
                    return false;
                  }
                };
              }
            };
          }
        });
      }
    }
  }
  private static class TransformationMenuPart_Action_ud82js_a0a extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
    private final int myParameterObject;
    public TransformationMenuPart_Action_ud82js_a0a(int parameterObject) {
      myParameterObject = parameterObject;
    }
    @Nullable
    protected TransformationMenuItem createItem(TransformationMenuContext context) {
      return new ParameterizedByPrimitiveType.TransformationMenuPart_Action_ud82js_a0a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        // Check that we can use parameterObject of a primitive type without errors 
        int param = myParameterObject;
        if (myParameterObject > 3) {
          param++;
        }
        return "Action #" + param;
      }

      @Override
      public void execute(@NotNull String pattern) {
        // Check that we can use parameterObject of a primitive type without errors 
        int param = myParameterObject;
        if (myParameterObject < 3) {
          param++;
        }
      }

    }
  }
}
