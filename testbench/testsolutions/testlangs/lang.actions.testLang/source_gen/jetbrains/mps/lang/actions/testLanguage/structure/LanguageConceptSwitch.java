package jetbrains.mps.lang.actions.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ActionTestAbstractChild = 0;
  public static final int ActionTestAbstractChildWrapper = 1;
  public static final int ActionTestChild1 = 2;
  public static final int ActionTestChild1Child = 3;
  public static final int ActionTestChild1SubConcept = 4;
  public static final int ActionTestChild2 = 5;
  public static final int ActionTestChildToWrap1 = 6;
  public static final int ActionTestChildToWrap2 = 7;
  public static final int ActionTestChildWrapper = 8;
  public static final int ActionTestContainer = 9;
  public static final int ActionTestDefaultAbstractChild = 10;
  public static final int ActionTestDefaultChild1 = 11;
  public static final int ActionTestDefaultChild2 = 12;
  public static final int ActionTestSidetransformAbstractChild = 13;
  public static final int ActionTestSidetransformAddConceptAbstractChild = 14;
  public static final int ActionTestSidetransformAddConceptChild = 15;
  public static final int ActionTestSidetransformAnotherAbstractChild = 16;
  public static final int ActionTestSidetransformAnotherChild1 = 17;
  public static final int ActionTestSidetransformAnotherChild2 = 18;
  public static final int ActionTestSidetransformAnotherChildCommonSuperConcept = 19;
  public static final int ActionTestSidetransformChild1 = 20;
  public static final int ActionTestSidetransformTestAncestor = 21;
  public static final int ActionTestSidetransformTestContainer = 22;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x737ed1fffa634ebcL, 0xa834435499b23c64L);
    builder.put(0x2365c14e1671a9caL, ActionTestAbstractChild);
    builder.put(0x47ad1fca2ec53f71L, ActionTestAbstractChildWrapper);
    builder.put(0x2365c14e167220f9L, ActionTestChild1);
    builder.put(0x7f805f0c2dd45b4eL, ActionTestChild1Child);
    builder.put(0x2c99ba4dd5ff2533L, ActionTestChild1SubConcept);
    builder.put(0x2365c14e1672224dL, ActionTestChild2);
    builder.put(0x47ad1fca2ee71badL, ActionTestChildToWrap1);
    builder.put(0x2622c47afd434fd2L, ActionTestChildToWrap2);
    builder.put(0x47ad1fca2ec9ad4dL, ActionTestChildWrapper);
    builder.put(0x2365c14e1671696fL, ActionTestContainer);
    builder.put(0x73dfe0fc25514b8dL, ActionTestDefaultAbstractChild);
    builder.put(0x73dfe0fc25516733L, ActionTestDefaultChild1);
    builder.put(0x73dfe0fc25516dd5L, ActionTestDefaultChild2);
    builder.put(0x179f28a7ade471f3L, ActionTestSidetransformAbstractChild);
    builder.put(0x43d1b15d415e8d80L, ActionTestSidetransformAddConceptAbstractChild);
    builder.put(0x43d1b15d4168a426L, ActionTestSidetransformAddConceptChild);
    builder.put(0x2c35cefefca54d96L, ActionTestSidetransformAnotherAbstractChild);
    builder.put(0x2c35cefefca55189L, ActionTestSidetransformAnotherChild1);
    builder.put(0x2c35cefefca551bdL, ActionTestSidetransformAnotherChild2);
    builder.put(0x2c35cefefcaa0dd0L, ActionTestSidetransformAnotherChildCommonSuperConcept);
    builder.put(0x44969b12b8c94c1bL, ActionTestSidetransformChild1);
    builder.put(0x2c35cefefc9cfa78L, ActionTestSidetransformTestAncestor);
    builder.put(0x179f28a7ade381e5L, ActionTestSidetransformTestContainer);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
