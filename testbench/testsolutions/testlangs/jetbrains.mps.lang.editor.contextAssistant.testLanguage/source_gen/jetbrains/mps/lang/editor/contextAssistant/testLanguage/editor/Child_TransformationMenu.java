package jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.menus.transformation.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.transformation.MenuLocations;
import jetbrains.mps.lang.editor.menus.transformation.ConditionalMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.transformation.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.editor.menus.transformation.SubMenuMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.editor.menus.transformation.IncludeMenuMenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuLookup;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.editor.menus.transformation.NamedMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;

public class Child_TransformationMenu extends TransformationMenuBase {
  @Override
  protected List<MenuPart> getParts(TransformationMenuContext _context) {
    List<MenuPart> result = new ArrayList<MenuPart>();
    if (MenuLocations.CONTEXT_ASSISTANT.equals(_context.getMenuLocation())) {
      result.add(new Child_TransformationMenu.TransformationMenuPart_Group_qk1e79_a0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_SubMenu_qk1e79_c0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_Group_qk1e79_d0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_Group_qk1e79_e0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_IncludeMenu_qk1e79_f0());
      result.add(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_g0());
    }
    return result;
  }

  public static class TransformationMenuPart_Group_qk1e79_a0 extends ConditionalMenuPart {
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      if ("error".equals(SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")))) {
        throw new RuntimeException("Intentional exception - ignore this");
      }
      return true;
    }

    @Override
    protected List<MenuPart> getParts() {
      return Arrays.asList(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a0a());
    }
  }
  private static class TransformationMenuPart_Action_qk1e79_a0a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a0a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "exception 1";
      }

      @Override
      public void execute(@NotNull String pattern) {
      }

    }
  }
  private static class TransformationMenuPart_Action_qk1e79_b0 extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b0.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "exception 2";
      }

      @Override
      public void execute(@NotNull String pattern) {
        throw new RuntimeException("Intentional exception from 'execute'");
      }

    }
  }
  public static class TransformationMenuPart_SubMenu_qk1e79_c0 extends SubMenuMenuPart {
    @Override
    protected String getText(TransformationMenuContext _context) {
      return "tree operations";
    }

    @Override
    protected List<MenuPart> getParts() {
      return Arrays.asList(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a2a(), new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b2a());
    }
  }
  private static class TransformationMenuPart_Action_qk1e79_a2a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a2a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "delete node";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SNodeOperations.deleteNode(_context.getNode());
      }

    }
  }
  private static class TransformationMenuPart_Action_qk1e79_b2a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b2a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "add sibling before";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SNode newNode = SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Child")), null);
        SNodeOperations.insertPrevSiblingChild(_context.getNode(), newNode);
        _context.getEditorContext().selectWRTFocusPolicy(newNode);
      }

    }
  }
  public static class TransformationMenuPart_Group_qk1e79_d0 extends ConditionalMenuPart {
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).contains("a");
    }

    @Override
    protected List<MenuPart> getParts() {
      return Arrays.asList(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a3a(), new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b3a());
    }
  }
  private static class TransformationMenuPart_Action_qk1e79_a3a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a3a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "remove all 'a's";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SPropertyOperations.set(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).replaceAll("a", ""));
      }

    }
  }
  private static class TransformationMenuPart_Action_qk1e79_b3a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_b3a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "another ";
      }

      @Override
      public void execute(@NotNull String pattern) {
      }

    }
  }
  public static class TransformationMenuPart_Group_qk1e79_e0 extends ConditionalMenuPart {
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      return !(SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).endsWith("a"));
    }

    @Override
    protected List<MenuPart> getParts() {
      return Arrays.asList(new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a4a());
    }
  }
  private static class TransformationMenuPart_Action_qk1e79_a4a extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_a4a.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "ensure name ends with 'a'";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SPropertyOperations.set(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + "a");
      }

    }
  }
  public static class TransformationMenuPart_IncludeMenu_qk1e79_f0 extends IncludeMenuMenuPart {
    @Nullable
    @Override
    protected TransformationMenuLookup getMenuLookup(TransformationMenuContext _context) {
      final SNode node = _context.getNode();
      final EditorContext editorContext = _context.getEditorContext();

      return new NamedMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Child"), "jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor.NamedMenu");
    }
  }
  private static class TransformationMenuPart_Action_qk1e79_g0 extends SingleItemMenuPart {
    @Nullable
    protected MenuItem createItem(TransformationMenuContext context) {
      return new Child_TransformationMenu.TransformationMenuPart_Action_qk1e79_g0.Item(context);
    }

    private class Item extends ActionItemBase {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "Sidebar action";
      }

      @Override
      public void execute(@NotNull String pattern) {
      }

    }
  }
}
