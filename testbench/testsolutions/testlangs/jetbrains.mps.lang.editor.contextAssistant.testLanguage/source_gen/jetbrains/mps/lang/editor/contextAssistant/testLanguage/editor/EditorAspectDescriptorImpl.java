package jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.openapi.editor.descriptor.ContextAssistantMenu;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.descriptor.NamedContextAssistantMenuId;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Child"))) {
        return Collections.<ConceptEditor>singletonList(new Child_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa4dL, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Parent"))) {
        return Collections.<ConceptEditor>singletonList(new Parent_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x1b49c84ee1cc743bL, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.SubconceptOfChild"))) {
        return Collections.<ConceptEditor>singletonList(new SubconceptOfChild_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



  @NotNull
  @Override
  public Collection<ContextAssistantMenu> getDeclaredDefaultContextAssistantMenus(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Child"))) {
        return Arrays.asList(new ContextAssistantMenu[]{new Child_ContextAssistantMenu(), new DefaultMenuContribution()});
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x1b49c84ee1cc743bL, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.SubconceptOfChild"))) {
        return Collections.<ContextAssistantMenu>singletonList(new SubconceptOfChild_ContextAssistantMenu());
      }
    }
    return Collections.<ContextAssistantMenu>emptyList();
  }
  @NotNull
  @Override
  public Collection<ContextAssistantMenu> getDeclaredNamedContextAssistantMenus(NamedContextAssistantMenuId menuId) {
    {
      SAbstractConcept cncpt = (SAbstractConcept) menuId.getConcept();
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa32L, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Child"))) {
        switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b0a0f, menuId.getFqName())) {
          case 0:
            return Arrays.asList(new ContextAssistantMenu[]{new NamedMenu(), new NamedMenuContribution()});
          case 1:
            return Arrays.asList(new ContextAssistantMenu[]{new Recursive()});
          default:
        }
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x9a629f9aabc94c29L, 0xb1b8db7f349f7fbcL, 0x4d6a8b533e60aa4dL, "jetbrains.mps.lang.editor.contextAssistant.testLanguage.structure.Parent"))) {
        switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c0a0f, menuId.getFqName())) {
          case 0:
            return Arrays.asList(new ContextAssistantMenu[]{new ParentNamedMenu()});
          default:
        }
      }
    }

    return Collections.<ContextAssistantMenu>emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0b0a0f = new String[]{"jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor.NamedMenu", "jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor.Recursive"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c0a0f = new String[]{"jetbrains.mps.lang.editor.contextAssistant.testLanguage.editor.ParentNamedMenu"};
}
