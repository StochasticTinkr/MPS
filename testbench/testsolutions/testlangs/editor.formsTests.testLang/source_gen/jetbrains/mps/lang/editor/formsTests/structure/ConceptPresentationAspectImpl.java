package jetbrains.mps.lang.editor.formsTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_UsesPlatformCheckbox;
  private ConceptPresentation props_UsesTextCheckbox;
  private ConceptPresentation props_VariousCheckboxes;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.UsesPlatformCheckbox:
        if (props_UsesPlatformCheckbox == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_UsesPlatformCheckbox = cpb.create();
        }
        return props_UsesPlatformCheckbox;
      case LanguageConceptSwitch.UsesTextCheckbox:
        if (props_UsesTextCheckbox == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_UsesTextCheckbox = cpb.create();
        }
        return props_UsesTextCheckbox;
      case LanguageConceptSwitch.VariousCheckboxes:
        if (props_VariousCheckboxes == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_VariousCheckboxes = cpb.create();
        }
        return props_VariousCheckboxes;
    }
    return null;
  }
}
