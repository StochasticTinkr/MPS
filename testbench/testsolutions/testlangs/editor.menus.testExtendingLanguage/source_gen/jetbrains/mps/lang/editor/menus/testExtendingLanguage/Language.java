package jetbrains.mps.lang.editor.menus.testExtendingLanguage;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.lang.editor.menus.testExtendingLanguage.editor.EditorAspectDescriptorImpl;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "9b3af7e0-9a52-4741-a75d-becf7e1d5117(jetbrains.mps.lang.editor.menus.testExtendingLanguage)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "jetbrains.mps.lang.editor.menus.testExtendingLanguage";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("9b3af7e0-9a52-4741-a75d-becf7e1d5117"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{"jetbrains.mps.lang.editor.menus.testLanguage"};
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass.getName().equals("jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor")) {
      if (aspectClass == EditorAspectDescriptor.class) {
        return (T) new EditorAspectDescriptorImpl();
      }
    }
    return super.createAspect(aspectClass);
  }
}
