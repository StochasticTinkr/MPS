package jetbrains.mps.generator.editor.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import junit.framework.Assert;
import jetbrains.mps.lang.generator.helper.EditingUtil;

@MPSLaunch
public class Test_PropertyMacroApplicable_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(Test_PropertyMacroApplicable_Test.class, "${mps_home}", "r:cbdcb51c-64a3-4f95-8704-5b9a754c9773(jetbrains.mps.generator.editor.tests@tests)", false);

  public Test_PropertyMacroApplicable_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_Test_PropertyMacroApplicable() throws Throwable {
    runTest("jetbrains.mps.generator.editor.tests.Test_PropertyMacroApplicable_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2617465934949249950", "");
      getEditorComponent().getEditorContext().getRepository().getModelAccess().runReadAction(new Runnable() {
        public void run() {
          Assert.assertTrue(EditingUtil.isPropertyMacroApplicable(getEditorComponent().getSelectedNode(), getEditorComponent().getSelectedCell()));
          Assert.assertFalse(EditingUtil.isReferenceMacroApplicable(getEditorComponent().getSelectedNode(), getEditorComponent().getSelectedCell()));
        }
      });

    }
  }
}
