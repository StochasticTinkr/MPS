package jetbrains.mps.generator.tests.fork;

/*Generated by MPS */

import jetbrains.mps.lang.test.generator.rt.BaseGeneratorTest;
import org.jetbrains.mps.openapi.model.SModel;
import org.junit.Before;
import org.junit.Test;
import jetbrains.mps.lang.test.generator.rt.TransformHelper;
import java.util.Collection;
import org.junit.Assert;

public class GenPlanForkTest extends BaseGeneratorTest {
  private SModel myArg_EM1;
  private SModel myArg_RM1;
  private SModel myArg_RM2;
  private SModel myArg_ForkPlan;

  @Before
  public void prepareArguments() {
    myArg_EM1 = findModel("r:05c2f926-57b0-4b6d-930c-1aabb187694d(jetbrains.mps.generator.crossmodel.sandbox.entrymodel1)");
    myArg_RM1 = findModel("r:35b2450d-4c62-4a43-8984-fcb9e972f2a9(jetbrains.mps.generator.tests.bean1)");
    myArg_RM2 = findModel("r:9a9ec010-573d-4ed5-a9f5-3a7cb4b1d15a(jetbrains.mps.generator.tests.bean2)");
    myArg_ForkPlan = findModel("r:3da86158-d8e3-46d4-8529-5e1d4bd09279(jetbrains.mps.generator.tests.gpfork@genplan)");
  }


  @Test
  public void testTransformAndMatch0() {
    TransformHelper t = newTransformer();
    SModel i = myArg_EM1;
    t.setInput(i);
    t.setPlanProvider(planProviderFromModel(myArg_ForkPlan));
    t.transform();
    Collection<SModel> outputModels = t.getOutputModels();
    Assert.assertEquals("Number of output models", outputModels.size(), 2);
    assertMatch(outputModels, myArg_RM1, myArg_RM2);
  }
}
