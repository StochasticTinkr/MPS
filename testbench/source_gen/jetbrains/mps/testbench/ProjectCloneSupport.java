package jetbrains.mps.testbench;

/*Generated by MPS */

import jetbrains.mps.tool.environment.Environment;
import jetbrains.mps.project.Project;
import java.io.File;
import jetbrains.mps.util.FileUtil;
import jetbrains.mps.util.UnzipUtil;
import java.io.IOException;

public class ProjectCloneSupport {
  private final Environment myEnv;
  private Project myProject;
  private File myDestinationDir;

  public ProjectCloneSupport(Environment env) {
    myEnv = env;
  }

  public Project get() {
    return myProject;
  }

  public ProjectCloneSupport cloneProject(File sourceProjectDir, final File destinationDir) {
    assert myProject == null;

    if (destinationDir.exists()) {
      FileUtil.delete(destinationDir);
    }
    if (sourceProjectDir.isDirectory()) {
      FileUtil.copyDir(sourceProjectDir, destinationDir);
    } else {
      // it is allowed to have zipped directory here 
      try {
        boolean success = destinationDir.mkdir();
        if (!(success)) {
          throw new IllegalStateException("Could not create dir at the provided destination");
        }
        UnzipUtil.unzip(sourceProjectDir, destinationDir);
      } catch (IOException e) {
        throw new RuntimeException("Got error while unzipping the project sources", e);
      }
    }
    myProject = myEnv.openProject(destinationDir);
    myDestinationDir = destinationDir;
    return this;
  }

  public void closeAndDelete() {
    assert myProject != null;
    // flushAllEvents merely copied from BaseMpsTest.closeClonedProject() without further consideration, perhaps could be removed. 
    myEnv.flushAllEvents();
    myEnv.closeProject(myProject);
    FileUtil.delete(myDestinationDir);
    myProject = null;
    myDestinationDir = null;
  }


}
