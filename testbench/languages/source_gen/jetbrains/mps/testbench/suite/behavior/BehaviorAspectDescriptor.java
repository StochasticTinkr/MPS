package jetbrains.mps.testbench.suite.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor mySolutionRef__BehaviorDescriptor = new SolutionRef__BehaviorDescriptor();
  private final BHDescriptor myIModuleRef__BehaviorDescriptor = new IModuleRef__BehaviorDescriptor();
  private final BHDescriptor myModuleSuite__BehaviorDescriptor = new ModuleSuite__BehaviorDescriptor();
  private final BHDescriptor myTestCaseRef__BehaviorDescriptor = new TestCaseRef__BehaviorDescriptor();
  private final BHDescriptor myJUnit4TestCaseRef__BehaviorDescriptor = new JUnit4TestCaseRef__BehaviorDescriptor();
  private final BHDescriptor myJUnit3TestCaseRef__BehaviorDescriptor = new JUnit3TestCaseRef__BehaviorDescriptor();
  private final BHDescriptor myITestRef__BehaviorDescriptor = new ITestRef__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0k.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myIModuleRef__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myITestRef__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myJUnit3TestCaseRef__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myJUnit4TestCaseRef__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myModuleSuite__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return mySolutionRef__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myTestCaseRef__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0k = buildConceptIndices(MetaAdapterFactory.getInterfaceConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1d7a3L, "jetbrains.mps.testbench.suite.structure.IModuleRef"), MetaAdapterFactory.getInterfaceConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL, "jetbrains.mps.testbench.suite.structure.ITestRef"), MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb9L, "jetbrains.mps.testbench.suite.structure.JUnit3TestCaseRef"), MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb8L, "jetbrains.mps.testbench.suite.structure.JUnit4TestCaseRef"), MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb5L, "jetbrains.mps.testbench.suite.structure.ModuleSuite"), MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1cbdcL, "jetbrains.mps.testbench.suite.structure.SolutionRef"), MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb7L, "jetbrains.mps.testbench.suite.structure.TestCaseRef"));
}
