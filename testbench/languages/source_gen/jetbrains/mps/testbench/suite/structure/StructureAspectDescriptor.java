package jetbrains.mps.testbench.suite.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(7);
  /*package*/ final ConceptDescriptor myConceptIModuleRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.IModuleRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1d7a3L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "1280144168199509923")).create();
  /*package*/ final ConceptDescriptor myConceptITestRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.ITestRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL)).version(1).interface_().propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x776b1eb017f5bc5eL, "muted")).properties("muted").sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "4504141816188599482")).create();
  /*package*/ final ConceptDescriptor myConceptJUnit3TestCaseRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.JUnit3TestCaseRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.testbench.suite.structure.ITestRef").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x11c3fc56a6d10bbfL, "klass", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L), false)).references("klass").sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "4504141816188599481")).create();
  /*package*/ final ConceptDescriptor myConceptJUnit4TestCaseRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.JUnit4TestCaseRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.testbench.suite.structure.ITestRef").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3e81ed1e2be77cc1L, "klass", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L), false)).references("klass").sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "4504141816188599480")).create();
  /*package*/ final ConceptDescriptor myConceptModuleSuite = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.ModuleSuite", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11c3fc56a6d1cc88L, "moduleRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1d7a3L), false, false, false), new ConceptDescriptorBuilder.Link(0x3e81ed1e2be77cbeL, "testRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL), true, true, false)).children(new String[]{"moduleRef", "testRef"}, new boolean[]{false, true}).rootable().sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "4504141816188599477")).create();
  /*package*/ final ConceptDescriptor myConceptSolutionRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.SolutionRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1cbdcL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.testbench.suite.structure.IModuleRef").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x11c3fc56a6d1d7a3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11c3fc56a6d1cbddL, "moduleFQName"), new ConceptDescriptorBuilder.Prop(0x11c3fc56a6d1cbdeL, "moduleID")).properties("moduleFQName", "moduleID").sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "1280144168199506908")).create();
  /*package*/ final ConceptDescriptor myConceptTestCaseRef = new ConceptDescriptorBuilder("jetbrains.mps.testbench.suite.structure.TestCaseRef", MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cb7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.testbench.suite.structure.ITestRef").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xd3c5a46fb8c247dbL, 0xad0a30b8f19c2055L, 0x3e81ed1e2be77cbaL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3e81ed1e2be77cc0L, "testCase", MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b2709bd56L), false)).references("testCase").sourceNode(new SNodePointer("r:c8b27be8-26f9-4593-9ae5-f70dd005d131(jetbrains.mps.testbench.suite.structure)", "4504141816188599479")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptIModuleRef.getId(), 0);
    myIndexMap.put(myConceptITestRef.getId(), 1);
    myIndexMap.put(myConceptJUnit3TestCaseRef.getId(), 2);
    myIndexMap.put(myConceptJUnit4TestCaseRef.getId(), 3);
    myIndexMap.put(myConceptModuleSuite.getId(), 4);
    myIndexMap.put(myConceptSolutionRef.getId(), 5);
    myIndexMap.put(myConceptTestCaseRef.getId(), 6);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIModuleRef, myConceptITestRef, myConceptJUnit3TestCaseRef, myConceptJUnit4TestCaseRef, myConceptModuleSuite, myConceptSolutionRef, myConceptTestCaseRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptIModuleRef;
      case 1:
        return myConceptITestRef;
      case 2:
        return myConceptJUnit3TestCaseRef;
      case 3:
        return myConceptJUnit4TestCaseRef;
      case 4:
        return myConceptModuleSuite;
      case 5:
        return myConceptSolutionRef;
      case 6:
        return myConceptTestCaseRef;
      default:
        throw new IllegalStateException();
    }
  }
}
