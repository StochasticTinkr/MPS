package BHL5.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myC6__BehaviorDescriptor = new C6__BehaviorDescriptor();
  private final BHDescriptor myC7__BehaviorDescriptor = new C7__BehaviorDescriptor();
  private final BHDescriptor myI1__BehaviorDescriptor = new I1__BehaviorDescriptor();
  private final BHDescriptor myI2__BehaviorDescriptor = new I2__BehaviorDescriptor();
  private final BHDescriptor myC1__BehaviorDescriptor = new C1__BehaviorDescriptor();
  private final BHDescriptor myC3__BehaviorDescriptor = new C3__BehaviorDescriptor();
  private final BHDescriptor myC5__BehaviorDescriptor = new C5__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      switch (index_846f5o_a0k.index(cncpt)) {
        case 0:
          return myC1__BehaviorDescriptor;
        case 1:
          return myC3__BehaviorDescriptor;
        case 2:
          return myC5__BehaviorDescriptor;
        case 3:
          return myC6__BehaviorDescriptor;
        case 4:
          return myC7__BehaviorDescriptor;
        case 5:
          return myI1__BehaviorDescriptor;
        case 6:
          return myI2__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0k = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x355d469f0ba23bc7L), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x355d469f0ba2f82fL), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x3f852a67e9131504L), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x23a893587ca1aaedL), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x23a893587ca1af93L), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x355d469f0ba114cbL), MetaIdFactory.conceptId(0xb4fa1e36714a4c77L, 0x8e953eae9632decbL, 0x355d469f0ba23ba9L)).seal();
}
