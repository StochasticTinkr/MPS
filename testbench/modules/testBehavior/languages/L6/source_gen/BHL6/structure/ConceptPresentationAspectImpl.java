package BHL6.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_A = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_B = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_C = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_D = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_E = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_F = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_G = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_H = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I1 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I2 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_J = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_lpa09p_a0n.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_A;
          }
          break;
        case 1:
          if (true) {
            return props_B;
          }
          break;
        case 2:
          if (true) {
            return props_C;
          }
          break;
        case 3:
          if (true) {
            return props_D;
          }
          break;
        case 4:
          if (true) {
            return props_E;
          }
          break;
        case 5:
          if (true) {
            return props_F;
          }
          break;
        case 6:
          if (true) {
            return props_G;
          }
          break;
        case 7:
          if (true) {
            return props_H;
          }
          break;
        case 8:
          if (true) {
            return props_I;
          }
          break;
        case 9:
          if (true) {
            return props_I1;
          }
          break;
        case 10:
          if (true) {
            return props_I2;
          }
          break;
        case 11:
          if (true) {
            return props_J;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_lpa09p_a0n = buildConceptIndices(MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec04606a7L, "BHL6.structure.A"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec0460fdaL, "BHL6.structure.B"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec0461c33L, "BHL6.structure.C"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec04623e8L, "BHL6.structure.D"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec0462797L, "BHL6.structure.E"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec0465379L, "BHL6.structure.F"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x559729dec0465442L, "BHL6.structure.G"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x1206f7d464a22147L, "BHL6.structure.H"), MetaAdapterFactory.getInterfaceConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x13b01619ddde1774L, "BHL6.structure.I"), MetaAdapterFactory.getInterfaceConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x13b01619ddde175eL, "BHL6.structure.I1"), MetaAdapterFactory.getInterfaceConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x13b01619ddde1769L, "BHL6.structure.I2"), MetaAdapterFactory.getConcept(0x424c173aee734dc9L, 0xbc43d0051c9b1e8fL, 0x13b01619ddde16fdL, "BHL6.structure.J"));
}
