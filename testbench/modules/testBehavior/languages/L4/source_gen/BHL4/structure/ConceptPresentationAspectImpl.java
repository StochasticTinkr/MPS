package BHL4.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_C1 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_C2 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_C3 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_C4 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I1 = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_I2 = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("2b679aa1-c9e8-4a47-84b9-ce94c2202df5"), "BHL4")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case 0:
        return props_C1;
      case 1:
        return props_C2;
      case 2:
        return props_C3;
      case 3:
        return props_C4;
      case 4:
        return props_I;
      case 5:
        return props_I1;
      case 6:
        return props_I2;
    }
    throw new IllegalStateException();
  }
}
