package BHL1.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptA = createDescriptorForA();
  /*package*/ final ConceptDescriptor myConceptA1 = createDescriptorForA1();
  /*package*/ final ConceptDescriptor myConceptI = createDescriptorForI();
  /*package*/ final ConceptDescriptor myConceptI1 = createDescriptorForI1();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptA, myConceptA1, myConceptI, myConceptI1);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.A:
        return myConceptA;
      case LanguageConceptSwitch.A1:
        return myConceptA1;
      case LanguageConceptSwitch.I:
        return myConceptI;
      case LanguageConceptSwitch.I1:
        return myConceptI1;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForA() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BHL1", "A", 0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x54fc4b17de4f24cbL);
    b.class_(false, false, false);
    b.parent(0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x54fc4b17de4f24ccL);
    b.origin("r:28855287-2116-4523-9c44-f18e3449e08d(BHL1.structure)/6123852159203091659");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForA1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BHL1", "A1", 0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x7e5c09dfa07d591eL);
    b.class_(false, false, false);
    b.parent(0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x7e5c09dfa07d591fL);
    b.origin("r:28855287-2116-4523-9c44-f18e3449e08d(BHL1.structure)/9105163402711226654");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForI() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BHL1", "I", 0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x54fc4b17de4f24ccL);
    b.interface_();
    b.origin("r:28855287-2116-4523-9c44-f18e3449e08d(BHL1.structure)/6123852159203091660");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForI1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BHL1", "I1", 0x43359135f67c4a3dL, 0x9fdda3d7dba50995L, 0x7e5c09dfa07d591fL);
    b.interface_();
    b.origin("r:28855287-2116-4523-9c44-f18e3449e08d(BHL1.structure)/9105163402711226655");
    b.version(2);
    b.property("a", 0x7e5c09dfa07d59cbL).type(PrimitiveTypeId.INTEGER).origin("9105163402711226827").done();
    return b.create();
  }
}
