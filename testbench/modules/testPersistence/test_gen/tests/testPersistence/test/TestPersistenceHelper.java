package tests.testPersistence.test;

/*Generated by MPS */

import jetbrains.mps.extapi.model.SModelBase;
import jetbrains.mps.persistence.PersistenceUtil;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.persistence.def.ModelPersistence;
import java.io.IOException;
import junit.framework.Assert;
import jetbrains.mps.smodel.DefaultSModelDescriptor;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.persistence.PersistenceRegistry;

/**
 * This is test class for _supported_ persistences. 
 * Note the difference between supported persistence and vcs persistence.
 * For info, read doc comments in ModelPersistence/VCSPersistenceSupport classes
 */
public class TestPersistenceHelper {
  /**
   * should be changed to ModelPersistence.firstSupportedVersion
   */
  public static final int START_PERSISTENCE_TEST_VERSION = 8;

  public TestOutputFilter filter = new TestOutputFilter() {
    @Override
    protected boolean isLineOK(String line) {
      return line != null && !((line.contains("attribute") && line.contains("undeclared child role:")));
    }
  };

  public void saveModelInPersistence(final SModelBase model, final PersistenceUtil.InMemoryStreamDataSource dataSource, final int persistence) {
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        try {
          filter.start();
          ModelPersistence.saveModel(model.getSModel(), dataSource, persistence);
        } catch (IOException e) {
          Assert.fail("Exception during test. See log for details");
          e.printStackTrace();
        } finally {
          filter.stop();
        }
      }
    });
  }

  public DefaultSModelDescriptor getTestModel() {
    return ((DefaultSModelDescriptor) SModelRepository.getInstance().getModelDescriptor("tests.testPersistence.testModel"));
  }

  public String getDefaultExt() {
    return PersistenceRegistry.getInstance().getDefaultModelFactory().getFileExtension();
  }
}
