package testMoveElements.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(3);
  /*package*/ final ConceptDescriptor myConceptDummyBlock = new ConceptDescriptorBuilder("testMoveElements.structure.DummyBlock", MetaIdFactory.conceptId(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x679b7b3bff651415L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x679b7b3bff6515dbL, "statement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), true, true, false)).children(new String[]{"statement"}, new boolean[]{true}).alias("dummy", "").sourceNode(new SNodePointer("r:1ce0b94d-16c2-4f0d-92d5-b5b1e611f24d(testMoveElements.structure)", "7465696304914830357")).create();
  /*package*/ final ConceptDescriptor myConceptManyStatements = new ConceptDescriptorBuilder("testMoveElements.structure.ManyStatements", MetaIdFactory.conceptId(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x4cb3e593ffd97846L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x62f47dac992b7389L, "list", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(0x4cb3e593ffd97849L, "list1", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(0x4cb3e593ffd9784bL, "list2", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(0x4cb3e593ffd9784eL, "statement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), true, true, false)).children(new String[]{"list", "list1", "list2", "statement"}, new boolean[]{false, false, false, true}).sourceNode(new SNodePointer("r:1ce0b94d-16c2-4f0d-92d5-b5b1e611f24d(testMoveElements.structure)", "5527013591529125958")).create();
  /*package*/ final ConceptDescriptor myConceptManyStatementsContainer = new ConceptDescriptorBuilder("testMoveElements.structure.ManyStatementsContainer", MetaIdFactory.conceptId(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x2f0103435011b1f2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2f0103435011b1f3L, "first", MetaIdFactory.conceptId(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x4cb3e593ffd97846L), false, false, false), new ConceptDescriptorBuilder.Link(0x2f0103435011b1f9L, "second", MetaIdFactory.conceptId(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x4cb3e593ffd97846L), false, false, false)).children(new String[]{"first", "second"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:1ce0b94d-16c2-4f0d-92d5-b5b1e611f24d(testMoveElements.structure)", "3386991982400352754")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptDummyBlock.getId(), 0);
    myIndexMap.put(myConceptManyStatements.getId(), 1);
    myIndexMap.put(myConceptManyStatementsContainer.getId(), 2);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDummyBlock, myConceptManyStatements, myConceptManyStatementsContainer);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptDummyBlock;
      case 1:
        return myConceptManyStatements;
      case 2:
        return myConceptManyStatementsContainer;
      default:
        throw new IllegalStateException();
    }
  }
}
