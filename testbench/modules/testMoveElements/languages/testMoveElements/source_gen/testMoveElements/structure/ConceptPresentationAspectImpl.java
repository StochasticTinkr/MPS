package testMoveElements.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_DummyBlock = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ManyStatements = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ManyStatementsContainer = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_lpa09p_a0e.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_DummyBlock;
          }
          break;
        case 1:
          if (true) {
            return props_ManyStatements;
          }
          break;
        case 2:
          if (true) {
            return props_ManyStatementsContainer;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_lpa09p_a0e = buildConceptIndices(MetaAdapterFactory.getConcept(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x679b7b3bff651415L, "DummyBlock"), MetaAdapterFactory.getConcept(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x4cb3e593ffd97846L, "ManyStatements"), MetaAdapterFactory.getConcept(0xe228eea107ef499cL, 0x88269c47a7e369dbL, 0x2f0103435011b1f2L, "ManyStatementsContainer"));
}
