package updatedLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(2);
  /*package*/ final ConceptDescriptor myConceptMigratingConcept = createDescriptorForMigratingConcept();
  /*package*/ final ConceptDescriptor myConceptRootConcept = createDescriptorForRootConcept();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptMigratingConcept.getId(), 0);
    myIndexMap.put(myConceptRootConcept.getId(), 1);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptMigratingConcept, myConceptRootConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptMigratingConcept;
      case 1:
        return myConceptRootConcept;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForMigratingConcept() {
    return new ConceptDescriptorBuilder("updatedLanguage.structure.MigratingConcept", MetaIdFactory.conceptId(0xa59395ba5d944758L, 0xa87cb11e086d5491L, 0x42068cb67bc5737L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ImplementationPart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x42068cb67bc578eL, "value", new SNodePointer("r:d2da4af1-e84b-4016-92ec-5817a38dc1f9(updatedLanguage.structure)", "297352798234498958")), new ConceptDescriptorBuilder.Prop(0x42068cb67bcac8fL, "newvalue", new SNodePointer("r:d2da4af1-e84b-4016-92ec-5817a38dc1f9(updatedLanguage.structure)", "297352798234520719"))).properties("value", "newvalue").sourceNode(new SNodePointer("r:d2da4af1-e84b-4016-92ec-5817a38dc1f9(updatedLanguage.structure)", "297352798234498871")).create();
  }
  private static ConceptDescriptor createDescriptorForRootConcept() {
    return new ConceptDescriptorBuilder("updatedLanguage.structure.RootConcept", MetaIdFactory.conceptId(0xa59395ba5d944758L, 0xa87cb11e086d5491L, 0x74e74ebb927d8fe9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x74e74ebb927f69dcL, "child", MetaIdFactory.conceptId(0xa59395ba5d944758L, 0xa87cb11e086d5491L, 0x42068cb67bc5737L), false, false, false, new SNodePointer("r:d2da4af1-e84b-4016-92ec-5817a38dc1f9(updatedLanguage.structure)", "8423788195543476700"))).children(new String[]{"child"}, new boolean[]{false}).rootable().sourceNode(new SNodePointer("r:d2da4af1-e84b-4016-92ec-5817a38dc1f9(updatedLanguage.structure)", "8423788195543355369")).create();
  }
}
