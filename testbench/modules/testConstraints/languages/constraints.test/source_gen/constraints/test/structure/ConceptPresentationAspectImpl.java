package constraints.test.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_Base = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Concept_CC = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Concept_CI = new ConceptPresentationBuilder().shortDesc("CF - composition of D1 & D2 CFs. D2 inherites Base CF. Hence, CF - composition of D1 & Base CFs").create();
  private final ConceptPresentation props_Concept_II = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Container = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Derived1_Constrained = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Derived1_Inherited = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Derived2_Constrained = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Derived2_Inherited = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Base:
        return props_Base;
      case LanguageConceptSwitch.Concept_CC:
        return props_Concept_CC;
      case LanguageConceptSwitch.Concept_CI:
        return props_Concept_CI;
      case LanguageConceptSwitch.Concept_II:
        return props_Concept_II;
      case LanguageConceptSwitch.Container:
        return props_Container;
      case LanguageConceptSwitch.Derived1_Constrained:
        return props_Derived1_Constrained;
      case LanguageConceptSwitch.Derived1_Inherited:
        return props_Derived1_Inherited;
      case LanguageConceptSwitch.Derived2_Constrained:
        return props_Derived2_Constrained;
      case LanguageConceptSwitch.Derived2_Inherited:
        return props_Derived2_Inherited;
    }
    return null;
  }
}
