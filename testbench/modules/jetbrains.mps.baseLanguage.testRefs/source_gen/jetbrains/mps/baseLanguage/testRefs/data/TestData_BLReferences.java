package jetbrains.mps.baseLanguage.testRefs.data;

/*Generated by MPS */

import jetbrains.mps.references.Reference;
import jetbrains.mps.references.LocalReference;

public class TestData_BLReferences {
  public static int staticField;
  public class X {
    /*package*/ int field;
  }
  public static void refConsumer(Reference<Integer> ref) {
  }
  public static void paramToRef(int _param) {
    final LocalReference._int param = new LocalReference._int(_param);
    refConsumer(param);
  }
  public static void localToRef() {
    final LocalReference._int local = new LocalReference._int();
    refConsumer(local);
  }
  public static void fieldToRef(TestData_BLReferences.X x) {
    refConsumer(new TestData_BLReferences._ref_field0(x));
  }
  public static void staticFieldToRef(TestData_BLReferences.X x) {
    refConsumer(new TestData_BLReferences._ref_staticField0());
  }
  public static class _ref_field0 implements Reference<Integer> {
    private final TestData_BLReferences.X myContainer;
    public _ref_field0(TestData_BLReferences.X conmytainer) {
      myContainer = conmytainer;
    }
    @Override
    public Integer get() {
      return myContainer.field;
    }
    @Override
    public void set(Integer value) {
      myContainer.field = value;
    }
  }
  public static class _ref_staticField0 implements Reference<Integer> {
    @Override
    public Integer get() {
      return staticField;
    }
    @Override
    public void set(Integer value) {
      staticField = value;
    }
  }
}
