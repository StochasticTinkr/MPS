package testDefaultEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(12);
  /*package*/ final ConceptDescriptor myConceptAbstractDeveloper = new ConceptDescriptorBuilder("testDefaultEditor.structure.AbstractDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptCanvas = new ConceptDescriptorBuilder("testDefaultEditor.structure.Canvas", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5daL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5a79ee4e776cb5e1L, "shapes", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL), true, true, false)).children(new String[]{"shapes"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptCompany = new ConceptDescriptorBuilder("testDefaultEditor.structure.Company", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f723L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf1308bdL, "team", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L), true, true, false)).children(new String[]{"team"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptDefaultNodeAttribute = new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultNodeAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aee1L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).create();
  /*package*/ final ConceptDescriptor myConceptDefaultPropertyAttribute = new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultPropertyAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8ae64L)).super_("jetbrains.mps.lang.core.structure.PropertyAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).parents("jetbrains.mps.lang.core.structure.PropertyAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).create();
  /*package*/ final ConceptDescriptor myConceptDefaultReferenceAttribute = new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultReferenceAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aeb7L)).super_("jetbrains.mps.lang.core.structure.LinkAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).parents("jetbrains.mps.lang.core.structure.LinkAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).create();
  /*package*/ final ConceptDescriptor myConceptDeveloper = new ConceptDescriptorBuilder("testDefaultEditor.structure.Developer", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L)).super_("testDefaultEditor.structure.AbstractDeveloper").super_(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).parents("testDefaultEditor.structure.AbstractDeveloper", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xd0768d7cf132948L, "age"), new ConceptDescriptorBuilder.Prop(0xd0768d7cf13294aL, "sex"), new ConceptDescriptorBuilder.Prop(0xd0768d7cf13294fL, "lastName"), new ConceptDescriptorBuilder.Prop(0x5318180a0a3dcaffL, "politicWing")).properties("age", "sex", "lastName", "politicWing").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xd0768d7cf132953L, "bestFriend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), true), new ConceptDescriptorBuilder.Ref(0xd0768d7cf132955L, "teamHeWants", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L), true)).references("bestFriend", "teamHeWants").childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf13be7dL, "friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL), true, true, false), new ConceptDescriptorBuilder.Link(0x7e427bd3a7dd8f1bL, "someChild", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true, false, false)).children(new String[]{"friend", "someChild"}, new boolean[]{true, false}).create();
  /*package*/ final ConceptDescriptor myConceptDummyMethod = new ConceptDescriptorBuilder("testDefaultEditor.structure.DummyMethod", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x535e489f8b62af67L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x535e489f8b62afa3L, "statements", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), true, true, false)).children(new String[]{"statements"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptFriend = new ConceptDescriptorBuilder("testDefaultEditor.structure.Friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xd0768d7cf13be7bL, "friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), false)).references("friend").create();
  /*package*/ final ConceptDescriptor myConceptNotSubstitutableDeveloper = new ConceptDescriptorBuilder("testDefaultEditor.structure.NotSubstitutableDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9853b871L)).super_("testDefaultEditor.structure.AbstractDeveloper").super_(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).parents("testDefaultEditor.structure.AbstractDeveloper", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).create();
  /*package*/ final ConceptDescriptor myConceptShape = new ConceptDescriptorBuilder("testDefaultEditor.structure.Shape", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5a79ee4e776d3c7eL, "name"), new ConceptDescriptorBuilder.Prop(0x5a79ee4e776cb5dcL, "x"), new ConceptDescriptorBuilder.Prop(0x5a79ee4e776cb5deL, "y")).properties("name", "x", "y").create();
  /*package*/ final ConceptDescriptor myConceptTeam = new ConceptDescriptorBuilder("testDefaultEditor.structure.Team", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xd0768d7cf132946L, "isOpenSource")).properties("isOpenSource").childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf132937L, "developer", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), true, true, false), new ConceptDescriptorBuilder.Link(0x6903a6b9853b385L, "abstractDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), true, false, false)).children(new String[]{"developer", "abstractDeveloper"}, new boolean[]{true, false}).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractDeveloper.getId(), 0);
    myIndexMap.put(myConceptCanvas.getId(), 1);
    myIndexMap.put(myConceptCompany.getId(), 2);
    myIndexMap.put(myConceptDefaultNodeAttribute.getId(), 3);
    myIndexMap.put(myConceptDefaultPropertyAttribute.getId(), 4);
    myIndexMap.put(myConceptDefaultReferenceAttribute.getId(), 5);
    myIndexMap.put(myConceptDeveloper.getId(), 6);
    myIndexMap.put(myConceptDummyMethod.getId(), 7);
    myIndexMap.put(myConceptFriend.getId(), 8);
    myIndexMap.put(myConceptNotSubstitutableDeveloper.getId(), 9);
    myIndexMap.put(myConceptShape.getId(), 10);
    myIndexMap.put(myConceptTeam.getId(), 11);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDeveloper, myConceptCanvas, myConceptCompany, myConceptDefaultNodeAttribute, myConceptDefaultPropertyAttribute, myConceptDefaultReferenceAttribute, myConceptDeveloper, myConceptDummyMethod, myConceptFriend, myConceptNotSubstitutableDeveloper, myConceptShape, myConceptTeam);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractDeveloper;
      case 1:
        return myConceptCanvas;
      case 2:
        return myConceptCompany;
      case 3:
        return myConceptDefaultNodeAttribute;
      case 4:
        return myConceptDefaultPropertyAttribute;
      case 5:
        return myConceptDefaultReferenceAttribute;
      case 6:
        return myConceptDeveloper;
      case 7:
        return myConceptDummyMethod;
      case 8:
        return myConceptFriend;
      case 9:
        return myConceptNotSubstitutableDeveloper;
      case 10:
        return myConceptShape;
      case 11:
        return myConceptTeam;
      default:
        throw new IllegalStateException();
    }
  }
}
