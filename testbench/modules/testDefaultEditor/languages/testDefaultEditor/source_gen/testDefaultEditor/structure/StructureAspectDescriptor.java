package testDefaultEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(12);
  /*package*/ final ConceptDescriptor myConceptAbstractDeveloper = createDescriptorForAbstractDeveloper();
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCompany = createDescriptorForCompany();
  /*package*/ final ConceptDescriptor myConceptDefaultNodeAttribute = createDescriptorForDefaultNodeAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultPropertyAttribute = createDescriptorForDefaultPropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultReferenceAttribute = createDescriptorForDefaultReferenceAttribute();
  /*package*/ final ConceptDescriptor myConceptDeveloper = createDescriptorForDeveloper();
  /*package*/ final ConceptDescriptor myConceptDummyMethod = createDescriptorForDummyMethod();
  /*package*/ final ConceptDescriptor myConceptFriend = createDescriptorForFriend();
  /*package*/ final ConceptDescriptor myConceptNotSubstitutableDeveloper = createDescriptorForNotSubstitutableDeveloper();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptTeam = createDescriptorForTeam();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractDeveloper.getId(), 0);
    myIndexMap.put(myConceptCanvas.getId(), 1);
    myIndexMap.put(myConceptCompany.getId(), 2);
    myIndexMap.put(myConceptDefaultNodeAttribute.getId(), 3);
    myIndexMap.put(myConceptDefaultPropertyAttribute.getId(), 4);
    myIndexMap.put(myConceptDefaultReferenceAttribute.getId(), 5);
    myIndexMap.put(myConceptDeveloper.getId(), 6);
    myIndexMap.put(myConceptDummyMethod.getId(), 7);
    myIndexMap.put(myConceptFriend.getId(), 8);
    myIndexMap.put(myConceptNotSubstitutableDeveloper.getId(), 9);
    myIndexMap.put(myConceptShape.getId(), 10);
    myIndexMap.put(myConceptTeam.getId(), 11);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDeveloper, myConceptCanvas, myConceptCompany, myConceptDefaultNodeAttribute, myConceptDefaultPropertyAttribute, myConceptDefaultReferenceAttribute, myConceptDeveloper, myConceptDummyMethod, myConceptFriend, myConceptNotSubstitutableDeveloper, myConceptShape, myConceptTeam);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractDeveloper;
      case 1:
        return myConceptCanvas;
      case 2:
        return myConceptCompany;
      case 3:
        return myConceptDefaultNodeAttribute;
      case 4:
        return myConceptDefaultPropertyAttribute;
      case 5:
        return myConceptDefaultReferenceAttribute;
      case 6:
        return myConceptDeveloper;
      case 7:
        return myConceptDummyMethod;
      case 8:
        return myConceptFriend;
      case 9:
        return myConceptNotSubstitutableDeveloper;
      case 10:
        return myConceptShape;
      case 11:
        return myConceptTeam;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractDeveloper() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.AbstractDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "472942194665384072")).create();
  }
  private static ConceptDescriptor createDescriptorForCanvas() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Canvas", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5daL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5a79ee4e776cb5e1L, "shapes", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL), true, true, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956373976545"))).children(new String[]{"shapes"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956373976538")).create();
  }
  private static ConceptDescriptor createDescriptorForCompany() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Company", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f723L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf1308bdL, "team", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L), true, true, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431426237"))).children(new String[]{"team"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431421731")).create();
  }
  private static ConceptDescriptor createDescriptorForDefaultNodeAttribute() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultNodeAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aee1L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "2870455723671203553")).create();
  }
  private static ConceptDescriptor createDescriptorForDefaultPropertyAttribute() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultPropertyAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8ae64L)).super_("jetbrains.mps.lang.core.structure.PropertyAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).parents("jetbrains.mps.lang.core.structure.PropertyAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "2870455723671203428")).create();
  }
  private static ConceptDescriptor createDescriptorForDefaultReferenceAttribute() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.DefaultReferenceAttribute", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aeb7L)).super_("jetbrains.mps.lang.core.structure.LinkAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).parents("jetbrains.mps.lang.core.structure.LinkAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "2870455723671203511")).create();
  }
  private static ConceptDescriptor createDescriptorForDeveloper() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Developer", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L)).super_("testDefaultEditor.structure.AbstractDeveloper").version(1).super_(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).parents("testDefaultEditor.structure.AbstractDeveloper", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xd0768d7cf132948L, "age", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434568")), new ConceptDescriptorBuilder.Prop(0xd0768d7cf13294aL, "sex", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434570")), new ConceptDescriptorBuilder.Prop(0xd0768d7cf13294fL, "lastName", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434575")), new ConceptDescriptorBuilder.Prop(0x5318180a0a3dcaffL, "politicWing", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "5987562135989635839"))).properties("age", "sex", "lastName", "politicWing").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xd0768d7cf132953L, "bestFriend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), true, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434579")), new ConceptDescriptorBuilder.Ref(0xd0768d7cf132955L, "teamHeWants", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L), true, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434581"))).references("bestFriend", "teamHeWants").childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf13be7dL, "friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL), true, true, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431472765")), new ConceptDescriptorBuilder.Link(0x7e427bd3a7dd8f1bL, "someChild", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true, false, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "9097970346226454299"))).children(new String[]{"friend", "someChild"}, new boolean[]{true, false}).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434553")).create();
  }
  private static ConceptDescriptor createDescriptorForDummyMethod() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.DummyMethod", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x535e489f8b62af67L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x535e489f8b62afa3L, "statements", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), true, true, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6007318803034320803"))).children(new String[]{"statements"}, new boolean[]{true}).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6007318803034320743")).create();
  }
  private static ConceptDescriptor createDescriptorForFriend() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xd0768d7cf13be7bL, "friend", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431472763"))).references("friend").sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431472762")).create();
  }
  private static ConceptDescriptor createDescriptorForNotSubstitutableDeveloper() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.NotSubstitutableDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9853b871L)).super_("testDefaultEditor.structure.AbstractDeveloper").version(1).super_(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L)).parents("testDefaultEditor.structure.AbstractDeveloper", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "472942194665437297")).create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Shape", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5a79ee4e776d3c7eL, "name", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956374011006")), new ConceptDescriptorBuilder.Prop(0x5a79ee4e776cb5dcL, "x", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956373976540")), new ConceptDescriptorBuilder.Prop(0x5a79ee4e776cb5deL, "y", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956373976542"))).properties("name", "x", "y").sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "6519503956373976539")).create();
  }
  private static ConceptDescriptor createDescriptorForTeam() {
    return new ConceptDescriptorBuilder("testDefaultEditor.structure.Team", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xd0768d7cf132946L, "isOpenSource", new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434566"))).properties("isOpenSource").childDescriptors(new ConceptDescriptorBuilder.Link(0xd0768d7cf132937L, "developer", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L), true, true, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431434551")), new ConceptDescriptorBuilder.Link(0x6903a6b9853b385L, "abstractDeveloper", MetaIdFactory.conceptId(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L), true, false, false, new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "472942194665436037"))).children(new String[]{"developer", "abstractDeveloper"}, new boolean[]{true, false}).sourceNode(new SNodePointer("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)", "938834323431421842")).create();
  }
}
