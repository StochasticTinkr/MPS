package testDefaultEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractChild = createDescriptorForAbstractChild();
  /*package*/ final ConceptDescriptor myConceptAbstractDeveloper = createDescriptorForAbstractDeveloper();
  /*package*/ final ConceptDescriptor myConceptBaseChild = createDescriptorForBaseChild();
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCompany = createDescriptorForCompany();
  /*package*/ final ConceptDescriptor myConceptConcreteChild = createDescriptorForConcreteChild();
  /*package*/ final ConceptDescriptor myConceptContainer = createDescriptorForContainer();
  /*package*/ final ConceptDescriptor myConceptDefaultNodeAttribute = createDescriptorForDefaultNodeAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultPropertyAttribute = createDescriptorForDefaultPropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultReferenceAttribute = createDescriptorForDefaultReferenceAttribute();
  /*package*/ final ConceptDescriptor myConceptDeveloper = createDescriptorForDeveloper();
  /*package*/ final ConceptDescriptor myConceptDummyMethod = createDescriptorForDummyMethod();
  /*package*/ final ConceptDescriptor myConceptFriend = createDescriptorForFriend();
  /*package*/ final ConceptDescriptor myConceptIConcreteChild = createDescriptorForIConcreteChild();
  /*package*/ final ConceptDescriptor myConceptInterfaceChild = createDescriptorForInterfaceChild();
  /*package*/ final ConceptDescriptor myConceptNotSubstitutableDeveloper = createDescriptorForNotSubstitutableDeveloper();
  /*package*/ final ConceptDescriptor myConceptParent = createDescriptorForParent();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptTeam = createDescriptorForTeam();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractChild, myConceptAbstractDeveloper, myConceptBaseChild, myConceptCanvas, myConceptCompany, myConceptConcreteChild, myConceptContainer, myConceptDefaultNodeAttribute, myConceptDefaultPropertyAttribute, myConceptDefaultReferenceAttribute, myConceptDeveloper, myConceptDummyMethod, myConceptFriend, myConceptIConcreteChild, myConceptInterfaceChild, myConceptNotSubstitutableDeveloper, myConceptParent, myConceptShape, myConceptTeam);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractChild:
        return myConceptAbstractChild;
      case LanguageConceptSwitch.AbstractDeveloper:
        return myConceptAbstractDeveloper;
      case LanguageConceptSwitch.BaseChild:
        return myConceptBaseChild;
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Company:
        return myConceptCompany;
      case LanguageConceptSwitch.ConcreteChild:
        return myConceptConcreteChild;
      case LanguageConceptSwitch.Container:
        return myConceptContainer;
      case LanguageConceptSwitch.DefaultNodeAttribute:
        return myConceptDefaultNodeAttribute;
      case LanguageConceptSwitch.DefaultPropertyAttribute:
        return myConceptDefaultPropertyAttribute;
      case LanguageConceptSwitch.DefaultReferenceAttribute:
        return myConceptDefaultReferenceAttribute;
      case LanguageConceptSwitch.Developer:
        return myConceptDeveloper;
      case LanguageConceptSwitch.DummyMethod:
        return myConceptDummyMethod;
      case LanguageConceptSwitch.Friend:
        return myConceptFriend;
      case LanguageConceptSwitch.IConcreteChild:
        return myConceptIConcreteChild;
      case LanguageConceptSwitch.InterfaceChild:
        return myConceptInterfaceChild;
      case LanguageConceptSwitch.NotSubstitutableDeveloper:
        return myConceptNotSubstitutableDeveloper;
      case LanguageConceptSwitch.Parent:
        return myConceptParent;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Team:
        return myConceptTeam;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "AbstractChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x39b86dbfcead76d6L);
    b.class_(false, true, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/4159194926450308822");
    b.version(2);
    b.property("name", 0x3620abce1450f403L).type(PrimitiveTypeId.STRING).origin("3900306178895311875").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/472942194665384072");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "BaseChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845583L);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/8629363476785288579");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Canvas", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5daL);
    b.class_(false, false, true);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6519503956373976538");
    b.version(2);
    b.aggregate("shapes", 0x5a79ee4e776cb5e1L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL).optional(true).ordered(true).multiple(true).origin("6519503956373976545").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompany() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Company", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f723L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431421731");
    b.version(2);
    b.aggregate("team", 0xd0768d7cf1308bdL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L).optional(true).ordered(true).multiple(true).origin("938834323431426237").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConcreteChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "ConcreteChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f851487L);
    b.class_(false, false, false);
    b.super_("testDefaultEditor.structure.BaseChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845583L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/8629363476785337479");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Container", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845581L);
    b.class_(false, false, true);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/8629363476785288577");
    b.version(2);
    b.aggregate("parent", 0x77c1a85c9f851481L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845582L).optional(true).ordered(true).multiple(false).origin("8629363476785337473").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultNodeAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultNodeAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aee1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203553");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultPropertyAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultPropertyAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8ae64L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.PropertyAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203428");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultReferenceAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultReferenceAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aeb7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.LinkAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203511");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Developer", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L);
    b.class_(false, false, false);
    b.super_("testDefaultEditor.structure.AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431434553");
    b.version(2);
    b.property("age", 0xd0768d7cf132948L).type(PrimitiveTypeId.INTEGER).origin("938834323431434568").done();
    b.property("inSpb", 0xd0768d7cf13294aL).type(PrimitiveTypeId.BOOLEAN).origin("938834323431434570").done();
    b.property("lastName", 0xd0768d7cf13294fL).type(PrimitiveTypeId.STRING).origin("938834323431434575").done();
    b.property("politicWing", 0x5318180a0a3dcaffL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11fc752da8aL)).origin("5987562135989635839").done();
    b.associate("bestFriend", 0xd0768d7cf132953L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(true).origin("938834323431434579").done();
    b.associate("teamHeWants", 0xd0768d7cf132955L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L).optional(true).origin("938834323431434581").done();
    b.aggregate("friend", 0xd0768d7cf13be7dL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL).optional(true).ordered(true).multiple(true).origin("938834323431472765").done();
    b.aggregate("someChild", 0x7e427bd3a7dd8f1bL).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(true).ordered(true).multiple(false).origin("9097970346226454299").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDummyMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DummyMethod", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x535e489f8b62af67L);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6007318803034320743");
    b.version(2);
    b.aggregate("statements", 0x535e489f8b62afa3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(true).origin("6007318803034320803").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFriend() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Friend", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431472762");
    b.version(2);
    b.associate("friend", 0xd0768d7cf13be7bL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(false).origin("938834323431472763").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConcreteChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "IConcreteChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x28d7d3470747a409L);
    b.class_(false, false, false);
    b.parent(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x28d7d3470747a408L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2943053183528182793");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInterfaceChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "InterfaceChild", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x28d7d3470747a408L);
    b.interface_();
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2943053183528182792");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotSubstitutableDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "NotSubstitutableDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9853b871L);
    b.class_(false, false, false);
    b.super_("testDefaultEditor.structure.AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/472942194665437297");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Parent", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845582L);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/8629363476785288578");
    b.version(2);
    b.aggregate("child", 0x77c1a85c9f845587L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x77c1a85c9f845583L).optional(false).ordered(true).multiple(false).origin("8629363476785288583").done();
    b.aggregate("interfaceChild", 0x28d7d3470747ae04L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x28d7d3470747a408L).optional(false).ordered(true).multiple(false).origin("2943053183528185348").done();
    b.aggregate("optionalAbstractChild", 0x39b86dbfcead23bcL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x39b86dbfcead76d6L).optional(true).ordered(true).multiple(false).origin("4159194926450287548").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Shape", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6519503956373976539");
    b.version(2);
    b.property("name", 0x5a79ee4e776d3c7eL).type(PrimitiveTypeId.INTEGER).origin("6519503956374011006").done();
    b.property("x", 0x5a79ee4e776cb5dcL).type(PrimitiveTypeId.INTEGER).origin("6519503956373976540").done();
    b.property("y", 0x5a79ee4e776cb5deL).type(PrimitiveTypeId.INTEGER).origin("6519503956373976542").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTeam() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Team", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431421842");
    b.version(2);
    b.property("isOpenSource", 0xd0768d7cf132946L).type(PrimitiveTypeId.BOOLEAN).origin("938834323431434566").done();
    b.aggregate("developer", 0xd0768d7cf132937L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(true).ordered(true).multiple(true).origin("938834323431434551").done();
    b.aggregate("abstractDeveloper", 0x6903a6b9853b385L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L).optional(true).ordered(true).multiple(false).origin("472942194665436037").done();
    return b.create();
  }
}
