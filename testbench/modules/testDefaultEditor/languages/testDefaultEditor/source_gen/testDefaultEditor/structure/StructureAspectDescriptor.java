package testDefaultEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(12);
  /*package*/ final ConceptDescriptor myConceptAbstractDeveloper = createDescriptorForAbstractDeveloper();
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCompany = createDescriptorForCompany();
  /*package*/ final ConceptDescriptor myConceptDefaultNodeAttribute = createDescriptorForDefaultNodeAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultPropertyAttribute = createDescriptorForDefaultPropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptDefaultReferenceAttribute = createDescriptorForDefaultReferenceAttribute();
  /*package*/ final ConceptDescriptor myConceptDeveloper = createDescriptorForDeveloper();
  /*package*/ final ConceptDescriptor myConceptDummyMethod = createDescriptorForDummyMethod();
  /*package*/ final ConceptDescriptor myConceptFriend = createDescriptorForFriend();
  /*package*/ final ConceptDescriptor myConceptNotSubstitutableDeveloper = createDescriptorForNotSubstitutableDeveloper();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptTeam = createDescriptorForTeam();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractDeveloper.getId(), 0);
    myIndexMap.put(myConceptCanvas.getId(), 1);
    myIndexMap.put(myConceptCompany.getId(), 2);
    myIndexMap.put(myConceptDefaultNodeAttribute.getId(), 3);
    myIndexMap.put(myConceptDefaultPropertyAttribute.getId(), 4);
    myIndexMap.put(myConceptDefaultReferenceAttribute.getId(), 5);
    myIndexMap.put(myConceptDeveloper.getId(), 6);
    myIndexMap.put(myConceptDummyMethod.getId(), 7);
    myIndexMap.put(myConceptFriend.getId(), 8);
    myIndexMap.put(myConceptNotSubstitutableDeveloper.getId(), 9);
    myIndexMap.put(myConceptShape.getId(), 10);
    myIndexMap.put(myConceptTeam.getId(), 11);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDeveloper, myConceptCanvas, myConceptCompany, myConceptDefaultNodeAttribute, myConceptDefaultPropertyAttribute, myConceptDefaultReferenceAttribute, myConceptDeveloper, myConceptDummyMethod, myConceptFriend, myConceptNotSubstitutableDeveloper, myConceptShape, myConceptTeam);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractDeveloper;
      case 1:
        return myConceptCanvas;
      case 2:
        return myConceptCompany;
      case 3:
        return myConceptDefaultNodeAttribute;
      case 4:
        return myConceptDefaultPropertyAttribute;
      case 5:
        return myConceptDefaultReferenceAttribute;
      case 6:
        return myConceptDeveloper;
      case 7:
        return myConceptDummyMethod;
      case 8:
        return myConceptFriend;
      case 9:
        return myConceptNotSubstitutableDeveloper;
      case 10:
        return myConceptShape;
      case 11:
        return myConceptTeam;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/472942194665384072");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Canvas", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5daL);
    b.class_(false, false, true);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6519503956373976538");
    b.aggregate("shapes", 0x5a79ee4e776cb5e1L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL).optional(true).ordered(true).multiple(true).origin("6519503956373976545").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompany() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Company", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f723L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431421731");
    b.aggregate("team", 0xd0768d7cf1308bdL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L).optional(true).ordered(true).multiple(true).origin("938834323431426237").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultNodeAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultNodeAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aee1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203553");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultPropertyAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultPropertyAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8ae64L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.PropertyAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203428");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultReferenceAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DefaultReferenceAttribute", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x27d5e845b8e8aeb7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.LinkAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/2870455723671203511");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Developer", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L);
    b.class_(false, false, false);
    b.super_("testDefaultEditor.structure.AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431434553");
    b.prop("age", 0xd0768d7cf132948L, "938834323431434568");
    b.prop("sex", 0xd0768d7cf13294aL, "938834323431434570");
    b.prop("lastName", 0xd0768d7cf13294fL, "938834323431434575");
    b.prop("politicWing", 0x5318180a0a3dcaffL, "5987562135989635839");
    b.associate("bestFriend", 0xd0768d7cf132953L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(true).origin("938834323431434579").done();
    b.associate("teamHeWants", 0xd0768d7cf132955L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L).optional(true).origin("938834323431434581").done();
    b.aggregate("friend", 0xd0768d7cf13be7dL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL).optional(true).ordered(true).multiple(true).origin("938834323431472765").done();
    b.aggregate("someChild", 0x7e427bd3a7dd8f1bL).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(true).ordered(true).multiple(false).origin("9097970346226454299").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDummyMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "DummyMethod", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x535e489f8b62af67L);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6007318803034320743");
    b.aggregate("statements", 0x535e489f8b62afa3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(true).origin("6007318803034320803").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFriend() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Friend", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf13be7aL);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431472762");
    b.associate("friend", 0xd0768d7cf13be7bL).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(false).origin("938834323431472763").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotSubstitutableDeveloper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "NotSubstitutableDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9853b871L);
    b.class_(false, false, false);
    b.super_("testDefaultEditor.structure.AbstractDeveloper", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/472942194665437297");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Shape", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x5a79ee4e776cb5dbL);
    b.class_(false, false, false);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/6519503956373976539");
    b.prop("name", 0x5a79ee4e776d3c7eL, "6519503956374011006");
    b.prop("x", 0x5a79ee4e776cb5dcL, "6519503956373976540");
    b.prop("y", 0x5a79ee4e776cb5deL, "6519503956373976542");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTeam() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testDefaultEditor", "Team", 0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf12f792L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:489407ac-4a9d-4295-9ef4-b6cd6edeeea3(testDefaultEditor.structure)/938834323431421842");
    b.prop("isOpenSource", 0xd0768d7cf132946L, "938834323431434566");
    b.aggregate("developer", 0xd0768d7cf132937L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0xd0768d7cf132939L).optional(true).ordered(true).multiple(true).origin("938834323431434551").done();
    b.aggregate("abstractDeveloper", 0x6903a6b9853b385L).target(0xb5734616c4b04639L, 0x9c6af3a1cf5dc4dbL, 0x6903a6b9852e888L).optional(true).ordered(true).multiple(false).origin("472942194665436037").done();
    return b.create();
  }
}
