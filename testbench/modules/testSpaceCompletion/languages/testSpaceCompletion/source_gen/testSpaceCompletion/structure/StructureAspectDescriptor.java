package testSpaceCompletion.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptABC = createDescriptorForABC();
  /*package*/ final ConceptDescriptor myConceptABCDE = createDescriptorForABCDE();
  /*package*/ final ConceptDescriptor myConceptABCDEF = createDescriptorForABCDEF();
  /*package*/ final ConceptDescriptor myConceptABCDEG = createDescriptorForABCDEG();
  /*package*/ final ConceptDescriptor myConceptABCEEG = createDescriptorForABCEEG();
  /*package*/ final ConceptDescriptor myConceptBAC = createDescriptorForBAC();
  /*package*/ final ConceptDescriptor myConceptBCA = createDescriptorForBCA();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptABC, myConceptABCDE, myConceptABCDEF, myConceptABCDEG, myConceptABCEEG, myConceptBAC, myConceptBCA);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ABC:
        return myConceptABC;
      case LanguageConceptSwitch.ABCDE:
        return myConceptABCDE;
      case LanguageConceptSwitch.ABCDEF:
        return myConceptABCDEF;
      case LanguageConceptSwitch.ABCDEG:
        return myConceptABCDEG;
      case LanguageConceptSwitch.ABCEEG:
        return myConceptABCEEG;
      case LanguageConceptSwitch.BAC:
        return myConceptBAC;
      case LanguageConceptSwitch.BCA:
        return myConceptBCA;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForABC() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "ABC", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6410e71L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/3586175963764952689");
    b.version(2);
    b.alias("abc");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForABCDE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "ABCDE", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e641174cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/3586175963764954956");
    b.version(2);
    b.alias("abc de");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForABCDEF() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "ABCDEF", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6411758L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/3586175963764954968");
    b.version(2);
    b.alias("abc de f");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForABCDEG() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "ABCDEG", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6411754L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/3586175963764954964");
    b.version(2);
    b.alias("abc de g");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForABCEEG() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "ABCEEG", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x6a37442ca9969678L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/7653661050353915512");
    b.version(2);
    b.alias("abc Ee G");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBAC() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "BAC", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x7bf89c7591b82d85L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/8933061889659252101");
    b.version(2);
    b.alias("bac");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBCA() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("testSpaceCompletion", "BCA", 0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x7bf89c7591b848d3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)/8933061889659259091");
    b.version(2);
    b.alias("bca");
    return b.create();
  }
}
