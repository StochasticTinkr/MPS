package testSpaceCompletion.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(7);
  /*package*/ final ConceptDescriptor myConceptABC = new ConceptDescriptorBuilder("testSpaceCompletion.structure.ABC", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6410e71L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("abc", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "3586175963764952689")).create();
  /*package*/ final ConceptDescriptor myConceptABCDE = new ConceptDescriptorBuilder("testSpaceCompletion.structure.ABCDE", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e641174cL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("abc de", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "3586175963764954956")).create();
  /*package*/ final ConceptDescriptor myConceptABCDEF = new ConceptDescriptorBuilder("testSpaceCompletion.structure.ABCDEF", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6411758L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("abc de f", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "3586175963764954968")).create();
  /*package*/ final ConceptDescriptor myConceptABCDEG = new ConceptDescriptorBuilder("testSpaceCompletion.structure.ABCDEG", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x31c4a809e6411754L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("abc de g", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "3586175963764954964")).create();
  /*package*/ final ConceptDescriptor myConceptABCEEG = new ConceptDescriptorBuilder("testSpaceCompletion.structure.ABCEEG", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x6a37442ca9969678L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("abc Ee G", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "7653661050353915512")).create();
  /*package*/ final ConceptDescriptor myConceptBAC = new ConceptDescriptorBuilder("testSpaceCompletion.structure.BAC", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x7bf89c7591b82d85L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("bac", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "8933061889659252101")).create();
  /*package*/ final ConceptDescriptor myConceptBCA = new ConceptDescriptorBuilder("testSpaceCompletion.structure.BCA", MetaIdFactory.conceptId(0x4dd3c558f0fc4807L, 0xbade5d6bcad6b3f1L, 0x7bf89c7591b848d3L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("bca", "").sourceNode(new SNodePointer("r:7d1e02c6-b403-4705-bcbd-976df276fcbf(testSpaceCompletion.structure)", "8933061889659259091")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptABC.getId(), 0);
    myIndexMap.put(myConceptABCDE.getId(), 1);
    myIndexMap.put(myConceptABCDEF.getId(), 2);
    myIndexMap.put(myConceptABCDEG.getId(), 3);
    myIndexMap.put(myConceptABCEEG.getId(), 4);
    myIndexMap.put(myConceptBAC.getId(), 5);
    myIndexMap.put(myConceptBCA.getId(), 6);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptABC, myConceptABCDE, myConceptABCDEF, myConceptABCDEG, myConceptABCEEG, myConceptBAC, myConceptBCA);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptABC;
      case 1:
        return myConceptABCDE;
      case 2:
        return myConceptABCDEF;
      case 3:
        return myConceptABCDEG;
      case 4:
        return myConceptABCEEG;
      case 5:
        return myConceptBAC;
      case 6:
        return myConceptBCA;
      default:
        throw new IllegalStateException();
    }
  }
}
