package testSpaceCompletion.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ABC = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ABCDE = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ABCDEF = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ABCDEG = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ABCEEG = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BAC = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BCA = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ABC:
        return props_ABC;
      case LanguageConceptSwitch.ABCDE:
        return props_ABCDE;
      case LanguageConceptSwitch.ABCDEF:
        return props_ABCDEF;
      case LanguageConceptSwitch.ABCDEG:
        return props_ABCDEG;
      case LanguageConceptSwitch.ABCEEG:
        return props_ABCEEG;
      case LanguageConceptSwitch.BAC:
        return props_BAC;
      case LanguageConceptSwitch.BCA:
        return props_BCA;
    }
    return null;
  }
}
