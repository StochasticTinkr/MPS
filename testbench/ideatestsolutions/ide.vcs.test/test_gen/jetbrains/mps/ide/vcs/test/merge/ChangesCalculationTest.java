package jetbrains.mps.ide.vcs.test.merge;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNodeId;
import org.junit.BeforeClass;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SNodePointer;
import org.junit.Test;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.vcs.diff.changes.DeleteRootChange;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.vcs.diff.changes.AddRootChange;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.vcs.diff.changes.SetPropertyChange;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.vcs.diff.changes.SetReferenceChange;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.vcs.diff.changes.NodeGroupChange;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import jetbrains.mps.vcs.diff.changes.ModelChange;
import junit.framework.Assert;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.editor.runtime.impl.cellActions.CommentUtil;
import jetbrains.mps.vcs.diff.ChangeSetImpl;
import jetbrains.mps.persistence.PersistenceUtil;
import jetbrains.mps.vcs.diff.ModelChangeSet;
import jetbrains.mps.vcs.diff.ChangeSetBuilder;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SReference;

/**
 * These tests check correctness of diff algorithm
 * todo: add tests for model metadata changes
 */
public class ChangesCalculationTest extends ChangesTestBase {
  private static SNodeId ROOT_ID;

  @BeforeClass
  public static void init2() {
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        ROOT_ID = new SNodePointer("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705").getNodeId();
      }
    });
  }

  @Test
  public void testRemoveRoot() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        SNodeOperations.deleteNode(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"));
      }
    }, new DeleteRootChange(createFakeChangeSet(), ROOT_ID));
  }

  @Test
  public void testAddRoot() {
    final SNodeId id = new jetbrains.mps.smodel.SNodeId.Regular(1);
    testDiffCorrectness(new Runnable() {
      public void run() {
        SNode newRoot = createClassConcept_7w1430_a0a0a0b0g();
        ((jetbrains.mps.smodel.SNode) newRoot).setId(id);
        SModelOperations.addRootNode(((SModel) getTestModel()), newRoot);
        assert newRoot.getNodeId().equals(new jetbrains.mps.smodel.SNodeId.Regular(1)) : "this can't happen in universe's lifetime";
      }
    }, new AddRootChange(createFakeChangeSet(), id));
  }

  @Test
  public void testPropertyChange() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        SPropertyOperations.assign(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "RenamedRoot");
      }
    }, new SetPropertyChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "RenamedRoot"));
  }

  @Test
  public void changeReference() {
    final Wrappers._T<SetReferenceChange> change = new Wrappers._T<SetReferenceChange>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        change.value = new SetReferenceChange(createFakeChangeSet(), SLinkOperations.getTarget(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "8885850892994216610"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")).getNodeId(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), getTestModel().getReference(), ROOT_ID, "Root");
      }
    });
    testDiffCorrectness(new Runnable() {
      public void run() {
        SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "8885850892994216610"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"));
      }
    }, change.value);
  }

  @Test
  public void addChild() {
    testDiffCorrectness(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        return SLinkOperations.setTarget(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, "superclass"), _quotation_createNode_7w1430_a0a0a0a0m());
      }
    }), new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, "superclass"), 0, 0, 0, 1));
  }
  @Test
  public void addNodeAttribute() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        AttributeOperations.createAndSetAttrbiute(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61e234c9L, "jetbrains.mps.lang.core.structure.ReviewMigration")), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61e234c9L, "jetbrains.mps.lang.core.structure.ReviewMigration"));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, 0x47bf8397520e5942L, "smodelAttribute"), 0, 0, 0, 1));
  }
  @Test
  public void addChildAttribute() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        ChangesTestUtil.addCommentedMethod(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"))).last());
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 3, 3, 3, 4));
  }

  @Test
  public void addChildAttributeAndCheckItIsAboutRole() {
    List<ModelChange> changes = getRealChanges(new Runnable() {
      public void run() {
        ChangesTestUtil.addCommentedMethod(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"))).last());
      }
    });
    Assert.assertTrue(ListSequence.fromList(changes).count() == 1 && ListSequence.fromList(changes).first() instanceof NodeGroupChange && ((NodeGroupChange) ListSequence.fromList(changes).first()).isAbout(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member")));

  }

  @Test
  public void removeChild() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        SNodeOperations.deleteNode(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "8885850892994216610"));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 0, 1, 0, 0));
  }
  @Test
  public void removeChildAttribute() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        SNodeOperations.deleteNode(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5297043982019668093")), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute")));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 1, 2, 1, 1));
  }
  @Test
  public void replaceChild() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        SNodeOperations.deleteNode(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "8885850892994216610"));
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"))).insertElement(0, SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1458378889e6d166L, "jetbrains.mps.baseLanguage.structure.PlaceholderMember")));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 0, 1, 0, 1));
  }
  @Test
  public void commentChild() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        CommentUtil.commentOut(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "8885850892994216610"));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 0, 1, 0, 1));
  }
  @Test
  public void uncommentChild() {
    testDiffCorrectness(new Runnable() {
      public void run() {
        ChangesTestUtil.uncommentFirstCommentedMethod(SNodeOperations.getNode("r:296ba97d-4b26-4d06-be61-297d86180cce(jetbrains.mps.ide.vcs.test.testModel)", "5876208808348821705"));
      }
    }, new NodeGroupChange(createFakeChangeSet(), ROOT_ID, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), 1, 2, 1, 2));
  }

  @Test
  public void moveChild() {
    // todo? 
  }

  private ChangeSetImpl createFakeChangeSet() {
    return new ChangeSetImpl(getTestModel(), getTestModel());
  }

  private void testDiffCorrectness(Runnable todo, ModelChange... expectedChanges) {
    List<ModelChange> realChanges = getRealChanges(todo);
    org.junit.Assert.assertEquals(ListSequence.fromList(realChanges).count(), expectedChanges.length);
    for (int i = 0; i < expectedChanges.length; i++) {
      ModelChange real = ListSequence.fromList(realChanges).getElement(i);
      ModelChange expected = expectedChanges[i];
      org.junit.Assert.assertEquals(real.toString(), expected.toString());
    }
  }

  private List<ModelChange> getRealChanges(Runnable todo) {
    final Wrappers._T<SModel> modelCopy = new Wrappers._T<SModel>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        modelCopy.value = PersistenceUtil.loadModel(PersistenceUtil.saveModel(getTestModel(), getDefaultExt()));
      }
    });
    makeChangeAndWait(todo);

    final Wrappers._T<ModelChangeSet> diff = new Wrappers._T<ModelChangeSet>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        diff.value = ChangeSetBuilder.buildChangeSet(modelCopy.value, getTestModel());
      }
    });
    return diff.value.getModelChanges();
  }
  private static SNode createClassConcept_7w1430_a0a0a0b0g() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept"), null, null, false);
    n1.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "NewRoot");
    return n1;
  }
  private static SNode _quotation_createNode_7w1430_a0a0a0a0m() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x101de48bf9eL, "ClassifierType"), null, null, false);
    quotedNode_1.setReference(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), SReference.create(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), quotedNode_1, facade.createModelReference("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)"), facade.createNodeId("~Object")));
    return quotedNode_1;
  }
}
