package jetbrains.mps.lang.smodel.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.util.Computable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.editor.menus.ConceptMenusPart;
import java.util.Collection;
import jetbrains.mps.smodel.ConceptDescendantsCache;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class SConceptOperation_SubstituteMenu extends SubstituteMenuBase {
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a());
    return result;
  }
  public class SubstituteMenuPart_Group_gutaar_a extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
    private boolean isParentDot;
    @Override
    protected void initialize(SubstituteMenuContext _context) {
      super.initialize(_context);
      isParentDot = new Computable<Boolean>() {
        public Boolean compute() {
          return SNodeOperations.isInstanceOf(_context.getParentNode(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression"));
        }
      }.compute();
    }

    @Override
    protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
      return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a.SubstituteMenuPart_Group_gutaar_a0(), new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a.SubstituteMenuPart_Group_gutaar_b0());
    }
    public class SubstituteMenuPart_Group_gutaar_a0 extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
      @Override
      protected boolean isApplicable(SubstituteMenuContext _context) {
        return isParentDot;
      }

      @Override
      protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
        return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a.SubstituteMenuPart_Group_gutaar_a0.SubstituteMenuPart_Group_gutaar_a0a());
      }
      public class SubstituteMenuPart_Group_gutaar_a0a extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
        @Override
        protected boolean isApplicable(SubstituteMenuContext _context) {
          SNode leftExpression = SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, "operand"));
          SNode leftType = TypeChecker.getInstance().getTypeOf(leftExpression);
          return TypeChecker.getInstance().getSubtypingManager().isSubtype(leftType, _quotation_createNode_gutaar_b0a2a0a0a(), false);
        }

        @Override
        protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
          return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a.SubstituteMenuPart_Group_gutaar_a0.SubstituteMenuPart_Group_gutaar_a0a.SubstituteMenuPart_Subconcepts_gutaar_a0a0());
        }
        public class SubstituteMenuPart_Subconcepts_gutaar_a0a0 extends ConceptMenusPart<SubstituteMenuItem, SubstituteMenuContext> {
          protected Collection getConcepts(final SubstituteMenuContext _context) {
            return ConceptDescendantsCache.getInstance().getDirectDescendants(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x5f5952af8843faf9L, "jetbrains.mps.lang.smodel.structure.SConceptOperation"));
          }
          @Override
          protected Collection<SubstituteMenuItem> createItemsForConcept(SubstituteMenuContext context, SAbstractConcept concept) {
            return context.createItems(new DefaultSubstituteMenuLookup(LanguageRegistry.getInstance(context.getEditorContext().getRepository()), concept));
          }
        }
      }
    }
    public class SubstituteMenuPart_Group_gutaar_b0 extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
      @Override
      protected boolean isApplicable(SubstituteMenuContext _context) {
        return !(isParentDot);
      }

      @Override
      protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
        return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new SConceptOperation_SubstituteMenu.SubstituteMenuPart_Group_gutaar_a.SubstituteMenuPart_Group_gutaar_b0.SubstituteMenuPart_Subconcepts_gutaar_a1a());
      }
      public class SubstituteMenuPart_Subconcepts_gutaar_a1a extends ConceptMenusPart<SubstituteMenuItem, SubstituteMenuContext> {
        protected Collection getConcepts(final SubstituteMenuContext _context) {
          return ConceptDescendantsCache.getInstance().getDirectDescendants(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x5f5952af8843faf9L, "jetbrains.mps.lang.smodel.structure.SConceptOperation"));
        }
        @Override
        protected Collection<SubstituteMenuItem> createItemsForConcept(SubstituteMenuContext context, SAbstractConcept concept) {
          return context.createItems(new DefaultSubstituteMenuLookup(LanguageRegistry.getInstance(context.getEditorContext().getRepository()), concept));
        }
      }
    }
  }
  private static SNode _quotation_createNode_gutaar_b0a2a0a0a() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, "jetbrains.mps.lang.smodel"), 0x5cab42cd97571ceeL, "SConceptType"), null, null, false);
    return quotedNode_1;
  }
}
