package jetbrains.mps.lang.smodel.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Arrays;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "jetbrains.mps.lang.smodel";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (Arrays.binarySearch(stringSwitchCases_tpto26_a0a0a0c, concept.getName())) {
        case 0:
          return Collections.<NodeFactory>singletonList(new ConceptRefFactories.NodeFactory_3634671212091137140());
        case 1:
          return Collections.<NodeFactory>singletonList(new ConceptRefFactories.NodeFactory_2356801005208152816());
        case 2:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_1203553739270());
        case 3:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_1203553726914());
        case 4:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829253());
        case 5:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829632());
        case 6:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829589());
        case 7:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829316());
        case 8:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_1171415364777());
        case 9:
          return Collections.<NodeFactory>singletonList(new Node_GetChildrenAndChildAttributesOperation_Factory.NodeFactory_7457491784609238794());
        case 10:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_1207248813874());
        case 11:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829413());
        case 12:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829507());
        case 13:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3341893916018829548());
        case 14:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_3602058458308809797());
        case 15:
          return Collections.<NodeFactory>singletonList(new SModelLang_factories.NodeFactory_1205353787833());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

  @Override
  public boolean hasBuilders() {
    return false;
  }
  private static String[] stringSwitchCases_tpto26_a0a0a0c = new String[]{"ConceptIdRefExpression", "ConceptRefExpression", "Concept_IsSubConceptOfOperation", "Concept_IsSuperConceptOfOperation", "Concept_NewInstance", "LinkList_AddNewChildOperation", "Link_SetNewChildOperation", "Model_CreateNewNodeOperation", "Node_GetAncestorOperation", "Node_GetChildrenAndChildAttributesOperation", "Node_GetDescendantsOperation", "Node_InsertNewNextSiblingOperation", "Node_InsertNewPrevSiblingOperation", "Node_ReplaceWithNewOperation", "SNodeCreator", "SNodeListType"};
}
