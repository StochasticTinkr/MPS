package jetbrains.mps.lang.smodel.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.openapi.editor.style.StyleRegistry;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;

/*package*/ class Node_GetAncestorOperation_InspectorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public Node_GetAncestorOperation_InspectorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_4l84js_a();
  }

  private EditorCell createCollection_4l84js_a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_4l84js_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    editorCell.addEditorCell(createConstant_4l84js_a0());
    editorCell.addEditorCell(createConstant_4l84js_b0());
    editorCell.addEditorCell(createConstant_4l84js_c0());
    editorCell.addEditorCell(createConstant_4l84js_d0());
    editorCell.addEditorCell(createConstant_4l84js_e0());
    editorCell.addEditorCell(createCollection_4l84js_f0());
    return editorCell;
  }
  private EditorCell createConstant_4l84js_a0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "The 'ancestor' operation");
    editorCell.setCellId("Constant_4l84js_a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray)));
    style.set(StyleAttributes.TEXT_BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray));
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_b0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "");
    editorCell.setCellId("Constant_4l84js_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Returns ancestor node (if no parameters returns direct parent)");
    editorCell.setCellId("Constant_4l84js_c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "");
    editorCell.setCellId("Constant_4l84js_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_e0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Optional parameters:");
    editorCell.setCellId("Constant_4l84js_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_4l84js_f0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_4l84js_f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createConstant_4l84js_a5a());
    editorCell.addEditorCell(createConstant_4l84js_b5a());
    editorCell.addEditorCell(createConstant_4l84js_c5a());
    editorCell.addEditorCell(createConstant_4l84js_d5a());
    editorCell.addEditorCell(createConstant_4l84js_e5a());
    editorCell.addEditorCell(createConstant_4l84js_f5a());
    editorCell.addEditorCell(createConstant_4l84js_g5a());
    editorCell.addEditorCell(createConstant_4l84js_h5a());
    return editorCell;
  }
  private EditorCell createConstant_4l84js_a5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "root");
    editorCell.setCellId("Constant_4l84js_a5a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_b5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "get top ancestor");
    editorCell.setCellId("Constant_4l84js_b5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_c5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "concept");
    editorCell.setCellId("Constant_4l84js_c5a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_d5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "get ancestor which is instance of concept");
    editorCell.setCellId("Constant_4l84js_d5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_e5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "concept in");
    editorCell.setCellId("Constant_4l84js_e5a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_f5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "get ancestor which is instance of one of concepts");
    editorCell.setCellId("Constant_4l84js_f5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_g5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "+");
    editorCell.setCellId("Constant_4l84js_g5a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_4l84js_h5a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "return current node if it meets the requirements");
    editorCell.setCellId("Constant_4l84js_h5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
}
