package jetbrains.mps.lang.editor.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseConstraintsAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class ConstraintsAspectDescriptor extends BaseConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  @Override
  public ConstraintsDescriptor getConstraints(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0c = concept;
    switch (index_2qnle6_a0c.index(cncpt_a0c)) {
      case 0:
        return new AbstractComponent_Constraints();
      case 1:
        return new AttributeStyleClassItem_Constraints();
      case 2:
        return new CellActionMapDeclaration_Constraints();
      case 3:
        return new CellIdReferenceSelector_Constraints();
      case 4:
        return new CellKeyMapDeclaration_Constraints();
      case 5:
        return new CellMenuComponent_Constraints();
      case 6:
        return new CellMenuComponentFeature_Link_Constraints();
      case 7:
        return new CellMenuComponentFeature_Property_Constraints();
      case 8:
        return new CellMenuPart_ReplaceNode_CustomNodeConcept_Constraints();
      case 9:
        return new CellModel_Component_Constraints();
      case 10:
        return new CellModel_NextEditor_Constraints();
      case 11:
        return new CellModel_Property_Constraints();
      case 12:
        return new CellModel_RefCell_Constraints();
      case 13:
        return new CellModel_RefNode_Constraints();
      case 14:
        return new CellModel_RefNodeList_Constraints();
      case 15:
        return new CellModel_ReferencePresentation_Constraints();
      case 16:
        return new CellModel_TransactionalProperty_Constraints();
      case 17:
        return new CellModel_WithRole_Constraints();
      case 18:
        return new ConceptEditorDeclaration_Constraints();
      case 19:
        return new ConceptEditorHintDeclaration_Constraints();
      case 20:
        return new ContextVariable_Constraints();
      case 21:
        return new EditorCellModel_Constraints();
      case 22:
        return new EditorComponentDeclaration_Constraints();
      case 23:
        return new IMenuPartParameterized_Constraints();
      case 24:
        return new IMenuReference_Default_Constraints();
      case 25:
        return new IMenu_Default_Constraints();
      case 26:
        return new IMenu_Named_Constraints();
      case 27:
        return new IStyle_Constraints();
      case 28:
        return new InlineStyleDeclaration_Constraints();
      case 29:
        return new NavigatableReferenceStyleClassItem_Constraints();
      case 30:
        return new PropertyDeclarationCellSelector_Constraints();
      case 31:
        return new RGBColor_Constraints();
      case 32:
        return new StyleSheet_Constraints();
      case 33:
        return new SubstituteMenu_Constraints();
      case 34:
        return new SubstituteMenuItem_AbstractOperation_Constraints();
      case 35:
        return new SubstituteMenuPart_ReferenceScope_Constraints();
      case 36:
        return new SubstituteMenuReference_DefaultWithFunction_Constraints();
      case 37:
        return new SubstituteMenuReference_Named_Constraints();
      case 38:
        return new SubstituteMenuVariableReference_Constraints();
      case 39:
        return new SubstituteMenu_Contribution_Constraints();
      case 40:
        return new SubstituteMenu_Default_Constraints();
      case 41:
        return new SubstituteMenu_Named_Constraints();
      case 42:
        return new TransformationMenu_Constraints();
      case 43:
        return new TransformationMenuContribution_Constraints();
      case 44:
        return new TransformationMenuPart_IncludeSubstituteMenu_Constraints();
      case 45:
        return new TransformationMenuReference_Named_Constraints();
      case 46:
        return new TransformationMenuVariableReference_Constraints();
      case 47:
        return new TransformationMenu_Default_Constraints();
      case 48:
        return new TransformationMenu_Named_Constraints();
      default:
    }
    return new BaseConstraintsDescriptor(concept);
  }
  private static final ConceptSwitchIndex index_2qnle6_a0c = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7df344a9L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3744c0f9eae0a402L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10951978cfeL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3c0028bb8556f621L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfbc216b31bL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d702058L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d86ed9bL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d811428L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f3a50ec74L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb35c96896L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7456aec153c7f5a2L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb02612eL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfd52a2c922L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb05cdc7L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb0ad38eL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x8ace515f0191e6eL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b35f4f515L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10964446123L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x527faacef50d095eL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e119f99L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eafb9a39L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb35c2bb47L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x169efbc9a9002d0fL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x169efbc9a90a41c1L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x169efbc9a9048c47L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x169efbc9a9048c46L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7e9b10ab1f5847b8L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11f1d6594edL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11de23fdb1fL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3e970bbc3009e3a3L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d52e2b1a0L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b151743L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1bc2c2df999a0078L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3244dde8e150cff4L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x74f6a88f89419d55L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x71f19593ac95dee9L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5480a271c0d1df1fL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x780e6728403987eL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2de9c932f4e5cb53L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2de9c932f4e5ab84L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x33e0267905fba6fdL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0ac3ebaL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0c10ff0L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a77f9c87420a6caL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5d3b34577b3cff09L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x201faaffc29bac4fL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efce1L), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0ac4ee8L)).seal();
}
