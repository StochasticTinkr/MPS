package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import java.util.Arrays;

public class EnumerationDescriptor__ImageAlignment_Enum extends EnumerationDescriptorBase {

  public EnumerationDescriptor__ImageAlignment_Enum() {
    super(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1095e10780bL, "_ImageAlignment_Enum", "r:00000000-0000-4000-0000-011c8959029e(jetbrains.mps.lang.editor.structure)/1139744471051", PrimitiveTypeId.STRING);
  }

  private final EnumerationDescriptor.MemberDescriptor VALUE_justify_0 = new EnumerationDescriptor.MemberDescriptor("justify", "alignmentJustify", "r:00000000-0000-4000-0000-011c8959029e(jetbrains.mps.lang.editor.structure)/1139744471411", "alignmentJustify");
  private final EnumerationDescriptor.MemberDescriptor VALUE_center_0 = new EnumerationDescriptor.MemberDescriptor("center", "alignmentCenter", "r:00000000-0000-4000-0000-011c8959029e(jetbrains.mps.lang.editor.structure)/1139744531598", "alignmentCenter");
  private final EnumerationDescriptor.MemberDescriptor VALUE_tile_0 = new EnumerationDescriptor.MemberDescriptor("tile", "alignmentTile", "r:00000000-0000-4000-0000-011c8959029e(jetbrains.mps.lang.editor.structure)/1139744545740", "alignmentTile");

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return VALUE_justify_0;
  }

  @NotNull
  @Override
  public Collection<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return Arrays.asList(VALUE_justify_0, VALUE_center_0, VALUE_tile_0);
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String string) {
    if (string == null) {
      return null;
    }
    switch (string) {
      case "justify":
        return VALUE_justify_0;
      case "center":
        return VALUE_center_0;
      case "tile":
        return VALUE_tile_0;
    }
    return null;
  }
}
