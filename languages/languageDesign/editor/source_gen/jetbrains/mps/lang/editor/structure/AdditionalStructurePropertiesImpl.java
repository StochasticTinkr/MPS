package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseAdditionalStructureProperties;
import jetbrains.mps.smodel.runtime.AdditionalConceptProperties;
import jetbrains.mps.smodel.runtime.ConceptPropsBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;

public class AdditionalStructurePropertiesImpl extends BaseAdditionalStructureProperties {
  private final AdditionalConceptProperties props_AbstractCellSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AbstractComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AbstractPaddingStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AbstractStyledTextOperation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AppendTextOperation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ApplyStyleClass = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ApplyStyleClassCondition = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AttributeStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_AutoDeletableStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BackgroundColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BaseEditorComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BaseLineCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BooleanStyleSheetItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BracketColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CaretPositionParameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellActionMapDeclaration = new ConceptPropsBuilder().icon("actionMap.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_CellActionMapItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellActionMap_CanExecuteFunction = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellActionMap_ExecuteFunction = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellActionMap_FunctionParm_selectedNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellIdReferenceSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMapDeclaration = new ConceptPropsBuilder().icon("keyMap.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_CellKeyMapItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMapKeystroke = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMap_AbstractFunction = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMap_ExecuteFunction = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMap_FunctionParm_selectedNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMap_FunctionParm_selectedNodes = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellKeyMap_IsApplicableFunction = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Flow = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Horizontal = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Indent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Indent_Old = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_CellLayout_Superscript = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Table = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_Vertical = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellLayout_VerticalGrid = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuComponent = new ConceptPropsBuilder().icon("menuComponent.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_CellMenuComponentFeature = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuComponentFeature_Link = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuComponentFeature_Property = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuDescriptor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Abstract = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_AbstractGroup = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_AbstractGroup_DescriptionText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_AbstractGroup_MatchingText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_AbstractGroup_Query = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_AbstractGroup_parameterObject = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Abstract_editedNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ApplySideTransforms = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_CellMenuComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Generic_Group = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Generic_Group_Handler = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Generic_Item = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_Generic_Item_Handler = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_PropertyPostfixHints = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_PropertyPostfixHints_GetPostfixes = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_PropertyValues = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_PropertyValues_GetValues = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReferentPrimary = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChildPrimary = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_CustomChildConcept = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_CustomChildConcept_Query = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_Group = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_Group_Create = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_Group_Query = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_Item = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_Item_Create = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_currentChild = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceChild_defaultConceptOfChild = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceNode_CustomNodeConcept = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceNode_Group = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellMenuPart_ReplaceNode_Group_Create = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_AbstractLabel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Alternation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_AttributedLinkCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_AttributedNodeCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_AttributedPropertyCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Block = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_BlockEnd = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_BlockStart = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Collection = new ConceptPropsBuilder().deprecated(MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0xf9eaff2519L, "vertical"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0xf9eaff251aL, "gridLayout"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0x1094a893c4dL, "usesBraces"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0x10e3893660fL, "usesFolding"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0x569b712fbc6ece21L, "collapseByDefault")).create();
  private final AdditionalConceptProperties props_CellModel_Component = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Constant = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_ContextAssistant = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Custom = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Empty = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Error = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Image = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Indent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_JComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_ListWithRole = new ConceptPropsBuilder().deprecated(MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x1098c8e02faL, "vertical"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x1098c8e02fbL, "gridLayout"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x1098c8e02fcL, "usesBraces"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x10e3892b1d5L, "usesFolding"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x1098c8e02fdL, "separatorText"), MetaAdapterFactory.getProperty(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, 0x10d360ae180L, "separatorLayoutConstraint")).create();
  private final AdditionalConceptProperties props_CellModel_ModelAccess = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_NextEditor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_NonEmptyProperty = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_Property = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_ReadOnlyModelAccessor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_RefCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_RefNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_RefNodeList = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_ReferencePresentation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_TransactionalProperty = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_URL = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_CellModel_WithRole = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptEditorContextHints = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptEditorDeclaration = new ConceptPropsBuilder().icon("editor.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_ConceptEditorHintDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptEditorHintDeclarationReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptEditorHintDeclarationReferenceExpression = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_StyledText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_childNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_editorContext = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_nextNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_node = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_oldText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_parameterObject = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_prevNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_selectedNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ConceptFunctionParameter_text = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextExpression_TransformationMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextExpression_TransformationMenu_Condition = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextHintsSpecification = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextVariable = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextVariable_EditorContext = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ContextVariable_Node = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_DefaultBaseLine = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_DefaultCaretPositionStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_DominatesRecord = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_DrawBorderStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_DrawBracketsStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_EditableStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_EditorCellId = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_EditorCellModel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_EditorComponentDeclaration = new ConceptPropsBuilder().icon("editorComponent.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_EditorComponentDeclarationReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ExplicitHintsSpecification = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_FirstPositionAllowedStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_FloatStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_FontSizeStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_FontStyleStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ForegroundColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ForegroundNullColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_HorizontalAlign = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_HorizontalGapStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ICellStyle = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IContextProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IContextVariableProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IEditorContextProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IExtensibleMenuPart = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_INodeProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IParameterizableMenuPart = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IQueryFunction_Color = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IStyle = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IStyleContainer = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IStyleSheetItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IStyleSheetMember = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_ITransformationMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IdSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ImagePathProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutIndentAnchorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutIndentStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutNewLineChildrenStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutNewLineStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutNoWrapClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutOnNewLineStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_IndentLayoutWrapAnchorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_InlineEditorComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_InlineStyleDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_LastPositionAllowedStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_LayoutConstraintStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_MatchingLabelStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_MaxWidthStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ModelAccessor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_NavigatableNodeStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_NavigatableReferenceStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PaddingBottomStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PaddingLeftStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PaddingRightStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PaddingTopStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ParametersInformationQuery = new ConceptPropsBuilder().icon("parametersInformation.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_ParametersInformationStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PositionChildrenStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PositionStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PreDefinedStyleClassItem = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_PredefinedSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PropertyDeclarationCellSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PropertyExpressionCellSelector = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PunctuationLeftStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_PunctuationRightStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunctionParameter_TransformationMenu_node = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunctionParameter_TransformationMenu_parameterObject = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_AttributeStyleParameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_Boolean = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_CellProvider = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_Color = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ColorComposit = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_FontStyle = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ImagePath = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_Integer = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_IsMethodCurrent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_JComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_MethodPresentation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ModelAccess_Getter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ModelAccess_Setter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ModelAccess_Validator = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ModuleAndPath = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_NodeCondition = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_NodeFactory = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_NodeListFilter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_ParametersList = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_SNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_SeparatorText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_String = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_Style = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_StyleParameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_ActionLabelText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Condition = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_DescriptionText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Execute = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Extensible = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Node = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Parameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_TargetNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_TransformationMenu_Text = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryFunction_Underlined = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_QueryHintsSpecification = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_RGBColor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ReadOnlyModelAccessor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ReadOnlyStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_RightTransformAnchorTagWrapper = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_ScriptKindClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SelectInEditorOperation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SelectParameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SelectPositionParameter = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SelectableStyleSheetItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SetBoldOperation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_SideTransformAnchorTagStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StrikeOutStyleSheet = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Alternation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Block = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Collection = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Component = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Constant = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_ContextAssistant = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Custom = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Error = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Image = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_JComponent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_ModelAccess = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_NonEmptyProperty = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Property = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_ReadOnlyModelAccessor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_RefCell = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_RefNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_RefNodeList = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_ReferencePresentation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_Table = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_TransactionalProperty = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubCellModel_URL = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StubEditorCellModel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleAttributeDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleAttributeReferenceExpression = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleClass = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleClassReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleClassReferenceList = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleKey = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleKeyPack = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_StyleSheet = new ConceptPropsBuilder().icon("editorStylesheet.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_StyleSheetClass = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_StyleSheetClassReference = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_StyledTextType = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_Synchronizeable = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TableComponentStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TextBackgroundColorSelectedStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TextBackgroundColorStyleClassItem = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransactionPropertyHandler_newValue = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransactionPropertyHandler_oldValue = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransactionalPropertyHandler = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationFeature = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationFeature_ActionType = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationFeature_DescriptionText = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationFeature_IconNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationLocation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationLocation_ContextAssistant = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationLocation_SideTransform = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationLocation_SideTransform_PlaceInCellHolder = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuContribution = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_Action = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_Group = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_IncludeMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_Parameterized = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_Placeholder = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_SubMenu = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuPart_Super = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuReference_Default = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuReference_Named = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenuSection = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenu_Default = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TransformationMenu_Named = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_UnapplyStyle = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_UnderlinedStyleClassItem = new ConceptPropsBuilder().create();

  @Override
  @Nullable
  public AdditionalConceptProperties getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0yl.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_AbstractCellSelector;
          }
          break;
        case 1:
          if (true) {
            return props_AbstractComponent;
          }
          break;
        case 2:
          if (true) {
            return props_AbstractPaddingStyleClassItem;
          }
          break;
        case 3:
          if (true) {
            return props_AbstractStyledTextOperation;
          }
          break;
        case 4:
          if (true) {
            return props_AppendTextOperation;
          }
          break;
        case 5:
          if (true) {
            return props_ApplyStyleClass;
          }
          break;
        case 6:
          if (true) {
            return props_ApplyStyleClassCondition;
          }
          break;
        case 7:
          if (true) {
            return props_AttributeStyleClassItem;
          }
          break;
        case 8:
          if (true) {
            return props_AutoDeletableStyleClassItem;
          }
          break;
        case 9:
          if (true) {
            return props_BackgroundColorStyleClassItem;
          }
          break;
        case 10:
          if (true) {
            return props_BaseEditorComponent;
          }
          break;
        case 11:
          if (true) {
            return props_BaseLineCell;
          }
          break;
        case 12:
          if (true) {
            return props_BooleanStyleSheetItem;
          }
          break;
        case 13:
          if (true) {
            return props_BracketColorStyleClassItem;
          }
          break;
        case 14:
          if (true) {
            return props_CaretPositionParameter;
          }
          break;
        case 15:
          if (true) {
            return props_CellActionMapDeclaration;
          }
          break;
        case 16:
          if (true) {
            return props_CellActionMapItem;
          }
          break;
        case 17:
          if (true) {
            return props_CellActionMap_CanExecuteFunction;
          }
          break;
        case 18:
          if (true) {
            return props_CellActionMap_ExecuteFunction;
          }
          break;
        case 19:
          if (true) {
            return props_CellActionMap_FunctionParm_selectedNode;
          }
          break;
        case 20:
          if (true) {
            return props_CellIdReferenceSelector;
          }
          break;
        case 21:
          if (true) {
            return props_CellKeyMapDeclaration;
          }
          break;
        case 22:
          if (true) {
            return props_CellKeyMapItem;
          }
          break;
        case 23:
          if (true) {
            return props_CellKeyMapKeystroke;
          }
          break;
        case 24:
          if (true) {
            return props_CellKeyMap_AbstractFunction;
          }
          break;
        case 25:
          if (true) {
            return props_CellKeyMap_ExecuteFunction;
          }
          break;
        case 26:
          if (true) {
            return props_CellKeyMap_FunctionParm_selectedNode;
          }
          break;
        case 27:
          if (true) {
            return props_CellKeyMap_FunctionParm_selectedNodes;
          }
          break;
        case 28:
          if (true) {
            return props_CellKeyMap_IsApplicableFunction;
          }
          break;
        case 29:
          if (true) {
            return props_CellLayout;
          }
          break;
        case 30:
          if (true) {
            return props_CellLayout_Flow;
          }
          break;
        case 31:
          if (true) {
            return props_CellLayout_Horizontal;
          }
          break;
        case 32:
          if (true) {
            return props_CellLayout_Indent;
          }
          break;
        case 33:
          if (true) {
            return props_CellLayout_Indent_Old;
          }
          break;
        case 34:
          if (true) {
            return props_CellLayout_Superscript;
          }
          break;
        case 35:
          if (true) {
            return props_CellLayout_Table;
          }
          break;
        case 36:
          if (true) {
            return props_CellLayout_Vertical;
          }
          break;
        case 37:
          if (true) {
            return props_CellLayout_VerticalGrid;
          }
          break;
        case 38:
          if (true) {
            return props_CellMenuComponent;
          }
          break;
        case 39:
          if (true) {
            return props_CellMenuComponentFeature;
          }
          break;
        case 40:
          if (true) {
            return props_CellMenuComponentFeature_Link;
          }
          break;
        case 41:
          if (true) {
            return props_CellMenuComponentFeature_Property;
          }
          break;
        case 42:
          if (true) {
            return props_CellMenuDescriptor;
          }
          break;
        case 43:
          if (true) {
            return props_CellMenuPart_Abstract;
          }
          break;
        case 44:
          if (true) {
            return props_CellMenuPart_AbstractGroup;
          }
          break;
        case 45:
          if (true) {
            return props_CellMenuPart_AbstractGroup_DescriptionText;
          }
          break;
        case 46:
          if (true) {
            return props_CellMenuPart_AbstractGroup_MatchingText;
          }
          break;
        case 47:
          if (true) {
            return props_CellMenuPart_AbstractGroup_Query;
          }
          break;
        case 48:
          if (true) {
            return props_CellMenuPart_AbstractGroup_parameterObject;
          }
          break;
        case 49:
          if (true) {
            return props_CellMenuPart_Abstract_editedNode;
          }
          break;
        case 50:
          if (true) {
            return props_CellMenuPart_ApplySideTransforms;
          }
          break;
        case 51:
          if (true) {
            return props_CellMenuPart_CellMenuComponent;
          }
          break;
        case 52:
          if (true) {
            return props_CellMenuPart_Generic_Group;
          }
          break;
        case 53:
          if (true) {
            return props_CellMenuPart_Generic_Group_Handler;
          }
          break;
        case 54:
          if (true) {
            return props_CellMenuPart_Generic_Item;
          }
          break;
        case 55:
          if (true) {
            return props_CellMenuPart_Generic_Item_Handler;
          }
          break;
        case 56:
          if (true) {
            return props_CellMenuPart_PropertyPostfixHints;
          }
          break;
        case 57:
          if (true) {
            return props_CellMenuPart_PropertyPostfixHints_GetPostfixes;
          }
          break;
        case 58:
          if (true) {
            return props_CellMenuPart_PropertyValues;
          }
          break;
        case 59:
          if (true) {
            return props_CellMenuPart_PropertyValues_GetValues;
          }
          break;
        case 60:
          if (true) {
            return props_CellMenuPart_ReferentPrimary;
          }
          break;
        case 61:
          if (true) {
            return props_CellMenuPart_ReplaceChildPrimary;
          }
          break;
        case 62:
          if (true) {
            return props_CellMenuPart_ReplaceChild_CustomChildConcept;
          }
          break;
        case 63:
          if (true) {
            return props_CellMenuPart_ReplaceChild_CustomChildConcept_Query;
          }
          break;
        case 64:
          if (true) {
            return props_CellMenuPart_ReplaceChild_Group;
          }
          break;
        case 65:
          if (true) {
            return props_CellMenuPart_ReplaceChild_Group_Create;
          }
          break;
        case 66:
          if (true) {
            return props_CellMenuPart_ReplaceChild_Group_Query;
          }
          break;
        case 67:
          if (true) {
            return props_CellMenuPart_ReplaceChild_Item;
          }
          break;
        case 68:
          if (true) {
            return props_CellMenuPart_ReplaceChild_Item_Create;
          }
          break;
        case 69:
          if (true) {
            return props_CellMenuPart_ReplaceChild_currentChild;
          }
          break;
        case 70:
          if (true) {
            return props_CellMenuPart_ReplaceChild_defaultConceptOfChild;
          }
          break;
        case 71:
          if (true) {
            return props_CellMenuPart_ReplaceNode_CustomNodeConcept;
          }
          break;
        case 72:
          if (true) {
            return props_CellMenuPart_ReplaceNode_Group;
          }
          break;
        case 73:
          if (true) {
            return props_CellMenuPart_ReplaceNode_Group_Create;
          }
          break;
        case 74:
          if (true) {
            return props_CellModel_AbstractLabel;
          }
          break;
        case 75:
          if (true) {
            return props_CellModel_Alternation;
          }
          break;
        case 76:
          if (true) {
            return props_CellModel_AttributedLinkCell;
          }
          break;
        case 77:
          if (true) {
            return props_CellModel_AttributedNodeCell;
          }
          break;
        case 78:
          if (true) {
            return props_CellModel_AttributedPropertyCell;
          }
          break;
        case 79:
          if (true) {
            return props_CellModel_Block;
          }
          break;
        case 80:
          if (true) {
            return props_CellModel_BlockEnd;
          }
          break;
        case 81:
          if (true) {
            return props_CellModel_BlockStart;
          }
          break;
        case 82:
          if (true) {
            return props_CellModel_Collection;
          }
          break;
        case 83:
          if (true) {
            return props_CellModel_Component;
          }
          break;
        case 84:
          if (true) {
            return props_CellModel_Constant;
          }
          break;
        case 85:
          if (true) {
            return props_CellModel_ContextAssistant;
          }
          break;
        case 86:
          if (true) {
            return props_CellModel_Custom;
          }
          break;
        case 87:
          if (true) {
            return props_CellModel_Empty;
          }
          break;
        case 88:
          if (true) {
            return props_CellModel_Error;
          }
          break;
        case 89:
          if (true) {
            return props_CellModel_Image;
          }
          break;
        case 90:
          if (true) {
            return props_CellModel_Indent;
          }
          break;
        case 91:
          if (true) {
            return props_CellModel_JComponent;
          }
          break;
        case 92:
          if (true) {
            return props_CellModel_ListWithRole;
          }
          break;
        case 93:
          if (true) {
            return props_CellModel_ModelAccess;
          }
          break;
        case 94:
          if (true) {
            return props_CellModel_NextEditor;
          }
          break;
        case 95:
          if (true) {
            return props_CellModel_NonEmptyProperty;
          }
          break;
        case 96:
          if (true) {
            return props_CellModel_Property;
          }
          break;
        case 97:
          if (true) {
            return props_CellModel_ReadOnlyModelAccessor;
          }
          break;
        case 98:
          if (true) {
            return props_CellModel_RefCell;
          }
          break;
        case 99:
          if (true) {
            return props_CellModel_RefNode;
          }
          break;
        case 100:
          if (true) {
            return props_CellModel_RefNodeList;
          }
          break;
        case 101:
          if (true) {
            return props_CellModel_ReferencePresentation;
          }
          break;
        case 102:
          if (true) {
            return props_CellModel_TransactionalProperty;
          }
          break;
        case 103:
          if (true) {
            return props_CellModel_URL;
          }
          break;
        case 104:
          if (true) {
            return props_CellModel_WithRole;
          }
          break;
        case 105:
          if (true) {
            return props_ColorStyleClassItem;
          }
          break;
        case 106:
          if (true) {
            return props_ConceptEditorContextHints;
          }
          break;
        case 107:
          if (true) {
            return props_ConceptEditorDeclaration;
          }
          break;
        case 108:
          if (true) {
            return props_ConceptEditorHintDeclaration;
          }
          break;
        case 109:
          if (true) {
            return props_ConceptEditorHintDeclarationReference;
          }
          break;
        case 110:
          if (true) {
            return props_ConceptEditorHintDeclarationReferenceExpression;
          }
          break;
        case 111:
          if (true) {
            return props_ConceptFunctionParameter_StyledText;
          }
          break;
        case 112:
          if (true) {
            return props_ConceptFunctionParameter_childNode;
          }
          break;
        case 113:
          if (true) {
            return props_ConceptFunctionParameter_editorContext;
          }
          break;
        case 114:
          if (true) {
            return props_ConceptFunctionParameter_nextNode;
          }
          break;
        case 115:
          if (true) {
            return props_ConceptFunctionParameter_node;
          }
          break;
        case 116:
          if (true) {
            return props_ConceptFunctionParameter_oldText;
          }
          break;
        case 117:
          if (true) {
            return props_ConceptFunctionParameter_parameterObject;
          }
          break;
        case 118:
          if (true) {
            return props_ConceptFunctionParameter_prevNode;
          }
          break;
        case 119:
          if (true) {
            return props_ConceptFunctionParameter_selectedNode;
          }
          break;
        case 120:
          if (true) {
            return props_ConceptFunctionParameter_text;
          }
          break;
        case 121:
          if (true) {
            return props_ContextExpression_TransformationMenu;
          }
          break;
        case 122:
          if (true) {
            return props_ContextExpression_TransformationMenu_Condition;
          }
          break;
        case 123:
          if (true) {
            return props_ContextHintsSpecification;
          }
          break;
        case 124:
          if (true) {
            return props_ContextVariable;
          }
          break;
        case 125:
          if (true) {
            return props_ContextVariable_EditorContext;
          }
          break;
        case 126:
          if (true) {
            return props_ContextVariable_Node;
          }
          break;
        case 127:
          if (true) {
            return props_DefaultBaseLine;
          }
          break;
        case 128:
          if (true) {
            return props_DefaultCaretPositionStyleClassItem;
          }
          break;
        case 129:
          if (true) {
            return props_DominatesRecord;
          }
          break;
        case 130:
          if (true) {
            return props_DrawBorderStyleClassItem;
          }
          break;
        case 131:
          if (true) {
            return props_DrawBracketsStyleClassItem;
          }
          break;
        case 132:
          if (true) {
            return props_EditableStyleClassItem;
          }
          break;
        case 133:
          if (true) {
            return props_EditorCellId;
          }
          break;
        case 134:
          if (true) {
            return props_EditorCellModel;
          }
          break;
        case 135:
          if (true) {
            return props_EditorComponentDeclaration;
          }
          break;
        case 136:
          if (true) {
            return props_EditorComponentDeclarationReference;
          }
          break;
        case 137:
          if (true) {
            return props_ExplicitHintsSpecification;
          }
          break;
        case 138:
          if (true) {
            return props_FirstPositionAllowedStyleClassItem;
          }
          break;
        case 139:
          if (true) {
            return props_FloatStyleClassItem;
          }
          break;
        case 140:
          if (true) {
            return props_FontSizeStyleClassItem;
          }
          break;
        case 141:
          if (true) {
            return props_FontStyleStyleClassItem;
          }
          break;
        case 142:
          if (true) {
            return props_ForegroundColorStyleClassItem;
          }
          break;
        case 143:
          if (true) {
            return props_ForegroundNullColorStyleClassItem;
          }
          break;
        case 144:
          if (true) {
            return props_HorizontalAlign;
          }
          break;
        case 145:
          if (true) {
            return props_HorizontalGapStyleClassItem;
          }
          break;
        case 146:
          if (true) {
            return props_ICellStyle;
          }
          break;
        case 147:
          if (true) {
            return props_IContextProvider;
          }
          break;
        case 148:
          if (true) {
            return props_IContextVariableProvider;
          }
          break;
        case 149:
          if (true) {
            return props_IEditorContextProvider;
          }
          break;
        case 150:
          if (true) {
            return props_IExtensibleMenuPart;
          }
          break;
        case 151:
          if (true) {
            return props_INodeProvider;
          }
          break;
        case 152:
          if (true) {
            return props_IParameterizableMenuPart;
          }
          break;
        case 153:
          if (true) {
            return props_IQueryFunction_Color;
          }
          break;
        case 154:
          if (true) {
            return props_IStyle;
          }
          break;
        case 155:
          if (true) {
            return props_IStyleContainer;
          }
          break;
        case 156:
          if (true) {
            return props_IStyleSheetItem;
          }
          break;
        case 157:
          if (true) {
            return props_IStyleSheetMember;
          }
          break;
        case 158:
          if (true) {
            return props_ITransformationMenu;
          }
          break;
        case 159:
          if (true) {
            return props_IdSelector;
          }
          break;
        case 160:
          if (true) {
            return props_ImagePathProvider;
          }
          break;
        case 161:
          if (true) {
            return props_IndentLayoutIndentAnchorStyleClassItem;
          }
          break;
        case 162:
          if (true) {
            return props_IndentLayoutIndentStyleClassItem;
          }
          break;
        case 163:
          if (true) {
            return props_IndentLayoutNewLineChildrenStyleClassItem;
          }
          break;
        case 164:
          if (true) {
            return props_IndentLayoutNewLineStyleClassItem;
          }
          break;
        case 165:
          if (true) {
            return props_IndentLayoutNoWrapClassItem;
          }
          break;
        case 166:
          if (true) {
            return props_IndentLayoutOnNewLineStyleClassItem;
          }
          break;
        case 167:
          if (true) {
            return props_IndentLayoutWrapAnchorStyleClassItem;
          }
          break;
        case 168:
          if (true) {
            return props_InlineEditorComponent;
          }
          break;
        case 169:
          if (true) {
            return props_InlineStyleDeclaration;
          }
          break;
        case 170:
          if (true) {
            return props_LastPositionAllowedStyleClassItem;
          }
          break;
        case 171:
          if (true) {
            return props_LayoutConstraintStyleClassItem;
          }
          break;
        case 172:
          if (true) {
            return props_MatchingLabelStyleClassItem;
          }
          break;
        case 173:
          if (true) {
            return props_MaxWidthStyleClassItem;
          }
          break;
        case 174:
          if (true) {
            return props_ModelAccessor;
          }
          break;
        case 175:
          if (true) {
            return props_NavigatableNodeStyleClassItem;
          }
          break;
        case 176:
          if (true) {
            return props_NavigatableReferenceStyleClassItem;
          }
          break;
        case 177:
          if (true) {
            return props_PaddingBottomStyleClassItem;
          }
          break;
        case 178:
          if (true) {
            return props_PaddingLeftStyleClassItem;
          }
          break;
        case 179:
          if (true) {
            return props_PaddingRightStyleClassItem;
          }
          break;
        case 180:
          if (true) {
            return props_PaddingTopStyleClassItem;
          }
          break;
        case 181:
          if (true) {
            return props_ParametersInformationQuery;
          }
          break;
        case 182:
          if (true) {
            return props_ParametersInformationStyleClassItem;
          }
          break;
        case 183:
          if (true) {
            return props_PositionChildrenStyleClassItem;
          }
          break;
        case 184:
          if (true) {
            return props_PositionStyleClassItem;
          }
          break;
        case 185:
          if (true) {
            return props_PreDefinedStyleClassItem;
          }
          break;
        case 186:
          if (true) {
            return props_PredefinedSelector;
          }
          break;
        case 187:
          if (true) {
            return props_PropertyDeclarationCellSelector;
          }
          break;
        case 188:
          if (true) {
            return props_PropertyExpressionCellSelector;
          }
          break;
        case 189:
          if (true) {
            return props_PunctuationLeftStyleClassItem;
          }
          break;
        case 190:
          if (true) {
            return props_PunctuationRightStyleClassItem;
          }
          break;
        case 191:
          if (true) {
            return props_QueryFunctionParameter_TransformationMenu_node;
          }
          break;
        case 192:
          if (true) {
            return props_QueryFunctionParameter_TransformationMenu_parameterObject;
          }
          break;
        case 193:
          if (true) {
            return props_QueryFunction_AttributeStyleParameter;
          }
          break;
        case 194:
          if (true) {
            return props_QueryFunction_Boolean;
          }
          break;
        case 195:
          if (true) {
            return props_QueryFunction_CellProvider;
          }
          break;
        case 196:
          if (true) {
            return props_QueryFunction_Color;
          }
          break;
        case 197:
          if (true) {
            return props_QueryFunction_ColorComposit;
          }
          break;
        case 198:
          if (true) {
            return props_QueryFunction_FontStyle;
          }
          break;
        case 199:
          if (true) {
            return props_QueryFunction_ImagePath;
          }
          break;
        case 200:
          if (true) {
            return props_QueryFunction_Integer;
          }
          break;
        case 201:
          if (true) {
            return props_QueryFunction_IsMethodCurrent;
          }
          break;
        case 202:
          if (true) {
            return props_QueryFunction_JComponent;
          }
          break;
        case 203:
          if (true) {
            return props_QueryFunction_MethodPresentation;
          }
          break;
        case 204:
          if (true) {
            return props_QueryFunction_ModelAccess_Getter;
          }
          break;
        case 205:
          if (true) {
            return props_QueryFunction_ModelAccess_Setter;
          }
          break;
        case 206:
          if (true) {
            return props_QueryFunction_ModelAccess_Validator;
          }
          break;
        case 207:
          if (true) {
            return props_QueryFunction_ModuleAndPath;
          }
          break;
        case 208:
          if (true) {
            return props_QueryFunction_NodeCondition;
          }
          break;
        case 209:
          if (true) {
            return props_QueryFunction_NodeFactory;
          }
          break;
        case 210:
          if (true) {
            return props_QueryFunction_NodeListFilter;
          }
          break;
        case 211:
          if (true) {
            return props_QueryFunction_ParametersList;
          }
          break;
        case 212:
          if (true) {
            return props_QueryFunction_SNode;
          }
          break;
        case 213:
          if (true) {
            return props_QueryFunction_SeparatorText;
          }
          break;
        case 214:
          if (true) {
            return props_QueryFunction_String;
          }
          break;
        case 215:
          if (true) {
            return props_QueryFunction_Style;
          }
          break;
        case 216:
          if (true) {
            return props_QueryFunction_StyleParameter;
          }
          break;
        case 217:
          if (true) {
            return props_QueryFunction_TransformationMenu;
          }
          break;
        case 218:
          if (true) {
            return props_QueryFunction_TransformationMenu_ActionLabelText;
          }
          break;
        case 219:
          if (true) {
            return props_QueryFunction_TransformationMenu_Condition;
          }
          break;
        case 220:
          if (true) {
            return props_QueryFunction_TransformationMenu_DescriptionText;
          }
          break;
        case 221:
          if (true) {
            return props_QueryFunction_TransformationMenu_Execute;
          }
          break;
        case 222:
          if (true) {
            return props_QueryFunction_TransformationMenu_Extensible;
          }
          break;
        case 223:
          if (true) {
            return props_QueryFunction_TransformationMenu_Node;
          }
          break;
        case 224:
          if (true) {
            return props_QueryFunction_TransformationMenu_Parameter;
          }
          break;
        case 225:
          if (true) {
            return props_QueryFunction_TransformationMenu_TargetNode;
          }
          break;
        case 226:
          if (true) {
            return props_QueryFunction_TransformationMenu_Text;
          }
          break;
        case 227:
          if (true) {
            return props_QueryFunction_Underlined;
          }
          break;
        case 228:
          if (true) {
            return props_QueryHintsSpecification;
          }
          break;
        case 229:
          if (true) {
            return props_RGBColor;
          }
          break;
        case 230:
          if (true) {
            return props_ReadOnlyModelAccessor;
          }
          break;
        case 231:
          if (true) {
            return props_ReadOnlyStyleClassItem;
          }
          break;
        case 232:
          if (true) {
            return props_RightTransformAnchorTagWrapper;
          }
          break;
        case 233:
          if (true) {
            return props_ScriptKindClassItem;
          }
          break;
        case 234:
          if (true) {
            return props_SelectInEditorOperation;
          }
          break;
        case 235:
          if (true) {
            return props_SelectParameter;
          }
          break;
        case 236:
          if (true) {
            return props_SelectPositionParameter;
          }
          break;
        case 237:
          if (true) {
            return props_SelectableStyleSheetItem;
          }
          break;
        case 238:
          if (true) {
            return props_SetBoldOperation;
          }
          break;
        case 239:
          if (true) {
            return props_SideTransformAnchorTagStyleClassItem;
          }
          break;
        case 240:
          if (true) {
            return props_StrikeOutStyleSheet;
          }
          break;
        case 241:
          if (true) {
            return props_StubCellModel_Alternation;
          }
          break;
        case 242:
          if (true) {
            return props_StubCellModel_Block;
          }
          break;
        case 243:
          if (true) {
            return props_StubCellModel_Collection;
          }
          break;
        case 244:
          if (true) {
            return props_StubCellModel_Component;
          }
          break;
        case 245:
          if (true) {
            return props_StubCellModel_Constant;
          }
          break;
        case 246:
          if (true) {
            return props_StubCellModel_ContextAssistant;
          }
          break;
        case 247:
          if (true) {
            return props_StubCellModel_Custom;
          }
          break;
        case 248:
          if (true) {
            return props_StubCellModel_Error;
          }
          break;
        case 249:
          if (true) {
            return props_StubCellModel_Image;
          }
          break;
        case 250:
          if (true) {
            return props_StubCellModel_JComponent;
          }
          break;
        case 251:
          if (true) {
            return props_StubCellModel_ModelAccess;
          }
          break;
        case 252:
          if (true) {
            return props_StubCellModel_NonEmptyProperty;
          }
          break;
        case 253:
          if (true) {
            return props_StubCellModel_Property;
          }
          break;
        case 254:
          if (true) {
            return props_StubCellModel_ReadOnlyModelAccessor;
          }
          break;
        case 255:
          if (true) {
            return props_StubCellModel_RefCell;
          }
          break;
        case 256:
          if (true) {
            return props_StubCellModel_RefNode;
          }
          break;
        case 257:
          if (true) {
            return props_StubCellModel_RefNodeList;
          }
          break;
        case 258:
          if (true) {
            return props_StubCellModel_ReferencePresentation;
          }
          break;
        case 259:
          if (true) {
            return props_StubCellModel_Table;
          }
          break;
        case 260:
          if (true) {
            return props_StubCellModel_TransactionalProperty;
          }
          break;
        case 261:
          if (true) {
            return props_StubCellModel_URL;
          }
          break;
        case 262:
          if (true) {
            return props_StubEditorCellModel;
          }
          break;
        case 263:
          if (true) {
            return props_StyleAttributeDeclaration;
          }
          break;
        case 264:
          if (true) {
            return props_StyleAttributeReferenceExpression;
          }
          break;
        case 265:
          if (true) {
            return props_StyleClass;
          }
          break;
        case 266:
          if (true) {
            return props_StyleClassItem;
          }
          break;
        case 267:
          if (true) {
            return props_StyleClassReference;
          }
          break;
        case 268:
          if (true) {
            return props_StyleClassReferenceList;
          }
          break;
        case 269:
          if (true) {
            return props_StyleKey;
          }
          break;
        case 270:
          if (true) {
            return props_StyleKeyPack;
          }
          break;
        case 271:
          if (true) {
            return props_StyleReference;
          }
          break;
        case 272:
          if (true) {
            return props_StyleSheet;
          }
          break;
        case 273:
          if (true) {
            return props_StyleSheetClass;
          }
          break;
        case 274:
          if (true) {
            return props_StyleSheetClassReference;
          }
          break;
        case 275:
          if (true) {
            return props_StyledTextType;
          }
          break;
        case 276:
          if (true) {
            return props_Synchronizeable;
          }
          break;
        case 277:
          if (true) {
            return props_TableComponentStyleClassItem;
          }
          break;
        case 278:
          if (true) {
            return props_TextBackgroundColorSelectedStyleClassItem;
          }
          break;
        case 279:
          if (true) {
            return props_TextBackgroundColorStyleClassItem;
          }
          break;
        case 280:
          if (true) {
            return props_TransactionPropertyHandler_newValue;
          }
          break;
        case 281:
          if (true) {
            return props_TransactionPropertyHandler_oldValue;
          }
          break;
        case 282:
          if (true) {
            return props_TransactionalPropertyHandler;
          }
          break;
        case 283:
          if (true) {
            return props_TransformationFeature;
          }
          break;
        case 284:
          if (true) {
            return props_TransformationFeature_ActionType;
          }
          break;
        case 285:
          if (true) {
            return props_TransformationFeature_DescriptionText;
          }
          break;
        case 286:
          if (true) {
            return props_TransformationFeature_IconNode;
          }
          break;
        case 287:
          if (true) {
            return props_TransformationLocation;
          }
          break;
        case 288:
          if (true) {
            return props_TransformationLocation_ContextAssistant;
          }
          break;
        case 289:
          if (true) {
            return props_TransformationLocation_SideTransform;
          }
          break;
        case 290:
          if (true) {
            return props_TransformationLocation_SideTransform_PlaceInCellHolder;
          }
          break;
        case 291:
          if (true) {
            return props_TransformationMenu;
          }
          break;
        case 292:
          if (true) {
            return props_TransformationMenuContribution;
          }
          break;
        case 293:
          if (true) {
            return props_TransformationMenuPart;
          }
          break;
        case 294:
          if (true) {
            return props_TransformationMenuPart_Action;
          }
          break;
        case 295:
          if (true) {
            return props_TransformationMenuPart_Group;
          }
          break;
        case 296:
          if (true) {
            return props_TransformationMenuPart_IncludeMenu;
          }
          break;
        case 297:
          if (true) {
            return props_TransformationMenuPart_Parameterized;
          }
          break;
        case 298:
          if (true) {
            return props_TransformationMenuPart_Placeholder;
          }
          break;
        case 299:
          if (true) {
            return props_TransformationMenuPart_SubMenu;
          }
          break;
        case 300:
          if (true) {
            return props_TransformationMenuPart_Super;
          }
          break;
        case 301:
          if (true) {
            return props_TransformationMenuReference;
          }
          break;
        case 302:
          if (true) {
            return props_TransformationMenuReference_Default;
          }
          break;
        case 303:
          if (true) {
            return props_TransformationMenuReference_Named;
          }
          break;
        case 304:
          if (true) {
            return props_TransformationMenuSection;
          }
          break;
        case 305:
          if (true) {
            return props_TransformationMenu_Default;
          }
          break;
        case 306:
          if (true) {
            return props_TransformationMenu_Named;
          }
          break;
        case 307:
          if (true) {
            return props_UnapplyStyle;
          }
          break;
        case 308:
          if (true) {
            return props_UnderlinedStyleClassItem;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0yl = buildConceptIndices(MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1b0a9b8c0eb8e726L, "AbstractCellSelector"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7df344a9L, "AbstractComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d878e7095L, "AbstractPaddingStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3ee423fc2ad10eceL, "AbstractStyledTextOperation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3e34c38c0ad5587L, "AppendTextOperation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1b1161f6e648b4b2L, "ApplyStyleClass"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7e9b10ab20495600L, "ApplyStyleClassCondition"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3744c0f9eae0a402L, "AttributeStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd774e0L, "AutoDeletableStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b3924ccL, "BackgroundColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfba0eb7c50L, "BaseEditorComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11fb7279917L, "BaseLineCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd1283bL, "BooleanStyleSheetItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bc5e6f6L, "BracketColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x117b152bc1fL, "CaretPositionParameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10951978cfeL, "CellActionMapDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x109519879e9L, "CellActionMapItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3001698d23c1e791L, "CellActionMap_CanExecuteFunction"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x109519ae500L, "CellActionMap_ExecuteFunction"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x13781fdf13c3c7bdL, "CellActionMap_FunctionParm_selectedNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3c0028bb8556f621L, "CellIdReferenceSelector"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfbc216b31bL, "CellKeyMapDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108b5877365L, "CellKeyMapItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108b5885461L, "CellKeyMapKeystroke"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108b58b0fabL, "CellKeyMap_AbstractFunction"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108b58d1765L, "CellKeyMap_ExecuteFunction"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x13781fdf13caee0bL, "CellKeyMap_FunctionParm_selectedNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x13781fdf13caee25L, "CellKeyMap_FunctionParm_selectedNodes"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108b58c7e8fL, "CellKeyMap_IsApplicableFunction"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10192dc11caL, "CellLayout"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10192de4f16L, "CellLayout_Flow"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10192dcf685L, "CellLayout_Horizontal"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120150bb441L, "CellLayout_Indent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b474f936aL, "CellLayout_Indent_Old"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1a2fd43187388681L, "CellLayout_Superscript"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x52915e535decd581L, "CellLayout_Table"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10192dd4cbeL, "CellLayout_Vertical"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aab61370L, "CellLayout_VerticalGrid"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d702058L, "CellMenuComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d762adcL, "CellMenuComponentFeature"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d86ed9bL, "CellMenuComponentFeature_Link"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7d811428L, "CellMenuComponentFeature_Property"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f34f6aaacL, "CellMenuDescriptor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f34f8c0deL, "CellMenuPart_Abstract"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f4e874cf6L, "CellMenuPart_AbstractGroup"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f06f0e8a4L, "CellMenuPart_AbstractGroup_DescriptionText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f06eea1c5L, "CellMenuPart_AbstractGroup_MatchingText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eecbddc4fL, "CellMenuPart_AbstractGroup_Query"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eecc5b3feL, "CellMenuPart_AbstractGroup_parameterObject"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eecc9de0fL, "CellMenuPart_Abstract_editedNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x72449b609d0e77bbL, "CellMenuPart_ApplySideTransforms"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7e91dcf6L, "CellMenuPart_CellMenuComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f58784317L, "CellMenuPart_Generic_Group"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f587b827aL, "CellMenuPart_Generic_Group_Handler"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f58b5e5f6L, "CellMenuPart_Generic_Item"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f58b90423L, "CellMenuPart_Generic_Item_Handler"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x112e2300bcaL, "CellMenuPart_PropertyPostfixHints"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x112e23362bdL, "CellMenuPart_PropertyPostfixHints_GetPostfixes"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f357f9ab7L, "CellMenuPart_PropertyValues"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10e32c7f49dL, "CellMenuPart_PropertyValues_GetValues"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f3f33baebL, "CellMenuPart_ReferentPrimary"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1115d1a2839L, "CellMenuPart_ReplaceChildPrimary"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f5021674eL, "CellMenuPart_ReplaceChild_CustomChildConcept"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f5026c90dL, "CellMenuPart_ReplaceChild_CustomChildConcept_Query"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f4f87862dL, "CellMenuPart_ReplaceChild_Group"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f4f906349L, "CellMenuPart_ReplaceChild_Group_Create"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f4f8b3f0fL, "CellMenuPart_ReplaceChild_Group_Query"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f53a0aafeL, "CellMenuPart_ReplaceChild_Item"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f53a2ada9L, "CellMenuPart_ReplaceChild_Item_Create"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eaa3a3c68L, "CellMenuPart_ReplaceChild_currentChild"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eaa4bf8b2L, "CellMenuPart_ReplaceChild_defaultConceptOfChild"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f3a50ec74L, "CellMenuPart_ReplaceNode_CustomNodeConcept"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f3fa975a0L, "CellMenuPart_ReplaceNode_Group"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10eecbf54a7L, "CellMenuPart_ReplaceNode_Group_Create"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb4e7c3a4cL, "CellModel_AbstractLabel"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfd766383e4L, "CellModel_Alternation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x108a0861503L, "CellModel_AttributedLinkCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10bb871ad98L, "CellModel_AttributedNodeCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1081e457de7L, "CellModel_AttributedPropertyCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1170b90f356L, "CellModel_Block"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x116fdba37cdL, "CellModel_BlockEnd"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x116fdb876c6L, "CellModel_BlockStart"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, "CellModel_Collection"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb35c96896L, "CellModel_Component"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb01232eL, "CellModel_Constant"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2ea28b54668aeb4bL, "CellModel_ContextAssistant"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb103073dcL, "CellModel_Custom"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x73604585b6d5c973L, "CellModel_Empty"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfa61615ec3L, "CellModel_Error"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1095e12de6fL, "CellModel_Image"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x116fdad17a0L, "CellModel_Indent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x100d0e71cb2L, "CellModel_JComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1098c8cf48aL, "CellModel_ListWithRole"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfa3d28fe7dL, "CellModel_ModelAccess"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7456aec153c7f5a2L, "CellModel_NextEditor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x113bef3a464L, "CellModel_NonEmptyProperty"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb02612eL, "CellModel_Property"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d6d56c00cL, "CellModel_ReadOnlyModelAccessor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfd52a2c922L, "CellModel_RefCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb05cdc7L, "CellModel_RefNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eb0ad38eL, "CellModel_RefNodeList"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x8ace515f0191e6eL, "CellModel_ReferencePresentation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b35f4f515L, "CellModel_TransactionalProperty"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x334adf8cb15f3fdeL, "CellModel_URL"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10964446123L, "CellModel_WithRole"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b2bb8c4L, "ColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x527faacef4e35767L, "ConceptEditorContextHints"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9845363abL, "ConceptEditorDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x527faacef50d095eL, "ConceptEditorHintDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5eadaecad41188dcL, "ConceptEditorHintDeclarationReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x42e5e943db1f2dd0L, "ConceptEditorHintDeclarationReferenceExpression"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3ed01d37608fe0afL, "ConceptFunctionParameter_StyledText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1134297c615L, "ConceptFunctionParameter_childNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10e76200a6fL, "ConceptFunctionParameter_editorContext"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6ee8c7d6704ae262L, "ConceptFunctionParameter_nextNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10a195cc7c5L, "ConceptFunctionParameter_node"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111faaffcc5L, "ConceptFunctionParameter_oldText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x950e7629b27d763L, "ConceptFunctionParameter_parameterObject"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6ee8c7d6704ae9f2L, "ConceptFunctionParameter_prevNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3a54c53a29dbb0faL, "ConceptFunctionParameter_selectedNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111f9d863e4L, "ConceptFunctionParameter_text"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6e030e20f28ac25dL, "ContextExpression_TransformationMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e29183aL, "ContextExpression_TransformationMenu_Condition"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x40953da3e594b7a8L, "ContextHintsSpecification"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e119f99L, "ContextVariable"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e1160d5L, "ContextVariable_EditorContext"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e1140f4L, "ContextVariable_Node"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x69c06896a0e42a51L, "DefaultBaseLine"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ac437b468L, "DefaultCaretPositionStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x22926e62b7d495a0L, "DominatesRecord"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd7dc37L, "DrawBorderStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11bdf8bf6bbL, "DrawBracketsStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd61987L, "EditableStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3c0028bb846a5817L, "EditorCellId"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eafb9a39L, "EditorCellModel"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfb35c2bb47L, "EditorComponentDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x619d95571435dfe8L, "EditorComponentDeclarationReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3ae0865e9a712712L, "ExplicitHintsSpecification"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ae8b76d40L, "FirstPositionAllowedStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ae41b27e5L, "FloatStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143be33e36L, "FontSizeStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b2c9756L, "FontStyleStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b38c56eL, "ForegroundColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1146e20cfb3L, "ForegroundNullColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11fc74ebe6cL, "HorizontalAlign"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11f459b72d3L, "HorizontalGapStyleClassItem"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x132a500f473d6174L, "ICellStyle"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6147683099dd6351L, "IContextProvider"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2a184f1d9310d4eL, "IContextVariableProvider"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e1160d4L, "IEditorContextProvider"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L, "IExtensibleMenuPart"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x794cf8ea9e1140f3L, "INodeProvider"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3abfebf456f8ad24L, "IParameterizableMenuPart"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d52e019f6L, "IQueryFunction_Color"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7e9b10ab1f5847b8L, "IStyle"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11beb039542L, "IStyleContainer"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x78f111e66a606618L, "IStyleSheetItem"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2ef3b3796a0b8287L, "IStyleSheetMember"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0c11832L, "ITransformationMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1e02662c4b880750L, "IdSelector"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x511249404d30c46aL, "ImagePathProvider"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a692c170d1b09d8L, "IndentLayoutIndentAnchorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120154c4089L, "IndentLayoutIndentStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120194c6bfdL, "IndentLayoutNewLineChildrenStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120154df6f3L, "IndentLayoutNewLineStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120c4d9abaeL, "IndentLayoutNoWrapClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x12019ed89beL, "IndentLayoutOnNewLineStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a692c170d1d584eL, "IndentLayoutWrapAnchorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfd5cee772bL, "InlineEditorComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11f1d6594edL, "InlineStyleDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ae8b8b7d7L, "LastPositionAllowedStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11abafc10eaL, "LayoutConstraintStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11fd6f8d518L, "MatchingLabelStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a2febf37d13730eL, "MaxWidthStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111f9dbb2ccL, "ModelAccessor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x696ed29ebd7c1429L, "NavigatableNodeStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11de23fdb1fL, "NavigatableReferenceStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d878c87bcL, "PaddingBottomStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ae41cffc4L, "PaddingLeftStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ae41d378fL, "PaddingRightStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d878b980aL, "PaddingTopStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a67a319ce06acceL, "ParametersInformationQuery"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a67a319ce060712L, "ParametersInformationStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b40a56a20L, "PositionChildrenStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b31a45ad7L, "PositionStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x399cb6c68c707bf7L, "PreDefinedStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x313a48d996236c93L, "PredefinedSelector"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3e970bbc3009e3a3L, "PropertyDeclarationCellSelector"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3e970bbc30443a0aL, "PropertyExpressionCellSelector"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11f41c44bf7L, "PunctuationLeftStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11f41c727e1L, "PunctuationRightStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x162bf82611fb4032L, "QueryFunctionParameter_TransformationMenu_node"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3abfebf45718c704L, "QueryFunctionParameter_TransformationMenu_parameterObject"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3744c0f9eb0a02a3L, "QueryFunction_AttributeStyleParameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11cd78e1636L, "QueryFunction_Boolean"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111fbbfae55L, "QueryFunction_CellProvider"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111ff56f066L, "QueryFunction_Color"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2de97a3d3b88abfaL, "QueryFunction_ColorComposit"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11c47c26987L, "QueryFunction_FontStyle"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11204aae906L, "QueryFunction_ImagePath"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11c4caca3eeL, "QueryFunction_Integer"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5917043ba8fab771L, "QueryFunction_IsMethodCurrent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111eb58c684L, "QueryFunction_JComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x950e7629b27d75eL, "QueryFunction_MethodPresentation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111f9d95571L, "QueryFunction_ModelAccess_Getter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111f9d9c896L, "QueryFunction_ModelAccess_Setter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x111f9da0bacL, "QueryFunction_ModelAccess_Validator"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x511249404d287d9dL, "QueryFunction_ModuleAndPath"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10a1953c797L, "QueryFunction_NodeCondition"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1120492bc7eL, "QueryFunction_NodeFactory"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x113401f5070L, "QueryFunction_NodeListFilter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6a67a319ce06ae0fL, "QueryFunction_ParametersList"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x696ed29ebd7c142bL, "QueryFunction_SNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x9da6a4591fc7fb5L, "QueryFunction_SeparatorText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11fe1c8b36cL, "QueryFunction_String"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x30eb862d8702cebfL, "QueryFunction_Style"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11c4cd1c73aL, "QueryFunction_StyleParameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xae2d2fe1c9d9a96L, "QueryFunction_TransformationMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4eff4d8b1f5ceed1L, "QueryFunction_TransformationMenu_ActionLabelText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5a6f546add818550L, "QueryFunction_TransformationMenu_Condition"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x198452f4d5eea7e1L, "QueryFunction_TransformationMenu_DescriptionText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384f95eeL, "QueryFunction_TransformationMenu_Execute"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a36971630L, "QueryFunction_TransformationMenu_Extensible"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defbb1acaL, "QueryFunction_TransformationMenu_Node"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3abfebf456f8c5e3L, "QueryFunction_TransformationMenu_Parameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xae2d2fe1c9d6e2eL, "QueryFunction_TransformationMenu_TargetNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2241a13dab4fb50cL, "QueryFunction_TransformationMenu_Text"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11c4d022befL, "QueryFunction_Underlined"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x555cb285f801e1a1L, "QueryHintsSpecification"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d52e2b1a0L, "RGBColor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11d6d3fe71eL, "ReadOnlyModelAccessor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xb09275c2ae83bcdL, "ReadOnlyStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3212fe82cb95ffe7L, "RightTransformAnchorTagWrapper"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x72908ac6c78618c8L, "ScriptKindClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x329d4406465c63a0L, "SelectInEditorOperation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x117b10a719eL, "SelectParameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x117b132f8cdL, "SelectPositionParameter"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd721ebL, "SelectableStyleSheetItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3e34c38c0b28cacL, "SetBoldOperation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11abb1e8d85L, "SideTransformAnchorTagStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11cd786e1a9L, "StrikeOutStyleSheet"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25391L, "StubCellModel_Alternation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25652L, "StubCellModel_Block"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x29d0bd0428267261L, "StubCellModel_Collection"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2be50c0a8c63bc55L, "StubCellModel_Component"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x321a2bd05d4979f1L, "StubCellModel_Constant"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x675ef60bff553a25L, "StubCellModel_ContextAssistant"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25654L, "StubCellModel_Custom"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d2538cL, "StubCellModel_Error"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25abbL, "StubCellModel_Image"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25abcL, "StubCellModel_JComponent"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d2538dL, "StubCellModel_ModelAccess"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edcb7922L, "StubCellModel_NonEmptyProperty"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edcb78f5L, "StubCellModel_Property"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x33785c07eefb0b0eL, "StubCellModel_ReadOnlyModelAccessor"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edc886a6L, "StubCellModel_RefCell"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edc8d3b2L, "StubCellModel_RefNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x26c84408aa729003L, "StubCellModel_RefNodeList"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edc8d589L, "StubCellModel_ReferencePresentation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d25abdL, "StubCellModel_Table"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d2538eL, "StubCellModel_TransactionalProperty"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x707876b4d5d2538fL, "StubCellModel_URL"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xa2364a3edcb8ed2L, "StubEditorCellModel"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3744c0f9ea5367ebL, "StyleAttributeDeclaration"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x53ac4acb2cb6e9d7L, "StyleAttributeReferenceExpression"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2ef3b3796a126f24L, "StyleClass"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b191dc6L, "StyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x2ef3b3796a130c0dL, "StyleClassReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7e9b10ab1cb5b6d8L, "StyleClassReferenceList"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x399cb6c68aa9aeaaL, "StyleKey"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x399cb6c68aa9af02L, "StyleKeyPack"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7e9b10ab1edbd2fbL, "StyleReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b151743L, "StyleSheet"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143b178f1fL, "StyleSheetClass"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x116fd64815dL, "StyleSheetClassReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x362b8be848e5c49bL, "StyledTextType"), MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x79b75ced2c4a134dL, "Synchronizeable"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5ea66701cd0a0c86L, "TableComponentStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ac0441c7eL, "TextBackgroundColorSelectedStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11ac043ee66L, "TextBackgroundColorStyleClassItem"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b35f75b6dL, "TransactionPropertyHandler_newValue"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b35f6e2acL, "TransactionPropertyHandler_oldValue"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11b35f5eefdL, "TransactionalPropertyHandler"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defb64aa5L, "TransformationFeature"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x198452f4d5eea7f2L, "TransformationFeature_ActionType"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x198452f4d5ee9587L, "TransformationFeature_DescriptionText"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x198452f4d5ee6651L, "TransformationFeature_IconNode"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defb64aa6L, "TransformationLocation"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defd26bcbL, "TransformationLocation_ContextAssistant"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x28336854e4c19a06L, "TransformationLocation_SideTransform"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x30335f3d1845bdccL, "TransformationLocation_SideTransform_PlaceInCellHolder"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0ac3ebaL, "TransformationMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0c10ff0L, "TransformationMenuContribution"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL, "TransformationMenuPart"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384f93e6L, "TransformationMenuPart_Action"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x671b36136d224047L, "TransformationMenuPart_Group"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xae2d2fe1c9d6be2L, "TransformationMenuPart_IncludeMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x3abfebf456f8ad25L, "TransformationMenuPart_Parameterized"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6ed0e5fc004ba432L, "TransformationMenuPart_Placeholder"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x384b3925671e99efL, "TransformationMenuPart_SubMenu"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7541587144d24773L, "TransformationMenuPart_Super"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5d3b34577b3cff08L, "TransformationMenuReference"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5d3b34577b3cff0cL, "TransformationMenuReference_Default"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x5d3b34577b3cff09L, "TransformationMenuReference_Named"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x6ec02d9918b4efbcL, "TransformationMenuSection"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efce1L, "TransformationMenu_Default"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x4e0f93d8a0ac4ee8L, "TransformationMenu_Named"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1b1161f6e68dfae3L, "UnapplyStyle"), MetaAdapterFactory.getConcept(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x1143bd837d7L, "UnderlinedStyleClassItem"));
}
