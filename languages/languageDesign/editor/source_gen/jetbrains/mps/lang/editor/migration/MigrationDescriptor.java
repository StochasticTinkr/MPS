package jetbrains.mps.lang.editor.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationAspectDescriptor;
import java.util.Map;
import jetbrains.mps.lang.migration.runtime.base.MigrationScript;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;

public class MigrationDescriptor implements MigrationAspectDescriptor {
  private Map<Integer, MigrationScript> myScripts = MapSequence.<Integer, MigrationScript>fromMapAndKeysArray(new HashMap<Integer, MigrationScript>(), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9).withValues(new Migrate_EditorCellModelConditionsConsideringChildAttributes(), new Migrate_EditorCellModelShowIfConditionsToEmptyCell(), new Migrate_SetNullActionIdToRightTransform(), new MigrateCellsWithSideTransforms(), new RemoveDeprecated_CellModelListWithRole_Properties(), new RemoveDeprecated_CellModelCollection_Properties(), new RemoveOldActionStyles(), new Migrate_ReplaceChild_Params(), new Migrate_ExplicitMenuForSmartReferences(), new Migrate_SCAPartsForSmartReferences());
  public MigrationScript getScript(int fromVersion) {
    return MapSequence.fromMap(myScripts).get(fromVersion);
  }
}
