package jetbrains.mps.lang.intentions.contextAssistant.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(4);
  /*package*/ final ConceptDescriptor myConceptQueryFunctionParameter_IntentionExecutable = new ConceptDescriptorBuilder("jetbrains.mps.lang.intentions.contextAssistant.structure.QueryFunctionParameter_IntentionExecutable", MetaIdFactory.conceptId(0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x2241a13dab46cce9L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("intentionExecutable", "the runtime representation of the intention").sourceNode(new SNodePointer("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.intentions.contextAssistant.structure)", "2468431357014363369")).create();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_Intention = new ConceptDescriptorBuilder("jetbrains.mps.lang.intentions.contextAssistant.structure.TransformationMenuPart_Intention", MetaIdFactory.conceptId(0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x289dadfa24b57a51L)).super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart").version(1).super_(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL)).parents("jetbrains.mps.lang.editor.structure.TransformationMenuPart", "jetbrains.mps.lang.editor.structure.IExtensibleMenuPart").parentIds(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x289dadfa24b57a52L, "intention", MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x2303633a9c3cc675L), false)).references("intention").alias("intention", "performs an intention").sourceNode(new SNodePointer("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.intentions.contextAssistant.structure)", "2926686622729992785")).create();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_PluginAction = new ConceptDescriptorBuilder("jetbrains.mps.lang.intentions.contextAssistant.structure.TransformationMenuPart_PluginAction", MetaIdFactory.conceptId(0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x202f4c4e02a0918cL)).super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart").version(1).super_(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL)).parents("jetbrains.mps.lang.editor.structure.TransformationMenuPart", "jetbrains.mps.lang.editor.structure.IExtensibleMenuPart").parentIds(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x202f4c4e02a09194L, "action", MetaIdFactory.conceptId(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L), false)).references("action").alias("plugin action", "plugin action item").sourceNode(new SNodePointer("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.intentions.contextAssistant.structure)", "2319156231054332300")).create();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_Refactoring = new ConceptDescriptorBuilder("jetbrains.mps.lang.intentions.contextAssistant.structure.TransformationMenuPart_Refactoring", MetaIdFactory.conceptId(0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x41bc200f660dc377L)).super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart").version(1).super_(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL)).parents("jetbrains.mps.lang.editor.structure.TransformationMenuPart", "jetbrains.mps.lang.editor.structure.IExtensibleMenuPart").parentIds(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL), MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x41bc200f660dc37aL, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").alias("refactoring", "performs a refactoring").sourceNode(new SNodePointer("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.intentions.contextAssistant.structure)", "4736696158595695479")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptQueryFunctionParameter_IntentionExecutable.getId(), 0);
    myIndexMap.put(myConceptTransformationMenuPart_Intention.getId(), 1);
    myIndexMap.put(myConceptTransformationMenuPart_PluginAction.getId(), 2);
    myIndexMap.put(myConceptTransformationMenuPart_Refactoring.getId(), 3);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptQueryFunctionParameter_IntentionExecutable, myConceptTransformationMenuPart_Intention, myConceptTransformationMenuPart_PluginAction, myConceptTransformationMenuPart_Refactoring);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptQueryFunctionParameter_IntentionExecutable;
      case 1:
        return myConceptTransformationMenuPart_Intention;
      case 2:
        return myConceptTransformationMenuPart_PluginAction;
      case 3:
        return myConceptTransformationMenuPart_Refactoring;
      default:
        throw new IllegalStateException();
    }
  }
}
