package jetbrains.mps.lang.intentions.contextAssistant.runtime;

/*Generated by MPS */

import jetbrains.mps.lang.editor.menus.transformation.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionsManager;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import org.jetbrains.annotations.NotNull;

public class IntentionMenuPart extends SingleItemMenuPart {
  private final String myIntentionId;

  public IntentionMenuPart(String intentionId) {
    myIntentionId = intentionId;
  }

  @Nullable
  @Override
  protected MenuItem createItem(TransformationMenuContext context) {
    final SNode node = context.getNode();
    final EditorContext editorContext = context.getEditorContext();

    final IntentionExecutable executable = IntentionsManager.getInstance().getIntentionById(node, editorContext, myIntentionId);

    if (executable == null) {
      return null;
    }

    final String text = executable.getDescription(node, editorContext);

    return new ActionItemBase() {
      @Nullable
      @Override
      public String getLabelText(@NotNull String pattern) {
        return text;
      }
      @Override
      public void execute(@NotNull String pattern) {
        executable.execute(node, editorContext);
      }
    };
  }
}
