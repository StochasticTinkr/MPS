package jetbrains.mps.lang.intentions.contextAssistant.runtime;

/*Generated by MPS */

import jetbrains.mps.lang.editor.menus.transformation.MenuPart;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.openapi.editor.menus.transformation.MenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import jetbrains.mps.intentions.IntentionsManager;
import java.util.Collection;
import jetbrains.mps.util.Pair;
import jetbrains.mps.intentions.IntentionExecutable;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.ArrayList;
import org.jetbrains.annotations.Nullable;

public class IntentionMenuPartBase implements MenuPart {
  private final String myIntentionId;

  public IntentionMenuPartBase(String intentionId) {
    myIntentionId = intentionId;
  }

  @NotNull
  public List<MenuItem> createItems(TransformationMenuContext context) {
    IntentionsManager.QueryDescriptor query = new IntentionsManager.QueryDescriptor();
    query.setCurrentNodeOnly(true);
    Collection<Pair<IntentionExecutable, SNode>> executables = IntentionsManager.getInstance().getAvailableIntentions(query, context.getNode(), context.getEditorContext());

    List<MenuItem> result = new ArrayList<MenuItem>();
    for (Pair<IntentionExecutable, SNode> pair : executables) {
      MenuItem item = createItem(context, pair.o1);
      if (item != null) {
        result.add(item);
      }
    }
    return result;
  }

  @Nullable
  protected MenuItem createItem(@NotNull TransformationMenuContext context, @NotNull IntentionExecutable executable) {
    return null;
  }
}
