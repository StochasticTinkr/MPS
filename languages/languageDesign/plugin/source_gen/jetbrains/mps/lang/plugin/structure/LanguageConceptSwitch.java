package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractToolKeystroke = 0;
  public static final int AbstractToolShortcut = 1;
  public static final int ActionAccessOperation = 2;
  public static final int ActionConstructionParameterDeclaration = 3;
  public static final int ActionConstructorParameterReferenceOperation = 4;
  public static final int ActionDataParameterDeclaration = 5;
  public static final int ActionDataParameterReferenceOperation = 6;
  public static final int ActionDeclaration = 7;
  public static final int ActionGroupDeclaration = 8;
  public static final int ActionGroupMember = 9;
  public static final int ActionGroupRef = 10;
  public static final int ActionInstance = 11;
  public static final int ActionParameter = 12;
  public static final int ActionParameterCondition = 13;
  public static final int ActionParameterDeclaration = 14;
  public static final int ActionParameterReference = 15;
  public static final int ActionParameterReferenceOperation = 16;
  public static final int ActionPlaceSpecification = 17;
  public static final int ActionReference = 18;
  public static final int ActionType = 19;
  public static final int AddElementStatement = 20;
  public static final int AddKeystrokeStatement = 21;
  public static final int AddStatement = 22;
  public static final int AddTabOperation = 23;
  public static final int BaseNodeBlock = 24;
  public static final int BaseProjectOperation = 25;
  public static final int BaseToolDeclaration = 26;
  public static final int BuildGroupBlock = 27;
  public static final int ButtonCreator = 28;
  public static final int CloseTabOperation = 29;
  public static final int ConceptCondition = 30;
  public static final int ConceptFunctionParameter_AnActionEvent = 31;
  public static final int ConceptFunctionParameter_CreatorType = 32;
  public static final int ConceptFunctionParameter_IModule = 33;
  public static final int ConceptFunctionParameter_MPSProject = 34;
  public static final int ConceptFunctionParameter_Model = 35;
  public static final int ConceptFunctionParameter_OperationContext = 36;
  public static final int ConceptFunctionParameter_PreferencePage_component = 37;
  public static final int ConceptFunctionParameter_Project = 38;
  public static final int ConceptFunctionParameter_SConceptClass = 39;
  public static final int ConceptFunctionParameter_node = 40;
  public static final int ConceptsBlock = 41;
  public static final int CreateBlock = 42;
  public static final int CreateNodeAspectBlock = 43;
  public static final int CreateTabBlock = 44;
  public static final int CustomCondition = 45;
  public static final int CustomToolShortcut = 46;
  public static final int DisposeBlock = 47;
  public static final int DoUpdateBlock = 48;
  public static final int EditableModel = 49;
  public static final int EditorTab = 50;
  public static final int EditorTabReference = 51;
  public static final int ElementListContents = 52;
  public static final int EnumerateChildrenFunction = 53;
  public static final int EverywhereActionPlace = 54;
  public static final int ExecuteBlock = 55;
  public static final int GetComponentBlock = 56;
  public static final int GetGroupOperation = 57;
  public static final int GetNodeBlock = 58;
  public static final int GetNodesBlock = 59;
  public static final int GetSelectedTabOperation = 60;
  public static final int GroupAccessOperation = 61;
  public static final int GroupAnchor = 62;
  public static final int GroupContents = 63;
  public static final int GroupType = 64;
  public static final int IdeaActionsDescriptor = 65;
  public static final int IdeaConfigurationXml = 66;
  public static final int IdeaInitializerDescriptor = 67;
  public static final int IdeaPluginDependency = 68;
  public static final int InitBlock = 69;
  public static final int InterfaceExtentionPoint = 70;
  public static final int InterfaceGroup = 71;
  public static final int IsApplicableBlock = 72;
  public static final int IsApplicableTabBlock = 73;
  public static final int KeyMapKeystroke = 74;
  public static final int KeyStrokeType = 75;
  public static final int KeymapChangesDeclaration = 76;
  public static final int KeymapRef = 77;
  public static final int ListenBlock = 78;
  public static final int MPSPluginDependency = 79;
  public static final int ModificationStatement = 80;
  public static final int NodesBlock = 81;
  public static final int NonDumbAwareActions = 82;
  public static final int NumberToolShortcut = 83;
  public static final int OnAfterReadBlock = 84;
  public static final int OnBeforeWriteBlock = 85;
  public static final int Order = 86;
  public static final int OrderConstraints = 87;
  public static final int OrderReference = 88;
  public static final int ParameterCondition_ConceptFunctionParameter = 89;
  public static final int ParameterizedShortcutChange = 90;
  public static final int PersistentPropertyDeclaration = 91;
  public static final int PersistentPropertyReference = 92;
  public static final int PinTabOperation = 93;
  public static final int PluginDependency = 94;
  public static final int PopupCreator = 95;
  public static final int PreferencePage = 96;
  public static final int PreferencePageCommitBlock = 97;
  public static final int PreferencePageIsModifiedBlock = 98;
  public static final int PreferencePageResetBlock = 99;
  public static final int PreferencesComponentDeclaration = 100;
  public static final int PreferencesComponentType = 101;
  public static final int RequiredCondition = 102;
  public static final int Separator = 103;
  public static final int ShortcutChange = 104;
  public static final int SimpleActionPlace = 105;
  public static final int SimpleShortcutChange = 106;
  public static final int SmartDisposeClosureParameterDeclaration = 107;
  public static final int TabbedToolDeclaration = 108;
  public static final int TabbedToolOperation = 109;
  public static final int ToStringConceptFunction = 110;
  public static final int ToStringParameter = 111;
  public static final int ToolActionPlace = 112;
  public static final int ToolDeclaration = 113;
  public static final int ToolInstanceExpression = 114;
  public static final int ToolKeystroke = 115;
  public static final int ToolTab = 116;
  public static final int ToolType = 117;
  public static final int ToolbarCreator = 118;
  public static final int UnpinTabOperation = 119;
  public static final int UpdateBlock = 120;
  public static final int UpdateGroupBlock = 121;
  public static final int UpdateGroupFunction = 122;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x28f9e4973b424291L, 0xaeba0a1039153ab1L);
    builder.put(0x68b8d4843e384caL, AbstractToolKeystroke);
    builder.put(0x68b8d4843b5f981L, AbstractToolShortcut);
    builder.put(0x2c7cd89ac8d0060cL, ActionAccessOperation);
    builder.put(0x11daf6d2bdcL, ActionConstructionParameterDeclaration);
    builder.put(0x11daf6e60e3L, ActionConstructorParameterReferenceOperation);
    builder.put(0x11b69e025e0L, ActionDataParameterDeclaration);
    builder.put(0x11b69e60be0L, ActionDataParameterReferenceOperation);
    builder.put(0x1181ca87c38L, ActionDeclaration);
    builder.put(0x1181da058d2L, ActionGroupDeclaration);
    builder.put(0x1186b4d6ddfL, ActionGroupMember);
    builder.put(0x498be7ea73fa71fL, ActionGroupRef);
    builder.put(0x1181da2ba57L, ActionInstance);
    builder.put(0x11b737a6b7cL, ActionParameter);
    builder.put(0x4cdc1c9014f52facL, ActionParameterCondition);
    builder.put(0x118b812427fL, ActionParameterDeclaration);
    builder.put(0x1947b3e0f0959deeL, ActionParameterReference);
    builder.put(0x118d0b7fab3L, ActionParameterReferenceOperation);
    builder.put(0x57ad0f5134202ecL, ActionPlaceSpecification);
    builder.put(0x14fc9beabb2214dfL, ActionReference);
    builder.put(0x118c26632a3L, ActionType);
    builder.put(0x1190f7a2d1aL, AddElementStatement);
    builder.put(0x70d8274412a8919cL, AddKeystrokeStatement);
    builder.put(0x11dafad4b27L, AddStatement);
    builder.put(0x51d51510f17237b8L, AddTabOperation);
    builder.put(0x33f4c34299ffc088L, BaseNodeBlock);
    builder.put(0x2e56fadb4d375f27L, BaseProjectOperation);
    builder.put(0x5adc7622e710bddcL, BaseToolDeclaration);
    builder.put(0x1190f786becL, BuildGroupBlock);
    builder.put(0x1b97d211bb0207afL, ButtonCreator);
    builder.put(0x50be5f478b3541f2L, CloseTabOperation);
    builder.put(0xe9375051ff52781L, ConceptCondition);
    builder.put(0x1181d54406fL, ConceptFunctionParameter_AnActionEvent);
    builder.put(0x513f22c4bae4fb1bL, ConceptFunctionParameter_CreatorType);
    builder.put(0x11870797a07L, ConceptFunctionParameter_IModule);
    builder.put(0x118707cdfb8L, ConceptFunctionParameter_MPSProject);
    builder.put(0x513f22c4bae4fb15L, ConceptFunctionParameter_Model);
    builder.put(0x118565418cbL, ConceptFunctionParameter_OperationContext);
    builder.put(0x119e2cb827fL, ConceptFunctionParameter_PreferencePage_component);
    builder.put(0x11aa1691a43L, ConceptFunctionParameter_Project);
    builder.put(0x6785022a196ed912L, ConceptFunctionParameter_SConceptClass);
    builder.put(0x1184b3b848fL, ConceptFunctionParameter_node);
    builder.put(0x6785022a196e8effL, ConceptsBlock);
    builder.put(0x6785022a196e8f01L, CreateBlock);
    builder.put(0x33f4c34299ff0d26L, CreateNodeAspectBlock);
    builder.put(0x16c373ab7fdbb667L, CreateTabBlock);
    builder.put(0x4cdc1c9014f46cb3L, CustomCondition);
    builder.put(0x68b8d4843b76125L, CustomToolShortcut);
    builder.put(0x11aa167474fL, DisposeBlock);
    builder.put(0x1181d51127eL, DoUpdateBlock);
    builder.put(0x4ecd9810833251a2L, EditableModel);
    builder.put(0x33f4c34299ff0d2fL, EditorTab);
    builder.put(0x22035699bdd7814bL, EditorTabReference);
    builder.put(0x1190f756bc5L, ElementListContents);
    builder.put(0x120b44d9194L, EnumerateChildrenFunction);
    builder.put(0x57ad0f513474398L, EverywhereActionPlace);
    builder.put(0x1181d5d8548L, ExecuteBlock);
    builder.put(0x11aba5b01c0L, GetComponentBlock);
    builder.put(0x119b4514b56L, GetGroupOperation);
    builder.put(0x1184b2b7acbL, GetNodeBlock);
    builder.put(0x1184b2c2cdeL, GetNodesBlock);
    builder.put(0x19da07a14b82ef06L, GetSelectedTabOperation);
    builder.put(0x2c7cd89ac8d17d74L, GroupAccessOperation);
    builder.put(0x11840f36089L, GroupAnchor);
    builder.put(0x1190f747b3dL, GroupContents);
    builder.put(0x119240f9168L, GroupType);
    builder.put(0x498be7ea73fa71eL, IdeaActionsDescriptor);
    builder.put(0x2c7d36ab0e3b095aL, IdeaConfigurationXml);
    builder.put(0x45b64b294c2b3514L, IdeaInitializerDescriptor);
    builder.put(0x516313f5e8537eecL, IdeaPluginDependency);
    builder.put(0x11aa166ea48L, InitBlock);
    builder.put(0x1186bb08443L, InterfaceExtentionPoint);
    builder.put(0x1186ae0bf01L, InterfaceGroup);
    builder.put(0x118b833c6a5L, IsApplicableBlock);
    builder.put(0x33f4c34299ff128fL, IsApplicableTabBlock);
    builder.put(0x11919c665d4L, KeyMapKeystroke);
    builder.put(0x7a5e2454bfcdad14L, KeyStrokeType);
    builder.put(0x15afe07f2a9bb075L, KeymapChangesDeclaration);
    builder.put(0x498be7ea73fa87eL, KeymapRef);
    builder.put(0x33f4c34299ffc090L, ListenBlock);
    builder.put(0x2d2ad2584076330L, MPSPluginDependency);
    builder.put(0x1181de4920dL, ModificationStatement);
    builder.put(0x33f4c34299ff11e2L, NodesBlock);
    builder.put(0x14fc9beabb2214dcL, NonDumbAwareActions);
    builder.put(0x68b8d4843b76107L, NumberToolShortcut);
    builder.put(0x119e1f720a6L, OnAfterReadBlock);
    builder.put(0x119e1f3f82bL, OnBeforeWriteBlock);
    builder.put(0x22035699bdd78147L, Order);
    builder.put(0x22035699bdd78145L, OrderConstraints);
    builder.put(0x22035699bdd79211L, OrderReference);
    builder.put(0x4cdc1c9014f52fa7L, ParameterCondition_ConceptFunctionParameter);
    builder.put(0x55f30a5d1e096c3aL, ParameterizedShortcutChange);
    builder.put(0x119c44cfd36L, PersistentPropertyDeclaration);
    builder.put(0x119c466b22aL, PersistentPropertyReference);
    builder.put(0x3b9dce676f3861a1L, PinTabOperation);
    builder.put(0x516313f5e8537ee9L, PluginDependency);
    builder.put(0x1b97d211bb0207abL, PopupCreator);
    builder.put(0x119e269a79fL, PreferencePage);
    builder.put(0x119e291160cL, PreferencePageCommitBlock);
    builder.put(0x119e7219d37L, PreferencePageIsModifiedBlock);
    builder.put(0x119e28fc2f6L, PreferencePageResetBlock);
    builder.put(0x119c44c226fL, PreferencesComponentDeclaration);
    builder.put(0x119c497fc64L, PreferencesComponentType);
    builder.put(0x4cdc1c9014f52faeL, RequiredCondition);
    builder.put(0x1188a1ecd8aL, Separator);
    builder.put(0x55f30a5d1e092278L, ShortcutChange);
    builder.put(0x57ad0f5134202ebL, SimpleActionPlace);
    builder.put(0x15afe07f2a9bb076L, SimpleShortcutChange);
    builder.put(0x6bd88e2e00aae68L, SmartDisposeClosureParameterDeclaration);
    builder.put(0x51d51510f17223c5L, TabbedToolDeclaration);
    builder.put(0x705d0a376e80e04cL, TabbedToolOperation);
    builder.put(0x11db00924aaL, ToStringConceptFunction);
    builder.put(0x11db00cd5f8L, ToStringParameter);
    builder.put(0x57ad0f513426286L, ToolActionPlace);
    builder.put(0x1181ca8f3faL, ToolDeclaration);
    builder.put(0x11870178843L, ToolInstanceExpression);
    builder.put(0x68b8d4843b765b0L, ToolKeystroke);
    builder.put(0x6048eaf0c78f324eL, ToolTab);
    builder.put(0x11961ebbf24L, ToolType);
    builder.put(0x1b97d211bb01f6f6L, ToolbarCreator);
    builder.put(0x4ac06ca1bf6e6788L, UnpinTabOperation);
    builder.put(0x118b8325461L, UpdateBlock);
    builder.put(0x120b44a69d3L, UpdateGroupBlock);
    builder.put(0x120b44b9ee2L, UpdateGroupFunction);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
