package jetbrains.mps.lang.aspect.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(9);
  /*package*/ final ConceptDescriptor myConceptAspectMethodDescriptor = createDescriptorForAspectMethodDescriptor();
  /*package*/ final ConceptDescriptor myConceptGenerationDescriptor = createDescriptorForGenerationDescriptor();
  /*package*/ final ConceptDescriptor myConceptGenerationDescriptor_ByInterface = createDescriptorForGenerationDescriptor_ByInterface();
  /*package*/ final ConceptDescriptor myConceptGenerationDescriptor_Class = createDescriptorForGenerationDescriptor_Class();
  /*package*/ final ConceptDescriptor myConceptHelpURL = createDescriptorForHelpURL();
  /*package*/ final ConceptDescriptor myConceptIAspectConcept = createDescriptorForIAspectConcept();
  /*package*/ final ConceptDescriptor myConceptLanguageAspectDescriptor = createDescriptorForLanguageAspectDescriptor();
  /*package*/ final ConceptDescriptor myConceptLanguageReference = createDescriptorForLanguageReference();
  /*package*/ final ConceptDescriptor myConceptSimpleLanguageAspectDescriptor = createDescriptorForSimpleLanguageAspectDescriptor();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAspectMethodDescriptor.getId(), 0);
    myIndexMap.put(myConceptGenerationDescriptor.getId(), 1);
    myIndexMap.put(myConceptGenerationDescriptor_ByInterface.getId(), 2);
    myIndexMap.put(myConceptGenerationDescriptor_Class.getId(), 3);
    myIndexMap.put(myConceptHelpURL.getId(), 4);
    myIndexMap.put(myConceptIAspectConcept.getId(), 5);
    myIndexMap.put(myConceptLanguageAspectDescriptor.getId(), 6);
    myIndexMap.put(myConceptLanguageReference.getId(), 7);
    myIndexMap.put(myConceptSimpleLanguageAspectDescriptor.getId(), 8);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAspectMethodDescriptor, myConceptGenerationDescriptor, myConceptGenerationDescriptor_ByInterface, myConceptGenerationDescriptor_Class, myConceptHelpURL, myConceptIAspectConcept, myConceptLanguageAspectDescriptor, myConceptLanguageReference, myConceptSimpleLanguageAspectDescriptor);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAspectMethodDescriptor;
      case 1:
        return myConceptGenerationDescriptor;
      case 2:
        return myConceptGenerationDescriptor_ByInterface;
      case 3:
        return myConceptGenerationDescriptor_Class;
      case 4:
        return myConceptHelpURL;
      case 5:
        return myConceptIAspectConcept;
      case 6:
        return myConceptLanguageAspectDescriptor;
      case 7:
        return myConceptLanguageReference;
      case 8:
        return myConceptSimpleLanguageAspectDescriptor;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAspectMethodDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.AspectMethodDescriptor", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2b0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x4ac0e6949ea3f2b1L, "method", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L), false), new ConceptDescriptorBuilder.Ref(0x4ac0e6949ea3f2b9L, "cncpt", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), false)).references("method", "cncpt").childDescriptors(new ConceptDescriptorBuilder.Link(0x4ac0e6949ea3f2b4L, "baseConceptFunc", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L), true, false, false)).children(new String[]{"baseConceptFunc"}, new boolean[]{false}).sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "5386558680326206128")).create();
  }
  private static ConceptDescriptor createDescriptorForGenerationDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.GenerationDescriptor", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7ce2ed69c7e7de33L, "mainIntfcClass", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L), false)).references("mainIntfcClass").abstract_().sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "6659466008484795896")).create();
  }
  private static ConceptDescriptor createDescriptorForGenerationDescriptor_ByInterface() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.GenerationDescriptor_ByInterface", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2abL)).super_("jetbrains.mps.lang.aspect.structure.GenerationDescriptor").version(1).super_(MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L)).parents("jetbrains.mps.lang.aspect.structure.GenerationDescriptor").parentIds(MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4ac0e6949ea3f2adL, "methods", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2b0L), false, true, false)).children(new String[]{"methods"}, new boolean[]{true}).alias("descriptor generator", "").sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "5386558680326206123")).create();
  }
  private static ConceptDescriptor createDescriptorForGenerationDescriptor_Class() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.GenerationDescriptor_Class", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c2c36f4ea0d3b2fL)).super_("jetbrains.mps.lang.aspect.structure.GenerationDescriptor").version(1).super_(MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L)).parents("jetbrains.mps.lang.aspect.structure.GenerationDescriptor").parentIds(MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5921e5e41155f7ddL, "implTemplate", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L), false)).references("implTemplate").alias("generate descriptor instantiation only", "").sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "6641743975991294767")).create();
  }
  private static ConceptDescriptor createDescriptorForHelpURL() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.HelpURL", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x47d8f9811b73d397L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x47d8f9811b73d398L, "url")).properties("url").sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "5177162104569058199")).create();
  }
  private static ConceptDescriptor createDescriptorForIAspectConcept() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.IAspectConcept", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x7bcf8452e0dac0c9L)).version(1).interface_().sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "8921494878338859209")).create();
  }
  private static ConceptDescriptor createDescriptorForLanguageAspectDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.LanguageAspectDescriptor", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2d72cdccef70b086L)).super_("jetbrains.mps.baseLanguage.structure.ClassConcept").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L)).parents("jetbrains.mps.baseLanguage.structure.ClassConcept", "jetbrains.mps.baseLanguage.lightweightdsl.structure.AutoInitDSLClass").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL)).sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "3274906159125934214")).create();
  }
  private static ConceptDescriptor createDescriptorForLanguageReference() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.LanguageReference", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9c87aL)).super_("jetbrains.mps.lang.smodel.structure.LanguageRefExpression").version(1).super_(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x3e6a40ba27dd70f3L)).parents("jetbrains.mps.lang.smodel.structure.LanguageRefExpression").parentIds(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x3e6a40ba27dd70f3L)).sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "3433054418424678522")).create();
  }
  private static ConceptDescriptor createDescriptorForSimpleLanguageAspectDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.aspect.structure.SimpleLanguageAspectDescriptor", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9b076L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x2fa4a8cdf0c9b099L, "helpUrl")).properties("helpUrl").childDescriptors(new ConceptDescriptorBuilder.Link(0x2fa4a8cdf0c9b094L, "oldMainLanguages", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9c87aL), true, true, false), new ConceptDescriptorBuilder.Link(0x2fa4a8cdf0c9b096L, "oldAdditionalLanguages", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9c87aL), true, true, false), new ConceptDescriptorBuilder.Link(0x54be5be5620c1b77L, "mainLanguages", MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x312abca18ab8c318L), false, true, false), new ConceptDescriptorBuilder.Link(0x54be5be5620c1b7dL, "additionalLanguages", MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x312abca18ab8c318L), true, true, false), new ConceptDescriptorBuilder.Link(0x2fa4a8cdf0cff495L, "icon", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bbL), true, false, false), new ConceptDescriptorBuilder.Link(0x47d8f9811b759b89L, "httpHelpUrl", MetaIdFactory.conceptId(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x47d8f9811b73d397L), true, false, false)).children(new String[]{"oldMainLanguages", "oldAdditionalLanguages", "mainLanguages", "additionalLanguages", "icon", "httpHelpUrl"}, new boolean[]{true, true, true, true, false, false}).rootable().sourceNode(new SNodePointer("r:2ea71bfd-fe13-4525-9346-023b05757b39(jetbrains.mps.lang.aspect.structure)", "3433054418424672374")).create();
  }
}
