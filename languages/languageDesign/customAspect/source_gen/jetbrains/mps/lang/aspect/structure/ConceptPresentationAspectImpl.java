package jetbrains.mps.lang.aspect.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_AspectMethodDescriptor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GenerationDescriptor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GenerationDescriptor_ByInterface = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GenerationDescriptor_Class = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_HelpURL = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IAspectConcept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LanguageAspectDescriptor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LanguageReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_SimpleLanguageAspectDescriptor = new ConceptPresentationBuilder().deprecated(MetaAdapterFactory.getProperty(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9b076L, 0x2fa4a8cdf0c9b099L, "helpUrl")).create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_lpa09p_a0k.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_AspectMethodDescriptor;
          }
          break;
        case 1:
          if (true) {
            return props_GenerationDescriptor;
          }
          break;
        case 2:
          if (true) {
            return props_GenerationDescriptor_ByInterface;
          }
          break;
        case 3:
          if (true) {
            return props_GenerationDescriptor_Class;
          }
          break;
        case 4:
          if (true) {
            return props_HelpURL;
          }
          break;
        case 5:
          if (true) {
            return props_IAspectConcept;
          }
          break;
        case 6:
          if (true) {
            return props_LanguageAspectDescriptor;
          }
          break;
        case 7:
          if (true) {
            return props_LanguageReference;
          }
          break;
        case 8:
          if (true) {
            return props_SimpleLanguageAspectDescriptor;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_lpa09p_a0k = buildConceptIndices(MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2b0L, "AspectMethodDescriptor"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c6b2d0d258655f8L, "GenerationDescriptor"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2abL, "GenerationDescriptor_ByInterface"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x5c2c36f4ea0d3b2fL, "GenerationDescriptor_Class"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x47d8f9811b73d397L, "HelpURL"), MetaAdapterFactory.getInterfaceConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x7bcf8452e0dac0c9L, "IAspectConcept"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2d72cdccef70b086L, "LanguageAspectDescriptor"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9c87aL, "LanguageReference"), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9b076L, "SimpleLanguageAspectDescriptor"));
}
