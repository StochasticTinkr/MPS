package jetbrains.mps.lang.scopes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ComeFromExpression = 0;
  public static final int CompositeWithParentScopeExpression = 1;
  public static final int ParentScope = 2;
  public static final int UniformScopeProvider = 3;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xd8f591ec4d864af2L, 0x9f92a9e93c803ffaL);
    builder.put(0x701a981462928bdfL, ComeFromExpression);
    builder.put(0x701a9814629119bdL, CompositeWithParentScopeExpression);
    builder.put(0x701a981462920832L, ParentScope);
    builder.put(0x299275268ba48780L, UniformScopeProvider);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
