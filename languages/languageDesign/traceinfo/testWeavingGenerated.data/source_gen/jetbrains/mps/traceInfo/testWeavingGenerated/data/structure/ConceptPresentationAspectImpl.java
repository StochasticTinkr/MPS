package jetbrains.mps.traceInfo.testWeavingGenerated.data.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ChildConceptWeave = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ChildConceptWeaveEach = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ChildConceptWeaveEachMany = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ChildConceptWeaveMany = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_RootConcept = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ChildConceptWeave:
        return props_ChildConceptWeave;
      case LanguageConceptSwitch.ChildConceptWeaveEach:
        return props_ChildConceptWeaveEach;
      case LanguageConceptSwitch.ChildConceptWeaveEachMany:
        return props_ChildConceptWeaveEachMany;
      case LanguageConceptSwitch.ChildConceptWeaveMany:
        return props_ChildConceptWeaveMany;
      case LanguageConceptSwitch.RootConcept:
        return props_RootConcept;
    }
    return null;
  }
}
