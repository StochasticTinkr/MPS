package jetbrains.mps.traceInfo.testWeavingGenerated.data.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(5);
  /*package*/ final ConceptDescriptor myConceptChildConceptWeave = new ConceptDescriptorBuilder("jetbrains.mps.traceInfo.testWeavingGenerated.data.structure.ChildConceptWeave", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)", "6186432342008329116")).create();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveEach = new ConceptDescriptorBuilder("jetbrains.mps.traceInfo.testWeavingGenerated.data.structure.ChildConceptWeaveEach", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)", "6186432342008329114")).create();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveEachMany = new ConceptDescriptorBuilder("jetbrains.mps.traceInfo.testWeavingGenerated.data.structure.ChildConceptWeaveEachMany", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681163L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)", "6186432342008533347")).create();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveMany = new ConceptDescriptorBuilder("jetbrains.mps.traceInfo.testWeavingGenerated.data.structure.ChildConceptWeaveMany", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681159L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)", "6186432342008533337")).create();
  /*package*/ final ConceptDescriptor myConceptRootConcept = new ConceptDescriptorBuilder("jetbrains.mps.traceInfo.testWeavingGenerated.data.structure.RootConcept", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64caccL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x55da9f701c64f39eL, "weave", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39cL), true, true, false), new ConceptDescriptorBuilder.Link(0x55da9f701c64f39fL, "weaveEach", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39aL), true, true, false), new ConceptDescriptorBuilder.Link(0x55da9f701c68116eL, "weaveMany", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681159L), true, true, false), new ConceptDescriptorBuilder.Link(0x55da9f701c68116fL, "weaveEachMany", MetaIdFactory.conceptId(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681163L), true, true, false)).children(new String[]{"weave", "weaveEach", "weaveMany", "weaveEachMany"}, new boolean[]{true, true, true, true}).rootable().sourceNode(new SNodePointer("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)", "6186432342008318668")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptChildConceptWeave.getId(), 0);
    myIndexMap.put(myConceptChildConceptWeaveEach.getId(), 1);
    myIndexMap.put(myConceptChildConceptWeaveEachMany.getId(), 2);
    myIndexMap.put(myConceptChildConceptWeaveMany.getId(), 3);
    myIndexMap.put(myConceptRootConcept.getId(), 4);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChildConceptWeave, myConceptChildConceptWeaveEach, myConceptChildConceptWeaveEachMany, myConceptChildConceptWeaveMany, myConceptRootConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptChildConceptWeave;
      case 1:
        return myConceptChildConceptWeaveEach;
      case 2:
        return myConceptChildConceptWeaveEachMany;
      case 3:
        return myConceptChildConceptWeaveMany;
      case 4:
        return myConceptRootConcept;
      default:
        throw new IllegalStateException();
    }
  }
}
