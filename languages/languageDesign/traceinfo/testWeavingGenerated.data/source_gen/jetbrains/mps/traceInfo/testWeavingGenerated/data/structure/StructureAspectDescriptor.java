package jetbrains.mps.traceInfo.testWeavingGenerated.data.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(5);
  /*package*/ final ConceptDescriptor myConceptChildConceptWeave = createDescriptorForChildConceptWeave();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveEach = createDescriptorForChildConceptWeaveEach();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveEachMany = createDescriptorForChildConceptWeaveEachMany();
  /*package*/ final ConceptDescriptor myConceptChildConceptWeaveMany = createDescriptorForChildConceptWeaveMany();
  /*package*/ final ConceptDescriptor myConceptRootConcept = createDescriptorForRootConcept();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptChildConceptWeave.getId(), 0);
    myIndexMap.put(myConceptChildConceptWeaveEach.getId(), 1);
    myIndexMap.put(myConceptChildConceptWeaveEachMany.getId(), 2);
    myIndexMap.put(myConceptChildConceptWeaveMany.getId(), 3);
    myIndexMap.put(myConceptRootConcept.getId(), 4);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChildConceptWeave, myConceptChildConceptWeaveEach, myConceptChildConceptWeaveEachMany, myConceptChildConceptWeaveMany, myConceptRootConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptChildConceptWeave;
      case 1:
        return myConceptChildConceptWeaveEach;
      case 2:
        return myConceptChildConceptWeaveEachMany;
      case 3:
        return myConceptChildConceptWeaveMany;
      case 4:
        return myConceptRootConcept;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForChildConceptWeave() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.traceInfo.testWeavingGenerated.data", "ChildConceptWeave", 0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)/6186432342008329116");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChildConceptWeaveEach() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.traceInfo.testWeavingGenerated.data", "ChildConceptWeaveEach", 0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)/6186432342008329114");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChildConceptWeaveEachMany() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.traceInfo.testWeavingGenerated.data", "ChildConceptWeaveEachMany", 0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681163L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)/6186432342008533347");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChildConceptWeaveMany() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.traceInfo.testWeavingGenerated.data", "ChildConceptWeaveMany", 0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681159L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)/6186432342008533337");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRootConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.traceInfo.testWeavingGenerated.data", "RootConcept", 0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64caccL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b8c93b44-499b-404a-a011-c0847b38eb58(jetbrains.mps.traceInfo.testWeavingGenerated.data.structure)/6186432342008318668");
    b.aggregate("weave", 0x55da9f701c64f39eL).target(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39cL).optional(true).ordered(true).multiple(true).origin("6186432342008329118").done();
    b.aggregate("weaveEach", 0x55da9f701c64f39fL).target(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c64f39aL).optional(true).ordered(true).multiple(true).origin("6186432342008329119").done();
    b.aggregate("weaveMany", 0x55da9f701c68116eL).target(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681159L).optional(true).ordered(true).multiple(true).origin("6186432342008533358").done();
    b.aggregate("weaveEachMany", 0x55da9f701c68116fL).target(0xce517356fc9a4e78L, 0x86066e7a36ff0671L, 0x55da9f701c681163L).optional(true).ordered(true).multiple(true).origin("6186432342008533359").done();
    return b.create();
  }
}
