package jetbrains.mps.lang.smodel.query.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(32);
  /*package*/ final ConceptDescriptor myConceptAbstractPrintExpression_old = createDescriptorForAbstractPrintExpression_old();
  /*package*/ final ConceptDescriptor myConceptBLCommand_old = createDescriptorForBLCommand_old();
  /*package*/ final ConceptDescriptor myConceptBLExpression_old = createDescriptorForBLExpression_old();
  /*package*/ final ConceptDescriptor myConceptCustomScope = createDescriptorForCustomScope();
  /*package*/ final ConceptDescriptor myConceptExpressionHelpProvider = createDescriptorForExpressionHelpProvider();
  /*package*/ final ConceptDescriptor myConceptGlobalScope_old = createDescriptorForGlobalScope_old();
  /*package*/ final ConceptDescriptor myConceptHelpProvider = createDescriptorForHelpProvider();
  /*package*/ final ConceptDescriptor myConceptInstancesExpression = createDescriptorForInstancesExpression();
  /*package*/ final ConceptDescriptor myConceptModelScope = createDescriptorForModelScope();
  /*package*/ final ConceptDescriptor myConceptModelsExpression = createDescriptorForModelsExpression();
  /*package*/ final ConceptDescriptor myConceptModulesExpression = createDescriptorForModulesExpression();
  /*package*/ final ConceptDescriptor myConceptModulesScope = createDescriptorForModulesScope();
  /*package*/ final ConceptDescriptor myConceptNodesExpression = createDescriptorForNodesExpression();
  /*package*/ final ConceptDescriptor myConceptOperationHelpProvider = createDescriptorForOperationHelpProvider();
  /*package*/ final ConceptDescriptor myConceptPrintExpression_old = createDescriptorForPrintExpression_old();
  /*package*/ final ConceptDescriptor myConceptPrintNodeExpression_old = createDescriptorForPrintNodeExpression_old();
  /*package*/ final ConceptDescriptor myConceptPrintNodeReferenceExpression_old = createDescriptorForPrintNodeReferenceExpression_old();
  /*package*/ final ConceptDescriptor myConceptPrintSequenceExpression_old = createDescriptorForPrintSequenceExpression_old();
  /*package*/ final ConceptDescriptor myConceptPrintTextExpression_old = createDescriptorForPrintTextExpression_old();
  /*package*/ final ConceptDescriptor myConceptProjectExpression_old = createDescriptorForProjectExpression_old();
  /*package*/ final ConceptDescriptor myConceptProjectScope_old = createDescriptorForProjectScope_old();
  /*package*/ final ConceptDescriptor myConceptQueryExpression = createDescriptorForQueryExpression();
  /*package*/ final ConceptDescriptor myConceptQueryParameter = createDescriptorForQueryParameter();
  /*package*/ final ConceptDescriptor myConceptQueryParameterExact = createDescriptorForQueryParameterExact();
  /*package*/ final ConceptDescriptor myConceptQueryParameterIncludeReadOnly = createDescriptorForQueryParameterIncludeReadOnly();
  /*package*/ final ConceptDescriptor myConceptQueryParameterList = createDescriptorForQueryParameterList();
  /*package*/ final ConceptDescriptor myConceptQueryParameterScope = createDescriptorForQueryParameterScope();
  /*package*/ final ConceptDescriptor myConceptReferencesExpression = createDescriptorForReferencesExpression();
  /*package*/ final ConceptDescriptor myConceptScopeParameter = createDescriptorForScopeParameter();
  /*package*/ final ConceptDescriptor myConceptShowExpression_old = createDescriptorForShowExpression_old();
  /*package*/ final ConceptDescriptor myConceptUsagesExpression = createDescriptorForUsagesExpression();
  /*package*/ final ConceptDescriptor myConceptWithStatement = createDescriptorForWithStatement();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractPrintExpression_old.getId(), 0);
    myIndexMap.put(myConceptBLCommand_old.getId(), 1);
    myIndexMap.put(myConceptBLExpression_old.getId(), 2);
    myIndexMap.put(myConceptCustomScope.getId(), 3);
    myIndexMap.put(myConceptExpressionHelpProvider.getId(), 4);
    myIndexMap.put(myConceptGlobalScope_old.getId(), 5);
    myIndexMap.put(myConceptHelpProvider.getId(), 6);
    myIndexMap.put(myConceptInstancesExpression.getId(), 7);
    myIndexMap.put(myConceptModelScope.getId(), 8);
    myIndexMap.put(myConceptModelsExpression.getId(), 9);
    myIndexMap.put(myConceptModulesExpression.getId(), 10);
    myIndexMap.put(myConceptModulesScope.getId(), 11);
    myIndexMap.put(myConceptNodesExpression.getId(), 12);
    myIndexMap.put(myConceptOperationHelpProvider.getId(), 13);
    myIndexMap.put(myConceptPrintExpression_old.getId(), 14);
    myIndexMap.put(myConceptPrintNodeExpression_old.getId(), 15);
    myIndexMap.put(myConceptPrintNodeReferenceExpression_old.getId(), 16);
    myIndexMap.put(myConceptPrintSequenceExpression_old.getId(), 17);
    myIndexMap.put(myConceptPrintTextExpression_old.getId(), 18);
    myIndexMap.put(myConceptProjectExpression_old.getId(), 19);
    myIndexMap.put(myConceptProjectScope_old.getId(), 20);
    myIndexMap.put(myConceptQueryExpression.getId(), 21);
    myIndexMap.put(myConceptQueryParameter.getId(), 22);
    myIndexMap.put(myConceptQueryParameterExact.getId(), 23);
    myIndexMap.put(myConceptQueryParameterIncludeReadOnly.getId(), 24);
    myIndexMap.put(myConceptQueryParameterList.getId(), 25);
    myIndexMap.put(myConceptQueryParameterScope.getId(), 26);
    myIndexMap.put(myConceptReferencesExpression.getId(), 27);
    myIndexMap.put(myConceptScopeParameter.getId(), 28);
    myIndexMap.put(myConceptShowExpression_old.getId(), 29);
    myIndexMap.put(myConceptUsagesExpression.getId(), 30);
    myIndexMap.put(myConceptWithStatement.getId(), 31);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractPrintExpression_old, myConceptBLCommand_old, myConceptBLExpression_old, myConceptCustomScope, myConceptExpressionHelpProvider, myConceptGlobalScope_old, myConceptHelpProvider, myConceptInstancesExpression, myConceptModelScope, myConceptModelsExpression, myConceptModulesExpression, myConceptModulesScope, myConceptNodesExpression, myConceptOperationHelpProvider, myConceptPrintExpression_old, myConceptPrintNodeExpression_old, myConceptPrintNodeReferenceExpression_old, myConceptPrintSequenceExpression_old, myConceptPrintTextExpression_old, myConceptProjectExpression_old, myConceptProjectScope_old, myConceptQueryExpression, myConceptQueryParameter, myConceptQueryParameterExact, myConceptQueryParameterIncludeReadOnly, myConceptQueryParameterList, myConceptQueryParameterScope, myConceptReferencesExpression, myConceptScopeParameter, myConceptShowExpression_old, myConceptUsagesExpression, myConceptWithStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractPrintExpression_old;
      case 1:
        return myConceptBLCommand_old;
      case 2:
        return myConceptBLExpression_old;
      case 3:
        return myConceptCustomScope;
      case 4:
        return myConceptExpressionHelpProvider;
      case 5:
        return myConceptGlobalScope_old;
      case 6:
        return myConceptHelpProvider;
      case 7:
        return myConceptInstancesExpression;
      case 8:
        return myConceptModelScope;
      case 9:
        return myConceptModelsExpression;
      case 10:
        return myConceptModulesExpression;
      case 11:
        return myConceptModulesScope;
      case 12:
        return myConceptNodesExpression;
      case 13:
        return myConceptOperationHelpProvider;
      case 14:
        return myConceptPrintExpression_old;
      case 15:
        return myConceptPrintNodeExpression_old;
      case 16:
        return myConceptPrintNodeReferenceExpression_old;
      case 17:
        return myConceptPrintSequenceExpression_old;
      case 18:
        return myConceptPrintTextExpression_old;
      case 19:
        return myConceptProjectExpression_old;
      case 20:
        return myConceptProjectScope_old;
      case 21:
        return myConceptQueryExpression;
      case 22:
        return myConceptQueryParameter;
      case 23:
        return myConceptQueryParameterExact;
      case 24:
        return myConceptQueryParameterIncludeReadOnly;
      case 25:
        return myConceptQueryParameterList;
      case 26:
        return myConceptQueryParameterScope;
      case 27:
        return myConceptReferencesExpression;
      case 28:
        return myConceptScopeParameter;
      case 29:
        return myConceptShowExpression_old;
      case 30:
        return myConceptUsagesExpression;
      case 31:
        return myConceptWithStatement;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractPrintExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7820875636626932768");
    b.aggregate("object_old", 0x7417cca3eb1ff761L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("8365379837260461921").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBLCommand_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "BLCommand_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x4bd43869e610f3e9L);
    b.class_(false, false, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/5464054275389846505");
    b.aggregate("body_old", 0x188f8efcef6cea65L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1769790395579689573").done();
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBLExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "BLExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6a40a3596560a9d9L);
    b.class_(false, false, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7656298970878093785");
    b.aggregate("expression_old", 0x6a40a3596560aa42L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("7656298970878093890").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "CustomScope", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x307931d0f98575c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/3492877759611762121");
    b.aggregate("scope", 0x307931d0f985950eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("3492877759611770126").done();
    b.alias("custom");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionHelpProvider() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ExpressionHelpProvider", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L);
    b.interface_();
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x690b986730edd07L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7006261637496548496");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGlobalScope_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "GlobalScope_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add42L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004134636866");
    b.alias("global");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHelpProvider() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "HelpProvider", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x690b986730edd07L);
    b.interface_();
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/473081947981012231");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstancesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "InstancesExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6b643f33718aa10dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7738379549910147341");
    b.aggregate("conceptArg", 0x6b643f33718aa10eL).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x118f285e4f7L).optional(false).ordered(true).multiple(false).origin("7738379549910147342").done();
    b.alias("#instances");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ModelScope", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x307931d0f952484eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/3492877759608408142");
    b.aggregate("model", 0x307931d0f952484fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("3492877759608408143").done();
    b.alias("models");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ModelsExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675beab2dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/6864030874027862829");
    b.alias("#models");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModulesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ModulesExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675cc2262L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/6864030874028745314");
    b.alias("#modules");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModulesScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ModulesScope", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x263c7e661fa6d53dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/2755216049126692157");
    b.aggregate("module", 0x307931d0f94af768L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("3492877759607928680").done();
    b.alias("modules");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "NodesExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x272b1214886bd08eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/2822369470875160718");
    b.alias("#nodes");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationHelpProvider() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "OperationHelpProvider", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5252d9021b8b6c03L);
    b.interface_();
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x690b986730edd07L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/5932042262275648515");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrintExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "PrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6979f0787b2a9377L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7600370246417552247");
    b.alias("#print");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrintNodeExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "PrintNodeExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x4c7a26b31bd03b59L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/5510759644748856153");
    b.alias("#printNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrintNodeReferenceExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "PrintNodeReferenceExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f195a051bd9bddcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/6852607286009511388");
    b.alias("#printNodeRef");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrintSequenceExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "PrintSequenceExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6979f0787b7db64fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/7600370246423000655");
    b.alias("#printSequence");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrintTextExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "PrintTextExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x7417cca3eb1feca9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.AbstractPrintExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6c8954f469a7c420L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/8365379837260459177");
    b.alias("#printText");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ProjectExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0xa721a59126bb908L);
    b.class_(false, false, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/752693057587755272");
    b.alias("#project");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectScope_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ProjectScope_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763adda2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004134636962");
    b.alias("project");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004131544317");
    b.aggregate("parameter", 0x3bc644217616e548L).target(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc644217616ddf9L).optional(true).ordered(true).multiple(false).origin("4307205004132279624").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L);
    b.class_(false, true, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004131544565");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryParameterExact() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryParameterExact", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x967fc67f6f09d70L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/677787792397344112");
    b.alias("exact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryParameterIncludeReadOnly() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryParameterIncludeReadOnly", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc644217618ec86L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004132412550");
    b.alias("r/o+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryParameterList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryParameterList", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc644217616ddf9L);
    b.class_(false, false, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004132277753");
    b.aggregate("parameter", 0x3bc6442176a262a6L).target(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L).optional(true).ordered(true).multiple(true).origin("4307205004141421222").done();
    b.alias("< .. >");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryParameterScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "QueryParameterScope", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc644217618ed2fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004132412719");
    b.aggregate("value", 0x3bc64421763bef89L).target(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL).optional(false).ordered(true).multiple(false).origin("4307205004134707081").done();
    b.alias("scope");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferencesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ReferencesExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x57bda059470950bdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/6322385757202370749");
    b.alias("#references");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScopeParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.class_(false, true, false);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4307205004134636875");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShowExpression_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "ShowExpression_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x75bb0160f191d79fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/8483375838963816351");
    b.aggregate("object_old", 0x6979f0787b81e875L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("7600370246423275637").done();
    b.alias("#show");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUsagesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "UsagesExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x75bb0160f191d6ebL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/8483375838963816171");
    b.aggregate("node", 0x75bb0160f191d6ecL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("8483375838963816172").done();
    b.alias("#usages");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWithStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.smodel.query", "WithStatement", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3ac2ae2c0bcf368bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)/4234138103881610891");
    b.aggregate("stmts", 0x3ac2ae2c0bcf368cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("4234138103881610892").done();
    b.aggregate("scope", 0x3ac2ae2c0bcf36b7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("4234138103881610935").done();
    b.alias("with");
    return b.create();
  }
}
