package jetbrains.mps.lang.smodel.query.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.cells.BigCellUtil;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

/*package*/ class QueryParameterIncludeReadOnly_old_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public QueryParameterIncludeReadOnly_old_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createComponent_bfdwp9_a();
  }

  private EditorCell createComponent_bfdwp9_a() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "jetbrains.mps.lang.core.editor.alias");
    EditorCell bigCell = BigCellUtil.findBigCell(editorCell, getNode());
    if (bigCell != null) {
      bigCell.setBig(true);
      bigCell.setCellContext(getCellFactory().getCellContext());
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.STRIKE_OUT, true);
    style.set(StyleAttributes.AUTO_DELETABLE, _StyleParameter_QueryFunction_bfdwp9_a1a());
    editorCell.getStyle().putAll(style);
    return editorCell;
  }
  private boolean _StyleParameter_QueryFunction_bfdwp9_a1a() {
    return SNodeOperations.getNextSibling(getNode()) == null && SNodeOperations.getPrevSibling(getNode()) == null;
  }
}
