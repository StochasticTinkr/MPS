package jetbrains.mps.lang.smodel.query.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;

public class QueryParameterList_Actions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new QueryParameterList_Actions.QueryParameterList_Actions_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new QueryParameterList_Actions.QueryParameterList_Actions_BACKSPACE(node));
  }
  public static class QueryParameterList_Actions_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public QueryParameterList_Actions_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode queryExpression = SNodeOperations.as(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL, "jetbrains.mps.lang.smodel.query.structure.QueryExpression"));
      SNodeOperations.deleteNode(node);
      if (queryExpression != null) {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, queryExpression, "ALIAS_EDITOR_COMPONENT", -1);
      }
    }
  }
  public static class QueryParameterList_Actions_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public QueryParameterList_Actions_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode queryExpression = SNodeOperations.as(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL, "jetbrains.mps.lang.smodel.query.structure.QueryExpression"));
      SNodeOperations.deleteNode(node);
      if (queryExpression != null) {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, queryExpression, "ALIAS_EDITOR_COMPONENT", -1);
      }
    }
  }
}
