package jetbrains.mps.lang.smodel.query.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.openapi.editor.cells.CellAction;

public class QueryExpression_Actions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.BACKSPACE, new QueryExpression_Actions.QueryExpression_Actions_BACKSPACE(node));
  }
  public static class QueryExpression_Actions_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public QueryExpression_Actions_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      CellAction parentAction = editorContext.getEditorComponent().getActionHandler().getApplicableCellAction(editorContext.getEditorComponent().findNodeCell(node), CellActionType.BACKSPACE);
      parentAction.execute(editorContext);
    }
  }
}
