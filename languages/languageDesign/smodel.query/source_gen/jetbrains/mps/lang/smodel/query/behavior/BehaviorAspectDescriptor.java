package jetbrains.mps.lang.smodel.query.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myHelpProvider__BehaviorDescriptor = new HelpProvider__BehaviorDescriptor();
  private final BHDescriptor myNodesExpression__BehaviorDescriptor = new NodesExpression__BehaviorDescriptor();
  private final BHDescriptor myQueryExpression__BehaviorDescriptor = new QueryExpression__BehaviorDescriptor();
  private final BHDescriptor myOperationHelpProvider__BehaviorDescriptor = new OperationHelpProvider__BehaviorDescriptor();
  private final BHDescriptor myReferencesExpression__BehaviorDescriptor = new ReferencesExpression__BehaviorDescriptor();
  private final BHDescriptor myModelsExpression__BehaviorDescriptor = new ModelsExpression__BehaviorDescriptor();
  private final BHDescriptor myModulesExpression__BehaviorDescriptor = new ModulesExpression__BehaviorDescriptor();
  private final BHDescriptor myExpressionHelpProvider__BehaviorDescriptor = new ExpressionHelpProvider__BehaviorDescriptor();
  private final BHDescriptor myInstancesExpression__BehaviorDescriptor = new InstancesExpression__BehaviorDescriptor();
  private final BHDescriptor myUsagesExpression__BehaviorDescriptor = new UsagesExpression__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0n.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myExpressionHelpProvider__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myHelpProvider__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myInstancesExpression__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myModelsExpression__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myModulesExpression__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myNodesExpression__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myOperationHelpProvider__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myQueryExpression__BehaviorDescriptor;
          }
          break;
        case 8:
          if (true) {
            return myReferencesExpression__BehaviorDescriptor;
          }
          break;
        case 9:
          if (true) {
            return myUsagesExpression__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0n = buildConceptIndices(MetaAdapterFactory.getInterfaceConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L, "jetbrains.mps.lang.smodel.query.structure.ExpressionHelpProvider"), MetaAdapterFactory.getInterfaceConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x690b986730edd07L, "jetbrains.mps.lang.smodel.query.structure.HelpProvider"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6b643f33718aa10dL, "jetbrains.mps.lang.smodel.query.structure.InstancesExpression"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675beab2dL, "jetbrains.mps.lang.smodel.query.structure.ModelsExpression"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675cc2262L, "jetbrains.mps.lang.smodel.query.structure.ModulesExpression"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x272b1214886bd08eL, "jetbrains.mps.lang.smodel.query.structure.NodesExpression"), MetaAdapterFactory.getInterfaceConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5252d9021b8b6c03L, "jetbrains.mps.lang.smodel.query.structure.OperationHelpProvider"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL, "jetbrains.mps.lang.smodel.query.structure.QueryExpression"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x57bda059470950bdL, "jetbrains.mps.lang.smodel.query.structure.ReferencesExpression"), MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x75bb0160f191d6ebL, "jetbrains.mps.lang.smodel.query.structure.UsagesExpression"));
}
