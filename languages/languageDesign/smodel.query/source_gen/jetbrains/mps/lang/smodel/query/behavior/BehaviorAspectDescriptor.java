package jetbrains.mps.lang.smodel.query.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myHelpProvider__BehaviorDescriptor = new HelpProvider__BehaviorDescriptor();
  private final BHDescriptor myNodesExpression__BehaviorDescriptor = new NodesExpression__BehaviorDescriptor();
  private final BHDescriptor myQueryExpression__BehaviorDescriptor = new QueryExpression__BehaviorDescriptor();
  private final BHDescriptor myOperationHelpProvider__BehaviorDescriptor = new OperationHelpProvider__BehaviorDescriptor();
  private final BHDescriptor myReferencesExpression__BehaviorDescriptor = new ReferencesExpression__BehaviorDescriptor();
  private final BHDescriptor myModelsExpression__BehaviorDescriptor = new ModelsExpression__BehaviorDescriptor();
  private final BHDescriptor myModulesExpression__BehaviorDescriptor = new ModulesExpression__BehaviorDescriptor();
  private final BHDescriptor myExpressionHelpProvider__BehaviorDescriptor = new ExpressionHelpProvider__BehaviorDescriptor();
  private final BHDescriptor myInstancesExpression__BehaviorDescriptor = new InstancesExpression__BehaviorDescriptor();
  private final BHDescriptor myUsagesExpression__BehaviorDescriptor = new UsagesExpression__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      switch (index_846f5o_a0n.index(cncpt)) {
        case 0:
          return myExpressionHelpProvider__BehaviorDescriptor;
        case 1:
          return myHelpProvider__BehaviorDescriptor;
        case 2:
          return myInstancesExpression__BehaviorDescriptor;
        case 3:
          return myModelsExpression__BehaviorDescriptor;
        case 4:
          return myModulesExpression__BehaviorDescriptor;
        case 5:
          return myNodesExpression__BehaviorDescriptor;
        case 6:
          return myOperationHelpProvider__BehaviorDescriptor;
        case 7:
          return myQueryExpression__BehaviorDescriptor;
        case 8:
          return myReferencesExpression__BehaviorDescriptor;
        case 9:
          return myUsagesExpression__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0n = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x690b986730edd07L), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x6b643f33718aa10dL), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675beab2dL), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5f41efb675cc2262L), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x272b1214886bd08eL), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5252d9021b8b6c03L), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x57bda059470950bdL), MetaIdFactory.conceptId(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x75bb0160f191d6ebL)).seal();
}
