package jetbrains.mps.lang.actions.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import java.util.Arrays;

public class EnumerationDescriptor_Side extends EnumerationDescriptorBase {

  public EnumerationDescriptor_Side() {
    super(0xaee9cad2acd44608L, 0xaef20004f6a1cdbdL, 0x11b07b3d491L, "Side", "r:00000000-0000-4000-0000-011c895902a8(jetbrains.mps.lang.actions.structure)/1215604970641", PrimitiveTypeId.STRING);
  }

  private final EnumerationDescriptor.MemberDescriptor VALUE__0 = new EnumerationDescriptor.MemberDescriptor(null, "right", "r:00000000-0000-4000-0000-011c895902a8(jetbrains.mps.lang.actions.structure)/1215604970642", "right");
  private final EnumerationDescriptor.MemberDescriptor VALUE_left_0 = new EnumerationDescriptor.MemberDescriptor("left", "left", "r:00000000-0000-4000-0000-011c895902a8(jetbrains.mps.lang.actions.structure)/1215605024347", "left");
  private final EnumerationDescriptor.MemberDescriptor VALUE_both_0 = new EnumerationDescriptor.MemberDescriptor("both", "both sides", "r:00000000-0000-4000-0000-011c895902a8(jetbrains.mps.lang.actions.structure)/3609453419537306772", "both sides");

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return VALUE__0;
  }

  @NotNull
  @Override
  public Collection<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return Arrays.asList(VALUE__0, VALUE_left_0, VALUE_both_0);
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String string) {
    if (string == null) {
      return VALUE__0;
    }
    switch (string) {
      case "left":
        return VALUE_left_0;
      case "both":
        return VALUE_both_0;
    }
    return null;
  }
}
