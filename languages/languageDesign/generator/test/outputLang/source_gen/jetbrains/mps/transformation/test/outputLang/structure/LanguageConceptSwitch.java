package jetbrains.mps.transformation.test.outputLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int CustomRoot = 0;
  public static final int CustomStatement = 1;
  public static final int CustomStatementRef = 2;
  public static final int OutputNode = 3;
  public static final int OutputNode_forDontApplyReductionTwice_test = 4;
  public static final int OutputRoot = 5;
  public static final int TwoVarStatement = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x157a9668bf58417bL, 0x893e53d86388dc56L);
    builder.put(0x398b8e251df78584L, CustomRoot);
    builder.put(0x2535e9813339efcaL, CustomStatement);
    builder.put(0x1e076e8c8ce9211aL, CustomStatementRef);
    builder.put(0x1164564a526L, OutputNode);
    builder.put(0x119a204b891L, OutputNode_forDontApplyReductionTwice_test);
    builder.put(0x116455d922fL, OutputRoot);
    builder.put(0x5369bd6a5b4e4e08L, TwoVarStatement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
