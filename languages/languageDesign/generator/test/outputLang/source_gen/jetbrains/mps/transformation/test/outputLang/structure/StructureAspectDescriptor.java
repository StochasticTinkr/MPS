package jetbrains.mps.transformation.test.outputLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(7);
  /*package*/ final ConceptDescriptor myConceptCustomRoot = createDescriptorForCustomRoot();
  /*package*/ final ConceptDescriptor myConceptCustomStatement = createDescriptorForCustomStatement();
  /*package*/ final ConceptDescriptor myConceptCustomStatementRef = createDescriptorForCustomStatementRef();
  /*package*/ final ConceptDescriptor myConceptOutputNode = createDescriptorForOutputNode();
  /*package*/ final ConceptDescriptor myConceptOutputNode_forDontApplyReductionTwice_test = createDescriptorForOutputNode_forDontApplyReductionTwice_test();
  /*package*/ final ConceptDescriptor myConceptOutputRoot = createDescriptorForOutputRoot();
  /*package*/ final ConceptDescriptor myConceptTwoVarStatement = createDescriptorForTwoVarStatement();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCustomRoot.getId(), 0);
    myIndexMap.put(myConceptCustomStatement.getId(), 1);
    myIndexMap.put(myConceptCustomStatementRef.getId(), 2);
    myIndexMap.put(myConceptOutputNode.getId(), 3);
    myIndexMap.put(myConceptOutputNode_forDontApplyReductionTwice_test.getId(), 4);
    myIndexMap.put(myConceptOutputRoot.getId(), 5);
    myIndexMap.put(myConceptTwoVarStatement.getId(), 6);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCustomRoot, myConceptCustomStatement, myConceptCustomStatementRef, myConceptOutputNode, myConceptOutputNode_forDontApplyReductionTwice_test, myConceptOutputRoot, myConceptTwoVarStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCustomRoot;
      case 1:
        return myConceptCustomStatement;
      case 2:
        return myConceptCustomStatementRef;
      case 3:
        return myConceptOutputNode;
      case 4:
        return myConceptOutputNode_forDontApplyReductionTwice_test;
      case 5:
        return myConceptOutputRoot;
      case 6:
        return myConceptTwoVarStatement;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForCustomRoot() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomRoot", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x398b8e251df78584L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x398b8e251df78585L, "statement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "4146564171992368517"))).children(new String[]{"statement"}, new boolean[]{false}).rootable().alias("custom root", "root for tests").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "4146564171992368516")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomStatement", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x2535e9813339efcaL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2535e9813339efcdL, "inner", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "2681305894288486349"))).children(new String[]{"inner"}, new boolean[]{false}).alias("work: ", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "2681305894288486346")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomStatementRef() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomStatementRef", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1e076e8c8ce9211aL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x1e076e8c8ce92802L, "ii", new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "2163819695913379842"))).properties("ii").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1e076e8c8ce92801L, "myStatement", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x2535e9813339efcaL), false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "2163819695913379841"))).references("myStatement").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "2163819695913378074")).create();
  }
  private static ConceptDescriptor createDescriptorForOutputNode() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputNode", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11645b5a797L, "text", new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1195170441111"))).properties("text").childDescriptors(new ConceptDescriptorBuilder.Link(0x117f047d47fL, "outputChild", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L), true, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1202327114879"))).children(new String[]{"outputChild"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1195165132070")).create();
  }
  private static ConceptDescriptor createDescriptorForOutputNode_forDontApplyReductionTwice_test() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x119a204b891L)).super_("jetbrains.mps.transformation.test.outputLang.structure.OutputNode").version(1).super_(MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L)).parents("jetbrains.mps.transformation.test.outputLang.structure.OutputNode").parentIds(MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1209604028561")).create();
  }
  private static ConceptDescriptor createDescriptorForOutputRoot() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputRoot", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x116455d922fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116455e8bf1L, "text", new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1195164732401"))).properties("text").childDescriptors(new ConceptDescriptorBuilder.Link(0x11645a94e4aL, "outputChild", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L), true, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1195169631818")), new ConceptDescriptorBuilder.Link(0x11bc24e708cL, "specialChild", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x1164564a526L), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1218735665292"))).children(new String[]{"outputChild", "specialChild"}, new boolean[]{true, false}).rootable().alias("output root concept", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "1195164668463")).create();
  }
  private static ConceptDescriptor createDescriptorForTwoVarStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.TwoVarStatement", MetaIdFactory.conceptId(0x157a9668bf58417bL, 0x893e53d86388dc56L, 0x5369bd6a5b4e4e08L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5369bd6a5b4e4e0bL, "name1", new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "6010543442198679051")), new ConceptDescriptorBuilder.Prop(0x5369bd6a5b4e4e0cL, "name2", new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "6010543442198679052"))).properties("name1", "name2").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590605(jetbrains.mps.transformation.test.outputLang.structure)", "6010543442198679048")).create();
  }
}
