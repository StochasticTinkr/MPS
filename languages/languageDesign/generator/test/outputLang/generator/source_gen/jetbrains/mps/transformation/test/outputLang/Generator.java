package jetbrains.mps.transformation.test.outputLang;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateModuleBase;
import jetbrains.mps.smodel.language.LanguageRuntime;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModel;
import java.util.Arrays;
import jetbrains.mps.generator.runtime.TemplateMappingPriorityRule;
import org.jetbrains.mps.openapi.module.SModuleReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import org.jetbrains.mps.openapi.language.SLanguage;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.annotations.NotNull;

public class Generator extends TemplateModuleBase {
  public static String MODULE_REF = "de2f9603-575d-4d84-b063-776b6d27a0b9(jetbrains.mps.transformation.test.outputLang#1209603905948)";
  private final LanguageRuntime sourceLanguage;
  private Collection<TemplateModel> models;

  public Generator(LanguageRuntime sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
  }
  @Override
  public String getAlias() {
    return "jetbrains.mps.transformation.test.outputLang/self";
  }

  @Override
  public Collection<TemplateModel> getModels() {
    if (models == null) {
      models = Arrays.asList(loadModel("jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main.TemplateModelImpl"));
    }
    return models;
  }

  @Override
  public Collection<TemplateMappingPriorityRule> getPriorities() {
    return null;
  }

  @Override
  public SModuleReference getReference() {
    return PersistenceFacade.getInstance().createModuleReference(MODULE_REF);
  }

  @Override
  public Collection<SLanguage> getTargetLanguages() {
    SLanguage[] rv = new SLanguage[2];
    rv[0] = MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L), "jetbrains.mps.baseLanguage");
    rv[1] = MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0x157a9668bf58417bL, 0x893e53d86388dc56L), "jetbrains.mps.transformation.test.outputLang");
    return Arrays.asList(rv);
  }

  @Override
  @NotNull
  public LanguageRuntime getSourceLanguage() {
    return sourceLanguage;
  }

  @Override
  public Collection<String> getReferencedModules() {
    return null;
  }
}
