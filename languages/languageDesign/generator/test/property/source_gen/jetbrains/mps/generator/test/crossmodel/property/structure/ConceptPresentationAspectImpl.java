package jetbrains.mps.generator.test.crossmodel.property.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Bean;
  private ConceptPresentation props_BeanProperty;
  private ConceptPresentation props_InitOp;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Bean:
        if (props_Bean == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Bean = cpb.create();
        }
        return props_Bean;
      case LanguageConceptSwitch.BeanProperty:
        if (props_BeanProperty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_BeanProperty = cpb.create();
        }
        return props_BeanProperty;
      case LanguageConceptSwitch.InitOp:
        if (props_InitOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitOp");
          props_InitOp = cpb.create();
        }
        return props_InitOp;
    }
    return null;
  }
}
