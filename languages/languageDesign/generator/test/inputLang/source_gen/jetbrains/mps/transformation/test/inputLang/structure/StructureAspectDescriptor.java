package jetbrains.mps.transformation.test.inputLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(13);
  /*package*/ final ConceptDescriptor myConceptExpressionToReduceToStatement = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.ExpressionToReduceToStatement", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11986c01fc7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("expression to reduce to statement", "generator should produce clear warning").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1209146548167")).create();
  /*package*/ final ConceptDescriptor myConceptInputNode = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputNode", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645a1114eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x117ebec4674L, "inputChild", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645a1114eL), true, true, false)).children(new String[]{"inputChild"}, new boolean[]{true}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1195169091918")).create();
  /*package*/ final ConceptDescriptor myConceptInputNode_A = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputNode_A", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645be5a7aL)).super_("jetbrains.mps.transformation.test.inputLang.structure.InputNode").super_(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645a1114eL)).parents("jetbrains.mps.transformation.test.inputLang.structure.InputNode").parentIds(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645a1114eL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11645bf6873L, "option")).properties("option").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1195171011194")).create();
  /*package*/ final ConceptDescriptor myConceptInputNode_B = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputNode_B", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x118e69cb58aL)).super_("jetbrains.mps.transformation.test.inputLang.structure.InputNode_A").super_(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645be5a7aL)).parents("jetbrains.mps.transformation.test.inputLang.structure.InputNode_A").parentIds(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645be5a7aL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1206459872650")).create();
  /*package*/ final ConceptDescriptor myConceptInputNode_C = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputNode_C", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x118e6cad46aL)).super_("jetbrains.mps.transformation.test.inputLang.structure.InputNode_B").super_(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x118e69cb58aL)).parents("jetbrains.mps.transformation.test.inputLang.structure.InputNode_B").parentIds(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x118e69cb58aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x44696d5abe089ec8L, "key")).properties("key").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1206462895210")).create();
  /*package*/ final ConceptDescriptor myConceptInputRoot = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputRoot", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645953ab3L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x117eb48fdf5L, "useInTest")).properties("useInTest").childDescriptors(new ConceptDescriptorBuilder.Link(0x11645abf534L, "inputChild", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11645a1114eL), true, true, false)).children(new String[]{"inputChild"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1195168316083")).create();
  /*package*/ final ConceptDescriptor myConceptInputRootWithStatementList = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.InputRootWithStatementList", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x11986ebf992L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11986ed1901L, "useInTest")).properties("useInTest").childDescriptors(new ConceptDescriptorBuilder.Link(0x11986ec6379L, "statementList", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"statementList"}, new boolean[]{false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "1209149421970")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestClass = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestClass", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x2e0420fbd0995dfdL, "extends", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL), true)).references("extends").childDescriptors(new ConceptDescriptorBuilder.Link(0x2e0420fbd0995e26L, "methods", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL), true, true, false)).children(new String[]{"methods"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119803")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestExpression = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119809")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestMethod = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestMethod", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2e0420fbd0995e40L, "params", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e00L), true, true, false), new ConceptDescriptorBuilder.Link(0x2e0420fbd0995e05L, "expressions", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L), true, true, false)).children(new String[]{"params", "expressions"}, new boolean[]{true, true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119806")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestMethodCall", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e09L)).super_("jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression").super_(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L)).parents("jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression").parentIds(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x2e0420fbd0995e0aL, "method", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL), false)).references("method").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119817")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestParam = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestParam", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e00L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119808")).create();
  /*package*/ final ConceptDescriptor myConceptRefTestParamRef = new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.inputLang.structure.RefTestParamRef", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e07L)).super_("jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression").super_(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L)).parents("jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression").parentIds(MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e01L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x2e0420fbd0995e08L, "declaration", MetaIdFactory.conceptId(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e00L), false)).references("declaration").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c895905f4(jetbrains.mps.transformation.test.inputLang.structure)", "3315811491560119815")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptExpressionToReduceToStatement.getId(), 0);
    myIndexMap.put(myConceptInputNode.getId(), 1);
    myIndexMap.put(myConceptInputNode_A.getId(), 2);
    myIndexMap.put(myConceptInputNode_B.getId(), 3);
    myIndexMap.put(myConceptInputNode_C.getId(), 4);
    myIndexMap.put(myConceptInputRoot.getId(), 5);
    myIndexMap.put(myConceptInputRootWithStatementList.getId(), 6);
    myIndexMap.put(myConceptRefTestClass.getId(), 7);
    myIndexMap.put(myConceptRefTestExpression.getId(), 8);
    myIndexMap.put(myConceptRefTestMethod.getId(), 9);
    myIndexMap.put(myConceptRefTestMethodCall.getId(), 10);
    myIndexMap.put(myConceptRefTestParam.getId(), 11);
    myIndexMap.put(myConceptRefTestParamRef.getId(), 12);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptExpressionToReduceToStatement, myConceptInputNode, myConceptInputNode_A, myConceptInputNode_B, myConceptInputNode_C, myConceptInputRoot, myConceptInputRootWithStatementList, myConceptRefTestClass, myConceptRefTestExpression, myConceptRefTestMethod, myConceptRefTestMethodCall, myConceptRefTestParam, myConceptRefTestParamRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptExpressionToReduceToStatement;
      case 1:
        return myConceptInputNode;
      case 2:
        return myConceptInputNode_A;
      case 3:
        return myConceptInputNode_B;
      case 4:
        return myConceptInputNode_C;
      case 5:
        return myConceptInputRoot;
      case 6:
        return myConceptInputRootWithStatementList;
      case 7:
        return myConceptRefTestClass;
      case 8:
        return myConceptRefTestExpression;
      case 9:
        return myConceptRefTestMethod;
      case 10:
        return myConceptRefTestMethodCall;
      case 11:
        return myConceptRefTestParam;
      case 12:
        return myConceptRefTestParamRef;
      default:
        throw new IllegalStateException();
    }
  }
}
