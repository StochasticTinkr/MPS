package jetbrains.mps.transformation.test.inputLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ExpressionToReduceToStatement = 0;
  public static final int InputNode = 1;
  public static final int InputNode_A = 2;
  public static final int InputNode_B = 3;
  public static final int InputNode_C = 4;
  public static final int InputRoot = 5;
  public static final int InputRootWithStatementList = 6;
  public static final int RefTestClass = 7;
  public static final int RefTestExpression = 8;
  public static final int RefTestMethod = 9;
  public static final int RefTestMethodCall = 10;
  public static final int RefTestParam = 11;
  public static final int RefTestParamRef = 12;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL);
    builder.put(0x11986c01fc7L, ExpressionToReduceToStatement);
    builder.put(0x11645a1114eL, InputNode);
    builder.put(0x11645be5a7aL, InputNode_A);
    builder.put(0x118e69cb58aL, InputNode_B);
    builder.put(0x118e6cad46aL, InputNode_C);
    builder.put(0x11645953ab3L, InputRoot);
    builder.put(0x11986ebf992L, InputRootWithStatementList);
    builder.put(0x2e0420fbd0995dfbL, RefTestClass);
    builder.put(0x2e0420fbd0995e01L, RefTestExpression);
    builder.put(0x2e0420fbd0995dfeL, RefTestMethod);
    builder.put(0x2e0420fbd0995e09L, RefTestMethodCall);
    builder.put(0x2e0420fbd0995e00L, RefTestParam);
    builder.put(0x2e0420fbd0995e07L, RefTestParamRef);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
