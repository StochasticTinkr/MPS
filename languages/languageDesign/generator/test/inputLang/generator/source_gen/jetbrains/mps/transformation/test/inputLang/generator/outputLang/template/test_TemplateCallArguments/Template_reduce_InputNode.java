package jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_TemplateCallArguments;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.generator.runtime.FragmentResult;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import java.util.Collection;
import jetbrains.mps.generator.template.TemplateArgumentContext;
import jetbrains.mps.generator.runtime.TemplateUtil;
import java.util.ArrayList;
import jetbrains.mps.generator.runtime.NodeWeaveFacility;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

@Generated
public class Template_reduce_InputNode extends TemplateDeclarationBase {
  private String myText;
  private int myValue;
  private SNode myElement;

  public Template_reduce_InputNode(String text, int value, SNode element) {
    this.myText = text;
    this.myValue = value;
    this.myElement = element;
  }

  public Template_reduce_InputNode() {
  }

  public SNodeReference getTemplateNode() {
    return new SNodePointer("r:f37420d7-c952-44cf-aaac-346288c56298(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_TemplateCallArguments@generator)", "6736062018948461339");
  }
  private Map<String, Object> getParametersAsMap() {
    Map<String, Object> result = MapSequence.fromMap(new HashMap<String, Object>());
    MapSequence.fromMap(result).put("text", myText);
    MapSequence.fromMap(result).put("value", myValue);
    MapSequence.fromMap(result).put("element", myElement);
    return result;
  }
  protected FragmentResult applyPart0(@NotNull final TemplateContext context) throws GenerationException {
    final TemplateExecutionEnvironment environment = context.getEnvironment();
    Collection<SNode> tlist1 = null;
    try {
      TemplateContext switchContext1;
      {
        final Map<String, Object> args1 = new HashMap<String, Object>();
        args1.put("text", ((String) QueriesGenerated.templateArgumentQuery_a1a(new TemplateArgumentContext(context, new SNodePointer("r:f37420d7-c952-44cf-aaac-346288c56298(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_TemplateCallArguments@generator)", "6736062018948525024")))));
        args1.put("value", ((Integer) QueriesGenerated.templateArgumentQuery_b1a(new TemplateArgumentContext(context, new SNodePointer("r:f37420d7-c952-44cf-aaac-346288c56298(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_TemplateCallArguments@generator)", "6736062018948578444")))));
        args1.put("element", ((SNode) context.getVariable("element")));
        switchContext1 = context.subContext(args1);
        switchContext1 = switchContext1.subContext(null, context.getInput());
      }
      tlist1 = environment.trySwitch(templateSwitchNodeNoInput_dc4xlo_a0a0c0c0k, switchContext1);
      if (tlist1 == null) {
        final SNode tnode2 = environment.createOutputNode(myConcepts[0]);
        try {
        } finally {
        }
        if (tnode2 != null) {
          tlist1 = TemplateUtil.singletonList(tnode2);
        }
      }
    } finally {
    }
    FragmentResult rv = listFragment(0, tlist1);
    return rv;
  }
  @Override
  public Collection<SNode> apply(@NotNull TemplateExecutionEnvironment environment, @NotNull TemplateContext context) throws GenerationException {
    context = context.subContext(getParametersAsMap());
    ArrayList<SNode> rv = new ArrayList<SNode>();
    applyPart0(context).reportTo(rv);
    return rv;
  }

  public Collection<SNode> apply(@NotNull TemplateContext context, String text, int value, SNode element) throws GenerationException {
    this.myText = text;
    this.myValue = value;
    this.myElement = element;
    return apply(context.getEnvironment(), context);
  }

  @Override
  public Collection<SNode> weave(@NotNull NodeWeaveFacility.WeaveContext weaveContext, @NotNull NodeWeaveFacility weaveSupport) throws GenerationException {
    final TemplateContext templateContext = weaveSupport.getTemplateContext().subContext(getParametersAsMap());
    ArrayList<SNode> rv = new ArrayList<SNode>();
    applyPart0(templateContext).weaveWith(weaveSupport).reportTo(rv);
    return rv;
  }
  @Override
  protected SConcept[] initConcepts() {
    SConcept[] rv = new SConcept[1];
    rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0xf8cc56b215L, "Statement");
    return rv;
  }
  @Override
  protected SContainmentLink[] initAggregationLinks() {
    SContainmentLink[] rv = new SContainmentLink[1];
    rv[0] = MetaAdapterFactory.getContainmentLink(0xb401a68083254110L, 0x8fd384331ff25befL, 0xfe43cb41d0L, 0xfe43de823bL, "contentNode");
    return rv;
  }
  private static SNodePointer templateSwitchNodeNoInput_dc4xlo_a0a0c0c0k = new SNodePointer("r:f37420d7-c952-44cf-aaac-346288c56298(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_TemplateCallArguments@generator)", "6736062018948523705");
}
