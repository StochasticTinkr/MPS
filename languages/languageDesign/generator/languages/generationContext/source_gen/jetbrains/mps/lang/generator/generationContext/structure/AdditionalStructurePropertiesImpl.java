package jetbrains.mps.lang.generator.generationContext.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseAdditionalStructureProperties;
import jetbrains.mps.smodel.runtime.AdditionalConceptProperties;
import jetbrains.mps.smodel.runtime.ConceptPropsBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AdditionalStructurePropertiesImpl extends BaseAdditionalStructureProperties {
  private final AdditionalConceptProperties props_GenerationContextOp_Base = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ContextVarRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_CopyWithTrace = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_CreateUniqueName = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_DirtyNode = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GenParameterRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetCopiedOutputByInput = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetExport = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetInputModel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetInvocationContext = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOriginalCopiedInputByOutput = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOriginalInputModel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOutputByLabel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOutputByLabelAndInput = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOutputListByLabelAndInput = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetOutputModel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetPrevInputByLabel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_GetTemplateNode = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_GenerationContextOp_LinkPatternRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_NodePatternRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ParameterRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_PatternRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_PropertyPatternRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_RegisterLabel = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_SessionObjectAccess = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ShowErrorMessage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ShowInfoMessage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ShowMessageBase = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_ShowWarningMessage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_StepObjectAccess = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_TransientObjectAccess = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_UserObjectAccessBase = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextOp_VarRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GenerationContextType = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_TemplateFunctionParameter_generationContext = new ConceptPropsBuilder().create();

  @Override
  @Nullable
  public AdditionalConceptProperties getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0lb.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_GenerationContextOp_Base;
          }
          break;
        case 1:
          if (true) {
            return props_GenerationContextOp_ContextVarRef;
          }
          break;
        case 2:
          if (true) {
            return props_GenerationContextOp_CopyWithTrace;
          }
          break;
        case 3:
          if (true) {
            return props_GenerationContextOp_CreateUniqueName;
          }
          break;
        case 4:
          if (true) {
            return props_GenerationContextOp_DirtyNode;
          }
          break;
        case 5:
          if (true) {
            return props_GenerationContextOp_GenParameterRef;
          }
          break;
        case 6:
          if (true) {
            return props_GenerationContextOp_GetCopiedOutputByInput;
          }
          break;
        case 7:
          if (true) {
            return props_GenerationContextOp_GetExport;
          }
          break;
        case 8:
          if (true) {
            return props_GenerationContextOp_GetInputModel;
          }
          break;
        case 9:
          if (true) {
            return props_GenerationContextOp_GetInvocationContext;
          }
          break;
        case 10:
          if (true) {
            return props_GenerationContextOp_GetOriginalCopiedInputByOutput;
          }
          break;
        case 11:
          if (true) {
            return props_GenerationContextOp_GetOriginalInputModel;
          }
          break;
        case 12:
          if (true) {
            return props_GenerationContextOp_GetOutputByLabel;
          }
          break;
        case 13:
          if (true) {
            return props_GenerationContextOp_GetOutputByLabelAndInput;
          }
          break;
        case 14:
          if (true) {
            return props_GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope;
          }
          break;
        case 15:
          if (true) {
            return props_GenerationContextOp_GetOutputListByLabelAndInput;
          }
          break;
        case 16:
          if (true) {
            return props_GenerationContextOp_GetOutputModel;
          }
          break;
        case 17:
          if (true) {
            return props_GenerationContextOp_GetPrevInputByLabel;
          }
          break;
        case 18:
          if (true) {
            return props_GenerationContextOp_GetTemplateNode;
          }
          break;
        case 19:
          if (true) {
            return props_GenerationContextOp_LinkPatternRef;
          }
          break;
        case 20:
          if (true) {
            return props_GenerationContextOp_NodePatternRef;
          }
          break;
        case 21:
          if (true) {
            return props_GenerationContextOp_ParameterRef;
          }
          break;
        case 22:
          if (true) {
            return props_GenerationContextOp_PatternRef;
          }
          break;
        case 23:
          if (true) {
            return props_GenerationContextOp_PropertyPatternRef;
          }
          break;
        case 24:
          if (true) {
            return props_GenerationContextOp_RegisterLabel;
          }
          break;
        case 25:
          if (true) {
            return props_GenerationContextOp_SessionObjectAccess;
          }
          break;
        case 26:
          if (true) {
            return props_GenerationContextOp_ShowErrorMessage;
          }
          break;
        case 27:
          if (true) {
            return props_GenerationContextOp_ShowInfoMessage;
          }
          break;
        case 28:
          if (true) {
            return props_GenerationContextOp_ShowMessageBase;
          }
          break;
        case 29:
          if (true) {
            return props_GenerationContextOp_ShowWarningMessage;
          }
          break;
        case 30:
          if (true) {
            return props_GenerationContextOp_StepObjectAccess;
          }
          break;
        case 31:
          if (true) {
            return props_GenerationContextOp_TransientObjectAccess;
          }
          break;
        case 32:
          if (true) {
            return props_GenerationContextOp_UserObjectAccessBase;
          }
          break;
        case 33:
          if (true) {
            return props_GenerationContextOp_VarRef;
          }
          break;
        case 34:
          if (true) {
            return props_GenerationContextType;
          }
          break;
        case 35:
          if (true) {
            return props_TemplateFunctionParameter_generationContext;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0lb = buildConceptIndices(MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5282d0d3L, "GenerationContextOp_Base"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x671e792f3dbdfe7eL, "GenerationContextOp_ContextVarRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x23358d5095e2d082L, "GenerationContextOp_CopyWithTrace"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b994bfa0fL, "GenerationContextOp_CreateUniqueName"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x4afdb473461e8c79L, "GenerationContextOp_DirtyNode"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x22cdba820a9a0583L, "GenerationContextOp_GenParameterRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b8f9620cdL, "GenerationContextOp_GetCopiedOutputByInput"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x6db65d569fb2527L, "GenerationContextOp_GetExport"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5b2220abL, "GenerationContextOp_GetInputModel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11d0234f62cL, "GenerationContextOp_GetInvocationContext"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11e42912257L, "GenerationContextOp_GetOriginalCopiedInputByOutput"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5c7432dbL, "GenerationContextOp_GetOriginalInputModel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5282d0d6L, "GenerationContextOp_GetOutputByLabel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5282d0dbL, "GenerationContextOp_GetOutputByLabelAndInput"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11c5652e4d5L, "GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11c529a6c83L, "GenerationContextOp_GetOutputListByLabelAndInput"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b6bab413aL, "GenerationContextOp_GetOutputModel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b8f6c38c2L, "GenerationContextOp_GetPrevInputByLabel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b70e21972L, "GenerationContextOp_GetTemplateNode"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x186874d40ed9c757L, "GenerationContextOp_LinkPatternRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x3fb2d847d55fc21eL, "GenerationContextOp_NodePatternRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x4806ea5d84d8a2caL, "GenerationContextOp_ParameterRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x186874d40edb6a16L, "GenerationContextOp_PatternRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x186874d40ed9c758L, "GenerationContextOp_PropertyPatternRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x4def01254aef34cdL, "GenerationContextOp_RegisterLabel"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b8fe26de8L, "GenerationContextOp_SessionObjectAccess"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b941578ffL, "GenerationContextOp_ShowErrorMessage"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b94ac5a39L, "GenerationContextOp_ShowInfoMessage"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b9417864bL, "GenerationContextOp_ShowMessageBase"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b94ab4014L, "GenerationContextOp_ShowWarningMessage"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b9023d290L, "GenerationContextOp_StepObjectAccess"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b90242983L, "GenerationContextOp_TransientObjectAccess"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b8fe60348L, "GenerationContextOp_UserObjectAccessBase"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x25c655ce6e80fdd8L, "GenerationContextOp_VarRef"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5282d0e1L, "GenerationContextType"), MetaAdapterFactory.getConcept(0xd7706f639be2479cL, 0xa3daae92af1e64d5L, 0x11b5282d0e3L, "TemplateFunctionParameter_generationContext"));
}
