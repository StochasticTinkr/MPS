package jetbrains.mps.lang.generator.plan.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptApplyGenerators = createDescriptorForApplyGenerators();
  /*package*/ final ConceptDescriptor myConceptCheckpoint = createDescriptorForCheckpoint();
  /*package*/ final ConceptDescriptor myConceptCheckpointDeclaration = createDescriptorForCheckpointDeclaration();
  /*package*/ final ConceptDescriptor myConceptCheckpointSpecification = createDescriptorForCheckpointSpecification();
  /*package*/ final ConceptDescriptor myConceptCheckpointSynchronization = createDescriptorForCheckpointSynchronization();
  /*package*/ final ConceptDescriptor myConceptDeclaredCheckpointSpec = createDescriptorForDeclaredCheckpointSpec();
  /*package*/ final ConceptDescriptor myConceptDocumentationLine = createDescriptorForDocumentationLine();
  /*package*/ final ConceptDescriptor myConceptDocumentationStep = createDescriptorForDocumentationStep();
  /*package*/ final ConceptDescriptor myConceptInPlaceCheckpointRefSpec = createDescriptorForInPlaceCheckpointRefSpec();
  /*package*/ final ConceptDescriptor myConceptInPlaceCheckpointSpec = createDescriptorForInPlaceCheckpointSpec();
  /*package*/ final ConceptDescriptor myConceptIncludePlan = createDescriptorForIncludePlan();
  /*package*/ final ConceptDescriptor myConceptPlan = createDescriptorForPlan();
  /*package*/ final ConceptDescriptor myConceptStep = createDescriptorForStep();
  /*package*/ final ConceptDescriptor myConceptTextDocLine = createDescriptorForTextDocLine();
  /*package*/ final ConceptDescriptor myConceptTransform = createDescriptorForTransform();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplyGenerators, myConceptCheckpoint, myConceptCheckpointDeclaration, myConceptCheckpointSpecification, myConceptCheckpointSynchronization, myConceptDeclaredCheckpointSpec, myConceptDocumentationLine, myConceptDocumentationStep, myConceptInPlaceCheckpointRefSpec, myConceptInPlaceCheckpointSpec, myConceptIncludePlan, myConceptPlan, myConceptStep, myConceptTextDocLine, myConceptTransform);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.ApplyGenerators:
        return myConceptApplyGenerators;
      case LanguageConceptSwitch.Checkpoint:
        return myConceptCheckpoint;
      case LanguageConceptSwitch.CheckpointDeclaration:
        return myConceptCheckpointDeclaration;
      case LanguageConceptSwitch.CheckpointSpecification:
        return myConceptCheckpointSpecification;
      case LanguageConceptSwitch.CheckpointSynchronization:
        return myConceptCheckpointSynchronization;
      case LanguageConceptSwitch.DeclaredCheckpointSpec:
        return myConceptDeclaredCheckpointSpec;
      case LanguageConceptSwitch.DocumentationLine:
        return myConceptDocumentationLine;
      case LanguageConceptSwitch.DocumentationStep:
        return myConceptDocumentationStep;
      case LanguageConceptSwitch.InPlaceCheckpointRefSpec:
        return myConceptInPlaceCheckpointRefSpec;
      case LanguageConceptSwitch.InPlaceCheckpointSpec:
        return myConceptInPlaceCheckpointSpec;
      case LanguageConceptSwitch.IncludePlan:
        return myConceptIncludePlan;
      case LanguageConceptSwitch.Plan:
        return myConceptPlan;
      case LanguageConceptSwitch.Step:
        return myConceptStep;
      case LanguageConceptSwitch.TextDocLine:
        return myConceptTextDocLine;
      case LanguageConceptSwitch.Transform:
        return myConceptTransform;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForApplyGenerators() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "ApplyGenerators", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x73246de9adeca171L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/8296877263936070001");
    b.prop("withExtended", 0xc11e5088a799353L, "869728027904938835");
    b.prop("withPriorityRules", 0xf738996443c35afL, "1113384811373540783");
    b.aggregate("generator", 0x73246de9adf5a45cL).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x73246de9adeca173L).optional(false).ordered(true).multiple(true).origin("8296877263936660572").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheckpoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "Checkpoint", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a2071801L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/1820634577908471809");
    b.aggregate("cpSpec", 0x340cd07aed7cb2d2L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L).optional(false).ordered(true).multiple(false).origin("3750601816081740498").done();
    b.alias("persist/synchronize checkpoint");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheckpointDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "CheckpointDeclaration", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x56d679ca1f4b53ceL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/6257322641293267918");
    b.alias("declare a checkpoint");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheckpointSpecification() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "CheckpointSpecification", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L);
    b.interface_();
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/3750601816081736036");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheckpointSynchronization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "CheckpointSynchronization", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0xc11e5088a794d07L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/869728027904920839");
    b.aggregate("checkpoint", 0x340cd07aedd21238L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L).optional(false).ordered(true).multiple(false).origin("3750601816087335480").done();
    b.alias("synchronize with checkpoint");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDeclaredCheckpointSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "DeclaredCheckpointSpec", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7cb2fdL);
    b.class_(false, false, false);
    b.parent(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/3750601816081740541");
    b.associate("cpDecl", 0x340cd07aed7cb300L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x56d679ca1f4b53ceL).optional(false).origin("3750601816081740544").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDocumentationLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "DocumentationLine", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0xc6a8aea78a50f67L);
    b.interface_();
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/894680215637528423");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDocumentationStep() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "DocumentationStep", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0xc6a8aea78a4805dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/894680215637491805");
    b.aggregate("comments", 0xc6a8aea78a50fd4L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0xc6a8aea78a50f67L).optional(false).ordered(true).multiple(true).origin("894680215637528532").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInPlaceCheckpointRefSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "InPlaceCheckpointRefSpec", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7cb32cL);
    b.class_(false, false, false);
    b.parent(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/3750601816081740588");
    b.associate("checkpoint", 0x340cd07aed7cb32fL).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a2071801L).optional(false).origin("3750601816081740591").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInPlaceCheckpointSpec() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "InPlaceCheckpointSpec", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca161L);
    b.class_(false, false, false);
    b.parent(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x340cd07aed7ca164L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/3750601816081736033");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncludePlan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "IncludePlan", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x336c2500000e1b2fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/3705377275350227759");
    b.associate("plan", 0x336c2500000e1b32L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fbL).optional(false).origin("3705377275350227762").done();
    b.alias("include plan");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "Plan", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fbL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/1820634577908471803");
    b.aggregate("steps", 0x19443180a2071807L).target(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL).optional(false).ordered(true).multiple(true).origin("1820634577908471815").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStep() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.class_(false, true, false);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/1820634577908471804");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextDocLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "TextDocLine", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x2913ee226f7cdcb5L);
    b.class_(false, false, false);
    b.parent(0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0xc6a8aea78a50f67L);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/2959971211779300533");
    b.prop("text", 0x2913ee226f7cdcd3L, "2959971211779300563");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransform() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.generator.plan", "Transform", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a2071802L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.generator.plan.structure.Step", 0x7ab1a6fa0a114b95L, 0x9e4875f363d6cb00L, 0x19443180a20717fcL);
    b.origin("r:4a23ef0d-9c2f-48a6-8597-fbdd5b11f792(jetbrains.mps.lang.generator.plan.structure)/1820634577908471810");
    b.aggregate("languages", 0x28dd6d5a7549fa8dL).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x312abca18ab8c318L).optional(false).ordered(true).multiple(true).origin("2944629966652439181").done();
    return b.create();
  }
}
