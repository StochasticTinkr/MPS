package jetbrains.mps.lang.descriptor;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.lang.descriptor.editor.EditorAspectDescriptorImpl;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "f4ad079d-bc71-4ffb-9600-9328705cf998(jetbrains.mps.lang.descriptor)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "jetbrains.mps.lang.descriptor";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("f4ad079d-bc71-4ffb-9600-9328705cf998"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{"jetbrains.mps.lang.project", "jetbrains.mps.baseLanguage"};
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == ConstraintsAspectDescriptor.class) {
      return (T) new jetbrains.mps.lang.descriptor.constraints.ConstraintsAspectDescriptor();
    }
    if (aspectClass == EditorAspectDescriptor.class) {
      return (T) new EditorAspectDescriptorImpl();
    }
    if (aspectClass == StructureAspectDescriptor.class) {
      return (T) new jetbrains.mps.lang.descriptor.structure.StructureAspectDescriptor();
    }
    return super.createAspect(aspectClass);
  }
}
