package jetbrains.mps.lang.descriptor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(3);
  /*package*/ final ConceptDescriptor myConceptGeneratorDescriptor = createDescriptorForGeneratorDescriptor();
  /*package*/ final ConceptDescriptor myConceptGeneratorInternal_Aspect = createDescriptorForGeneratorInternal_Aspect();
  /*package*/ final ConceptDescriptor myConceptLanguageDescriptor = createDescriptorForLanguageDescriptor();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptGeneratorDescriptor.getId(), 0);
    myIndexMap.put(myConceptGeneratorInternal_Aspect.getId(), 1);
    myIndexMap.put(myConceptLanguageDescriptor.getId(), 2);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptGeneratorDescriptor, myConceptGeneratorInternal_Aspect, myConceptLanguageDescriptor);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptGeneratorDescriptor;
      case 1:
        return myConceptGeneratorInternal_Aspect;
      case 2:
        return myConceptLanguageDescriptor;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForGeneratorDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.descriptor.structure.GeneratorDescriptor", MetaIdFactory.conceptId(0xf4ad079dbc714ffbL, 0x96009328705cf998L, 0x3663ebbd1bf10683L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3663ebbd1bf10684L, "generator", MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe21L), false, new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "3919235298192590468"))).references("generator").rootable().sourceNode(new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "3919235298192590467")).create();
  }
  private static ConceptDescriptor createDescriptorForGeneratorInternal_Aspect() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.descriptor.structure.GeneratorInternal_Aspect", MetaIdFactory.conceptId(0xf4ad079dbc714ffbL, 0x96009328705cf998L, 0x46c8be857954ff41L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x46c8be857954ff6fL, "implClass", new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "5100536058472628079"))).properties("implClass").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x46c8be857954ff66L, "interfaceClass", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L), false, new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "5100536058472628070"))).references("interfaceClass").sourceNode(new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "5100536058472628033")).create();
  }
  private static ConceptDescriptor createDescriptorForLanguageDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.descriptor.structure.LanguageDescriptor", MetaIdFactory.conceptId(0xf4ad079dbc714ffbL, 0x96009328705cf998L, 0x7d2f7947ef1533a5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x179194ecf7e0953bL, "language", MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe1fL), false, false, false, new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "1698302279987270971"))).children(new String[]{"language"}, new boolean[]{false}).rootable().sourceNode(new SNodePointer("r:cdf8afc0-fdc6-47ca-b829-7b2226168efa(jetbrains.mps.lang.descriptor.structure)", "9020561928507175845")).create();
  }
}
