package jetbrains.mps.lang.descriptor.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import jetbrains.mps.generator.runtime.TemplateDeclaration;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.model.SNodeReference;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.runtime.ReferenceResolver;
import jetbrains.mps.generator.impl.reference.RefResolver;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

@Generated
public class Template_generator_descriptor extends TemplateDeclarationBase implements TemplateDeclaration {
  private final SConcept[] myConcepts;
  private final SProperty[] myProperties;
  private final SReferenceLink[] myAssociationLinks;
  private final SContainmentLink[] myAggregationLinks;

  public Template_generator_descriptor() {
    myConcepts = initConcepts();
    myProperties = initProperties();
    myAssociationLinks = initAssociationLinks();
    myAggregationLinks = initAggregationLinks();
  }
  public SNodeReference getTemplateNode() {
    return template_s14ods_a0a6;
  }
  public Collection<SNode> apply(@NotNull final TemplateExecutionEnvironment environment, @NotNull final TemplateContext context) throws GenerationException {
    final SNode tnode1 = environment.createOutputNode(myConcepts[0]);
    try {
      environment.nodeCopied(context, tnode1, "tpl/r:1dfaf07d-c77a-451e-91d3-b6f80f0f8508/263208052639617419");
      SNodeAccessUtil.setProperty(tnode1, myProperties[0], "generator descriptor");
      environment.resolve((ReferenceResolver) new RefResolver(tnode1, myAssociationLinks[0], context, new SNodePointer("r:1dfaf07d-c77a-451e-91d3-b6f80f0f8508(jetbrains.mps.lang.descriptor.generator.template.main@generator)", "263208052639668775"), "") {
        @Override
        public Object resolve() {
          return QueriesGenerated.referenceMacro_GetReferent_263208052639668776(createQueryContext());
        }
      });
    } finally {
    }
    return TemplateUtil.singletonList(tnode1);
  }

  private SConcept[] initConcepts() {
    SConcept[] rv = new SConcept[1];
    rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf4ad079dbc714ffbL, 0x96009328705cf998L, "jetbrains.mps.lang.descriptor"), 0x3663ebbd1bf10683L, "GeneratorDescriptor");
    return rv;
  }

  private SProperty[] initProperties() {
    SProperty[] rv = new SProperty[1];
    rv[0] = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    return rv;
  }

  private SReferenceLink[] initAssociationLinks() {
    SReferenceLink[] rv = new SReferenceLink[1];
    rv[0] = MetaAdapterFactory.getReferenceLink(0xf4ad079dbc714ffbL, 0x96009328705cf998L, 0x3663ebbd1bf10683L, 0x3663ebbd1bf10684L, "generator");
    return rv;
  }

  private SContainmentLink[] initAggregationLinks() {
    SContainmentLink[] rv = new SContainmentLink[0];
    return rv;
  }
  private static SNodePointer template_s14ods_a0a6 = new SNodePointer("r:1dfaf07d-c77a-451e-91d3-b6f80f0f8508(jetbrains.mps.lang.descriptor.generator.template.main@generator)", "263208052639617419");
}
