package jetbrains.mps.lang.generator.generationParameters.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_DefaultGenerationParameterId;
  private ConceptPresentation props_DefaultGeneratorParameter;
  private ConceptPresentation props_DefaultGeneratorParameterContainer;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DefaultGenerationParameterId:
        if (props_DefaultGenerationParameterId == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_DefaultGenerationParameterId = cpb.create();
        }
        return props_DefaultGenerationParameterId;
      case LanguageConceptSwitch.DefaultGeneratorParameter:
        if (props_DefaultGeneratorParameter == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("generation parameter");
          props_DefaultGeneratorParameter = cpb.create();
        }
        return props_DefaultGeneratorParameter;
      case LanguageConceptSwitch.DefaultGeneratorParameterContainer:
        if (props_DefaultGeneratorParameterContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.icon(IconContainer.RESOURCE_a0a1a0a2b0e);
          props_DefaultGeneratorParameterContainer = cpb.create();
        }
        return props_DefaultGeneratorParameterContainer;
    }
    return null;
  }
}
