package jetbrains.mps.lang.generator.generationParameters.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_DefaultGenerationParameterId = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DefaultGeneratorParameter = new ConceptPresentationBuilder().shortDesc("generation parameter").create();
  private final ConceptPresentation props_DefaultGeneratorParameterContainer = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0c).create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DefaultGenerationParameterId:
        return props_DefaultGenerationParameterId;
      case LanguageConceptSwitch.DefaultGeneratorParameter:
        return props_DefaultGeneratorParameter;
      case LanguageConceptSwitch.DefaultGeneratorParameterContainer:
        return props_DefaultGeneratorParameterContainer;
    }
    return null;
  }
}
