package jetbrains.mps.lang.modelapi.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.editor.runtime.deletionApprover.DeletionApproverUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class NamedNodeReference_ChildDeleteAction {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new NamedNodeReference_ChildDeleteAction.NamedNodeReference_ChildDeleteAction_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new NamedNodeReference_ChildDeleteAction.NamedNodeReference_ChildDeleteAction_BACKSPACE(node));
  }
  public static class NamedNodeReference_ChildDeleteAction_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public NamedNodeReference_ChildDeleteAction_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (DeletionApproverUtil.approve(editorContext, node, "childPart")) {
        return;
      }

      SLinkOperations.setTarget(node, MetaAdapterFactory.getContainmentLink(0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x41af228e7e0d7f3eL, 0x64b394b6ee402fbcL, "child"), null);
    }
  }
  public static class NamedNodeReference_ChildDeleteAction_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public NamedNodeReference_ChildDeleteAction_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (DeletionApproverUtil.approve(editorContext, node, "childPart")) {
        return;
      }

      SLinkOperations.setTarget(node, MetaAdapterFactory.getContainmentLink(0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x41af228e7e0d7f3eL, 0x64b394b6ee402fbcL, "child"), null);
    }
  }
}
