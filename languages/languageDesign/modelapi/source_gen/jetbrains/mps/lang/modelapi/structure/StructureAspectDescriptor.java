package jetbrains.mps.lang.modelapi.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptConceptIdentity = createDescriptorForConceptIdentity();
  /*package*/ final ConceptDescriptor myConceptModelIdentity = createDescriptorForModelIdentity();
  /*package*/ final ConceptDescriptor myConceptNodeIdentity = createDescriptorForNodeIdentity();
  /*package*/ final ConceptDescriptor myConceptSModelReference = createDescriptorForSModelReference();
  /*package*/ final ConceptDescriptor myConceptSModuleReference = createDescriptorForSModuleReference();
  /*package*/ final ConceptDescriptor myConceptSNodeReference = createDescriptorForSNodeReference();
  /*package*/ final ConceptDescriptor myConceptTrivialModelId = createDescriptorForTrivialModelId();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConceptIdentity, myConceptModelIdentity, myConceptNodeIdentity, myConceptSModelReference, myConceptSModuleReference, myConceptSNodeReference, myConceptTrivialModelId);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.ConceptIdentity:
        return myConceptConceptIdentity;
      case LanguageConceptSwitch.ModelIdentity:
        return myConceptModelIdentity;
      case LanguageConceptSwitch.NodeIdentity:
        return myConceptNodeIdentity;
      case LanguageConceptSwitch.SModelReference:
        return myConceptSModelReference;
      case LanguageConceptSwitch.SModuleReference:
        return myConceptSModuleReference;
      case LanguageConceptSwitch.SNodeReference:
        return myConceptSNodeReference;
      case LanguageConceptSwitch.TrivialModelId:
        return myConceptTrivialModelId;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForConceptIdentity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "ConceptIdentity", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x502fe7548a208f9L);
    b.interface_();
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/361130699826268409");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelIdentity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "ModelIdentity", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x7d58bd9fd9c8b6d3L);
    b.interface_();
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/9032177546942789331");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeIdentity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "NodeIdentity", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x502fe7548a208f7L);
    b.interface_();
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/361130699826268407");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSModelReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "SModelReference", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x502fe7548a0e360L);
    b.class_(false, false, false);
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/361130699826193248");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSModuleReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "SModuleReference", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x502fe7548a0e361L);
    b.class_(false, false, false);
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/361130699826193249");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSNodeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "SNodeReference", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x502fe7548a0e35fL);
    b.class_(false, false, false);
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/361130699826193247");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrivialModelId() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.modelapi", "TrivialModelId", 0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x7d58bd9fd9c8b8cbL);
    b.class_(false, false, false);
    b.parent(0x446c26eb2b7b4bf0L, 0x9b35f83fa582753eL, 0x7d58bd9fd9c8b6d3L);
    b.origin("r:9dfd3567-3b1f-4edb-85a0-3981ca2bfd8c(jetbrains.mps.lang.modelapi.structure)/9032177546942789835");
    b.prop("modelName", 0x7d58bd9fd9c8b8cfL, "9032177546942789839");
    return b.create();
  }
}
