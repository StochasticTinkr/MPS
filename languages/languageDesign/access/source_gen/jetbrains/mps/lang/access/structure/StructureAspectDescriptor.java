package jetbrains.mps.lang.access.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(10);
  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatement = createDescriptorForBaseExecuteCommandStatement();
  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatementSync = createDescriptorForBaseExecuteCommandStatementSync();
  /*package*/ final ConceptDescriptor myConceptCommandClosureLiteral = createDescriptorForCommandClosureLiteral();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandInEDTStatement = createDescriptorForExecuteCommandInEDTStatement();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandStatement = createDescriptorForExecuteCommandStatement();
  /*package*/ final ConceptDescriptor myConceptExecuteEDTCommandStatement = createDescriptorForExecuteEDTCommandStatement();
  /*package*/ final ConceptDescriptor myConceptExecuteLightweightCommandStatement = createDescriptorForExecuteLightweightCommandStatement();
  /*package*/ final ConceptDescriptor myConceptExecuteTransparentCommandStatement = createDescriptorForExecuteTransparentCommandStatement();
  /*package*/ final ConceptDescriptor myConceptExecuteWriteActionStatement = createDescriptorForExecuteWriteActionStatement();
  /*package*/ final ConceptDescriptor myConceptIExecuteCommandStatementSync = createDescriptorForIExecuteCommandStatementSync();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptBaseExecuteCommandStatement.getId(), 0);
    myIndexMap.put(myConceptBaseExecuteCommandStatementSync.getId(), 1);
    myIndexMap.put(myConceptCommandClosureLiteral.getId(), 2);
    myIndexMap.put(myConceptExecuteCommandInEDTStatement.getId(), 3);
    myIndexMap.put(myConceptExecuteCommandStatement.getId(), 4);
    myIndexMap.put(myConceptExecuteEDTCommandStatement.getId(), 5);
    myIndexMap.put(myConceptExecuteLightweightCommandStatement.getId(), 6);
    myIndexMap.put(myConceptExecuteTransparentCommandStatement.getId(), 7);
    myIndexMap.put(myConceptExecuteWriteActionStatement.getId(), 8);
    myIndexMap.put(myConceptIExecuteCommandStatementSync.getId(), 9);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseExecuteCommandStatement, myConceptBaseExecuteCommandStatementSync, myConceptCommandClosureLiteral, myConceptExecuteCommandInEDTStatement, myConceptExecuteCommandStatement, myConceptExecuteEDTCommandStatement, myConceptExecuteLightweightCommandStatement, myConceptExecuteTransparentCommandStatement, myConceptExecuteWriteActionStatement, myConceptIExecuteCommandStatementSync);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptBaseExecuteCommandStatement;
      case 1:
        return myConceptBaseExecuteCommandStatementSync;
      case 2:
        return myConceptCommandClosureLiteral;
      case 3:
        return myConceptExecuteCommandInEDTStatement;
      case 4:
        return myConceptExecuteCommandStatement;
      case 5:
        return myConceptExecuteEDTCommandStatement;
      case 6:
        return myConceptExecuteLightweightCommandStatement;
      case 7:
        return myConceptExecuteTransparentCommandStatement;
      case 8:
        return myConceptExecuteWriteActionStatement;
      case 9:
        return myConceptIExecuteCommandStatementSync;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForBaseExecuteCommandStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7c8b08a50a3ea20bL, "commandClosureLiteral", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20dL), false, false, false), new ConceptDescriptorBuilder.Link(0x13bfe1ec0ded851eL, "repo", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"commandClosureLiteral", "repo"}, new boolean[]{false, false}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348170")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseExecuteCommandStatementSync() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348172")).create();
  }
  private static ConceptDescriptor createDescriptorForCommandClosureLiteral() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.CommandClosureLiteral", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20dL)).super_("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).parents("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348173")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteCommandInEDTStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20eL)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7c8b08a50a3ea20fL, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"project"}, new boolean[]{false}).alias("execute command in EDT", "Schedule command to run from EDT asynchronously").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348174")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteCommandStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea211L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("command", "Synchronous model command").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348177")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteEDTCommandStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea213L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).alias("execute in EDT", "Schedule asynchronous model read from EDT").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348179")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteLightweightCommandStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea215L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("read action", "Synchronous model read").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348181")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteTransparentCommandStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x4a0179cdfba5eb77L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("undo-transparent command", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "5332677359380589431")).create();
  }
  private static ConceptDescriptor createDescriptorForExecuteWriteActionStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea217L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").version(1).super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("write action", "Synchronous model write").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348183")).create();
  }
  private static ConceptDescriptor createDescriptorForIExecuteCommandStatementSync() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.IExecuteCommandStatementSync", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea219L)).version(1).interface_().sourceNode(new SNodePointer("r:2ba2e307-a81d-4a21-9e0b-de3624e2fb83(jetbrains.mps.lang.access.structure)", "8974276187400348185")).create();
  }
}
