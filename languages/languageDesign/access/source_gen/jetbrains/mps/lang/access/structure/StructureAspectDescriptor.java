package jetbrains.mps.lang.access.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(8974276187400348171L, "commandClosureLiteral", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20dL), false, false, false), new ConceptDescriptorBuilder.Link(1423104411234567454L, "repo", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"commandClosureLiteral", "repo"}, new boolean[]{false, false}).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatementSync = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCommandClosureLiteral = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.CommandClosureLiteral", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20dL)).super_("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).parents("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandInEDTStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20eL)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).childDescriptors(new ConceptDescriptorBuilder.Link(8974276187400348175L, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"project"}, new boolean[]{false}).alias("execute command in EDT", "Schedule command to run from EDT asynchronously").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea211L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("command", "Synchronous model command").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteEDTCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea213L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL)).alias("execute in EDT", "Schedule asynchronous model read from EDT").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteLightweightCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea215L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("read action", "Synchronous model read").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteTransparentCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x4a0179cdfba5eb77L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("undo-transparent command", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteWriteActionStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea217L)).super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").super_(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parentIds(MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL)).alias("write action", "Synchronous model write").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIExecuteCommandStatementSync = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.IExecuteCommandStatementSync", MetaIdFactory.conceptId(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea219L)).interface_().create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseExecuteCommandStatement, myConceptBaseExecuteCommandStatementSync, myConceptCommandClosureLiteral, myConceptExecuteCommandInEDTStatement, myConceptExecuteCommandStatement, myConceptExecuteEDTCommandStatement, myConceptExecuteLightweightCommandStatement, myConceptExecuteTransparentCommandStatement, myConceptExecuteWriteActionStatement, myConceptIExecuteCommandStatementSync);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0o.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptBaseExecuteCommandStatement;
          }
          break;
        case 1:
          if (true) {
            return myConceptBaseExecuteCommandStatementSync;
          }
          break;
        case 2:
          if (true) {
            return myConceptCommandClosureLiteral;
          }
          break;
        case 3:
          if (true) {
            return myConceptExecuteCommandInEDTStatement;
          }
          break;
        case 4:
          if (true) {
            return myConceptExecuteCommandStatement;
          }
          break;
        case 5:
          if (true) {
            return myConceptExecuteEDTCommandStatement;
          }
          break;
        case 6:
          if (true) {
            return myConceptExecuteLightweightCommandStatement;
          }
          break;
        case 7:
          if (true) {
            return myConceptExecuteTransparentCommandStatement;
          }
          break;
        case 8:
          if (true) {
            return myConceptExecuteWriteActionStatement;
          }
          break;
        case 9:
          if (true) {
            return myConceptIExecuteCommandStatementSync;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0o = buildConceptIndices(MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL, "jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20cL, "jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20dL, "jetbrains.mps.lang.access.structure.CommandClosureLiteral"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20eL, "jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea211L, "jetbrains.mps.lang.access.structure.ExecuteCommandStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea213L, "jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea215L, "jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x4a0179cdfba5eb77L, "jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement"), MetaAdapterFactory.getConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea217L, "jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement"), MetaAdapterFactory.getInterfaceConcept(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea219L, "jetbrains.mps.lang.access.structure.IExecuteCommandStatementSync"));
}
