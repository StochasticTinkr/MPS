package jetbrains.mps.lang.access.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BaseExecuteCommandStatement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BaseExecuteCommandStatementSync = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CommandClosureLiteral = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExecuteCommandInEDTStatement = new ConceptPresentationBuilder().deprecated().shortDesc("Schedule command to run from EDT asynchronously").create();
  private final ConceptPresentation props_ExecuteCommandStatement = new ConceptPresentationBuilder().shortDesc("Synchronous model command").create();
  private final ConceptPresentation props_ExecuteEDTCommandStatement = new ConceptPresentationBuilder().shortDesc("Schedule asynchronous model read from EDT").create();
  private final ConceptPresentation props_ExecuteLightweightCommandStatement = new ConceptPresentationBuilder().shortDesc("Synchronous model read").create();
  private final ConceptPresentation props_ExecuteTransparentCommandStatement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExecuteWriteActionStatement = new ConceptPresentationBuilder().shortDesc("Synchronous model write").create();
  private final ConceptPresentation props_IExecuteCommandStatementSync = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BaseExecuteCommandStatement:
        return props_BaseExecuteCommandStatement;
      case LanguageConceptSwitch.BaseExecuteCommandStatementSync:
        return props_BaseExecuteCommandStatementSync;
      case LanguageConceptSwitch.CommandClosureLiteral:
        return props_CommandClosureLiteral;
      case LanguageConceptSwitch.ExecuteCommandInEDTStatement:
        return props_ExecuteCommandInEDTStatement;
      case LanguageConceptSwitch.ExecuteCommandStatement:
        return props_ExecuteCommandStatement;
      case LanguageConceptSwitch.ExecuteEDTCommandStatement:
        return props_ExecuteEDTCommandStatement;
      case LanguageConceptSwitch.ExecuteLightweightCommandStatement:
        return props_ExecuteLightweightCommandStatement;
      case LanguageConceptSwitch.ExecuteTransparentCommandStatement:
        return props_ExecuteTransparentCommandStatement;
      case LanguageConceptSwitch.ExecuteWriteActionStatement:
        return props_ExecuteWriteActionStatement;
      case LanguageConceptSwitch.IExecuteCommandStatementSync:
        return props_IExecuteCommandStatementSync;
    }
    return null;
  }
}
