package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum Feedback {
  info("info", "INFO"),
  warning("warning", "WARNING"),
  error("error", "ERROR"),
  message("message", "MESSAGE");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private Feedback(String name, String value) {
    myName = name;
    myValue = value;

  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<Feedback> getConstants() {
    List<Feedback> list = ListSequence.fromList(new LinkedList<Feedback>());
    ListSequence.fromList(list).addElement(Feedback.info);
    ListSequence.fromList(list).addElement(Feedback.warning);
    ListSequence.fromList(list).addElement(Feedback.error);
    ListSequence.fromList(list).addElement(Feedback.message);
    return list;
  }
  public static Feedback getDefault() {
    return Feedback.info;
  }
  public static Feedback parseValue(String value) {
    if (value == null) {
      return Feedback.getDefault();
    }
    if (value.equals(Feedback.info.getValueAsString())) {
      return Feedback.info;
    }
    if (value.equals(Feedback.warning.getValueAsString())) {
      return Feedback.warning;
    }
    if (value.equals(Feedback.error.getValueAsString())) {
      return Feedback.error;
    }
    if (value.equals(Feedback.message.getValueAsString())) {
      return Feedback.message;
    }
    return Feedback.getDefault();
  }
}
