package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AdvanceWorkStatement = 0;
  public static final int AllWorkLeftExpression = 1;
  public static final int BeginWorkStatement = 2;
  public static final int ConceptFunctionParameter_progressMonitor = 3;
  public static final int ConfigDefinition = 4;
  public static final int Expected = 5;
  public static final int ExpectedInput = 6;
  public static final int ExpectedOption = 7;
  public static final int FinishWorkStatement = 8;
  public static final int IExpected = 9;
  public static final int InputResourcesParameter = 10;
  public static final int JobDeclaration = 11;
  public static final int JobDefinition = 12;
  public static final int Option = 13;
  public static final int OptionExpression = 14;
  public static final int OptionType = 15;
  public static final int OutputResources = 16;
  public static final int PropertiesAccessorParameter = 17;
  public static final int QueryDefinition = 18;
  public static final int QueryParameterDeclaration = 19;
  public static final int RelayQueryExpression = 20;
  public static final int ReportFeedbackStatement = 21;
  public static final int ResourceType = 22;
  public static final int ResultStatement = 23;
  public static final int Text = 24;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x95f8a3e6f9944ca0L, 0xa65e763c9bae2d3bL);
    builder.put(0x29929a95c9e6984L, AdvanceWorkStatement);
    builder.put(0x2dc2243445538ecaL, AllWorkLeftExpression);
    builder.put(0x29929a95c9e6982L, BeginWorkStatement);
    builder.put(0x40d591ab6a24e48dL, ConceptFunctionParameter_progressMonitor);
    builder.put(0x1b731b4510dcbee4L, ConfigDefinition);
    builder.put(0x70276038dc4d7c2L, Expected);
    builder.put(0x70276038dc4d7c6L, ExpectedInput);
    builder.put(0x70276038dc4d7bbL, ExpectedOption);
    builder.put(0x29929a95c9e6987L, FinishWorkStatement);
    builder.put(0x70276038dc581e7L, IExpected);
    builder.put(0x20c069f80a972dacL, InputResourcesParameter);
    builder.put(0x70276038dc4d7edL, JobDeclaration);
    builder.put(0x20c069f80a972dabL, JobDefinition);
    builder.put(0x70276038dc49ec9L, Option);
    builder.put(0x70276038dc4d7b2L, OptionExpression);
    builder.put(0x70276038dc4d7b5L, OptionType);
    builder.put(0x20c069f80a972068L, OutputResources);
    builder.put(0x716499a9068b35e9L, PropertiesAccessorParameter);
    builder.put(0x70276038dc49b2bL, QueryDefinition);
    builder.put(0x70276038dc49ec7L, QueryParameterDeclaration);
    builder.put(0x1b731b4510dbc59fL, RelayQueryExpression);
    builder.put(0x32eac1b57fc1b828L, ReportFeedbackStatement);
    builder.put(0x20c069f80a947282L, ResourceType);
    builder.put(0x6237d5bb8b2a942dL, ResultStatement);
    builder.put(0x70276038dc49ecaL, Text);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
