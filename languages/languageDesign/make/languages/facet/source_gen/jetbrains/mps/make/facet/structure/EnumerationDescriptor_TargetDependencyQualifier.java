package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import java.util.Arrays;

public class EnumerationDescriptor_TargetDependencyQualifier extends EnumerationDescriptorBase {

  public EnumerationDescriptor_TargetDependencyQualifier() {
    super(0x696c11654a59463bL, 0xbc5d902caab85dd0L, 0x73e720709e3139e2L, "TargetDependencyQualifier", "r:b16ff46d-fa06-479d-9f5c-5b6e17e7f1b2(jetbrains.mps.make.facet.structure)/8351679702044326370");
  }

  private final EnumerationDescriptor.MemberDescriptor VALUE_BEFORE_0 = new EnumerationDescriptor.MemberDescriptor("BEFORE", "before", "r:b16ff46d-fa06-479d-9f5c-5b6e17e7f1b2(jetbrains.mps.make.facet.structure)/8351679702044326371");
  private final EnumerationDescriptor.MemberDescriptor VALUE_NOT_BEFORE_0 = new EnumerationDescriptor.MemberDescriptor("NOT_BEFORE", "not before", "r:b16ff46d-fa06-479d-9f5c-5b6e17e7f1b2(jetbrains.mps.make.facet.structure)/8351679702044326373");
  private final EnumerationDescriptor.MemberDescriptor VALUE_AFTER_0 = new EnumerationDescriptor.MemberDescriptor("AFTER", "after", "r:b16ff46d-fa06-479d-9f5c-5b6e17e7f1b2(jetbrains.mps.make.facet.structure)/8351679702044326374");
  private final EnumerationDescriptor.MemberDescriptor VALUE_NOT_AFTER_0 = new EnumerationDescriptor.MemberDescriptor("NOT_AFTER", "not after", "r:b16ff46d-fa06-479d-9f5c-5b6e17e7f1b2(jetbrains.mps.make.facet.structure)/8351679702044326375");


  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return VALUE_BEFORE_0;
  }

  @NotNull
  @Override
  public Collection<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return Arrays.asList(VALUE_BEFORE_0, VALUE_NOT_BEFORE_0, VALUE_AFTER_0, VALUE_NOT_AFTER_0);
  }


  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String string) {
    if (string == null) {
      return null;
    }
    switch (string) {
      case "BEFORE":
        return VALUE_BEFORE_0;
      case "NOT_BEFORE":
        return VALUE_NOT_BEFORE_0;
      case "AFTER":
        return VALUE_AFTER_0;
      case "NOT_AFTER":
        return VALUE_NOT_AFTER_0;
    }
    return null;
  }
}
