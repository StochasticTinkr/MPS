package jetbrains.mps.make.reduced;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import jetbrains.mps.smodel.runtime.MakeAspectDescriptor;
import jetbrains.mps.make.reduced.plugin.FacetAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "b608bb31-cbf1-4d56-a8e8-8fa2f751be68(jetbrains.mps.make.reduced)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "jetbrains.mps.make.reduced";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("b608bb31-cbf1-4d56-a8e8-8fa2f751be68"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{};
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == EditorAspectDescriptor.class) {
      return ((T) new EditorAspectDescriptorBase());
    }
    if (aspectClass.getName().equals("jetbrains.mps.smodel.runtime.MakeAspectDescriptor")) {
      if (aspectClass == MakeAspectDescriptor.class) {
        return (T) new FacetAspectDescriptor();
      }
    }
    return super.createAspect(aspectClass);
  }
}
