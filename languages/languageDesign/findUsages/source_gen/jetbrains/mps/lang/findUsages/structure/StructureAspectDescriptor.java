package jetbrains.mps.lang.findUsages.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(16);
  /*package*/ final ConceptDescriptor myConceptAbstractFinderDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11bd0c17f12L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1218978181697L, "forConcept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), false)).references("forConcept").childDescriptors(new ConceptDescriptorBuilder.Link(1218978125364L, "isApplicableFunction", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a94L), true, false, false), new ConceptDescriptorBuilder.Link(1218978125365L, "findFunction", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a88L), false, false, false), new ConceptDescriptorBuilder.Link(1218978125366L, "searchedNodesBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b5cc19L), true, false, false), new ConceptDescriptorBuilder.Link(1218978125367L, "categorizeBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b14c36L), true, false, false)).children(new String[]{"isApplicableFunction", "findFunction", "searchedNodesBlock", "categorizeBlock"}, new boolean[]{false, false, false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptCategorizeBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.CategorizeBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b14c36L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("getCategory", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCheckCancelledStatusStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.CheckCancelledStatusStatement", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1190f427b83L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("check cancelled status", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_node = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.ConceptFunctionParameter_node", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116c9c51f82L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("node", "function parameter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteFinderExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.ExecuteFinderExpression", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118d6fce801L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1206197741576L, "finder", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL), false)).references("finder").childDescriptors(new ConceptDescriptorBuilder.Link(1206197741572L, "queryNode", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1206197741573L, "queryScope", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(8441762775553277663L, "monitor", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"queryNode", "queryScope", "monitor"}, new boolean[]{false, false, false}).alias("execute", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteFindersGetSearchResults = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.ExecuteFindersGetSearchResults", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e1959L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(6366407517031970110L, "queryNode", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(6366407517031970111L, "scope", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(6366407517031970112L, "progress", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(8150507060913099385L, "finder", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL), false, true, false)).children(new String[]{"queryNode", "scope", "progress", "finder"}, new boolean[]{false, false, false, true}).alias("execute finders", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFindBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.FindBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a88L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("find", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFinderDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.FinderDeclaration", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL)).super_("jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration").super_(MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11bd0c17f12L)).parents("jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy", "jetbrains.mps.lang.structure.structure.IConceptAspect", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11bd0c17f12L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xfe9d76d7580945c9L, 0xae28a40915b4d6ffL, 0x433c3c31e7218f38L), MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1197385993272L, "description"), new ConceptDescriptorBuilder.Prop(1202838325511L, "longDescription")).properties("description", "longDescription").childDescriptors(new ConceptDescriptorBuilder.Link(1216396839916L, "isVisibleBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11b36e60151L), true, false, false), new ConceptDescriptorBuilder.Link(100784871544251463L, "isUsedByDefault", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1660f4e85a04a8fL), true, false, false)).children(new String[]{"isVisibleBlock", "isUsedByDefault"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptFinderReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.FinderReference", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7222148688691763792L, "finder", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL), false)).references("finder").create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.IsApplicableBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a94L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicable", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsUsedByDefault = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.IsUsedByDefault", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1660f4e85a04a8fL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isUsedByDefault", "").create();
  /*package*/ final ConceptDescriptor myConceptIsVisibleBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.IsVisibleBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11b36e60151L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isVisible", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMakeResultProvider = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.MakeResultProvider", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x585a05e7f40a28d1L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(6366407517031508178L, "finder", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL), false, true, false)).children(new String[]{"finder"}, new boolean[]{true}).alias("make result provider", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNodeStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.NodeStatement", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1177408145aL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(1200242582311L, "foundNode", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"foundNode"}, new boolean[]{false}).alias("add node", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptResultStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.ResultStatement", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1177404a3f4L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(1200242376867L, "foundNode", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"foundNode"}, new boolean[]{false}).alias("add result", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSearchedNodesBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.findUsages.structure.SearchedNodesBlock", MetaIdFactory.conceptId(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b5cc19L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("getSearchedNodes", "").staticScope(StaticScope.NONE).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractFinderDeclaration.getId(), 0);
    myIndexMap.put(myConceptCategorizeBlock.getId(), 1);
    myIndexMap.put(myConceptCheckCancelledStatusStatement.getId(), 2);
    myIndexMap.put(myConceptConceptFunctionParameter_node.getId(), 3);
    myIndexMap.put(myConceptExecuteFinderExpression.getId(), 4);
    myIndexMap.put(myConceptExecuteFindersGetSearchResults.getId(), 5);
    myIndexMap.put(myConceptFindBlock.getId(), 6);
    myIndexMap.put(myConceptFinderDeclaration.getId(), 7);
    myIndexMap.put(myConceptFinderReference.getId(), 8);
    myIndexMap.put(myConceptIsApplicableBlock.getId(), 9);
    myIndexMap.put(myConceptIsUsedByDefault.getId(), 10);
    myIndexMap.put(myConceptIsVisibleBlock.getId(), 11);
    myIndexMap.put(myConceptMakeResultProvider.getId(), 12);
    myIndexMap.put(myConceptNodeStatement.getId(), 13);
    myIndexMap.put(myConceptResultStatement.getId(), 14);
    myIndexMap.put(myConceptSearchedNodesBlock.getId(), 15);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractFinderDeclaration, myConceptCategorizeBlock, myConceptCheckCancelledStatusStatement, myConceptConceptFunctionParameter_node, myConceptExecuteFinderExpression, myConceptExecuteFindersGetSearchResults, myConceptFindBlock, myConceptFinderDeclaration, myConceptFinderReference, myConceptIsApplicableBlock, myConceptIsUsedByDefault, myConceptIsVisibleBlock, myConceptMakeResultProvider, myConceptNodeStatement, myConceptResultStatement, myConceptSearchedNodesBlock);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractFinderDeclaration;
      case 1:
        return myConceptCategorizeBlock;
      case 2:
        return myConceptCheckCancelledStatusStatement;
      case 3:
        return myConceptConceptFunctionParameter_node;
      case 4:
        return myConceptExecuteFinderExpression;
      case 5:
        return myConceptExecuteFindersGetSearchResults;
      case 6:
        return myConceptFindBlock;
      case 7:
        return myConceptFinderDeclaration;
      case 8:
        return myConceptFinderReference;
      case 9:
        return myConceptIsApplicableBlock;
      case 10:
        return myConceptIsUsedByDefault;
      case 11:
        return myConceptIsVisibleBlock;
      case 12:
        return myConceptMakeResultProvider;
      case 13:
        return myConceptNodeStatement;
      case 14:
        return myConceptResultStatement;
      case 15:
        return myConceptSearchedNodesBlock;
      default:
        throw new IllegalStateException();
    }
  }
}
