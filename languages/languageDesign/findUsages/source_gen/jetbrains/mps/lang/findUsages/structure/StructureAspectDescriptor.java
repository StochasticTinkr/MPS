package jetbrains.mps.lang.findUsages.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractFinderDeclaration = createDescriptorForAbstractFinderDeclaration();
  /*package*/ final ConceptDescriptor myConceptCategorizeBlock = createDescriptorForCategorizeBlock();
  /*package*/ final ConceptDescriptor myConceptCheckCancelledStatusStatement = createDescriptorForCheckCancelledStatusStatement();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_node = createDescriptorForConceptFunctionParameter_node();
  /*package*/ final ConceptDescriptor myConceptExecuteFinderExpression = createDescriptorForExecuteFinderExpression();
  /*package*/ final ConceptDescriptor myConceptExecuteFindersGetSearchResults = createDescriptorForExecuteFindersGetSearchResults();
  /*package*/ final ConceptDescriptor myConceptFindBlock = createDescriptorForFindBlock();
  /*package*/ final ConceptDescriptor myConceptFinderDeclaration = createDescriptorForFinderDeclaration();
  /*package*/ final ConceptDescriptor myConceptFinderReference = createDescriptorForFinderReference();
  /*package*/ final ConceptDescriptor myConceptFinderReferenceExpression = createDescriptorForFinderReferenceExpression();
  /*package*/ final ConceptDescriptor myConceptIsApplicableBlock = createDescriptorForIsApplicableBlock();
  /*package*/ final ConceptDescriptor myConceptIsUsedByDefault = createDescriptorForIsUsedByDefault();
  /*package*/ final ConceptDescriptor myConceptIsVisibleBlock = createDescriptorForIsVisibleBlock();
  /*package*/ final ConceptDescriptor myConceptMakeResultProvider = createDescriptorForMakeResultProvider();
  /*package*/ final ConceptDescriptor myConceptNodeStatement = createDescriptorForNodeStatement();
  /*package*/ final ConceptDescriptor myConceptResultStatement = createDescriptorForResultStatement();
  /*package*/ final ConceptDescriptor myConceptSearchedNodesBlock = createDescriptorForSearchedNodesBlock();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractFinderDeclaration, myConceptCategorizeBlock, myConceptCheckCancelledStatusStatement, myConceptConceptFunctionParameter_node, myConceptExecuteFinderExpression, myConceptExecuteFindersGetSearchResults, myConceptFindBlock, myConceptFinderDeclaration, myConceptFinderReference, myConceptFinderReferenceExpression, myConceptIsApplicableBlock, myConceptIsUsedByDefault, myConceptIsVisibleBlock, myConceptMakeResultProvider, myConceptNodeStatement, myConceptResultStatement, myConceptSearchedNodesBlock);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.AbstractFinderDeclaration:
        return myConceptAbstractFinderDeclaration;
      case LanguageConceptSwitch.CategorizeBlock:
        return myConceptCategorizeBlock;
      case LanguageConceptSwitch.CheckCancelledStatusStatement:
        return myConceptCheckCancelledStatusStatement;
      case LanguageConceptSwitch.ConceptFunctionParameter_node:
        return myConceptConceptFunctionParameter_node;
      case LanguageConceptSwitch.ExecuteFinderExpression:
        return myConceptExecuteFinderExpression;
      case LanguageConceptSwitch.ExecuteFindersGetSearchResults:
        return myConceptExecuteFindersGetSearchResults;
      case LanguageConceptSwitch.FindBlock:
        return myConceptFindBlock;
      case LanguageConceptSwitch.FinderDeclaration:
        return myConceptFinderDeclaration;
      case LanguageConceptSwitch.FinderReference:
        return myConceptFinderReference;
      case LanguageConceptSwitch.FinderReferenceExpression:
        return myConceptFinderReferenceExpression;
      case LanguageConceptSwitch.IsApplicableBlock:
        return myConceptIsApplicableBlock;
      case LanguageConceptSwitch.IsUsedByDefault:
        return myConceptIsUsedByDefault;
      case LanguageConceptSwitch.IsVisibleBlock:
        return myConceptIsVisibleBlock;
      case LanguageConceptSwitch.MakeResultProvider:
        return myConceptMakeResultProvider;
      case LanguageConceptSwitch.NodeStatement:
        return myConceptNodeStatement;
      case LanguageConceptSwitch.ResultStatement:
        return myConceptResultStatement;
      case LanguageConceptSwitch.SearchedNodesBlock:
        return myConceptSearchedNodesBlock;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractFinderDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "AbstractFinderDeclaration", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11bd0c17f12L);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1218978086674");
    b.associate("forConcept", 0x11bd0c2f241L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(false).origin("1218978181697").done();
    b.aggregate("isApplicableFunction", 0x11bd0c21634L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a94L).optional(true).ordered(true).multiple(false).origin("1218978125364").done();
    b.aggregate("findFunction", 0x11bd0c21635L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a88L).optional(false).ordered(true).multiple(false).origin("1218978125365").done();
    b.aggregate("searchedNodesBlock", 0x11bd0c21636L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b5cc19L).optional(true).ordered(true).multiple(false).origin("1218978125366").done();
    b.aggregate("categorizeBlock", 0x11bd0c21637L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b14c36L).optional(true).ordered(true).multiple(false).origin("1218978125367").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCategorizeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "CategorizeBlock", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b14c36L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1206461221942");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("getCategory");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCheckCancelledStatusStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "CheckCancelledStatusStatement", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1190f427b83L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1207141825411");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("check cancelled status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptFunctionParameter_node() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "ConceptFunctionParameter_node", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116c9c51f82L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1197386047362");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExecuteFinderExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "ExecuteFinderExpression", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118d6fce801L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1206197741569");
    b.associate("finder", 0x118d6fce808L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL).optional(false).origin("1206197741576").done();
    b.aggregate("queryNode", 0x118d6fce804L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1206197741572").done();
    b.aggregate("queryScope", 0x118d6fce805L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1206197741573").done();
    b.aggregate("monitor", 0x75272a849af7fedfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("8441762775553277663").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("execute");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExecuteFindersGetSearchResults() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "ExecuteFindersGetSearchResults", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e1959L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/2005690715325995353");
    b.aggregate("queryNode", 0x585a05e7f411353eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("6366407517031970110").done();
    b.aggregate("scope", 0x585a05e7f411353fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("6366407517031970111").done();
    b.aggregate("progress", 0x585a05e7f4113540L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("6366407517031970112").done();
    b.aggregate("finder", 0x711c6afd1909d279L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL).optional(false).ordered(true).multiple(true).origin("8150507060913099385").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("execute finders");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFindBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "FindBlock", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a88L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1197044488840");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("find");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFinderDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "FinderDeclaration", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11bd0c17f12L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xfe9d76d7580945c9L, 0xae28a40915b4d6ffL, 0x433c3c31e7218f38L);
    b.parent(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1197044488845");
    b.prop("description", 0x116c9c44c38L, "1197385993272");
    b.prop("longDescription", 0x1180ec04907L, "1202838325511");
    b.aggregate("isVisibleBlock", 0x11b36e6cbecL).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11b36e60151L).optional(true).ordered(true).multiple(false).origin("1216396839916").done();
    b.aggregate("isUsedByDefault", 0x1660f4e8320e447L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1660f4e85a04a8fL).optional(true).ordered(true).multiple(false).origin("100784871544251463").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFinderReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "FinderReference", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/2005690715325995359");
    b.associate("finder", 0x643a39f7c0869a50L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a8dL).optional(false).origin("7222148688691763792").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFinderReferenceExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "FinderReferenceExpression", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x5e9f5a0f21d59aacL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/6818267381900876460");
    b.aggregate("finder", 0x5e9f5a0f21d59aadL).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL).optional(false).ordered(true).multiple(false).origin("6818267381900876461").done();
    b.alias("finder");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsApplicableBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "IsApplicableBlock", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x116b5695a94L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1197044488852");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("isApplicable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsUsedByDefault() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "IsUsedByDefault", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1660f4e85a04a8fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/100784871586155151");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("isUsedByDefault");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsVisibleBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "IsVisibleBlock", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x11b36e60151L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1216396788049");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("isVisible");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMakeResultProvider() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "MakeResultProvider", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x585a05e7f40a28d1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/6366407517031508177");
    b.aggregate("finder", 0x585a05e7f40a28d2L).target(0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1bd5a514384e195fL).optional(false).ordered(true).multiple(true).origin("6366407517031508178").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("make result provider");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "NodeStatement", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1177408145aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1200242562138");
    b.aggregate("foundNode", 0x11774086327L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1200242582311").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("add node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResultStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "ResultStatement", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x1177404a3f4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1200242336756");
    b.aggregate("foundNode", 0x117740540a3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1200242376867").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("add result");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSearchedNodesBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.findUsages", "SearchedNodesBlock", 0x64d34fcdad024e73L, 0xaff8a581124c2e30L, 0x118e6b5cc19L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959035b(jetbrains.mps.lang.findUsages.structure)/1206461516825");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("getSearchedNodes");
    return b.create();
  }
}
