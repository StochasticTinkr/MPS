package jetbrains.mps.lang.project.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myModuleReference__BehaviorDescriptor = new ModuleReference__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigRefBase__BehaviorDescriptor = new MappingConfigRefBase__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigRefSet__BehaviorDescriptor = new MappingConfigRefSet__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigNormalRef__BehaviorDescriptor = new MappingConfigNormalRef__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigExternalRef__BehaviorDescriptor = new MappingConfigExternalRef__BehaviorDescriptor();
  private final BHDescriptor myModule__BehaviorDescriptor = new Module__BehaviorDescriptor();
  private final BHDescriptor myGenerator__BehaviorDescriptor = new Generator__BehaviorDescriptor();
  private final BHDescriptor myModelReference__BehaviorDescriptor = new ModelReference__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myGenerator__BehaviorDescriptor;
      case 1:
        return myMappingConfigExternalRef__BehaviorDescriptor;
      case 2:
        return myMappingConfigNormalRef__BehaviorDescriptor;
      case 3:
        return myMappingConfigRefBase__BehaviorDescriptor;
      case 4:
        return myMappingConfigRefSet__BehaviorDescriptor;
      case 5:
        return myModelReference__BehaviorDescriptor;
      case 6:
        return myModule__BehaviorDescriptor;
      case 7:
        return myModuleReference__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe21L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f284595727e1L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f28459572777L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f2845954f70dL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f2845957030bL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe27L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe1eL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x19bfb4173fb5210cL)).seal();
}
