package jetbrains.mps.lang.project.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new DevKit_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Generator_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Language_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MappingConfigExternalRef_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MappingConfigNormalRef_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllGlobal_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllLocal_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefSet_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new MappingPriorityRule_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new ModelReference_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ModelRoot_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new ModuleDependency_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ModuleReference_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Solution_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new SourcePath_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new StubEntry_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new StubSolution_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe2fL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe21L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe1fL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f284595727e1L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f28459572777L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f2845954f70fL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f284595702d4L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x25c3f2845957030bL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe38L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe27L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x19bfb4173fb52426L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe28L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x19bfb4173fb5210cL), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe20L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x3be012d639dffb7L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x19bfb4173fb52422L), MetaIdFactory.conceptId(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x3be012d639dff87L)).seal();
}
