package jetbrains.mps.lang.resources.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(6);
  /*package*/ final ConceptDescriptor myConceptIconResource = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResource", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bbL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.resources.structure.Resource").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6caL)).childDescriptors(new ConceptDescriptorBuilder.Link(6976585500156684809L, "iconExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"iconExpression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptIconResourceBundle = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceBundle", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bdL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(8974276187400029886L, "icons", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c0L), true, true, false)).children(new String[]{"icons"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptIconResourceDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceDeclaration", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(8974276187400029889L, "iconExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"iconExpression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptIconResourceExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceExpression", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c3L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(8974276187400029893L, "icon", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bbL), false, false, false)).children(new String[]{"icon"}, new boolean[]{false}).alias("icon", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIconResourceReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceReference", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(8974276187400029896L, "declaration", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c0L), false)).references("declaration").alias("icon", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptResource = new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.Resource", MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6caL)).interface_().propertyDescriptors(new ConceptDescriptorBuilder.Prop(8974276187400029899L, "path")).properties("path").create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptIconResource.getId(), 0);
    myIndexMap.put(myConceptIconResourceBundle.getId(), 1);
    myIndexMap.put(myConceptIconResourceDeclaration.getId(), 2);
    myIndexMap.put(myConceptIconResourceExpression.getId(), 3);
    myIndexMap.put(myConceptIconResourceReference.getId(), 4);
    myIndexMap.put(myConceptResource.getId(), 5);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIconResource, myConceptIconResourceBundle, myConceptIconResourceDeclaration, myConceptIconResourceExpression, myConceptIconResourceReference, myConceptResource);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptIconResource;
      case 1:
        return myConceptIconResourceBundle;
      case 2:
        return myConceptIconResourceDeclaration;
      case 3:
        return myConceptIconResourceExpression;
      case 4:
        return myConceptIconResourceReference;
      case 5:
        return myConceptResource;
      default:
        throw new IllegalStateException();
    }
  }
}
