package jetbrains.mps.lang.resources.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myImage__BehaviorDescriptor = new Image__BehaviorDescriptor();
  private final BHDescriptor myColorLiteral__BehaviorDescriptor = new ColorLiteral__BehaviorDescriptor();
  private final BHDescriptor myColor__BehaviorDescriptor = new Color__BehaviorDescriptor();
  private final BHDescriptor myIcon__BehaviorDescriptor = new Icon__BehaviorDescriptor();
  private final BHDescriptor myTextIcon__BehaviorDescriptor = new TextIcon__BehaviorDescriptor();
  private final BHDescriptor myCircle__BehaviorDescriptor = new Circle__BehaviorDescriptor();
  private final BHDescriptor myRect__BehaviorDescriptor = new Rect__BehaviorDescriptor();
  private final BHDescriptor myIconLayerDescription__BehaviorDescriptor = new IconLayerDescription__BehaviorDescriptor();
  private final BHDescriptor myText__BehaviorDescriptor = new Text__BehaviorDescriptor();
  private final BHDescriptor myBaseURLFunction__BehaviorDescriptor = new BaseURLFunction__BehaviorDescriptor();
  private final BHDescriptor myBaseURL__BehaviorDescriptor = new BaseURL__BehaviorDescriptor();
  private final BHDescriptor myBaseURLLiteral__BehaviorDescriptor = new BaseURLLiteral__BehaviorDescriptor();
  private final BHDescriptor myFileIcon__BehaviorDescriptor = new FileIcon__BehaviorDescriptor();
  private final BHDescriptor myOldIconBundle__BehaviorDescriptor = new OldIconBundle__BehaviorDescriptor();
  private final BHDescriptor myOldIconReference__BehaviorDescriptor = new OldIconReference__BehaviorDescriptor();
  private final BHDescriptor myResource__BehaviorDescriptor = new Resource__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0t = concept;
    switch (index_846f5o_a0t.index(cncpt_a0t)) {
      case 0:
        return myBaseURL__BehaviorDescriptor;
      case 1:
        return myBaseURLFunction__BehaviorDescriptor;
      case 2:
        return myBaseURLLiteral__BehaviorDescriptor;
      case 3:
        return myCircle__BehaviorDescriptor;
      case 4:
        return myColor__BehaviorDescriptor;
      case 5:
        return myColorLiteral__BehaviorDescriptor;
      case 6:
        return myFileIcon__BehaviorDescriptor;
      case 7:
        return myIcon__BehaviorDescriptor;
      case 8:
        return myIconLayerDescription__BehaviorDescriptor;
      case 9:
        return myImage__BehaviorDescriptor;
      case 10:
        return myOldIconBundle__BehaviorDescriptor;
      case 11:
        return myOldIconReference__BehaviorDescriptor;
      case 12:
        return myRect__BehaviorDescriptor;
      case 13:
        return myResource__BehaviorDescriptor;
      case 14:
        return myText__BehaviorDescriptor;
      case 15:
        return myTextIcon__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0t = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x4197d5560e6a38b7L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x4197d5560e696656L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x4197d5560e6a38b8L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c37742e0e60L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x19d079f4ec114bdeL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x19d079f4ec114bddL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bbL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c3774289eeeL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c37742e0e65L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0xb8b96b5078f3367L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6bdL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6c7L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c37742e0e61L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x7c8b08a50a39c6caL), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c37742e28b9L), MetaIdFactory.conceptId(0x982eb8df2c964bd7L, 0x996311712ea622e5L, 0x26417c37742e0d45L)).seal();
}
