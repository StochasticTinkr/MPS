package jetbrains.mps.lang.migration.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class TransformStatement_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_pt4ick_a(editorContext, node);
  }
  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_pt4ick_a_0(editorContext, node);
  }
  private EditorCell createCollection_pt4ick_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_pt4ick_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_pt4ick_a0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_pt4ick_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_pt4ick_c0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_pt4ick_d0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_pt4ick_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "transform");
    editorCell.setCellId("Constant_pt4ick_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_pt4ick_b0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new TransformStatement_Editor.patternSingleRoleHandler_pt4ick_b0(node, MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6529ec9L, 0x4e382b39b6529eeeL, "pattern"), editorContext);
    return provider.createCell();
  }
  private class patternSingleRoleHandler_pt4ick_b0 extends SingleRoleCellProvider {
    public patternSingleRoleHandler_pt4ick_b0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("pattern");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_pattern");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no pattern>";
    }

  }
  private EditorCell createConstant_pt4ick_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "=>");
    editorCell.setCellId("Constant_pt4ick_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_pt4ick_d0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new TransformStatement_Editor.consequenceSingleRoleHandler_pt4ick_d0(node, MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6529ec9L, 0x4e382b39b6529ef0L, "consequence"), editorContext);
    return provider.createCell();
  }
  private class consequenceSingleRoleHandler_pt4ick_d0 extends SingleRoleCellProvider {
    public consequenceSingleRoleHandler_pt4ick_d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("consequence");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_consequence");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no consequence>";
    }

  }
  private EditorCell createCollection_pt4ick_a_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_pt4ick_a_0");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_pt4ick_a0_0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_pt4ick_b0_0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_pt4ick_c0_0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_pt4ick_d0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_pt4ick_e0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_pt4ick_a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "precondition:");
    editorCell.setCellId("Constant_pt4ick_a0_0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_pt4ick_b0_0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new TransformStatement_Editor.preconditionSingleRoleHandler_pt4ick_b0(node, MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6529ec9L, 0x4e382b39b6529ef4L, "precondition"), editorContext);
    return provider.createCell();
  }
  private class preconditionSingleRoleHandler_pt4ick_b0 extends SingleRoleCellProvider {
    public preconditionSingleRoleHandler_pt4ick_b0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("precondition");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_precondition");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no precondition>";
    }

  }
  private EditorCell createConstant_pt4ick_c0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_pt4ick_c0_0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_pt4ick_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "postprocess:");
    editorCell.setCellId("Constant_pt4ick_d0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_pt4ick_e0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new TransformStatement_Editor.postprocessSingleRoleHandler_pt4ick_e0(node, MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6529ec9L, 0x4e382b39b6529ef8L, "postprocess"), editorContext);
    return provider.createCell();
  }
  private class postprocessSingleRoleHandler_pt4ick_e0 extends SingleRoleCellProvider {
    public postprocessSingleRoleHandler_pt4ick_e0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("postprocess");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_postprocess");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no postprocess>";
    }

  }
}
