package jetbrains.mps.lang.migration.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0a = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt_a0a)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new DataDependency_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new DataDependencyReference_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new DirectNodeReference_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ExecuteAfterDeclaration_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new IncludeMigrationPart_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new LinkPatternVariableReference_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ListPatternVariableReference_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new MigrationScript_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new MoveConcept_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new MoveContainmentLink_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new MoveNodeMigrationPart_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new MoveProperty_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new MoveReferenceLink_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new NodePatternVariableReference_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new OrderDependency_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new ProducedDataDeclaration_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new PropertyPatternVariableReference_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new PureMigrationScript_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new QuotationConsequence_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new RefactoringLog_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new RefactoringOrderDependency_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new ReflectionNodeReference_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new RequiredDataDeclaration_Editor());
      case 23:
        return Collections.<ConceptEditor>singletonList(new TransformStatement_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredDefaultTransformationMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0d = concept;
    switch (index_xbvbvu_a0d.index(cncpt_a0d)) {
      case 0:
        return Collections.<TransformationMenu>singletonList(new MigrationScript_TransformationMenu());
      default:
    }
    return Collections.<TransformationMenu>emptyList();
  }
  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0e = concept;
    switch (index_xbvbvu_a0e.index(cncpt_a0e)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new DataDependency_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new DataDependencyReference_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new DirectNodeReference_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new LinkPatternVariableReference_SubstituteMenu());
      case 4:
        return Collections.<SubstituteMenu>singletonList(new ListPatternVariableReference_SubstituteMenu());
      case 5:
        return Collections.<SubstituteMenu>singletonList(new NodePatternVariableReference_SubstituteMenu());
      case 6:
        return Collections.<SubstituteMenu>singletonList(new OrderDependency_SubstituteMenu());
      case 7:
        return Collections.<SubstituteMenu>singletonList(new PropertyPatternVariableReference_SubstituteMenu());
      case 8:
        return Collections.<SubstituteMenu>singletonList(new PureMigrationScript_SubstituteMenu());
      case 9:
        return Collections.<SubstituteMenu>singletonList(new RefactoringLog_SubstituteMenu());
      case 10:
        return Collections.<SubstituteMenu>singletonList(new RefactoringOrderDependency_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x44b28148e401c891L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x63476c2ad9bcd736L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x67236d4a58303771L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f07b404L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x267418e6b5c2b903L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2cb3222730d5c47bL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x550f7de0eda8c07aL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x73e8a2c68b62c6a3L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2b3f57492c1741b6L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2b3f57492c1741baL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x67236d4a5830221eL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2b3f57492c1741b9L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2b3f57492c1741b7L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x6877ea6323b8f1a3L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f099b7aL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x50c63f9f4a0dacfbL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2cb3222730cfcbccL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x67236d4a5836cabbL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6532d41L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x1bf9eb43276b6d8fL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x1bf9eb43276b6d9dL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x27bf3263be23f0dfL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x3d90e8d384845a8fL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x4e382b39b6529ec9L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0d = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x73e8a2c68b62c6a3L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0e = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x44b28148e401c891L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x63476c2ad9bcd736L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x67236d4a58303771L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2cb3222730d5c47bL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x550f7de0eda8c07aL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x6877ea6323b8f1a3L), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f099b7aL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x2cb3222730cfcbccL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x67236d4a5836cabbL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x1bf9eb43276b6d8fL), MetaIdFactory.conceptId(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x1bf9eb43276b6d9dL)).seal();
}
