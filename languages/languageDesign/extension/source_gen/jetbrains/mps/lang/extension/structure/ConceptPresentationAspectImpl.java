package jetbrains.mps.lang.extension.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_Extension = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtensionDeclaration = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_ExtensionFieldDeclaration = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_ExtensionFieldReference = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_ExtensionFunction = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_ExtensionObjectGetter = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_ExtensionPointDeclaration = new ConceptPresentationBuilder().deprecated(MetaAdapterFactory.getProperty(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x33c018482cafa9d6L, 0x520ae19dd2771b96L, "extensionName")).create();
  private final ConceptPresentation props_ExtensionPointExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtensionPointType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GetExtensionObjectsOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IRootWithUniqueName = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Extension:
        return props_Extension;
      case LanguageConceptSwitch.ExtensionDeclaration:
        return props_ExtensionDeclaration;
      case LanguageConceptSwitch.ExtensionFieldDeclaration:
        return props_ExtensionFieldDeclaration;
      case LanguageConceptSwitch.ExtensionFieldReference:
        return props_ExtensionFieldReference;
      case LanguageConceptSwitch.ExtensionFunction:
        return props_ExtensionFunction;
      case LanguageConceptSwitch.ExtensionObjectGetter:
        return props_ExtensionObjectGetter;
      case LanguageConceptSwitch.ExtensionPointDeclaration:
        return props_ExtensionPointDeclaration;
      case LanguageConceptSwitch.ExtensionPointExpression:
        return props_ExtensionPointExpression;
      case LanguageConceptSwitch.ExtensionPointType:
        return props_ExtensionPointType;
      case LanguageConceptSwitch.GetExtensionObjectsOperation:
        return props_GetExtensionObjectsOperation;
      case LanguageConceptSwitch.IRootWithUniqueName:
        return props_IRootWithUniqueName;
    }
    return null;
  }
}
