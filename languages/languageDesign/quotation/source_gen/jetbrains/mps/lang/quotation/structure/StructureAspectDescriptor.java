package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(17);
  /*package*/ final ConceptDescriptor myConceptAbstractAntiquotation = createDescriptorForAbstractAntiquotation();
  /*package*/ final ConceptDescriptor myConceptAntiquotation = createDescriptorForAntiquotation();
  /*package*/ final ConceptDescriptor myConceptGeneratorInternal_InternalReferenceHolder = createDescriptorForGeneratorInternal_InternalReferenceHolder();
  /*package*/ final ConceptDescriptor myConceptGeneratorInternal_PropertyDescriptor = createDescriptorForGeneratorInternal_PropertyDescriptor();
  /*package*/ final ConceptDescriptor myConceptGeneratorInternal_ReferenceDescriptor = createDescriptorForGeneratorInternal_ReferenceDescriptor();
  /*package*/ final ConceptDescriptor myConceptListAntiquotation = createDescriptorForListAntiquotation();
  /*package*/ final ConceptDescriptor myConceptNodeBuilder = createDescriptorForNodeBuilder();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderExpression = createDescriptorForNodeBuilderExpression();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderInitLink = createDescriptorForNodeBuilderInitLink();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderInitPart = createDescriptorForNodeBuilderInitPart();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderInitProperty = createDescriptorForNodeBuilderInitProperty();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderList = createDescriptorForNodeBuilderList();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderNode = createDescriptorForNodeBuilderNode();
  /*package*/ final ConceptDescriptor myConceptNodeBuilderRef = createDescriptorForNodeBuilderRef();
  /*package*/ final ConceptDescriptor myConceptPropertyAntiquotation = createDescriptorForPropertyAntiquotation();
  /*package*/ final ConceptDescriptor myConceptQuotation = createDescriptorForQuotation();
  /*package*/ final ConceptDescriptor myConceptReferenceAntiquotation = createDescriptorForReferenceAntiquotation();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractAntiquotation.getId(), 0);
    myIndexMap.put(myConceptAntiquotation.getId(), 1);
    myIndexMap.put(myConceptGeneratorInternal_InternalReferenceHolder.getId(), 2);
    myIndexMap.put(myConceptGeneratorInternal_PropertyDescriptor.getId(), 3);
    myIndexMap.put(myConceptGeneratorInternal_ReferenceDescriptor.getId(), 4);
    myIndexMap.put(myConceptListAntiquotation.getId(), 5);
    myIndexMap.put(myConceptNodeBuilder.getId(), 6);
    myIndexMap.put(myConceptNodeBuilderExpression.getId(), 7);
    myIndexMap.put(myConceptNodeBuilderInitLink.getId(), 8);
    myIndexMap.put(myConceptNodeBuilderInitPart.getId(), 9);
    myIndexMap.put(myConceptNodeBuilderInitProperty.getId(), 10);
    myIndexMap.put(myConceptNodeBuilderList.getId(), 11);
    myIndexMap.put(myConceptNodeBuilderNode.getId(), 12);
    myIndexMap.put(myConceptNodeBuilderRef.getId(), 13);
    myIndexMap.put(myConceptPropertyAntiquotation.getId(), 14);
    myIndexMap.put(myConceptQuotation.getId(), 15);
    myIndexMap.put(myConceptReferenceAntiquotation.getId(), 16);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractAntiquotation, myConceptAntiquotation, myConceptGeneratorInternal_InternalReferenceHolder, myConceptGeneratorInternal_PropertyDescriptor, myConceptGeneratorInternal_ReferenceDescriptor, myConceptListAntiquotation, myConceptNodeBuilder, myConceptNodeBuilderExpression, myConceptNodeBuilderInitLink, myConceptNodeBuilderInitPart, myConceptNodeBuilderInitProperty, myConceptNodeBuilderList, myConceptNodeBuilderNode, myConceptNodeBuilderRef, myConceptPropertyAntiquotation, myConceptQuotation, myConceptReferenceAntiquotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractAntiquotation;
      case 1:
        return myConceptAntiquotation;
      case 2:
        return myConceptGeneratorInternal_InternalReferenceHolder;
      case 3:
        return myConceptGeneratorInternal_PropertyDescriptor;
      case 4:
        return myConceptGeneratorInternal_ReferenceDescriptor;
      case 5:
        return myConceptListAntiquotation;
      case 6:
        return myConceptNodeBuilder;
      case 7:
        return myConceptNodeBuilderExpression;
      case 8:
        return myConceptNodeBuilderInitLink;
      case 9:
        return myConceptNodeBuilderInitPart;
      case 10:
        return myConceptNodeBuilderInitProperty;
      case 11:
        return myConceptNodeBuilderList;
      case 12:
        return myConceptNodeBuilderNode;
      case 13:
        return myConceptNodeBuilderRef;
      case 14:
        return myConceptPropertyAntiquotation;
      case 15:
        return myConceptQuotation;
      case 16:
        return myConceptReferenceAntiquotation;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAbstractAntiquotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.AbstractAntiquotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104656L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.IMetaLevelChanger", "jetbrains.mps.lang.core.structure.IAntisuppressErrors", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2cc012b1584bd3aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0xe8924c64a55a26fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5a0ec74a8bd5aeb2L, "label")).properties("label").childDescriptors(new ConceptDescriptorBuilder.Link(0x1168c104657L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196350785110")).create();
  }
  private static ConceptDescriptor createDescriptorForAntiquotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.Antiquotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104658L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104656L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196350785112")).create();
  }
  private static ConceptDescriptor createDescriptorForGeneratorInternal_InternalReferenceHolder() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.GeneratorInternal_InternalReferenceHolder", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1c4b068f93acf228L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1c4b068f93acf229L, "role", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL), false), new ConceptDescriptorBuilder.Ref(0x1c4b068f93ad27c5L, "sourceNode", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false), new ConceptDescriptorBuilder.Ref(0x1c4b068f93ad27bcL, "targetNode", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false)).references("role", "sourceNode", "targetNode").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "2038730470042956328")).create();
  }
  private static ConceptDescriptor createDescriptorForGeneratorInternal_PropertyDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.GeneratorInternal_PropertyDescriptor", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x746e600f0bda67c7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x746e600f0bda67f9L, "propertyValue")).properties("propertyValue").childDescriptors(new ConceptDescriptorBuilder.Link(0x166bab613f6f633aL, "propertyIdentity", MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x5fea1eb9fefc235cL), false, false, false)).children(new String[]{"propertyIdentity"}, new boolean[]{false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "8389748773577451463")).create();
  }
  private static ConceptDescriptor createDescriptorForGeneratorInternal_ReferenceDescriptor() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.GeneratorInternal_ReferenceDescriptor", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x24cfe382a47f973dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x24cfe382a47f973fL, "targetNodeId"), new ConceptDescriptorBuilder.Prop(0x24cfe382a480044dL, "targetModel")).properties("targetNodeId", "targetModel").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x24cfe382a47f973eL, "role", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL), false)).references("role").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "2652588855789590333")).create();
  }
  private static ConceptDescriptor createDescriptorForListAntiquotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.ListAntiquotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c10465eL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104656L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196350785118")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilder() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilder", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20a4a9dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4bb51009d20a4a9eL, "quotedNode", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20a4aa0L), false, false, false), new ConceptDescriptorBuilder.Link(0x4bb51009d20a4a9fL, "modelToCreate", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"quotedNode", "modelToCreate"}, new boolean[]{false, false}).alias("<light quotation>", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "5455284157993863837")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderExpression", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x718e3f4cb7a3132eL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x718e3f4cb7a31330L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("#", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "8182547171709752110")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderInitLink() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20c8e1aL)).super_("jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart").version(1).super_(MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L)).parents("jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x4bb51009d20c8e1cL, "link", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL), false)).references("link").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "5455284157994012186")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderInitPart() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4bb51009d20b0336L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "5455284157993911097")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderInitProperty() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0325L)).super_("jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart").version(1).super_(MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L)).parents("jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart").parentIds(MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x4bb51009d20b0326L, "property", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL), false)).references("property").alias("<{property}>", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "5455284157993911077")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderList() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderList", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x718e3f4cb7a2df32L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x718e3f4cb7a2df33L, "nodes", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"nodes"}, new boolean[]{true}).alias("[list]", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "8182547171709738802")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderNode() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderNode", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20a4aa0L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x4bb51009d20b02b1L, "concept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L), false)).references("concept").childDescriptors(new ConceptDescriptorBuilder.Link(0x4bb51009d20b033bL, "values", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x4bb51009d20b0339L), true, true, false)).children(new String[]{"values"}, new boolean[]{true}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "5455284157993863840")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeBuilderRef() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.NodeBuilderRef", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x718e3f4cb7a0fa93L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x718e3f4cb7a0fa95L, "target", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), false)).references("target").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "8182547171709614739")).create();
  }
  private static ConceptDescriptor createDescriptorForPropertyAntiquotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.PropertyAntiquotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x116aac96587L)).super_("jetbrains.mps.lang.core.structure.PropertyAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).parents("jetbrains.mps.lang.core.structure.PropertyAttribute", "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L), MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104656L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196866233735")).create();
  }
  private static ConceptDescriptor createDescriptorForQuotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.Quotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104659L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IMetaLevelChanger", "jetbrains.mps.lang.core.structure.ISuppressErrors").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2cc012b1584bd3aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1168c10465aL, "quotedNode", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, false, false), new ConceptDescriptorBuilder.Link(0x1168c10465bL, "modelToCreate", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(0x2c22b7a3db809c05L, "nodeId", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"quotedNode", "modelToCreate", "nodeId"}, new boolean[]{false, false, false}).alias("<quotation>", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196350785113")).create();
  }
  private static ConceptDescriptor createDescriptorForReferenceAntiquotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation", MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c10465dL)).super_("jetbrains.mps.lang.core.structure.LinkAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).parents("jetbrains.mps.lang.core.structure.LinkAttribute", "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L), MetaIdFactory.conceptId(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104656L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959034b(jetbrains.mps.lang.quotation.structure)", "1196350785117")).create();
  }
}
