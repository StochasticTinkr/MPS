package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractAntiquotation = 0;
  public static final int Antiquotation = 1;
  public static final int GeneratorInternal_InternalReferenceHolder = 2;
  public static final int GeneratorInternal_PropertyDescriptor = 3;
  public static final int GeneratorInternal_ReferenceDescriptor = 4;
  public static final int ListAntiquotation = 5;
  public static final int NodeBuilder = 6;
  public static final int NodeBuilderExpression = 7;
  public static final int NodeBuilderInitLink = 8;
  public static final int NodeBuilderInitPart = 9;
  public static final int NodeBuilderInitProperty = 10;
  public static final int NodeBuilderList = 11;
  public static final int NodeBuilderNode = 12;
  public static final int NodeBuilderRef = 13;
  public static final int PropertyAntiquotation = 14;
  public static final int Quotation = 15;
  public static final int ReferenceAntiquotation = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L);
    builder.put(0x1168c104656L, AbstractAntiquotation);
    builder.put(0x1168c104658L, Antiquotation);
    builder.put(0x1c4b068f93acf228L, GeneratorInternal_InternalReferenceHolder);
    builder.put(0x746e600f0bda67c7L, GeneratorInternal_PropertyDescriptor);
    builder.put(0x24cfe382a47f973dL, GeneratorInternal_ReferenceDescriptor);
    builder.put(0x1168c10465eL, ListAntiquotation);
    builder.put(0x4bb51009d20a4a9dL, NodeBuilder);
    builder.put(0x718e3f4cb7a3132eL, NodeBuilderExpression);
    builder.put(0x4bb51009d20c8e1aL, NodeBuilderInitLink);
    builder.put(0x4bb51009d20b0339L, NodeBuilderInitPart);
    builder.put(0x4bb51009d20b0325L, NodeBuilderInitProperty);
    builder.put(0x718e3f4cb7a2df32L, NodeBuilderList);
    builder.put(0x4bb51009d20a4aa0L, NodeBuilderNode);
    builder.put(0x718e3f4cb7a0fa93L, NodeBuilderRef);
    builder.put(0x116aac96587L, PropertyAntiquotation);
    builder.put(0x1168c104659L, Quotation);
    builder.put(0x1168c10465dL, ReferenceAntiquotation);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
