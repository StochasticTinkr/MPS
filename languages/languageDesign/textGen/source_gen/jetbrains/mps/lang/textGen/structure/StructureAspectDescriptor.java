package jetbrains.mps.lang.textGen.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(41);
  /*package*/ final ConceptDescriptor myConceptAbstractAppendPart = createDescriptorForAbstractAppendPart();
  /*package*/ final ConceptDescriptor myConceptAbstractTextGenDeclaration = createDescriptorForAbstractTextGenDeclaration();
  /*package*/ final ConceptDescriptor myConceptAbstractTextGenParameter = createDescriptorForAbstractTextGenParameter();
  /*package*/ final ConceptDescriptor myConceptAppendOperation = createDescriptorForAppendOperation();
  /*package*/ final ConceptDescriptor myConceptAttributedNodePart = createDescriptorForAttributedNodePart();
  /*package*/ final ConceptDescriptor myConceptBufferParameter = createDescriptorForBufferParameter();
  /*package*/ final ConceptDescriptor myConceptClassConceptUnitContext = createDescriptorForClassConceptUnitContext();
  /*package*/ final ConceptDescriptor myConceptCollectionAppendPart = createDescriptorForCollectionAppendPart();
  /*package*/ final ConceptDescriptor myConceptConceptTextGenDeclaration = createDescriptorForConceptTextGenDeclaration();
  /*package*/ final ConceptDescriptor myConceptConstantStringAppendPart = createDescriptorForConstantStringAppendPart();
  /*package*/ final ConceptDescriptor myConceptContextInstanceSpecification = createDescriptorForContextInstanceSpecification();
  /*package*/ final ConceptDescriptor myConceptContextParameter = createDescriptorForContextParameter();
  /*package*/ final ConceptDescriptor myConceptDecreaseDepthOperation = createDescriptorForDecreaseDepthOperation();
  /*package*/ final ConceptDescriptor myConceptEncodingDeclaration = createDescriptorForEncodingDeclaration();
  /*package*/ final ConceptDescriptor myConceptEncodingDeclarationBase = createDescriptorForEncodingDeclarationBase();
  /*package*/ final ConceptDescriptor myConceptEncodingLiteral = createDescriptorForEncodingLiteral();
  /*package*/ final ConceptDescriptor myConceptExtensionDeclaration = createDescriptorForExtensionDeclaration();
  /*package*/ final ConceptDescriptor myConceptFilenameFunction = createDescriptorForFilenameFunction();
  /*package*/ final ConceptDescriptor myConceptFoundErrorOperation = createDescriptorForFoundErrorOperation();
  /*package*/ final ConceptDescriptor myConceptGenerateTextDeclaration = createDescriptorForGenerateTextDeclaration();
  /*package*/ final ConceptDescriptor myConceptIncreaseDepthOperation = createDescriptorForIncreaseDepthOperation();
  /*package*/ final ConceptDescriptor myConceptIndentBufferOperation = createDescriptorForIndentBufferOperation();
  /*package*/ final ConceptDescriptor myConceptIndentPart = createDescriptorForIndentPart();
  /*package*/ final ConceptDescriptor myConceptInstancePerUnitContextObject = createDescriptorForInstancePerUnitContextObject();
  /*package*/ final ConceptDescriptor myConceptLanguageTextGenDeclaration = createDescriptorForLanguageTextGenDeclaration();
  /*package*/ final ConceptDescriptor myConceptLayoutPart = createDescriptorForLayoutPart();
  /*package*/ final ConceptDescriptor myConceptNewLineAppendPart = createDescriptorForNewLineAppendPart();
  /*package*/ final ConceptDescriptor myConceptNodeAppendPart = createDescriptorForNodeAppendPart();
  /*package*/ final ConceptDescriptor myConceptNodeParameter = createDescriptorForNodeParameter();
  /*package*/ final ConceptDescriptor myConceptOperationCall = createDescriptorForOperationCall();
  /*package*/ final ConceptDescriptor myConceptOperationDeclaration = createDescriptorForOperationDeclaration();
  /*package*/ final ConceptDescriptor myConceptReferenceAppendPart = createDescriptorForReferenceAppendPart();
  /*package*/ final ConceptDescriptor myConceptSimpleTextGenOperation = createDescriptorForSimpleTextGenOperation();
  /*package*/ final ConceptDescriptor myConceptStubOperationDeclaration = createDescriptorForStubOperationDeclaration();
  /*package*/ final ConceptDescriptor myConceptTextUnitLayout = createDescriptorForTextUnitLayout();
  /*package*/ final ConceptDescriptor myConceptUnitContextDeclaration = createDescriptorForUnitContextDeclaration();
  /*package*/ final ConceptDescriptor myConceptUnitContextObject = createDescriptorForUnitContextObject();
  /*package*/ final ConceptDescriptor myConceptUnitContextReference = createDescriptorForUnitContextReference();
  /*package*/ final ConceptDescriptor myConceptUtilityMethodCall = createDescriptorForUtilityMethodCall();
  /*package*/ final ConceptDescriptor myConceptUtilityMethodDeclaration = createDescriptorForUtilityMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptWithIndentOperation = createDescriptorForWithIndentOperation();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractAppendPart.getId(), 0);
    myIndexMap.put(myConceptAbstractTextGenDeclaration.getId(), 1);
    myIndexMap.put(myConceptAbstractTextGenParameter.getId(), 2);
    myIndexMap.put(myConceptAppendOperation.getId(), 3);
    myIndexMap.put(myConceptAttributedNodePart.getId(), 4);
    myIndexMap.put(myConceptBufferParameter.getId(), 5);
    myIndexMap.put(myConceptClassConceptUnitContext.getId(), 6);
    myIndexMap.put(myConceptCollectionAppendPart.getId(), 7);
    myIndexMap.put(myConceptConceptTextGenDeclaration.getId(), 8);
    myIndexMap.put(myConceptConstantStringAppendPart.getId(), 9);
    myIndexMap.put(myConceptContextInstanceSpecification.getId(), 10);
    myIndexMap.put(myConceptContextParameter.getId(), 11);
    myIndexMap.put(myConceptDecreaseDepthOperation.getId(), 12);
    myIndexMap.put(myConceptEncodingDeclaration.getId(), 13);
    myIndexMap.put(myConceptEncodingDeclarationBase.getId(), 14);
    myIndexMap.put(myConceptEncodingLiteral.getId(), 15);
    myIndexMap.put(myConceptExtensionDeclaration.getId(), 16);
    myIndexMap.put(myConceptFilenameFunction.getId(), 17);
    myIndexMap.put(myConceptFoundErrorOperation.getId(), 18);
    myIndexMap.put(myConceptGenerateTextDeclaration.getId(), 19);
    myIndexMap.put(myConceptIncreaseDepthOperation.getId(), 20);
    myIndexMap.put(myConceptIndentBufferOperation.getId(), 21);
    myIndexMap.put(myConceptIndentPart.getId(), 22);
    myIndexMap.put(myConceptInstancePerUnitContextObject.getId(), 23);
    myIndexMap.put(myConceptLanguageTextGenDeclaration.getId(), 24);
    myIndexMap.put(myConceptLayoutPart.getId(), 25);
    myIndexMap.put(myConceptNewLineAppendPart.getId(), 26);
    myIndexMap.put(myConceptNodeAppendPart.getId(), 27);
    myIndexMap.put(myConceptNodeParameter.getId(), 28);
    myIndexMap.put(myConceptOperationCall.getId(), 29);
    myIndexMap.put(myConceptOperationDeclaration.getId(), 30);
    myIndexMap.put(myConceptReferenceAppendPart.getId(), 31);
    myIndexMap.put(myConceptSimpleTextGenOperation.getId(), 32);
    myIndexMap.put(myConceptStubOperationDeclaration.getId(), 33);
    myIndexMap.put(myConceptTextUnitLayout.getId(), 34);
    myIndexMap.put(myConceptUnitContextDeclaration.getId(), 35);
    myIndexMap.put(myConceptUnitContextObject.getId(), 36);
    myIndexMap.put(myConceptUnitContextReference.getId(), 37);
    myIndexMap.put(myConceptUtilityMethodCall.getId(), 38);
    myIndexMap.put(myConceptUtilityMethodDeclaration.getId(), 39);
    myIndexMap.put(myConceptWithIndentOperation.getId(), 40);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractAppendPart, myConceptAbstractTextGenDeclaration, myConceptAbstractTextGenParameter, myConceptAppendOperation, myConceptAttributedNodePart, myConceptBufferParameter, myConceptClassConceptUnitContext, myConceptCollectionAppendPart, myConceptConceptTextGenDeclaration, myConceptConstantStringAppendPart, myConceptContextInstanceSpecification, myConceptContextParameter, myConceptDecreaseDepthOperation, myConceptEncodingDeclaration, myConceptEncodingDeclarationBase, myConceptEncodingLiteral, myConceptExtensionDeclaration, myConceptFilenameFunction, myConceptFoundErrorOperation, myConceptGenerateTextDeclaration, myConceptIncreaseDepthOperation, myConceptIndentBufferOperation, myConceptIndentPart, myConceptInstancePerUnitContextObject, myConceptLanguageTextGenDeclaration, myConceptLayoutPart, myConceptNewLineAppendPart, myConceptNodeAppendPart, myConceptNodeParameter, myConceptOperationCall, myConceptOperationDeclaration, myConceptReferenceAppendPart, myConceptSimpleTextGenOperation, myConceptStubOperationDeclaration, myConceptTextUnitLayout, myConceptUnitContextDeclaration, myConceptUnitContextObject, myConceptUnitContextReference, myConceptUtilityMethodCall, myConceptUtilityMethodDeclaration, myConceptWithIndentOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractAppendPart;
      case 1:
        return myConceptAbstractTextGenDeclaration;
      case 2:
        return myConceptAbstractTextGenParameter;
      case 3:
        return myConceptAppendOperation;
      case 4:
        return myConceptAttributedNodePart;
      case 5:
        return myConceptBufferParameter;
      case 6:
        return myConceptClassConceptUnitContext;
      case 7:
        return myConceptCollectionAppendPart;
      case 8:
        return myConceptConceptTextGenDeclaration;
      case 9:
        return myConceptConstantStringAppendPart;
      case 10:
        return myConceptContextInstanceSpecification;
      case 11:
        return myConceptContextParameter;
      case 12:
        return myConceptDecreaseDepthOperation;
      case 13:
        return myConceptEncodingDeclaration;
      case 14:
        return myConceptEncodingDeclarationBase;
      case 15:
        return myConceptEncodingLiteral;
      case 16:
        return myConceptExtensionDeclaration;
      case 17:
        return myConceptFilenameFunction;
      case 18:
        return myConceptFoundErrorOperation;
      case 19:
        return myConceptGenerateTextDeclaration;
      case 20:
        return myConceptIncreaseDepthOperation;
      case 21:
        return myConceptIndentBufferOperation;
      case 22:
        return myConceptIndentPart;
      case 23:
        return myConceptInstancePerUnitContextObject;
      case 24:
        return myConceptLanguageTextGenDeclaration;
      case 25:
        return myConceptLayoutPart;
      case 26:
        return myConceptNewLineAppendPart;
      case 27:
        return myConceptNodeAppendPart;
      case 28:
        return myConceptNodeParameter;
      case 29:
        return myConceptOperationCall;
      case 30:
        return myConceptOperationDeclaration;
      case 31:
        return myConceptReferenceAppendPart;
      case 32:
        return myConceptSimpleTextGenOperation;
      case 33:
        return myConceptStubOperationDeclaration;
      case 34:
        return myConceptTextUnitLayout;
      case 35:
        return myConceptUnitContextDeclaration;
      case 36:
        return myConceptUnitContextObject;
      case 37:
        return myConceptUnitContextReference;
      case 38:
        return myConceptUtilityMethodCall;
      case 39:
        return myConceptUtilityMethodDeclaration;
      case 40:
        return myConceptWithIndentOperation;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.class_(false, true, false);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237305115734");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractTextGenDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "AbstractTextGenDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f60f06a49L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234281982537");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractTextGenParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "AbstractTextGenParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f84e1988dL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234884991117");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAppendOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "AppendOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x120153077caL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237306079178");
    b.associate("textArea", 0x2b846983a62af1c4L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dcaL).optional(true).origin("3135747254706172356").done();
    b.aggregate("part", 0x12015310576L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L).optional(false).ordered(true).multiple(true).origin("1237306115446").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("append");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributedNodePart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "AttributedNodePart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x7c096989aaf957c1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/8937790975493363649");
    b.alias("${ attributed node }$");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBufferParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "BufferParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f65197df2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractTextGenParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f84e1988dL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234351783410");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("buffer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassConceptUnitContext() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ClassConceptUnitContext", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961ac9073L);
    b.class_(false, false, false);
    b.parent(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961ac9072L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3996543181682151539");
    b.associate("classifier", 0x377692d961ac9076L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L).optional(false).origin("3996543181682151542").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "CollectionAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201527819cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237305491868");
    b.prop("separator", 0x120152f5107L, "1237306003719");
    b.prop("withSeparator", 0x1203d98429fL, "1237983969951");
    b.aggregate("list", 0x120152e6dcfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1237305945551").done();
    b.alias("$list{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptTextGenDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ConceptTextGenDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f3c776369L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractTextGenDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f60f06a49L);
    b.parent(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233670071145");
    b.associate("conceptDeclaration", 0x11f3c7a3d4dL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(false).origin("1233670257997").done();
    b.aggregate("extension", 0x6ee6b5c5ad5f7279L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x7bf48616723f681dL).optional(true).ordered(true).multiple(false).origin("7991274449437422201").done();
    b.aggregate("encoding", 0x10fd02ec599e8fbeL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x10fd02ec599e8fbbL).optional(true).ordered(true).multiple(false).origin("1224137887853744062").done();
    b.aggregate("textGenBlock", 0x11f41304578L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f412f8790L).optional(true).ordered(true).multiple(false).origin("1233749296504").done();
    b.aggregate("filename", 0xa0f73089d631ccL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0xa0f73089d40b8eL).optional(true).ordered(true).multiple(false).origin("45307784116711884").done();
    b.aggregate("layout", 0x2bad879ac8f27decL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dc9L).optional(true).ordered(true).multiple(false).origin("3147320813467893228").done();
    b.aggregate("contextObjects", 0x1dfcc3c672ea7620L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1dfcc3c672ea762cL).optional(true).ordered(true).multiple(true).origin("2160817178329904672").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantStringAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ConstantStringAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x12015288286L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237305557638");
    b.prop("value", 0x1201528caacL, "1237305576108");
    b.prop("withIndent", 0x1201534c74dL, "1237306361677");
    b.alias("constant");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContextInstanceSpecification() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ContextInstanceSpecification", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961ac9072L);
    b.interface_();
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3996543181682151538");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContextParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ContextParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f60cd534bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractTextGenParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f84e1988dL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234279682891");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("context");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecreaseDepthOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "DecreaseDepthOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4165704bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.SimpleTextGenOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4153bc8cL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233752780875");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("decrease depth");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEncodingDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "EncodingDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x10fd02ec599e8f93L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.parent(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x10fd02ec599e8fbbL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1224137887853744019");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("encoding");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEncodingDeclarationBase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "EncodingDeclarationBase", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x10fd02ec599e8fbbL);
    b.interface_();
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1224137887853744059");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEncodingLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "EncodingLiteral", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x63754d97e1c86b8cL);
    b.class_(false, false, false);
    b.parent(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x10fd02ec599e8fbbL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/7166719696753421196");
    b.prop("encoding", 0x63754d97e1c86b8dL, "7166719696753421197");
    b.alias("encoding literal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtensionDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ExtensionDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x7bf48616723f681dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/8931911391946696733");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("extension");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFilenameFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "FilenameFunction", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0xa0f73089d40b8eL);
    b.class_(true, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/45307784116571022");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("filename");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFoundErrorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "FoundErrorOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f7f7ff1bdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234794705341");
    b.aggregate("text", 0x1201f00bb34L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1237470722868").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("found error");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGenerateTextDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "GenerateTextDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f412f8790L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233749247888");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("do generate text");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncreaseDepthOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "IncreaseDepthOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f41648039L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.SimpleTextGenOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4153bc8cL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233752719417");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("increase depth");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIndentBufferOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "IndentBufferOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b64a5c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.SimpleTextGenOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4153bc8cL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233920501193");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("indent buffer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIndentPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "IndentPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x3c78adfd9bcaac6aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/4357423944233036906");
    b.alias("indent");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstancePerUnitContextObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "InstancePerUnitContextObject", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1dfcc3c672ea762bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.UnitContextObject", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1dfcc3c672ea762cL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/2160817178329904683");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLanguageTextGenDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "LanguageTextGenDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b71f51fL);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractTextGenDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f60f06a49L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233921373471");
    b.associate("baseTextGen", 0x11f7eb142ecL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b71f51fL).optional(true).origin("1234781160172").done();
    b.aggregate("operation", 0x11f4b821fc5L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b80e9d3L).optional(true).ordered(true).multiple(true).origin("1233922432965").done();
    b.aggregate("function", 0x11f6f8860bdL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f6f6a18e4L).optional(true).ordered(true).multiple(true).origin("1234526822589").done();
    b.aggregate("contextObjects", 0x377692d961abfe2aL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961aaee79L).optional(true).ordered(true).multiple(true).origin("3996543181682114090").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayoutPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "LayoutPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dcaL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3147320813467893194");
    b.aggregate("nested", 0x2bad879ac8f27dd2L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dcaL).optional(true).ordered(true).multiple(true).origin("3147320813467893202").done();
    b.alias("text area");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewLineAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "NewLineAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x12015232fd0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237305208784");
    b.alias("\\n");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "NodeAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x12015251a28L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1237305334312");
    b.prop("withIndent", 0x12015341f3eL, "1237306318654");
    b.aggregate("value", 0x120152c1030L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1237305790512").done();
    b.alias("${");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "NodeParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f411d576bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractTextGenParameter", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f84e1988dL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233748055915");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "OperationCall", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4ba6faaaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233924848298");
    b.associate("function", 0x11f5b7f02d9L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b80e9d3L).optional(false).origin("1234190664409").done();
    b.aggregate("parameter", 0x11f5b891231L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1234191323697").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "OperationDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b80e9d3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x612410e32cf46136L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233922353619");
    b.prop("operationName", 0x11f5fdf3bedL, "1234264079341");
    b.kind(ConceptKind.IMPLEMENTATION_WITH_STUB, StaticScope.GLOBAL);
    b.alias("new operation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceAppendPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "ReferenceAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x5fec1f33fd3007f8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.AbstractAppendPart", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1201521c456L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/6911933836258445304");
    b.prop("uniqNameInFile", 0x42be23a782c8ba04L, "4809320654438971908");
    b.aggregate("reference", 0x5fec1f33fd3007fbL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("6911933836258445307").done();
    b.alias("$ref{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleTextGenOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "SimpleTextGenOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4153bc8cL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1233751620748");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStubOperationDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "StubOperationDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bacbf19e457bd3bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.textGen.structure.OperationDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b80e9d3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x226fb4c3ba26d45L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3147100357551177019");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextUnitLayout() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "TextUnitLayout", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dc9L);
    b.class_(false, false, false);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3147320813467893193");
    b.associate("active", 0x2bad879ac8f27dcdL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dcaL).optional(false).origin("3147320813467893197").done();
    b.aggregate("parts", 0x2bad879ac8f27dcbL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x2bad879ac8f27dcaL).optional(false).ordered(true).multiple(true).origin("3147320813467893195").done();
    b.alias("unit layout");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnitContextDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "UnitContextDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961aaee79L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3996543181682044537");
    b.aggregate("type", 0x377692d961aaee7eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("3996543181682044542").done();
    b.aggregate("instance", 0x377692d961ac9078L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961ac9072L).optional(false).ordered(true).multiple(false).origin("3996543181682151544").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnitContextObject() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "UnitContextObject", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x1dfcc3c672ea762cL);
    b.class_(false, true, false);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/2160817178329904684");
    b.associate("context", 0x1dfcc3c672ea762dL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961aaee79L).optional(false).origin("2160817178329904685").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnitContextReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "UnitContextReference", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961ab5a81L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/3996543181682072193");
    b.associate("context", 0x377692d961ab5a82L).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x377692d961aaee79L).optional(false).origin("3996543181682072194").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUtilityMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "UtilityMethodCall", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f6faa8c98L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234529062040");
    b.associate("function", 0x11f6fac17ecL).target(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f6f6a18e4L).optional(false).origin("1234529163244").done();
    b.aggregate("parameter", 0x11f6fac4585L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1234529174917").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUtilityMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "UtilityMethodDeclaration", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f6f6a18e4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1234524838116");
    b.alias("new private function");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWithIndentOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.textGen", "WithIndentOperation", 0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11fd28e1146L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:de0d3c0c-d049-41cf-bbf9-a920ba513cd3(jetbrains.mps.lang.textGen.structure)/1236188139846");
    b.aggregate("list", 0x11fd28f940dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1236188238861").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("with indent {");
    return b.create();
  }
}
