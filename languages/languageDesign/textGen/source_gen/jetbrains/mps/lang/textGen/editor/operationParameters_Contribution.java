package jetbrains.mps.lang.textGen.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.substitute.ConstraintsFilteringSubstituteMenuPartDecorator;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.editor.menus.ConceptMenusPart;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.textGen.behavior.LanguageTextGenDeclaration__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.editor.menus.substitute.SimpleConceptSubstituteMenuPart;

public class operationParameters_Contribution extends SubstituteMenuBase {
  public operationParameters_Contribution() {
    super(true);
  }
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new ConstraintsFilteringSubstituteMenuPartDecorator(new operationParameters_Contribution.SubstituteMenuPart_Concepts_yzb4an_a(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL, "jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter")));
    return result;
  }
  public class SubstituteMenuPart_Concepts_yzb4an_a extends ConceptMenusPart<SubstituteMenuItem, SubstituteMenuContext> {
    protected Collection getConcepts(SubstituteMenuContext _context) {
      List<SNode> langTextGenComponents = SNodeOperations.getNodeAncestors(_context.getParentNode(), MetaAdapterFactory.getConcept(0xb83431fe5c8f40bcL, 0x8a3665e25f4dd253L, 0x11f4b71f51fL, "jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration"), false);
      SNode langTextGen = ListSequence.fromList(langTextGenComponents).first();
      if (langTextGen != null) {
        return ListSequence.fromList(LanguageTextGenDeclaration__BehaviorDescriptor.getParameters_idhXZLLl0.invoke(langTextGen)).select(new ISelector<SNode, SAbstractConcept>() {
          public SAbstractConcept select(SNode it) {
            return SNodeOperations.asSConcept(it);
          }
        }).toListSequence();
      } else {
        return ListSequence.fromList(ListSequence.fromList(new ArrayList<SNode>())).select(new ISelector<SNode, SAbstractConcept>() {
          public SAbstractConcept select(SNode it) {
            return SNodeOperations.asSConcept(it);
          }
        }).toListSequence();
      }
    }
    @Override
    protected Collection<SubstituteMenuItem> createItemsForConcept(SubstituteMenuContext context, SAbstractConcept concept) {
      return new SimpleConceptSubstituteMenuPart(concept).createItems(context);
    }
  }
}
