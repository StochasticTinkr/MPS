package jetbrains.mps.lang.util.order.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Order;
  private ConceptPresentation props_OrderDeclaration;
  private ConceptPresentation props_OrderParticipant;
  private ConceptPresentation props_OrderParticipantReference;
  private ConceptPresentation props_OrderReference;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Order:
        if (props_Order == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Order = cpb.create();
        }
        return props_Order;
      case LanguageConceptSwitch.OrderDeclaration:
        if (props_OrderDeclaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_OrderDeclaration = cpb.create();
        }
        return props_OrderDeclaration;
      case LanguageConceptSwitch.OrderParticipant:
        if (props_OrderParticipant == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_OrderParticipant = cpb.create();
        }
        return props_OrderParticipant;
      case LanguageConceptSwitch.OrderParticipantReference:
        if (props_OrderParticipantReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_OrderParticipantReference = cpb.create();
        }
        return props_OrderParticipantReference;
      case LanguageConceptSwitch.OrderReference:
        if (props_OrderReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("OrderReference");
          props_OrderReference = cpb.create();
        }
        return props_OrderReference;
    }
    return null;
  }
}
