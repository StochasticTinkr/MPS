package jetbrains.mps.lang.util.order.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_Order = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_OrderDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_OrderParticipant = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_OrderParticipantReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_OrderReference = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Order:
        return props_Order;
      case LanguageConceptSwitch.OrderDeclaration:
        return props_OrderDeclaration;
      case LanguageConceptSwitch.OrderParticipant:
        return props_OrderParticipant;
      case LanguageConceptSwitch.OrderParticipantReference:
        return props_OrderParticipantReference;
      case LanguageConceptSwitch.OrderReference:
        return props_OrderReference;
    }
    return null;
  }
}
