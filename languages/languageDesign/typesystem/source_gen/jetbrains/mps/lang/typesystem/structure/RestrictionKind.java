package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum RestrictionKind {
  equals(":==:", "equals"),
  subtype(":<=:", "subtype");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private RestrictionKind(String name, String value) {
    myName = name;
    myValue = value;

  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<RestrictionKind> getConstants() {
    List<RestrictionKind> list = ListSequence.fromList(new LinkedList<RestrictionKind>());
    ListSequence.fromList(list).addElement(RestrictionKind.equals);
    ListSequence.fromList(list).addElement(RestrictionKind.subtype);
    return list;
  }
  public static RestrictionKind getDefault() {
    return RestrictionKind.equals;
  }
  public static RestrictionKind parseValue(String value) {
    if (value == null) {
      return RestrictionKind.getDefault();
    }
    if (value.equals(RestrictionKind.equals.getValueAsString())) {
      return RestrictionKind.equals;
    }
    if (value.equals(RestrictionKind.subtype.getValueAsString())) {
      return RestrictionKind.subtype;
    }
    return RestrictionKind.getDefault();
  }
}
