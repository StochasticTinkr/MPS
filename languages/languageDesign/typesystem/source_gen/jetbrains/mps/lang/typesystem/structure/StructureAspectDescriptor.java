package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAbstractCheckingRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractRule", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1195213689297L, "overrides")).properties("overrides").childDescriptors(new ConceptDescriptorBuilder.Link(1195213635060L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(1766949807893591548L, "overridesFun", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1885777d1370d97bL), true, false, false)).children(new String[]{"body", "overridesFun"}, new boolean[]{false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptAbstractComparableStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).parents("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4315056782306320180L, "infer")).properties("infer").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAbstractEquationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1206359757216L, "checkOnly")).properties("checkOnly").childDescriptors(new ConceptDescriptorBuilder.Link(1174660783413L, "leftExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L), false, false, false), new ConceptDescriptorBuilder.Link(1174660783414L, "rightExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L), false, false, false), new ConceptDescriptorBuilder.Link(1174662598553L, "nodeToCheck", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(1180447237840L, "errorString", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(1216204483513L, "helginsIntention", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85e030eL), true, true, false)).children(new String[]{"leftExpression", "rightExpression", "nodeToCheck", "errorString", "helginsIntention"}, new boolean[]{false, false, false, false, true}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAbstractInequationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).parents("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1212056105818L, "inequationPriority"), new ConceptDescriptorBuilder.Prop(4778346850551686273L, "label"), new ConceptDescriptorBuilder.Prop(7739208407757103785L, "strong"), new ConceptDescriptorBuilder.Prop(7739208407757103786L, "orientation")).properties("inequationPriority", "label", "strong", "orientation").childDescriptors(new ConceptDescriptorBuilder.Link(4778346850551695629L, "afterEquations", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x42501924d0bd1913L), true, true, false), new ConceptDescriptorBuilder.Link(4778346850551695630L, "beforeEquations", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x42501924d0bd1913L), true, true, false), new ConceptDescriptorBuilder.Link(1320713984677672382L, "afterGroups", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x12541e5f229acee2L), true, true, false), new ConceptDescriptorBuilder.Link(1320713984677672383L, "beforeGroups", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x12541e5f229acee2L), true, true, false), new ConceptDescriptorBuilder.Link(1320713984677695199L, "inequationGroup", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x12541e5f229acee2L), true, false, false), new ConceptDescriptorBuilder.Link(5548354512157832020L, "rulesToSkip", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x4cffb708491a734cL), true, true, false)).children(new String[]{"afterEquations", "beforeEquations", "afterGroups", "beforeGroups", "inequationGroup", "rulesToSkip"}, new boolean[]{true, true, true, true, false, true}).create();
  /*package*/ final ConceptDescriptor myConceptAbstractOverloadedOpsTypeRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(8124453027370845341L, "operationConcept", MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x10cd05c601dL), false, true, false), new ConceptDescriptorBuilder.Link(8124453027370845343L, "function", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4bffaeL), false, false, false), new ConceptDescriptorBuilder.Link(6136676636349909553L, "isApplicable", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x5529dae3231347deL), true, false, false)).children(new String[]{"operationConcept", "function", "isApplicable"}, new boolean[]{true, false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptAbstractRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.lang.structure.structure.IConceptAspect").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L)).childDescriptors(new ConceptDescriptorBuilder.Link(1174648101952L, "applicableNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false)).children(new String[]{"applicableNode"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptAbstractSubtypingRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractRule", "jetbrains.mps.baseLanguage.structure.IMethodLike", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1175607673137L, "isWeak")).properties("isWeak").childDescriptors(new ConceptDescriptorBuilder.Link(1175147624276L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"body"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptAddDependencyStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AddDependencyStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11c22f6c964L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(1220357350423L, "dependency", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"dependency"}, new boolean[]{false}).alias("addDependency", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptApplicableNodeCondition = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptApplicableNodeReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e9ef5dcL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174650432090L, "applicableNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false)).references("applicableNode").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AssertStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b24c0cd8L)).super_("jetbrains.mps.lang.typesystem.structure.ReportErrorStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b251a62aL)).parents("jetbrains.mps.lang.typesystem.structure.ReportErrorStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b251a62aL)).childDescriptors(new ConceptDescriptorBuilder.Link(1175517761460L, "condition", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"condition"}, new boolean[]{false}).alias("ensure", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAttributedNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.AttributedNodeExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2152354b0d500086L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("attributedNode", "").create();
  /*package*/ final ConceptDescriptor myConceptCaretPositionOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CaretPositionOperation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xef0542bbc395068L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("caretPosition", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCoerceExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CoerceExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a2a14aeL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(7739208407757214262L, "strong")).properties("strong").childDescriptors(new ConceptDescriptorBuilder.Link(1178870894644L, "pattern", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false), new ConceptDescriptorBuilder.Link(1178870894645L, "nodeToCoerce", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"pattern", "nodeToCoerce"}, new boolean[]{false, false}).alias("coerce", "expression").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCoerceStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CoerceStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111f05e2451L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4614734314076988359L, "strong")).properties("strong").childDescriptors(new ConceptDescriptorBuilder.Link(1176558876970L, "pattern", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false), new ConceptDescriptorBuilder.Link(1176558919376L, "nodeToCoerce", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1176558868203L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(1220447035659L, "elseClause", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), true, false, false)).children(new String[]{"pattern", "nodeToCoerce", "body", "elseClause"}, new boolean[]{false, false, false, false}).alias("coerce", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCoerceStrongExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CoerceStrongExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a376a3dL)).super_("jetbrains.mps.lang.typesystem.structure.CoerceExpression").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a2a14aeL)).parents("jetbrains.mps.lang.typesystem.structure.CoerceExpression").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a2a14aeL)).alias("coerceStrong", "expression").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptComparisonRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ComparisonRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114caade477L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb779L)).childDescriptors(new ConceptDescriptorBuilder.Link(1188820750135L, "anotherNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false)).children(new String[]{"anotherNode"}, new boolean[]{false}).alias("Comparison Rule", "").create();
  /*package*/ final ConceptDescriptor myConceptConceptClauseLinkInfo = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptClauseLinkInfo", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x120c8f8641eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1240322663260L, "linkDeclaration", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL), false)).references("linkDeclaration").childDescriptors(new ConceptDescriptorBuilder.Link(1240322649599L, "targetNode", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1240657901213L, "childIndex", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"targetNode", "childIndex"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_ContextNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_ContextNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078ffb82L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("contextNode", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_EditorContext = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_EditorContext", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x335fe1d0b7494cfcL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("editorContext", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Role = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_Role", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078e410eL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("role", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Selection = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_Selection", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x611e7dc14a69a014L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("selectionBefore", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_isAggregation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_isAggregation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078ecdbdL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("isAggregation", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_node = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_node", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3618c300L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("node", "function parameter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_var = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_var", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e07431ba7L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("variable", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ConceptReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2a88b3L)).super_("jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L)).parents("jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174642800329L, "concept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), false)).references("concept").alias("concept =", "").create();
  /*package*/ final ConceptDescriptor myConceptCreateComparableEquationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateComparableEquationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f63bc23L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L)).alias(":~:", "weak comparability").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateComparableEquationStatementStrong = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateComparableEquationStatementStrong", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112c36bc7ecL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L)).alias(":~~:", "strong comparability").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateEquationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateEquationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f179e8dL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).parents("jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL)).alias(":==:", "typesystem equation").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateGreaterThanInequationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateGreaterThanInequationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f62956cL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).alias(":>=:", "weak subtyping").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateLessThanInequationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateLessThanInequationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f60bfd5L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).alias(":<=:", "weak subtyping").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateStrongGreaterThanInequationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateStrongGreaterThanInequationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x31c3185c17a0f767L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).alias(":>>=:", "strong subtyping").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateStrongLessThanInequationStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.CreateStrongLessThanInequationStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112b37f1b6eL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L)).alias(":<<=:", "strong subtyping").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDefaultGroupReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.DefaultGroupReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x12541e5f229acee2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).alias("default", "").create();
  /*package*/ final ConceptDescriptor myConceptErrorInfoExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ErrorInfoExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x117c6082b85L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("equationInfo", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetOperationType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.GetOperationType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fd11186b7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1236163216864L, "operation", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1236163223573L, "leftOperandType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1236163223950L, "rightOperandType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"operation", "leftOperandType", "rightOperandType"}, new boolean[]{false, false, false}).alias("operation type(..)", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIRuleWithOneNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptIRuleWithTwoNodes = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb779L)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptImmediateSupertypesExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ImmediateSupertypesExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1120ebd8531L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1177068475017L, "subtypeExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"subtypeExpression"}, new boolean[]{false}).alias("immediateSupertypes()", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptInequationReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.InequationReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x42501924d0bd1913L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(4778346850551666964L, "inequation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L), false)).references("inequation").create();
  /*package*/ final ConceptDescriptor myConceptInequationReplacementRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.InequationReplacementRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x117c5668bf2L)).super_("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb779L)).childDescriptors(new ConceptDescriptorBuilder.Link(1201607798918L, "supertypeNode", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false), new ConceptDescriptorBuilder.Link(3592071576955708909L, "isApplicableClause", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x31d99a115038e5e8L), true, false, false)).children(new String[]{"supertypeNode", "isApplicableClause"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptInferenceRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.InferenceRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2f5efaL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L)).childDescriptors(new ConceptDescriptorBuilder.Link(1193733919555L, "dependency", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true, true, false), new ConceptDescriptorBuilder.Link(7307171874933775112L, "supercedesFun", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x65684a1aee252403L), true, false, false), new ConceptDescriptorBuilder.Link(7391008184910266275L, "applicableFun", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x669222c8f1941d7fL), true, false, false)).children(new String[]{"dependency", "supercedesFun", "applicableFun"}, new boolean[]{true, false, false}).alias("Inference Rule", "").create();
  /*package*/ final ConceptDescriptor myConceptInfoStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.InfoStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11d2965916bL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.typesystem.structure.MessageStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4aad802L)).childDescriptors(new ConceptDescriptorBuilder.Link(1224760230762L, "infoText", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"infoText"}, new boolean[]{false}).alias("info", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptInfoStatementAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.InfoStatementAnnotation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f31L)).super_("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).parents("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IsApplicableConceptFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x669222c8f1941d7fL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).create();
  /*package*/ final ConceptDescriptor myConceptIsReplacementRuleApplicable_ConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IsReplacementRuleApplicable_ConceptFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x31d99a115038e5e8L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsStrongSubtypeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IsStrongSubtypeExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11222e251f1L)).super_("jetbrains.mps.lang.typesystem.structure.IsSubtypeExpression").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7b9fb7L)).parents("jetbrains.mps.lang.typesystem.structure.IsSubtypeExpression").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7b9fb7L)).alias("isStrongSubtype()", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsSubtypeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.IsSubtypeExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7b9fb7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1176543945045L, "subtypeExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1176543950311L, "supertypeExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"subtypeExpression", "supertypeExpression"}, new boolean[]{false, false}).alias("isSubtype()", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptJoinContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.JoinContainer", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1206cda22fcL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(1238776828104L, "joinType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1129e737f02L), false, false, false)).children(new String[]{"joinType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptJoinType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.JoinType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1129e737f02L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(1179479418730L, "argument", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L), true, true, false)).children(new String[]{"argument"}, new boolean[]{true}).alias("join", "").create();
  /*package*/ final ConceptDescriptor myConceptLeftOperandType_parameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.LeftOperandType_parameter", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4cf5b0L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("leftOperandType", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptLinkPatternVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.LinkPatternVariableReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d92ad3L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174989841903L, "patternVarDecl", MetaIdFactory.conceptId(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108d36d955aL), false)).references("patternVarDecl").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMatchStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MatchStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1122952fb1dL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(1177514369598L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1177514347409L, "item", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112295a8fecL), false, true, false), new ConceptDescriptorBuilder.Link(1177514345236L, "ifFalseStatement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), true, false, false)).children(new String[]{"expression", "item", "ifFalseStatement"}, new boolean[]{false, true, false}).alias("match", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMatchStatementItem = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MatchStatementItem", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112295a8fecL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(1177514849858L, "condition", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L), false, false, false), new ConceptDescriptorBuilder.Link(1177514864202L, "ifTrue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"condition", "ifTrue"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptMeetContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MeetContainer", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1206cd802f8L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(1238776691632L, "meetType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114b68ad132L), false, false, false)).children(new String[]{"meetType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptMeetType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MeetType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114b68ad132L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(1188473537547L, "argument", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L), true, true, false)).children(new String[]{"argument"}, new boolean[]{true}).alias("meet", "").create();
  /*package*/ final ConceptDescriptor myConceptMessageStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MessageStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4aad802L)).interface_().childDescriptors(new ConceptDescriptorBuilder.Link(1227096802790L, "nodeToReport", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1227096802791L, "helginsIntention", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85e030eL), true, true, false), new ConceptDescriptorBuilder.Link(1227096836496L, "messageTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L), true, false, false), new ConceptDescriptorBuilder.Link(4008603303335354465L, "foreignMessageSource", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"nodeToReport", "helginsIntention", "messageTarget", "foreignMessageSource"}, new boolean[]{false, true, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptMessageStatementAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptMessageTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MessageTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptMultipleForeachLoop = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MultipleForeachLoop", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111efb6d46fL)).super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).parents("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).childDescriptors(new ConceptDescriptorBuilder.Link(1176547942567L, "loopVariable", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111efb75e90L), false, true, false)).children(new String[]{"loopVariable"}, new boolean[]{true}).alias("foreach", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMultipleForeachLoopVariable = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.MultipleForeachLoopVariable", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111efb75e90L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(1176547881822L, "variable", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL), false, false, false), new ConceptDescriptorBuilder.Link(1176547896901L, "iterable", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"variable", "iterable"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptNodeInfo = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.NodeInfo", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x5dffc3ada5b76687L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6773347515165533832L, "modelId"), new ConceptDescriptorBuilder.Prop(6773347515165533833L, "nodeId")).properties("modelId", "nodeId").create();
  /*package*/ final ConceptDescriptor myConceptNode_InferTypeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.Node_InferTypeOperation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x584039bf75272c67L)).super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").super_(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x1090ea2ebacL)).parents("jetbrains.mps.lang.smodel.structure.SNodeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x1090ea2ebacL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("inferType", "get inferred type").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNode_TypeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.Node_TypeOperation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7d5e03L)).super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").super_(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x1090ea2ebacL)).parents("jetbrains.mps.lang.smodel.structure.SNodeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x1090ea2ebacL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("type", "get type").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNonTypesystemRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.NonTypesystemRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164853e0faL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L)).alias("Checking Rule", "").create();
  /*package*/ final ConceptDescriptor myConceptNormalTypeClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.NormalTypeClause", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1141682561cL)).super_("jetbrains.mps.lang.typesystem.structure.TypeClause").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L)).parents("jetbrains.mps.lang.typesystem.structure.TypeClause").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L)).childDescriptors(new ConceptDescriptorBuilder.Link(1185788644032L, "normalType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"normalType"}, new boolean[]{false}).alias("( expr )", "").create();
  /*package*/ final ConceptDescriptor myConceptOperation_parameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.Operation_parameter", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4d8298L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("operation", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptOrStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OrStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xba3b706cf9561ecL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(6448384028752696700L, "orClause", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL), false, true, false)).children(new String[]{"orClause"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptOriginalNodeId = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OriginalNodeId", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2980b78b2f03a40bL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2990591960991114264L, "nodeId"), new ConceptDescriptorBuilder.Prop(2990591960991114295L, "modelId")).properties("nodeId", "modelId").create();
  /*package*/ final ConceptDescriptor myConceptOverloadedOpIsApplicableFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverloadedOpIsApplicableFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x5529dae3231347deL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptOverloadedOpRulesContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverloadedOpRulesContainer", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fd137d047L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(1236165725858L, "rule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL), true, true, false)).children(new String[]{"rule"}, new boolean[]{true}).alias("Overloaded Operations Rules Container", "").create();
  /*package*/ final ConceptDescriptor myConceptOverloadedOpTypeRule_OneTypeSpecified = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverloadedOpTypeRule_OneTypeSpecified", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c80edcL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL)).parents("jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(8124453027370766045L, "isExact"), new ConceptDescriptorBuilder.Prop(2885635457272624477L, "isStrong")).properties("isExact", "isStrong").childDescriptors(new ConceptDescriptorBuilder.Link(8124453027370845366L, "operandType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"operandType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptOverloadedOperatorTypeFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverloadedOperatorTypeFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4bffaeL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptOverloadedOperatorTypeRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverloadedOperatorTypeRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4a641fL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL)).parents("jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1236771579180L, "leftIsExact"), new ConceptDescriptorBuilder.Prop(1236771585835L, "rightIsExact"), new ConceptDescriptorBuilder.Prop(4888149946184983007L, "rightIsStrong"), new ConceptDescriptorBuilder.Prop(4888149946184983008L, "leftIsStrong")).properties("leftIsExact", "rightIsExact", "rightIsStrong", "leftIsStrong").childDescriptors(new ConceptDescriptorBuilder.Link(1236083115043L, "leftOperandType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1236083115200L, "rightOperandType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"leftOperandType", "rightOperandType"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptOverridesConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.OverridesConceptFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1885777d1370d97bL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).create();
  /*package*/ final ConceptDescriptor myConceptPatternCondition = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PatternCondition", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2c3e68L)).super_("jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L)).parents("jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L)).childDescriptors(new ConceptDescriptorBuilder.Link(1174642936809L, "pattern", MetaIdFactory.conceptId(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4791L), false, false, false)).children(new String[]{"pattern"}, new boolean[]{false}).alias("pattern condition", "").create();
  /*package*/ final ConceptDescriptor myConceptPatternVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PatternVariableReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d10036L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174989274720L, "patternVarDecl", MetaIdFactory.conceptId(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4793L), false)).references("patternVarDecl").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrintToTrace = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PrintToTrace", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x76b48f1c91e9de8L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(4251858506886491408L, "message", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"message"}, new boolean[]{false}).alias("print to trace", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProcessed = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.Processed", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11cd732687dL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).create();
  /*package*/ final ConceptDescriptor myConceptPropertyMessageTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PropertyMessageTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a6a000L)).super_("jetbrains.mps.lang.typesystem.structure.MessageTarget").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).parents("jetbrains.mps.lang.typesystem.structure.MessageTarget").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1227096521710L, "propertyDeclaration", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL), false)).references("propertyDeclaration").create();
  /*package*/ final ConceptDescriptor myConceptPropertyNameTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PropertyNameTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db54b106bL)).super_("jetbrains.mps.lang.typesystem.structure.MessageTarget").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).parents("jetbrains.mps.lang.typesystem.structure.MessageTarget").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).childDescriptors(new ConceptDescriptorBuilder.Link(1227107356659L, "propertyName", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"propertyName"}, new boolean[]{false}).alias("property name", "").create();
  /*package*/ final ConceptDescriptor myConceptPropertyPatternVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.PropertyPatternVariableReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d97ff9L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174989822012L, "patternVarDecl", MetaIdFactory.conceptId(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4795L), false)).references("patternVarDecl").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixArgument = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b361afb76L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(1216383511839L, "argumentType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"argumentType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixArgumentReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixArgumentReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3683c009L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1216390348810L, "quickFixArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b361afb76L), false)).references("quickFixArgument").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixDescriptionBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixDescriptionBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b368d7f20L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("description", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixExecuteBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixExecuteBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3617feddL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("execute", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixField = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixField", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8478e93eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(8090891477833017663L, "fieldType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"fieldType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixFieldReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixFieldReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8479b55dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(8090891477833069918L, "quickFixField", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8478e93eL), false)).references("quickFixField").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptQuickFixSetSelectionBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.QuickFixSetSelectionBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x335fe1d0b7494a6dL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("set selection", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptReferenceMessageTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ReferenceMessageTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a87c94L)).super_("jetbrains.mps.lang.typesystem.structure.MessageTarget").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).parents("jetbrains.mps.lang.typesystem.structure.MessageTarget").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1227096645744L, "linkDeclaration", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL), false)).references("linkDeclaration").create();
  /*package*/ final ConceptDescriptor myConceptReferenceRoleTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ReferenceRoleTarget", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db54de8fdL)).super_("jetbrains.mps.lang.typesystem.structure.MessageTarget").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).parents("jetbrains.mps.lang.typesystem.structure.MessageTarget").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L)).childDescriptors(new ConceptDescriptorBuilder.Link(1227107481107L, "referenceRole", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"referenceRole"}, new boolean[]{false}).alias("reference role", "").create();
  /*package*/ final ConceptDescriptor myConceptReplacementRuleReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ReplacementRuleReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x4cffb708491a734cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4197825331980780991L, "fqName")).properties("fqName").referenceDescriptors(new ConceptDescriptorBuilder.Ref(5548354512157832013L, "replacementRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x117c5668bf2L), false)).references("replacementRule").create();
  /*package*/ final ConceptDescriptor myConceptReportErrorStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ReportErrorStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b251a62aL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.typesystem.structure.MessageStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4aad802L)).childDescriptors(new ConceptDescriptorBuilder.Link(1175517851849L, "errorString", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"errorString"}, new boolean[]{false}).alias("error", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptReportErrorStatementAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.ReportErrorStatementAnnotation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f2eL)).super_("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).parents("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).create();
  /*package*/ final ConceptDescriptor myConceptRightOperandType_parameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.RightOperandType_parameter", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4d8edaL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("rightOperandType", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRuntimeErrorType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.RuntimeErrorType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956f9L)).super_("jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956fbL)).parents("jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956fbL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1185281562362L, "errorText"), new ConceptDescriptorBuilder.Prop(1186047920810L, "nodeId"), new ConceptDescriptorBuilder.Prop(1186047931404L, "nodeModel")).properties("errorText", "nodeId", "nodeModel").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRuntimeHoleType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.RuntimeHoleType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e68800741L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptRuntimeListVariable = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.RuntimeListVariable", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11831ae86e3L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).create();
  /*package*/ final ConceptDescriptor myConceptRuntimeTypeVariable = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956fbL)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSelectionType = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.SelectionType", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x611e7dc14a6926c8L)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("selection", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSubstituteTypeRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.SubstituteTypeRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x58e32a0782bca52aL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode", "jetbrains.mps.baseLanguage.structure.IMethodLike", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).childDescriptors(new ConceptDescriptorBuilder.Link(7323318266641100480L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"body"}, new boolean[]{false}).alias("Substitute Type Rule", "").create();
  /*package*/ final ConceptDescriptor myConceptSubtypingRule = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.SubtypingRule", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c426ccaL)).super_("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L)).parents("jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule", "jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L)).alias("Subtyping Rule", "").create();
  /*package*/ final ConceptDescriptor myConceptSupersedeConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.SupersedeConceptFunction", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x65684a1aee252403L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).create();
  /*package*/ final ConceptDescriptor myConceptTypeCheckerAccessExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypeCheckerAccessExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b6ea6b9bL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("typechecker", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTypeClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypeClause", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptTypeOfExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypeOfExpression", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f0ad10aL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1195058053095L, "skipDependencyOnCurrent")).properties("skipDependencyOnCurrent").childDescriptors(new ConceptDescriptorBuilder.Link(1174657509053L, "term", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"term"}, new boolean[]{false}).alias("typeof", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTypeVarDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypeVarDeclaration", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f85df7bL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1174665590537L, "nullable")).properties("nullable").alias("var", "typesystem's type variable").create();
  /*package*/ final ConceptDescriptor myConceptTypeVarReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypeVarReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f90b04cL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174666276259L, "typeVarDeclaration", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f85df7bL), false)).references("typeVarDeclaration").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTypesystemIntention = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypesystemIntention", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85e030eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1216127910019L, "applyImmediately")).properties("applyImmediately").referenceDescriptors(new ConceptDescriptorBuilder.Ref(1216388525179L, "quickFix", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b36163865L), false)).references("quickFix").childDescriptors(new ConceptDescriptorBuilder.Link(1210784493590L, "actualArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85f8628L), true, true, false)).children(new String[]{"actualArgument"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptTypesystemIntentionArgument = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypesystemIntentionArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85f8628L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1216386999476L, "quickFixArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b361afb76L), false)).references("quickFixArgument").childDescriptors(new ConceptDescriptorBuilder.Link(1210784642750L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"value"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptTypesystemQuickFix = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b36163865L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL)).childDescriptors(new ConceptDescriptorBuilder.Link(1216383424566L, "executeBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3617feddL), false, false, false), new ConceptDescriptorBuilder.Link(1216391046856L, "descriptionBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b368d7f20L), true, false, false), new ConceptDescriptorBuilder.Link(3701925705266318823L, "setSelectionBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x335fe1d0b7494a6dL), true, false, false), new ConceptDescriptorBuilder.Link(1216383476350L, "quickFixArgument", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b361afb76L), true, true, false), new ConceptDescriptorBuilder.Link(8090891477833133023L, "quickFixField", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8478e93eL), true, true, false)).children(new String[]{"executeBlock", "descriptionBlock", "setSelectionBlock", "quickFixArgument", "quickFixField"}, new boolean[]{false, false, false, true, true}).alias("Quick Fix", "").create();
  /*package*/ final ConceptDescriptor myConceptVariableConverterItem = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.VariableConverterItem", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e073a595aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(1228482339775L, "applicableBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e0740f5fbL), false, false, false), new ConceptDescriptorBuilder.Link(1228482335255L, "convertBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e074487bbL), false, false, false)).children(new String[]{"applicableBlock", "convertBlock"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptVariableConverterItem_ApplicableBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.VariableConverterItem_ApplicableBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e0740f5fbL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptVariableConverterItem_ConvertBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.VariableConverterItem_ConvertBlock", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e074487bbL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptVariableConvertersContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.VariableConvertersContainer", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e07487edcL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(1228482919686L, "converterItem", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e073a595aL), true, true, false)).children(new String[]{"converterItem"}, new boolean[]{true}).alias("Variable Converters Container", "").create();
  /*package*/ final ConceptDescriptor myConceptWarningStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WarningStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1190a1db131L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.typesystem.structure.MessageStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4aad802L)).childDescriptors(new ConceptDescriptorBuilder.Link(1207055552304L, "warningText", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"warningText"}, new boolean[]{false}).alias("warning", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptWarningStatementAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WarningStatementAnnotation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f34L)).super_("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").super_(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).parents("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation").parentIds(MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L)).create();
  /*package*/ final ConceptDescriptor myConceptWasSelectedNodeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WasSelectedNodeOperation", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xef0542bbc39506eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("wasSelectedNode", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptWhenConcreteStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WhenConcreteStatement", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114177ce6cdL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.structure.Closureoid", "jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1192e7dfdd1L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x7c8556154508e980L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1227279857428L, "isShallow"), new ConceptDescriptorBuilder.Prop(1233571207619L, "skipsError")).properties("isShallow", "skipsError").childDescriptors(new ConceptDescriptorBuilder.Link(1185805047793L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(1185805056450L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1205761991995L, "argumentRepresentator", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd05a27aL), false, false, false)).children(new String[]{"body", "argument", "argumentRepresentator"}, new boolean[]{false, false, false}).alias("when concrete", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptWhenConcreteVariableDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WhenConcreteVariableDeclaration", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd05a27aL)).super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL)).parents("jetbrains.mps.baseLanguage.structure.VariableDeclaration").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL)).create();
  /*package*/ final ConceptDescriptor myConceptWhenConcreteVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.typesystem.structure.WhenConcreteVariableReference", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd0e07f1L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1205762683928L, "whenConcreteVar", MetaIdFactory.conceptId(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd05a27aL), false)).references("whenConcreteVar").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractCheckingRule, myConceptAbstractComparableStatement, myConceptAbstractEquationStatement, myConceptAbstractInequationStatement, myConceptAbstractOverloadedOpsTypeRule, myConceptAbstractRule, myConceptAbstractSubtypingRule, myConceptAddDependencyStatement, myConceptApplicableNodeCondition, myConceptApplicableNodeReference, myConceptAssertStatement, myConceptAttributedNodeExpression, myConceptCaretPositionOperation, myConceptCoerceExpression, myConceptCoerceStatement, myConceptCoerceStrongExpression, myConceptComparisonRule, myConceptConceptClauseLinkInfo, myConceptConceptFunctionParameter_ContextNode, myConceptConceptFunctionParameter_EditorContext, myConceptConceptFunctionParameter_Role, myConceptConceptFunctionParameter_Selection, myConceptConceptFunctionParameter_isAggregation, myConceptConceptFunctionParameter_node, myConceptConceptFunctionParameter_var, myConceptConceptReference, myConceptCreateComparableEquationStatement, myConceptCreateComparableEquationStatementStrong, myConceptCreateEquationStatement, myConceptCreateGreaterThanInequationStatement, myConceptCreateLessThanInequationStatement, myConceptCreateStrongGreaterThanInequationStatement, myConceptCreateStrongLessThanInequationStatement, myConceptDefaultGroupReference, myConceptErrorInfoExpression, myConceptGetOperationType, myConceptIRuleWithOneNode, myConceptIRuleWithTwoNodes, myConceptImmediateSupertypesExpression, myConceptInequationReference, myConceptInequationReplacementRule, myConceptInferenceRule, myConceptInfoStatement, myConceptInfoStatementAnnotation, myConceptIsApplicableConceptFunction, myConceptIsReplacementRuleApplicable_ConceptFunction, myConceptIsStrongSubtypeExpression, myConceptIsSubtypeExpression, myConceptJoinContainer, myConceptJoinType, myConceptLeftOperandType_parameter, myConceptLinkPatternVariableReference, myConceptMatchStatement, myConceptMatchStatementItem, myConceptMeetContainer, myConceptMeetType, myConceptMessageStatement, myConceptMessageStatementAnnotation, myConceptMessageTarget, myConceptMultipleForeachLoop, myConceptMultipleForeachLoopVariable, myConceptNodeInfo, myConceptNode_InferTypeOperation, myConceptNode_TypeOperation, myConceptNonTypesystemRule, myConceptNormalTypeClause, myConceptOperation_parameter, myConceptOrStatement, myConceptOriginalNodeId, myConceptOverloadedOpIsApplicableFunction, myConceptOverloadedOpRulesContainer, myConceptOverloadedOpTypeRule_OneTypeSpecified, myConceptOverloadedOperatorTypeFunction, myConceptOverloadedOperatorTypeRule, myConceptOverridesConceptFunction, myConceptPatternCondition, myConceptPatternVariableReference, myConceptPrintToTrace, myConceptProcessed, myConceptPropertyMessageTarget, myConceptPropertyNameTarget, myConceptPropertyPatternVariableReference, myConceptQuickFixArgument, myConceptQuickFixArgumentReference, myConceptQuickFixDescriptionBlock, myConceptQuickFixExecuteBlock, myConceptQuickFixField, myConceptQuickFixFieldReference, myConceptQuickFixSetSelectionBlock, myConceptReferenceMessageTarget, myConceptReferenceRoleTarget, myConceptReplacementRuleReference, myConceptReportErrorStatement, myConceptReportErrorStatementAnnotation, myConceptRightOperandType_parameter, myConceptRuntimeErrorType, myConceptRuntimeHoleType, myConceptRuntimeListVariable, myConceptRuntimeTypeVariable, myConceptSelectionType, myConceptSubstituteTypeRule, myConceptSubtypingRule, myConceptSupersedeConceptFunction, myConceptTypeCheckerAccessExpression, myConceptTypeClause, myConceptTypeOfExpression, myConceptTypeVarDeclaration, myConceptTypeVarReference, myConceptTypesystemIntention, myConceptTypesystemIntentionArgument, myConceptTypesystemQuickFix, myConceptVariableConverterItem, myConceptVariableConverterItem_ApplicableBlock, myConceptVariableConverterItem_ConvertBlock, myConceptVariableConvertersContainer, myConceptWarningStatement, myConceptWarningStatementAnnotation, myConceptWasSelectedNodeOperation, myConceptWhenConcreteStatement, myConceptWhenConcreteVariableDeclaration, myConceptWhenConcreteVariableReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0ve.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptAbstractCheckingRule;
          }
          break;
        case 1:
          if (true) {
            return myConceptAbstractComparableStatement;
          }
          break;
        case 2:
          if (true) {
            return myConceptAbstractEquationStatement;
          }
          break;
        case 3:
          if (true) {
            return myConceptAbstractInequationStatement;
          }
          break;
        case 4:
          if (true) {
            return myConceptAbstractOverloadedOpsTypeRule;
          }
          break;
        case 5:
          if (true) {
            return myConceptAbstractRule;
          }
          break;
        case 6:
          if (true) {
            return myConceptAbstractSubtypingRule;
          }
          break;
        case 7:
          if (true) {
            return myConceptAddDependencyStatement;
          }
          break;
        case 8:
          if (true) {
            return myConceptApplicableNodeCondition;
          }
          break;
        case 9:
          if (true) {
            return myConceptApplicableNodeReference;
          }
          break;
        case 10:
          if (true) {
            return myConceptAssertStatement;
          }
          break;
        case 11:
          if (true) {
            return myConceptAttributedNodeExpression;
          }
          break;
        case 12:
          if (true) {
            return myConceptCaretPositionOperation;
          }
          break;
        case 13:
          if (true) {
            return myConceptCoerceExpression;
          }
          break;
        case 14:
          if (true) {
            return myConceptCoerceStatement;
          }
          break;
        case 15:
          if (true) {
            return myConceptCoerceStrongExpression;
          }
          break;
        case 16:
          if (true) {
            return myConceptComparisonRule;
          }
          break;
        case 17:
          if (true) {
            return myConceptConceptClauseLinkInfo;
          }
          break;
        case 18:
          if (true) {
            return myConceptConceptFunctionParameter_ContextNode;
          }
          break;
        case 19:
          if (true) {
            return myConceptConceptFunctionParameter_EditorContext;
          }
          break;
        case 20:
          if (true) {
            return myConceptConceptFunctionParameter_Role;
          }
          break;
        case 21:
          if (true) {
            return myConceptConceptFunctionParameter_Selection;
          }
          break;
        case 22:
          if (true) {
            return myConceptConceptFunctionParameter_isAggregation;
          }
          break;
        case 23:
          if (true) {
            return myConceptConceptFunctionParameter_node;
          }
          break;
        case 24:
          if (true) {
            return myConceptConceptFunctionParameter_var;
          }
          break;
        case 25:
          if (true) {
            return myConceptConceptReference;
          }
          break;
        case 26:
          if (true) {
            return myConceptCreateComparableEquationStatement;
          }
          break;
        case 27:
          if (true) {
            return myConceptCreateComparableEquationStatementStrong;
          }
          break;
        case 28:
          if (true) {
            return myConceptCreateEquationStatement;
          }
          break;
        case 29:
          if (true) {
            return myConceptCreateGreaterThanInequationStatement;
          }
          break;
        case 30:
          if (true) {
            return myConceptCreateLessThanInequationStatement;
          }
          break;
        case 31:
          if (true) {
            return myConceptCreateStrongGreaterThanInequationStatement;
          }
          break;
        case 32:
          if (true) {
            return myConceptCreateStrongLessThanInequationStatement;
          }
          break;
        case 33:
          if (true) {
            return myConceptDefaultGroupReference;
          }
          break;
        case 34:
          if (true) {
            return myConceptErrorInfoExpression;
          }
          break;
        case 35:
          if (true) {
            return myConceptGetOperationType;
          }
          break;
        case 36:
          if (true) {
            return myConceptIRuleWithOneNode;
          }
          break;
        case 37:
          if (true) {
            return myConceptIRuleWithTwoNodes;
          }
          break;
        case 38:
          if (true) {
            return myConceptImmediateSupertypesExpression;
          }
          break;
        case 39:
          if (true) {
            return myConceptInequationReference;
          }
          break;
        case 40:
          if (true) {
            return myConceptInequationReplacementRule;
          }
          break;
        case 41:
          if (true) {
            return myConceptInferenceRule;
          }
          break;
        case 42:
          if (true) {
            return myConceptInfoStatement;
          }
          break;
        case 43:
          if (true) {
            return myConceptInfoStatementAnnotation;
          }
          break;
        case 44:
          if (true) {
            return myConceptIsApplicableConceptFunction;
          }
          break;
        case 45:
          if (true) {
            return myConceptIsReplacementRuleApplicable_ConceptFunction;
          }
          break;
        case 46:
          if (true) {
            return myConceptIsStrongSubtypeExpression;
          }
          break;
        case 47:
          if (true) {
            return myConceptIsSubtypeExpression;
          }
          break;
        case 48:
          if (true) {
            return myConceptJoinContainer;
          }
          break;
        case 49:
          if (true) {
            return myConceptJoinType;
          }
          break;
        case 50:
          if (true) {
            return myConceptLeftOperandType_parameter;
          }
          break;
        case 51:
          if (true) {
            return myConceptLinkPatternVariableReference;
          }
          break;
        case 52:
          if (true) {
            return myConceptMatchStatement;
          }
          break;
        case 53:
          if (true) {
            return myConceptMatchStatementItem;
          }
          break;
        case 54:
          if (true) {
            return myConceptMeetContainer;
          }
          break;
        case 55:
          if (true) {
            return myConceptMeetType;
          }
          break;
        case 56:
          if (true) {
            return myConceptMessageStatement;
          }
          break;
        case 57:
          if (true) {
            return myConceptMessageStatementAnnotation;
          }
          break;
        case 58:
          if (true) {
            return myConceptMessageTarget;
          }
          break;
        case 59:
          if (true) {
            return myConceptMultipleForeachLoop;
          }
          break;
        case 60:
          if (true) {
            return myConceptMultipleForeachLoopVariable;
          }
          break;
        case 61:
          if (true) {
            return myConceptNodeInfo;
          }
          break;
        case 62:
          if (true) {
            return myConceptNode_InferTypeOperation;
          }
          break;
        case 63:
          if (true) {
            return myConceptNode_TypeOperation;
          }
          break;
        case 64:
          if (true) {
            return myConceptNonTypesystemRule;
          }
          break;
        case 65:
          if (true) {
            return myConceptNormalTypeClause;
          }
          break;
        case 66:
          if (true) {
            return myConceptOperation_parameter;
          }
          break;
        case 67:
          if (true) {
            return myConceptOrStatement;
          }
          break;
        case 68:
          if (true) {
            return myConceptOriginalNodeId;
          }
          break;
        case 69:
          if (true) {
            return myConceptOverloadedOpIsApplicableFunction;
          }
          break;
        case 70:
          if (true) {
            return myConceptOverloadedOpRulesContainer;
          }
          break;
        case 71:
          if (true) {
            return myConceptOverloadedOpTypeRule_OneTypeSpecified;
          }
          break;
        case 72:
          if (true) {
            return myConceptOverloadedOperatorTypeFunction;
          }
          break;
        case 73:
          if (true) {
            return myConceptOverloadedOperatorTypeRule;
          }
          break;
        case 74:
          if (true) {
            return myConceptOverridesConceptFunction;
          }
          break;
        case 75:
          if (true) {
            return myConceptPatternCondition;
          }
          break;
        case 76:
          if (true) {
            return myConceptPatternVariableReference;
          }
          break;
        case 77:
          if (true) {
            return myConceptPrintToTrace;
          }
          break;
        case 78:
          if (true) {
            return myConceptProcessed;
          }
          break;
        case 79:
          if (true) {
            return myConceptPropertyMessageTarget;
          }
          break;
        case 80:
          if (true) {
            return myConceptPropertyNameTarget;
          }
          break;
        case 81:
          if (true) {
            return myConceptPropertyPatternVariableReference;
          }
          break;
        case 82:
          if (true) {
            return myConceptQuickFixArgument;
          }
          break;
        case 83:
          if (true) {
            return myConceptQuickFixArgumentReference;
          }
          break;
        case 84:
          if (true) {
            return myConceptQuickFixDescriptionBlock;
          }
          break;
        case 85:
          if (true) {
            return myConceptQuickFixExecuteBlock;
          }
          break;
        case 86:
          if (true) {
            return myConceptQuickFixField;
          }
          break;
        case 87:
          if (true) {
            return myConceptQuickFixFieldReference;
          }
          break;
        case 88:
          if (true) {
            return myConceptQuickFixSetSelectionBlock;
          }
          break;
        case 89:
          if (true) {
            return myConceptReferenceMessageTarget;
          }
          break;
        case 90:
          if (true) {
            return myConceptReferenceRoleTarget;
          }
          break;
        case 91:
          if (true) {
            return myConceptReplacementRuleReference;
          }
          break;
        case 92:
          if (true) {
            return myConceptReportErrorStatement;
          }
          break;
        case 93:
          if (true) {
            return myConceptReportErrorStatementAnnotation;
          }
          break;
        case 94:
          if (true) {
            return myConceptRightOperandType_parameter;
          }
          break;
        case 95:
          if (true) {
            return myConceptRuntimeErrorType;
          }
          break;
        case 96:
          if (true) {
            return myConceptRuntimeHoleType;
          }
          break;
        case 97:
          if (true) {
            return myConceptRuntimeListVariable;
          }
          break;
        case 98:
          if (true) {
            return myConceptRuntimeTypeVariable;
          }
          break;
        case 99:
          if (true) {
            return myConceptSelectionType;
          }
          break;
        case 100:
          if (true) {
            return myConceptSubstituteTypeRule;
          }
          break;
        case 101:
          if (true) {
            return myConceptSubtypingRule;
          }
          break;
        case 102:
          if (true) {
            return myConceptSupersedeConceptFunction;
          }
          break;
        case 103:
          if (true) {
            return myConceptTypeCheckerAccessExpression;
          }
          break;
        case 104:
          if (true) {
            return myConceptTypeClause;
          }
          break;
        case 105:
          if (true) {
            return myConceptTypeOfExpression;
          }
          break;
        case 106:
          if (true) {
            return myConceptTypeVarDeclaration;
          }
          break;
        case 107:
          if (true) {
            return myConceptTypeVarReference;
          }
          break;
        case 108:
          if (true) {
            return myConceptTypesystemIntention;
          }
          break;
        case 109:
          if (true) {
            return myConceptTypesystemIntentionArgument;
          }
          break;
        case 110:
          if (true) {
            return myConceptTypesystemQuickFix;
          }
          break;
        case 111:
          if (true) {
            return myConceptVariableConverterItem;
          }
          break;
        case 112:
          if (true) {
            return myConceptVariableConverterItem_ApplicableBlock;
          }
          break;
        case 113:
          if (true) {
            return myConceptVariableConverterItem_ConvertBlock;
          }
          break;
        case 114:
          if (true) {
            return myConceptVariableConvertersContainer;
          }
          break;
        case 115:
          if (true) {
            return myConceptWarningStatement;
          }
          break;
        case 116:
          if (true) {
            return myConceptWarningStatementAnnotation;
          }
          break;
        case 117:
          if (true) {
            return myConceptWasSelectedNodeOperation;
          }
          break;
        case 118:
          if (true) {
            return myConceptWhenConcreteStatement;
          }
          break;
        case 119:
          if (true) {
            return myConceptWhenConcreteVariableDeclaration;
          }
          break;
        case 120:
          if (true) {
            return myConceptWhenConcreteVariableReference;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0ve = buildConceptIndices(MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164847e929L, "jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3be2294807013eb7L, "jetbrains.mps.lang.typesystem.structure.AbstractComparableStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f3c1ffaL, "jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11a342c1412L, "jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c9449bL, "jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e7b5c73L, "jetbrains.mps.lang.typesystem.structure.AbstractRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c40dfb0L, "jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11c22f6c964L, "jetbrains.mps.lang.typesystem.structure.AddDependencyStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e29d976L, "jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e9ef5dcL, "jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b24c0cd8L, "jetbrains.mps.lang.typesystem.structure.AssertStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2152354b0d500086L, "jetbrains.mps.lang.typesystem.structure.AttributedNodeExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xef0542bbc395068L, "jetbrains.mps.lang.typesystem.structure.CaretPositionOperation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a2a14aeL, "jetbrains.mps.lang.typesystem.structure.CoerceExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111f05e2451L, "jetbrains.mps.lang.typesystem.structure.CoerceStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1127a376a3dL, "jetbrains.mps.lang.typesystem.structure.CoerceStrongExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114caade477L, "jetbrains.mps.lang.typesystem.structure.ComparisonRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x120c8f8641eL, "jetbrains.mps.lang.typesystem.structure.ConceptClauseLinkInfo"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078ffb82L, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_ContextNode"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x335fe1d0b7494cfcL, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_EditorContext"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078e410eL, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_Role"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x611e7dc14a69a014L, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_Selection"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e078ecdbdL, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_isAggregation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3618c300L, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_node"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e07431ba7L, "jetbrains.mps.lang.typesystem.structure.ConceptFunctionParameter_var"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2a88b3L, "jetbrains.mps.lang.typesystem.structure.ConceptReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f63bc23L, "jetbrains.mps.lang.typesystem.structure.CreateComparableEquationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112c36bc7ecL, "jetbrains.mps.lang.typesystem.structure.CreateComparableEquationStatementStrong"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f179e8dL, "jetbrains.mps.lang.typesystem.structure.CreateEquationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f62956cL, "jetbrains.mps.lang.typesystem.structure.CreateGreaterThanInequationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f60bfd5L, "jetbrains.mps.lang.typesystem.structure.CreateLessThanInequationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x31c3185c17a0f767L, "jetbrains.mps.lang.typesystem.structure.CreateStrongGreaterThanInequationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112b37f1b6eL, "jetbrains.mps.lang.typesystem.structure.CreateStrongLessThanInequationStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x12541e5f229acee2L, "jetbrains.mps.lang.typesystem.structure.DefaultGroupReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x117c6082b85L, "jetbrains.mps.lang.typesystem.structure.ErrorInfoExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fd11186b7L, "jetbrains.mps.lang.typesystem.structure.GetOperationType"), MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb778L, "jetbrains.mps.lang.typesystem.structure.IRuleWithOneNode"), MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x3e3c1137fe6cb779L, "jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1120ebd8531L, "jetbrains.mps.lang.typesystem.structure.ImmediateSupertypesExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x42501924d0bd1913L, "jetbrains.mps.lang.typesystem.structure.InequationReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x117c5668bf2L, "jetbrains.mps.lang.typesystem.structure.InequationReplacementRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2f5efaL, "jetbrains.mps.lang.typesystem.structure.InferenceRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11d2965916bL, "jetbrains.mps.lang.typesystem.structure.InfoStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f31L, "jetbrains.mps.lang.typesystem.structure.InfoStatementAnnotation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x669222c8f1941d7fL, "jetbrains.mps.lang.typesystem.structure.IsApplicableConceptFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x31d99a115038e5e8L, "jetbrains.mps.lang.typesystem.structure.IsReplacementRuleApplicable_ConceptFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11222e251f1L, "jetbrains.mps.lang.typesystem.structure.IsStrongSubtypeExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7b9fb7L, "jetbrains.mps.lang.typesystem.structure.IsSubtypeExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1206cda22fcL, "jetbrains.mps.lang.typesystem.structure.JoinContainer"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1129e737f02L, "jetbrains.mps.lang.typesystem.structure.JoinType"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4cf5b0L, "jetbrains.mps.lang.typesystem.structure.LeftOperandType_parameter"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d92ad3L, "jetbrains.mps.lang.typesystem.structure.LinkPatternVariableReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1122952fb1dL, "jetbrains.mps.lang.typesystem.structure.MatchStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x112295a8fecL, "jetbrains.mps.lang.typesystem.structure.MatchStatementItem"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1206cd802f8L, "jetbrains.mps.lang.typesystem.structure.MeetContainer"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114b68ad132L, "jetbrains.mps.lang.typesystem.structure.MeetType"), MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4aad802L, "jetbrains.mps.lang.typesystem.structure.MessageStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2bb0fe622a9eb078L, "jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a65783L, "jetbrains.mps.lang.typesystem.structure.MessageTarget"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111efb6d46fL, "jetbrains.mps.lang.typesystem.structure.MultipleForeachLoop"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111efb75e90L, "jetbrains.mps.lang.typesystem.structure.MultipleForeachLoopVariable"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x5dffc3ada5b76687L, "jetbrains.mps.lang.typesystem.structure.NodeInfo"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x584039bf75272c67L, "jetbrains.mps.lang.typesystem.structure.Node_InferTypeOperation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111ef7d5e03L, "jetbrains.mps.lang.typesystem.structure.Node_TypeOperation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1164853e0faL, "jetbrains.mps.lang.typesystem.structure.NonTypesystemRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1141682561cL, "jetbrains.mps.lang.typesystem.structure.NormalTypeClause"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4d8298L, "jetbrains.mps.lang.typesystem.structure.Operation_parameter"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xba3b706cf9561ecL, "jetbrains.mps.lang.typesystem.structure.OrStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x2980b78b2f03a40bL, "jetbrains.mps.lang.typesystem.structure.OriginalNodeId"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x5529dae3231347deL, "jetbrains.mps.lang.typesystem.structure.OverloadedOpIsApplicableFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fd137d047L, "jetbrains.mps.lang.typesystem.structure.OverloadedOpRulesContainer"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70bfdafbb2c80edcL, "jetbrains.mps.lang.typesystem.structure.OverloadedOpTypeRule_OneTypeSpecified"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4bffaeL, "jetbrains.mps.lang.typesystem.structure.OverloadedOperatorTypeFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4a641fL, "jetbrains.mps.lang.typesystem.structure.OverloadedOperatorTypeRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1885777d1370d97bL, "jetbrains.mps.lang.typesystem.structure.OverridesConceptFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117e2c3e68L, "jetbrains.mps.lang.typesystem.structure.PatternCondition"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d10036L, "jetbrains.mps.lang.typesystem.structure.PatternVariableReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x76b48f1c91e9de8L, "jetbrains.mps.lang.typesystem.structure.PrintToTrace"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11cd732687dL, "jetbrains.mps.lang.typesystem.structure.Processed"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a6a000L, "jetbrains.mps.lang.typesystem.structure.PropertyMessageTarget"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db54b106bL, "jetbrains.mps.lang.typesystem.structure.PropertyNameTarget"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11192d97ff9L, "jetbrains.mps.lang.typesystem.structure.PropertyPatternVariableReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b361afb76L, "jetbrains.mps.lang.typesystem.structure.QuickFixArgument"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3683c009L, "jetbrains.mps.lang.typesystem.structure.QuickFixArgumentReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b368d7f20L, "jetbrains.mps.lang.typesystem.structure.QuickFixDescriptionBlock"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b3617feddL, "jetbrains.mps.lang.typesystem.structure.QuickFixExecuteBlock"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8478e93eL, "jetbrains.mps.lang.typesystem.structure.QuickFixField"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x70489eee8479b55dL, "jetbrains.mps.lang.typesystem.structure.QuickFixFieldReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x335fe1d0b7494a6dL, "jetbrains.mps.lang.typesystem.structure.QuickFixSetSelectionBlock"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db4a87c94L, "jetbrains.mps.lang.typesystem.structure.ReferenceMessageTarget"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11db54de8fdL, "jetbrains.mps.lang.typesystem.structure.ReferenceRoleTarget"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x4cffb708491a734cL, "jetbrains.mps.lang.typesystem.structure.ReplacementRuleReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b251a62aL, "jetbrains.mps.lang.typesystem.structure.ReportErrorStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f2eL, "jetbrains.mps.lang.typesystem.structure.ReportErrorStatementAnnotation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11fcc4d8edaL, "jetbrains.mps.lang.typesystem.structure.RightOperandType_parameter"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956f9L, "jetbrains.mps.lang.typesystem.structure.RuntimeErrorType"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e68800741L, "jetbrains.mps.lang.typesystem.structure.RuntimeHoleType"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11831ae86e3L, "jetbrains.mps.lang.typesystem.structure.RuntimeListVariable"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x113f84956fbL, "jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x611e7dc14a6926c8L, "jetbrains.mps.lang.typesystem.structure.SelectionType"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x58e32a0782bca52aL, "jetbrains.mps.lang.typesystem.structure.SubstituteTypeRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1119c426ccaL, "jetbrains.mps.lang.typesystem.structure.SubtypingRule"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x65684a1aee252403L, "jetbrains.mps.lang.typesystem.structure.SupersedeConceptFunction"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x111b6ea6b9bL, "jetbrains.mps.lang.typesystem.structure.TypeCheckerAccessExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114168188c7L, "jetbrains.mps.lang.typesystem.structure.TypeClause"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f0ad10aL, "jetbrains.mps.lang.typesystem.structure.TypeOfExpression"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f85df7bL, "jetbrains.mps.lang.typesystem.structure.TypeVarDeclaration"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1117f90b04cL, "jetbrains.mps.lang.typesystem.structure.TypeVarReference"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85e030eL, "jetbrains.mps.lang.typesystem.structure.TypesystemIntention"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x119e85f8628L, "jetbrains.mps.lang.typesystem.structure.TypesystemIntentionArgument"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11b36163865L, "jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e073a595aL, "jetbrains.mps.lang.typesystem.structure.VariableConverterItem"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e0740f5fbL, "jetbrains.mps.lang.typesystem.structure.VariableConverterItem_ApplicableBlock"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e074487bbL, "jetbrains.mps.lang.typesystem.structure.VariableConverterItem_ConvertBlock"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x11e07487edcL, "jetbrains.mps.lang.typesystem.structure.VariableConvertersContainer"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1190a1db131L, "jetbrains.mps.lang.typesystem.structure.WarningStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x6ee9803e48223f34L, "jetbrains.mps.lang.typesystem.structure.WarningStatementAnnotation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0xef0542bbc39506eL, "jetbrains.mps.lang.typesystem.structure.WasSelectedNodeOperation"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x114177ce6cdL, "jetbrains.mps.lang.typesystem.structure.WhenConcreteStatement"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd05a27aL, "jetbrains.mps.lang.typesystem.structure.WhenConcreteVariableDeclaration"), MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118bd0e07f1L, "jetbrains.mps.lang.typesystem.structure.WhenConcreteVariableReference"));
}
