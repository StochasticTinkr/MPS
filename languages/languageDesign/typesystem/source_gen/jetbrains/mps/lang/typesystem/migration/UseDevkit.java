package jetbrains.mps.lang.typesystem.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationScriptBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModuleOperations;
import jetbrains.mps.smodel.SModelInternal;
import org.jetbrains.mps.openapi.module.SModuleReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import java.util.function.Predicate;
import org.jetbrains.mps.openapi.language.SLanguage;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.migration.runtime.base.MigrationScriptReference;

public class UseDevkit extends MigrationScriptBase {
  public String getCaption() {
    return "Employ GP and devkit for typesystem aspect models";
  }
  @Override
  public boolean isRerunnable() {
    return true;
  }
  public SNode execute(final SModule m) {
    doExecute(m);
    return null;
  }
  public void doExecute(final SModule m) {
    SModel typesystemAspectModel = SModuleOperations.getAspect(m, "typesystem");
    if (typesystemAspectModel instanceof SModelInternal == false) {
      return;
    }
    SModelInternal mi = ((SModelInternal) typesystemAspectModel);
    final SModuleReference tsAspectDevkit = PersistenceFacade.getInstance().createModuleReference("00000000-0000-4000-0000-1de82b3a4936(jetbrains.mps.devkit.aspect.typesystem)");
    if (mi.importedDevkits().contains(tsAspectDevkit)) {
      return;
    }
    if (mi.importedLanguageIds().stream().anyMatch(new Predicate<SLanguage>() {
      public boolean test(SLanguage l) {
        return !(l.getQualifiedName().startsWith("jetbrains.mps."));
      }
    })) {
      // Transition code, in case aspect uses custom extensions, do not turn GP on for it yet. 
      return;
    }
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, "jetbrains.mps.lang.typesystem"));
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, "jetbrains.mps.lang.pattern"));
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, "jetbrains.mps.lang.quotation"));
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"));
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, "jetbrains.mps.lang.smodel"));
    mi.deleteLanguageId(MetaAdapterFactory.getLanguage(0xaee9cad2acd44608L, 0xaef20004f6a1cdbdL, "jetbrains.mps.lang.actions"));
    mi.deleteDevKit(PersistenceFacade.getInstance().createModuleReference("fbc25dd2-5da4-483a-8b19-70928e1b62d7(jetbrains.mps.devkit.general-purpose)"));
    mi.deleteDevKit(PersistenceFacade.getInstance().createModuleReference("2677cb18-f558-4e33-bc38-a5139cee06dc(jetbrains.mps.devkit.language-design)"));
    mi.addDevKit(tsAspectDevkit);
  }
  public MigrationScriptReference getDescriptor() {
    return new MigrationScriptReference(MetaAdapterFactory.getLanguage(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, "jetbrains.mps.lang.typesystem"), 0);
  }

}
