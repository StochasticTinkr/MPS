package jetbrains.mps.lang.plugin.standalone.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ApplicationPluginDeclaration = 0;
  public static final int ApplicationPluginDisposeBlock = 1;
  public static final int ApplicationPluginInitBlock = 2;
  public static final int ApplicationPluginType = 3;
  public static final int GetPreferencesComponentInProjectOperation = 4;
  public static final int GetToolInProjectOperation = 5;
  public static final int PlatformAccessExpression = 6;
  public static final int ProjectPluginDeclaration = 7;
  public static final int ProjectPluginDisposeBlock = 8;
  public static final int ProjectPluginInitBlock = 9;
  public static final int ProjectPluginType = 10;
  public static final int StandalonePluginDescriptor = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xef7bf5acd06c4342L, 0xb11de42104eb9343L);
    builder.put(0x6b059b0986f2058L, ApplicationPluginDeclaration);
    builder.put(0x6b059b0986f205eL, ApplicationPluginDisposeBlock);
    builder.put(0x6b059b0986f2063L, ApplicationPluginInitBlock);
    builder.put(0x6b059b0986f204fL, ApplicationPluginType);
    builder.put(0x9766f9338aa2118L, GetPreferencesComponentInProjectOperation);
    builder.put(0x9766f9338aa2115L, GetToolInProjectOperation);
    builder.put(0x2f7290ec129946e7L, PlatformAccessExpression);
    builder.put(0x6b059b0986f2052L, ProjectPluginDeclaration);
    builder.put(0x6b059b0986f2043L, ProjectPluginDisposeBlock);
    builder.put(0x6b059b0986f2049L, ProjectPluginInitBlock);
    builder.put(0x6b059b0986f2068L, ProjectPluginType);
    builder.put(0x685ef16bc1750e9cL, StandalonePluginDescriptor);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
