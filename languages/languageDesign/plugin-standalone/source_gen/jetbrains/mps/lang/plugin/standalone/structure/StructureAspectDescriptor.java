package jetbrains.mps.lang.plugin.standalone.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(11);
  /*package*/ final ConceptDescriptor myConceptApplicationPluginDeclaration = createDescriptorForApplicationPluginDeclaration();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginDisposeBlock = createDescriptorForApplicationPluginDisposeBlock();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginInitBlock = createDescriptorForApplicationPluginInitBlock();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginType = createDescriptorForApplicationPluginType();
  /*package*/ final ConceptDescriptor myConceptGetPreferencesComponentInProjectOperation = createDescriptorForGetPreferencesComponentInProjectOperation();
  /*package*/ final ConceptDescriptor myConceptGetToolInProjectOperation = createDescriptorForGetToolInProjectOperation();
  /*package*/ final ConceptDescriptor myConceptProjectPluginDeclaration = createDescriptorForProjectPluginDeclaration();
  /*package*/ final ConceptDescriptor myConceptProjectPluginDisposeBlock = createDescriptorForProjectPluginDisposeBlock();
  /*package*/ final ConceptDescriptor myConceptProjectPluginInitBlock = createDescriptorForProjectPluginInitBlock();
  /*package*/ final ConceptDescriptor myConceptProjectPluginType = createDescriptorForProjectPluginType();
  /*package*/ final ConceptDescriptor myConceptStandalonePluginDescriptor = createDescriptorForStandalonePluginDescriptor();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptApplicationPluginDeclaration.getId(), 0);
    myIndexMap.put(myConceptApplicationPluginDisposeBlock.getId(), 1);
    myIndexMap.put(myConceptApplicationPluginInitBlock.getId(), 2);
    myIndexMap.put(myConceptApplicationPluginType.getId(), 3);
    myIndexMap.put(myConceptGetPreferencesComponentInProjectOperation.getId(), 4);
    myIndexMap.put(myConceptGetToolInProjectOperation.getId(), 5);
    myIndexMap.put(myConceptProjectPluginDeclaration.getId(), 6);
    myIndexMap.put(myConceptProjectPluginDisposeBlock.getId(), 7);
    myIndexMap.put(myConceptProjectPluginInitBlock.getId(), 8);
    myIndexMap.put(myConceptProjectPluginType.getId(), 9);
    myIndexMap.put(myConceptStandalonePluginDescriptor.getId(), 10);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplicationPluginDeclaration, myConceptApplicationPluginDisposeBlock, myConceptApplicationPluginInitBlock, myConceptApplicationPluginType, myConceptGetPreferencesComponentInProjectOperation, myConceptGetToolInProjectOperation, myConceptProjectPluginDeclaration, myConceptProjectPluginDisposeBlock, myConceptProjectPluginInitBlock, myConceptProjectPluginType, myConceptStandalonePluginDescriptor);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptApplicationPluginDeclaration;
      case 1:
        return myConceptApplicationPluginDisposeBlock;
      case 2:
        return myConceptApplicationPluginInitBlock;
      case 3:
        return myConceptApplicationPluginType;
      case 4:
        return myConceptGetPreferencesComponentInProjectOperation;
      case 5:
        return myConceptGetToolInProjectOperation;
      case 6:
        return myConceptProjectPluginDeclaration;
      case 7:
        return myConceptProjectPluginDisposeBlock;
      case 8:
        return myConceptProjectPluginInitBlock;
      case 9:
        return myConceptProjectPluginType;
      case 10:
        return myConceptStandalonePluginDescriptor;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForApplicationPluginDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ApplicationPluginDeclaration", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L);
    b.class_(false, false, true);
    b.parent(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178840");
    b.aggregate("initBlock", 0x6b059b0986f205aL).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2063L).optional(true).ordered(true).multiple(false).origin("481983775135178842").done();
    b.aggregate("disposeBlock", 0x6b059b0986f205bL).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f205eL).optional(true).ordered(true).multiple(false).origin("481983775135178843").done();
    b.aggregate("fieldDeclaration", 0x6b059b0986f205cL).target(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11aa7fc0293L).optional(true).ordered(true).multiple(true).origin("481983775135178844").done();
    b.alias("Application Plugin");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApplicationPluginDisposeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ApplicationPluginDisposeBlock", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f205eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178846");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("dispose");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApplicationPluginInitBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ApplicationPluginInitBlock", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2063L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178851");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("init");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApplicationPluginType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ApplicationPluginType", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f204fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType", 0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc77d845L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178831");
    b.associate("plugin", 0x6b059b0986f2051L).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L).optional(false).origin("481983775135178833").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("application plugin<>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetPreferencesComponentInProjectOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "GetPreferencesComponentInProjectOperation", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x9766f9338aa2118L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation", 0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x2e56fadb4d375f27L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/681855071694758168");
    b.associate("componentDeclaration", 0x9766f9338aa2119L).target(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x119c44c226fL).optional(false).origin("681855071694758169").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("preferenceComponent<<{componentDeclaration}>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetToolInProjectOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "GetToolInProjectOperation", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x9766f9338aa2115L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation", 0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x2e56fadb4d375f27L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/681855071694758165");
    b.associate("tool", 0x9766f9338aa2116L).target(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x5adc7622e710bddcL).optional(false).origin("681855071694758166").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("tool<<{tool}>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectPluginDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ProjectPluginDeclaration", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L);
    b.class_(false, false, true);
    b.parent(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178834");
    b.aggregate("initBlock", 0x6b059b0986f2054L).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2049L).optional(true).ordered(true).multiple(false).origin("481983775135178836").done();
    b.aggregate("disposeBlock", 0x6b059b0986f2055L).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2043L).optional(true).ordered(true).multiple(false).origin("481983775135178837").done();
    b.aggregate("fieldDeclaration", 0x6b059b0986f2056L).target(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11aa7fc0293L).optional(true).ordered(true).multiple(true).origin("481983775135178838").done();
    b.alias("Project Plugin");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectPluginDisposeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ProjectPluginDisposeBlock", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2043L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178819");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("dispose");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectPluginInitBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ProjectPluginInitBlock", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2049L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178825");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("init");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectPluginType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "ProjectPluginType", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2068L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType", 0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc77d845L);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/481983775135178856");
    b.associate("plugin", 0x6b059b0986f206aL).target(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L).optional(false).origin("481983775135178858").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("project plugin<>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStandalonePluginDescriptor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.plugin.standalone", "StandalonePluginDescriptor", 0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x685ef16bc1750e9cL);
    b.class_(false, false, true);
    b.origin("r:c70ee934-afb1-4c02-b6a9-1c4d1908a792(jetbrains.mps.lang.plugin.standalone.structure)/7520713872864775836");
    b.prop("needInitConfig", 0x5f3b7568ba8feb0fL, "6862207549896125199");
    return b.create();
  }
}
