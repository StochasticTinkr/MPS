package jetbrains.mps.lang.plugin.standalone.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.classifiers.behavior.ThisClassifierExpression__BehaviorDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.plugin.standalone.generator.util.PluginUtils;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.plugin.standalone.behavior.ApplicationPluginDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.standalone.behavior.ProjectPluginDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.behavior.BaseToolDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.plugin.behavior.PreferencesComponentDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.generator.util.PluginNameUtils;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.plugin.behavior.ActionDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.behavior.ActionGroupDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.behavior.KeymapChangesDeclaration__BehaviorDescriptor;
import jetbrains.mps.generator.template.TemplateQueryContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.MapRootRuleCondition;
import jetbrains.mps.generator.template.MapRootRuleContext;
import jetbrains.mps.generator.impl.query.MapConfigurationCondition;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean baseMappingRule_Condition_a0(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(ThisClassifierExpression__BehaviorDescriptor.getClassifier_idhEwJeDN.invoke(_context.getNode()), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration")) || SNodeOperations.isInstanceOf(ThisClassifierExpression__BehaviorDescriptor.getClassifier_idhEwJeDN.invoke(_context.getNode()), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration"));
  }
  public static boolean baseMappingRule_Condition_a0_0(final BaseMappingRuleContext _context) {
    if (!(PluginUtils.needAppPlugin(_context.getInputModel()))) {
      return false;
    }

    PluginUtils.checkPluginModelName(_context, _context.getNode());
    return true;
  }
  public static boolean baseMappingRule_Condition_a1(final BaseMappingRuleContext _context) {
    if (!(PluginUtils.needProjectPlugin(_context.getInputModel()))) {
      return false;
    }

    PluginUtils.checkPluginModelName(_context, _context.getNode());
    return true;
  }
  public static boolean baseMappingRule_Condition_a2(final BaseMappingRuleContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x685ef16bc1750e9cL, 0x5f3b7568ba8feb0fL, "needInitConfig")) && (PluginUtils.needAppPlugin(_context.getInputModel()) || PluginUtils.needProjectPlugin(_context.getInputModel()));
  }
  public static boolean baseMappingRule_Condition_a0_1(final BaseMappingRuleContext _context) {
    if (PluginUtils.needAppPlugin(_context.getInputModel()) || PluginUtils.needProjectPlugin(_context.getInputModel())) {
      SNode optionalStandaloneMarker = ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(_context.getNode()), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x685ef16bc1750e9cL, "jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor"))).first();
      // if compileInMPS && needInitConfig, it's MPS module with plugin, managed by ModulePluginContributor, therefore  
      // extension is not needed. 
      // see PluginUtils for reasons why have to resort to originalModel here 
      //  Perhaps, needInitConfig is a bit way too much here (parts loaded by ".plugin." convention don't need  
      // extension as well, I'd like to move forward gradually. 
      return !((SPropertyOperations.getBoolean(SModelOperations.getModuleStub(_context.getOriginalInputModel()), MetaAdapterFactory.getProperty(0x86ef829012bb4ca7L, 0x947f093788f263a9L, 0x5869770da61dfe1eL, 0x5869770da61dfe24L, "compileInMPS")) && SPropertyOperations.getBoolean(optionalStandaloneMarker, MetaAdapterFactory.getProperty(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x685ef16bc1750e9cL, 0x5f3b7568ba8feb0fL, "needInitConfig"))));
    }
    return false;
  }
  public static Object propertyMacro_GetPropertyValue_12152816868320(final PropertyMacroContext _context) {
    return (String) ApplicationPluginDeclaration__BehaviorDescriptor.getGeneratedName_idqKmr2orM46.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_12061166064700(final PropertyMacroContext _context) {
    return (String) ProjectPluginDeclaration__BehaviorDescriptor.getGeneratedName_idqKmr2orM2S.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_49114667153141114200(final PropertyMacroContext _context) {
    return (String) BaseToolDeclaration__BehaviorDescriptor.getGeneratedClassFQName_id5FstybB4d8e.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x9766f9338aa2115L, 0x9766f9338aa2116L, "tool")));
  }
  public static Object propertyMacro_GetPropertyValue_33361791995415691310(final PropertyMacroContext _context) {
    return (String) PreferencesComponentDeclaration__BehaviorDescriptor.getGeneratedClassFQName_id4gD2fissWfp.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x9766f9338aa2118L, 0x9766f9338aa2119L, "componentDeclaration")));
  }
  public static Object propertyMacro_GetPropertyValue_12152664950830(final PropertyMacroContext _context) {
    return PluginNameUtils.getApplicationPluginName(PluginNameUtils.getOriginalModule(_context));
  }
  public static Object propertyMacro_GetPropertyValue_62913504641124306180(final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getModule().getModuleName();
  }
  public static Object propertyMacro_GetPropertyValue_12038668065430(final PropertyMacroContext _context) {
    return PluginNameUtils.getPluginName(PluginNameUtils.getOriginalModule(_context));
  }
  public static Object propertyMacro_GetPropertyValue_90164695883881276050(final PropertyMacroContext _context) {
    return SModelOperations.getModelName(_context.getInputModel()) + "." + PluginNameUtils.getApplicationPluginName(PluginNameUtils.getOriginalModule(_context));
  }
  public static Object propertyMacro_GetPropertyValue_90164695883881276100(final PropertyMacroContext _context) {
    return SModelOperations.getModelName(_context.getInputModel()) + "." + PluginNameUtils.getPluginName(PluginNameUtils.getOriginalModule(_context));
  }
  public static Object propertyMacro_GetPropertyValue_79565392495230569870(final PropertyMacroContext _context) {
    return NameUtil.longNameFromNamespaceAndShortName(SModelOperations.getModelName(_context.getInputModel()), PluginNameUtils.getApplicationPluginName(PluginNameUtils.getOriginalModule(_context)));
  }
  public static Object propertyMacro_GetPropertyValue_79565392495230576800(final PropertyMacroContext _context) {
    return NameUtil.longNameFromNamespaceAndShortName(SModelOperations.getModelName(_context.getInputModel()), PluginNameUtils.getPluginName(PluginNameUtils.getOriginalModule(_context)));
  }
  public static Object referenceMacro_GetReferent_71675719220520204460(final ReferenceMacroContext _context) {
    SNode projectPluginNode = SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration"), false, false);
    SNode applicationPluginNode = SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration"), false, false);
    if (projectPluginNode != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(projectPluginNode, "map_ProjectPluginClass");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(applicationPluginNode, "map_ApplicationPluginClass");
    }
  }
  public static Object referenceMacro_GetReferent_85407168768788114730(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_ActionConstructor");
  }
  public static Object referenceMacro_GetReferent_85407168768788115220(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_GroupConstructor");
  }
  public static Object referenceMacro_GetReferent_13701425122064650690(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"), false, false), "map_GroupClass");
  }
  public static Object referenceMacro_GetReferent_13701425122064650691(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"), false, false), "map_GroupIDConstant");
  }
  public static Object referenceMacro_GetReferent_40426875132315040900(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_KeymapConstructor");
  }
  public static Object referenceMacro_GetReferent_60620292947532768300(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_ApplicationPluginConstructor");
  }
  public static Object referenceMacro_GetReferent_35526088809596058750(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_TabConstructor");
  }
  public static Object referenceMacro_GetReferent_12386722550650(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_BaseToolConstructor");
  }
  public static Object referenceMacro_GetReferent_12386722551410(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_PreferenceComponentClass");
  }
  public static Object referenceMacro_GetReferent_8085585777508402270(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_ProjectPluginConstructor");
  }
  public static boolean ifMacro_Condition_12152816868330(final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, 0x6b059b0986f205aL, "initBlock")) != null;
  }
  public static boolean ifMacro_Condition_12152816868480(final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, 0x6b059b0986f205bL, "disposeBlock")) != null;
  }
  public static boolean ifMacro_Condition_12061167997090(final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, 0x6b059b0986f2054L, "initBlock")) != null;
  }
  public static boolean ifMacro_Condition_12061168304030(final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, 0x6b059b0986f2055L, "disposeBlock")) != null;
  }
  public static boolean ifMacro_Condition_12152664951250(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(it)), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration")) && !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x5861c0ccac3f6fc8L, "isPluginXmlGroup")));
      }
    }).isNotEmpty() || ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L, "jetbrains.mps.lang.plugin.structure.ActionDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_12152664951580(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1186ae0bf01L, "jetbrains.mps.lang.plugin.structure.InterfaceGroup"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_62913504641123465360(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(it)), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration")) && !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x5861c0ccac3f6fc8L, "isPluginXmlGroup")));
      }
    }).isNotEmpty();
  }
  public static boolean ifMacro_Condition_40426875132315040260(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x15afe07f2a9bb075L, "jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_60620292947532768050(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_12038751726310(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x33f4c34299ff0d2fL, "jetbrains.mps.lang.plugin.structure.EditorTab"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_12038751727920(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x5adc7622e710bddcL, "jetbrains.mps.lang.plugin.structure.BaseToolDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_12176851312140(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x119c44c226fL, "jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_8085585777508402020(final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_90164695883881276050(final IfMacroContext _context) {
    return PluginUtils.needAppPlugin(_context.getInputModel());
  }
  public static boolean ifMacro_Condition_90164695883881276100(final IfMacroContext _context) {
    return PluginUtils.needProjectPlugin(_context.getInputModel());
  }
  public static boolean ifMacro_Condition_79565392495230374260(final IfMacroContext _context) {
    return PluginUtils.needAppPlugin(_context.getInputModel());
  }
  public static boolean ifMacro_Condition_79565392495230374310(final IfMacroContext _context) {
    return PluginUtils.needProjectPlugin(_context.getInputModel());
  }
  public static SNode sourceNodeQuery_12152816868380(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, 0x6b059b0986f205aL, "initBlock")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body"));
  }
  public static SNode sourceNodeQuery_12152816868530(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, 0x6b059b0986f205bL, "disposeBlock")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body"));
  }
  public static SNode sourceNodeQuery_12152801141130(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, 0x6b059b0986f2054L, "initBlock")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body"));
  }
  public static SNode sourceNodeQuery_12152801343310(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, 0x6b059b0986f2055L, "disposeBlock")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body"));
  }
  public static SNode sourceNodeQuery_42656361163630647390(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) IOperation__BehaviorDescriptor.getOperand_idhEwIP$m.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_42656361163630727950(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) IOperation__BehaviorDescriptor.getOperand_idhEwIP$m.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_12282390289340(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1186ae0bf01L, "jetbrains.mps.lang.plugin.structure.InterfaceGroup"), false, false), MetaAdapterFactory.getContainmentLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1186ae0bf01L, 0x118d6c29828L, "groupID"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, 0x6b059b0986f205cL, "fieldDeclaration"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, 0x6b059b0986f2056L, "fieldDeclaration"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0d(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L, "jetbrains.mps.lang.plugin.structure.ActionDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ListSequence.fromList(SLinkOperations.getChildren(it, MetaAdapterFactory.getContainmentLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L, 0x11daf6ca9baL, "constructionParameter"))).isEmpty();
      }
    }).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ActionDeclaration__BehaviorDescriptor.getGeneratedClassFQName_idhEwIGgK.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0d0d(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.nodes(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(it)), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration")) && !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x5861c0ccac3f6fc8L, "isPluginXmlGroup")));
      }
    }).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ActionGroupDeclaration__BehaviorDescriptor.getGeneratedClassFQName_idhEwJa8g.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0e(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1186ae0bf01L, "jetbrains.mps.lang.plugin.structure.InterfaceGroup"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x1188f1dd933L, "caption")) + _context.getOriginalCopiedInputNode(it).getNodeId().toString();
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a1a0e(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x1188f17ec8aL, "modifier"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ActionGroupDeclaration__BehaviorDescriptor.getGeneratedClassFQName_idhEwJa8g.invoke(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181de4920dL, 0x1181dea4861L, "modifiedGroup")));
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0f(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(it)), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration")) && !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x5861c0ccac3f6fc8L, "isPluginXmlGroup")));
      }
    }).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x1188f1dd933L, "caption")) + _context.getOriginalCopiedInputNode(it).getNodeId().toString();
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a1a0f(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181da058d2L, 0x1188f17ec8aL, "modifier"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ActionGroupDeclaration__BehaviorDescriptor.getGeneratedClassFQName_idhEwJa8g.invoke(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181de4920dL, 0x1181dea4861L, "modifiedGroup")));
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0g(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x15afe07f2a9bb075L, "jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x15afe07f2a9bb075L, 0x77ff578948f6b772L, "isPluginXmlKeymap")));
      }
    }).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) KeymapChangesDeclaration__BehaviorDescriptor.getGeneratedClassFQName_id5suWGB1jlhq.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0h(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ApplicationPluginDeclaration__BehaviorDescriptor.getGeneratedName_idqKmr2orM46.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0b(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x33f4c34299ff0d2fL, "jetbrains.mps.lang.plugin.structure.EditorTab"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0c(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x5adc7622e710bddcL, "jetbrains.mps.lang.plugin.structure.BaseToolDeclaration"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) BaseToolDeclaration__BehaviorDescriptor.getGeneratedName_id5FstybB4d83.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0c0d(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x119c44c226fL, "jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) PreferencesComponentDeclaration__BehaviorDescriptor.getClassName_idhEwIw5J.invoke(it);
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0e_0(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.roots(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration"))).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) ProjectPluginDeclaration__BehaviorDescriptor.getGeneratedName_idqKmr2orM2S.invoke(it);
      }
    }, true);
  }
  public static boolean mappingConfiguration_Condition_gs891k_a(final TemplateQueryContext _context) {
    return !(SModelOperations.nodes(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2052L, "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration")).isEmpty()) || !(SModelOperations.nodes(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x6b059b0986f2058L, "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration")).isEmpty());
  }
  public static boolean mappingConfiguration_Condition_46g7hd_a(final TemplateQueryContext _context) {
    return !(SModelOperations.nodes(_context.getInputModel(), MetaAdapterFactory.getConcept(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x2e56fadb4d375f27L, "jetbrains.mps.lang.plugin.structure.BaseProjectOperation")).isEmpty());
  }
  public static boolean mappingConfiguration_Condition_jsk815_a(final TemplateQueryContext _context) {
    return !(SModelOperations.nodes(_context.getInputModel(), MetaAdapterFactory.getConcept(0xef7bf5acd06c4342L, 0xb11de42104eb9343L, 0x685ef16bc1750e9cL, "jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor")).isEmpty());
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("1206118775178", new QueriesGenerated.RRC(i++));
    rrcMethods.put("7956539249523024688", new QueriesGenerated.RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(rrcMethods.containsKey(id))) {
      return super.getReductionRuleCondition(identity);
    }
    return rrcMethods.get(id);
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.baseMappingRule_Condition_a0(ctx);
        case 1:
          return QueriesGenerated.baseMappingRule_Condition_a0_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, MapRootRuleCondition> mrrcMethods = new HashMap<String, MapRootRuleCondition>();
  {
    int i = 0;
    mrrcMethods.put("7520713872864780076", new QueriesGenerated.MRRC(i++));
    mrrcMethods.put("7520713872864780077", new QueriesGenerated.MRRC(i++));
    mrrcMethods.put("9016469588388094563", new QueriesGenerated.MRRC(i++));
  }
  @Override
  @NotNull
  public MapRootRuleCondition getMapRootRuleCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(mrrcMethods.containsKey(id))) {
      return super.getMapRootRuleCondition(identity);
    }
    return mrrcMethods.get(id);
  }
  private static class MRRC implements MapRootRuleCondition {
    private final int methodKey;
    public MRRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull MapRootRuleContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.baseMappingRule_Condition_a0_0(ctx);
        case 1:
          return QueriesGenerated.baseMappingRule_Condition_a1(ctx);
        case 2:
          return QueriesGenerated.baseMappingRule_Condition_a2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, MapConfigurationCondition> mccMethods = new HashMap<String, MapConfigurationCondition>();
  {
    int i = 0;
    mccMethods.put("1206116514430", new QueriesGenerated.MCC(i++));
    mccMethods.put("681855071694907969", new QueriesGenerated.MCC(i++));
    mccMethods.put("1215266411913", new QueriesGenerated.MCC(i++));
  }
  @Override
  @NotNull
  public MapConfigurationCondition getMapConfigurationCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(mccMethods.containsKey(id))) {
      return super.getMapConfigurationCondition(identity);
    }
    return mccMethods.get(id);
  }
  private static class MCC implements MapConfigurationCondition {
    private final int methodKey;
    public MCC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(TemplateQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.mappingConfiguration_Condition_gs891k_a(ctx);
        case 1:
          return QueriesGenerated.mappingConfiguration_Condition_46g7hd_a(ctx);
        case 2:
          return QueriesGenerated.mappingConfiguration_Condition_jsk815_a(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for map configuration %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("1215281686840", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1215281686855", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1215280114115", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1215280134333", new QueriesGenerated.SNQ(i++));
    snqMethods.put("3339131993542076423", new QueriesGenerated.SNQ(i++));
    snqMethods.put("3339131993542064647", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1228239028936", new QueriesGenerated.SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snqMethods.containsKey(id))) {
      return super.getSourceNodeQuery(identity);
    }
    return snqMethods.get(id);
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_12152816868380(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_12152816868530(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_12152801141130(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_12152801343310(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_42656361163630647390(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_42656361163630727950(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_12282390289340(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("1215284335374", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1215284368016", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8540716876878811484", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8540716876878811572", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1228239043085", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1228242072138", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6291350464112346549", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6291350464112346606", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("4042687513231504054", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6062029294753276850", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("3552608880959605877", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1218030875875", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1218028775789", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("808558577750840247", new QueriesGenerated.SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snsqMethods.containsKey(id))) {
      return super.getSourceNodesQuery(identity);
    }
    return snsqMethods.get(id);
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a_0(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0d(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0d0d(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0e(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a1a0e(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0f(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a1a0f(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0g(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0h(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0b(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0c(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0c0d(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0e_0(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("1215281686866", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "GeneratedApplicationPluginPart"));
    pvqMethods.put("1206116795145", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "GeneratedProjectPluginPart"));
    pvqMethods.put("4911466715314111426", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1118e558c6dL, 0x1118e56212bL, "fqClassName"), "ToolClass"));
    pvqMethods.put("3336179199541569132", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1118e558c6dL, 0x1118e56212bL, "fqClassName"), "ToolClass"));
    pvqMethods.put("1215266495352", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "GeneratedApplicationPlugin"));
    pvqMethods.put("6291350464112430619", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "language"));
    pvqMethods.put("1212583749803", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "GeneratedProjectPlugin"));
    pvqMethods.put("9016469588388127614", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x58f98fef90ad4b72L, 0xa390fad66ec7005aL, 0x36fb0dc9fd3a3ac1L, 0x36fb0dc9fd3a3ae4L, "value"), null));
    pvqMethods.put("9016469588388294864", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x58f98fef90ad4b72L, 0xa390fad66ec7005aL, 0x36fb0dc9fd3a3ac1L, 0x36fb0dc9fd3a3ae4L, "value"), null));
    pvqMethods.put("7956539249523058150", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "GeneratedApplicationPlugin"));
    pvqMethods.put("7956539249523059270", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text"), "GeneratedProjectPlugin"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetPropertyValue_12152816868320(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetPropertyValue_12061166064700(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetPropertyValue_49114667153141114200(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetPropertyValue_33361791995415691310(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetPropertyValue_12152664950830(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetPropertyValue_62913504641124306180(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetPropertyValue_12038668065430(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetPropertyValue_90164695883881276050(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetPropertyValue_90164695883881276100(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetPropertyValue_79565392495230569870(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetPropertyValue_79565392495230576800(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("1215444484688", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1215444536285", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1215444555144", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1215444569815", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1218034274585", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1218034184598", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6291350464112346556", new QueriesGenerated.IfMC(i++));
    imcMethods.put("4042687513231504064", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6062029294753276873", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1218028307704", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1218028332758", new QueriesGenerated.IfMC(i++));
    imcMethods.put("1218028355772", new QueriesGenerated.IfMC(i++));
    imcMethods.put("808558577750840270", new QueriesGenerated.IfMC(i++));
    imcMethods.put("9016469588388299400", new QueriesGenerated.IfMC(i++));
    imcMethods.put("9016469588388302769", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7956539249523037435", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7956539249523043151", new QueriesGenerated.IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(imcMethods.containsKey(id))) {
      return super.getIfMacroCondition(identity);
    }
    return imcMethods.get(id);
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_12152816868330(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_12152816868480(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_12061167997090(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_12061168304030(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_12152664951250(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_12152664951580(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_62913504641123465360(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_40426875132315040260(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_60620292947532768050(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_12038751726310(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_12038751727920(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_12176851312140(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_8085585777508402020(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_90164695883881276050(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_90164695883881276100(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_79565392495230374260(ctx);
        case 16:
          return QueriesGenerated.ifMacro_Condition_79565392495230374310(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("7167571922052020448", new QueriesGenerated.RTQ(0, "PluginClass"));
    rtqMethods.put("8540716876878811474", new QueriesGenerated.RTQ(1, "GeneratedAction_Template"));
    rtqMethods.put("8540716876878811523", new QueriesGenerated.RTQ(2, "MainGeneratedGroup"));
    rtqMethods.put("1370142512206465070", new QueriesGenerated.RTQ(3, "MainGeneratedGroup"));
    rtqMethods.put("1370142512206465093", new QueriesGenerated.RTQ(4, "ID"));
    rtqMethods.put("4042687513231504091", new QueriesGenerated.RTQ(5, "KeymapChanges"));
    rtqMethods.put("6062029294753276831", new QueriesGenerated.RTQ(6, "Object"));
    rtqMethods.put("6769912430829060553", new QueriesGenerated.RTQ(7, "TabDescriptor_Template"));
    rtqMethods.put("1238672255067", new QueriesGenerated.RTQ(8, "AbandonRuleInputException"));
    rtqMethods.put("1238672255143", new QueriesGenerated.RTQ(9, "Object"));
    rtqMethods.put("808558577750840228", new QueriesGenerated.RTQ(10, "Object"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    final String id = queryKey.getTemplateNode().getNodeId().toString();
    if (!(rtqMethods.containsKey(id))) {
      return super.getReferenceTargetQuery(queryKey);
    }
    return rtqMethods.get(id);
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_71675719220520204460(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_85407168768788114730(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_85407168768788115220(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_13701425122064650690(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_13701425122064650691(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_40426875132315040900(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_60620292947532768300(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_35526088809596058750(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_12386722550650(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_12386722551410(ctx);
        case 10:
          return QueriesGenerated.referenceMacro_GetReferent_8085585777508402270(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
}
