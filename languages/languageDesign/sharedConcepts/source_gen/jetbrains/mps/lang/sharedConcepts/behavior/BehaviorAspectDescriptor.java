package jetbrains.mps.lang.sharedConcepts.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myConceptFunctionParameter_model__BehaviorDescriptor = new ConceptFunctionParameter_model__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_operationContext__BehaviorDescriptor = new ConceptFunctionParameter_operationContext__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_editorContext__BehaviorDescriptor = new ConceptFunctionParameter_editorContext__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_node__BehaviorDescriptor = new ConceptFunctionParameter_node__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (index_846f5o_a0h.index(cncpt)) {
      case 0:
        return myConceptFunctionParameter_editorContext__BehaviorDescriptor;
      case 1:
        return myConceptFunctionParameter_model__BehaviorDescriptor;
      case 2:
        return myConceptFunctionParameter_node__BehaviorDescriptor;
      case 3:
        return myConceptFunctionParameter_operationContext__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0h = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x13744753c81f424aL, 0x9c1bcf8943bf4e86L, 0x11601f73f7aL), MetaIdFactory.conceptId(0x13744753c81f424aL, 0x9c1bcf8943bf4e86L, 0x10e761b3745L), MetaIdFactory.conceptId(0x13744753c81f424aL, 0x9c1bcf8943bf4e86L, 0x118e7145df4L), MetaIdFactory.conceptId(0x13744753c81f424aL, 0x9c1bcf8943bf4e86L, 0x10e761c927aL)).seal();
}
