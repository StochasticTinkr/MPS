package jetbrains.mps.lang.sharedConcepts.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ConceptFunctionParameter_editorContext = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_model = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_node = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_operationContext = new ConceptPresentationBuilder().deprecated().create();
  private final ConceptPresentation props_ConceptFunctionParameter_progressMonitor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_scope = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ConceptFunctionParameter_editorContext:
        return props_ConceptFunctionParameter_editorContext;
      case LanguageConceptSwitch.ConceptFunctionParameter_model:
        return props_ConceptFunctionParameter_model;
      case LanguageConceptSwitch.ConceptFunctionParameter_node:
        return props_ConceptFunctionParameter_node;
      case LanguageConceptSwitch.ConceptFunctionParameter_operationContext:
        return props_ConceptFunctionParameter_operationContext;
      case LanguageConceptSwitch.ConceptFunctionParameter_progressMonitor:
        return props_ConceptFunctionParameter_progressMonitor;
      case LanguageConceptSwitch.ConceptFunctionParameter_scope:
        return props_ConceptFunctionParameter_scope;
    }
    return null;
  }
}
