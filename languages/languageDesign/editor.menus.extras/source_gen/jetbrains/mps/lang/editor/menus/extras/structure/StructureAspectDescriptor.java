package jetbrains.mps.lang.editor.menus.extras.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(4);
  /*package*/ final ConceptDescriptor myConceptQueryFunctionParameter_IntentionExecutable = createDescriptorForQueryFunctionParameter_IntentionExecutable();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_Intention = createDescriptorForTransformationMenuPart_Intention();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_PluginAction = createDescriptorForTransformationMenuPart_PluginAction();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuPart_Refactoring = createDescriptorForTransformationMenuPart_Refactoring();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptQueryFunctionParameter_IntentionExecutable.getId(), 0);
    myIndexMap.put(myConceptTransformationMenuPart_Intention.getId(), 1);
    myIndexMap.put(myConceptTransformationMenuPart_PluginAction.getId(), 2);
    myIndexMap.put(myConceptTransformationMenuPart_Refactoring.getId(), 3);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptQueryFunctionParameter_IntentionExecutable, myConceptTransformationMenuPart_Intention, myConceptTransformationMenuPart_PluginAction, myConceptTransformationMenuPart_Refactoring);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptQueryFunctionParameter_IntentionExecutable;
      case 1:
        return myConceptTransformationMenuPart_Intention;
      case 2:
        return myConceptTransformationMenuPart_PluginAction;
      case 3:
        return myConceptTransformationMenuPart_Refactoring;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForQueryFunctionParameter_IntentionExecutable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.extras", "QueryFunctionParameter_IntentionExecutable", 0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x2241a13dab46cce9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.origin("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.editor.menus.extras.structure)/2468431357014363369");
    b.alias("intentionExecutable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransformationMenuPart_Intention() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.extras", "TransformationMenuPart_Intention", 0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x289dadfa24b57a51L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart", 0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL);
    b.parent(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L);
    b.origin("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.editor.menus.extras.structure)/2926686622729992785");
    b.associate("intention", 0x289dadfa24b57a52L).target(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x2303633a9c3cc675L).optional(false).origin("2926686622729992786").done();
    b.alias("intention");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransformationMenuPart_PluginAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.extras", "TransformationMenuPart_PluginAction", 0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x202f4c4e02a0918cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart", 0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL);
    b.parent(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L);
    b.origin("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.editor.menus.extras.structure)/2319156231054332300");
    b.associate("action", 0x202f4c4e02a09194L).target(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L).optional(false).origin("2319156231054332308").done();
    b.alias("plugin action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransformationMenuPart_Refactoring() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.menus.extras", "TransformationMenuPart_Refactoring", 0xcffe907ed3de433fL, 0x89d657d9c449c0e2L, 0x41bc200f660dc377L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.structure.TransformationMenuPart", 0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x16be955f384efffeL);
    b.parent(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x652f322a364c9a28L);
    b.origin("r:8333260e-1c41-48f8-b34d-821761a2600f(jetbrains.mps.lang.editor.menus.extras.structure)/4736696158595695479");
    b.associate("refactoring", 0x41bc200f660dc37aL).target(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L).optional(false).origin("4736696158595695482").done();
    b.alias("refactoring");
    return b.create();
  }
}
