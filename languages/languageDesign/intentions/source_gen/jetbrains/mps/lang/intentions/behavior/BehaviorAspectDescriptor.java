package jetbrains.mps.lang.intentions.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIntentionDeclaration__BehaviorDescriptor = new IntentionDeclaration__BehaviorDescriptor();
  private final BHDescriptor myDescriptionBlock__BehaviorDescriptor = new DescriptionBlock__BehaviorDescriptor();
  private final BHDescriptor myIsApplicableBlock__BehaviorDescriptor = new IsApplicableBlock__BehaviorDescriptor();
  private final BHDescriptor myExecuteBlock__BehaviorDescriptor = new ExecuteBlock__BehaviorDescriptor();
  private final BHDescriptor myQueryBlock__BehaviorDescriptor = new QueryBlock__BehaviorDescriptor();
  private final BHDescriptor myParameterizedIntentionDeclaration__BehaviorDescriptor = new ParameterizedIntentionDeclaration__BehaviorDescriptor();
  private final BHDescriptor myParameterizedDescriptionBlock__BehaviorDescriptor = new ParameterizedDescriptionBlock__BehaviorDescriptor();
  private final BHDescriptor myParameterizedExecuteBlock__BehaviorDescriptor = new ParameterizedExecuteBlock__BehaviorDescriptor();
  private final BHDescriptor myBaseIntentionDeclaration__BehaviorDescriptor = new BaseIntentionDeclaration__BehaviorDescriptor();
  private final BHDescriptor myChildFilterFunction__BehaviorDescriptor = new ChildFilterFunction__BehaviorDescriptor();
  private final BHDescriptor myParameter__BehaviorDescriptor = new Parameter__BehaviorDescriptor();
  private final BHDescriptor myIntention__BehaviorDescriptor = new Intention__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (index_846f5o_a0p.index(cncpt)) {
      case 0:
        return myBaseIntentionDeclaration__BehaviorDescriptor;
      case 1:
        return myChildFilterFunction__BehaviorDescriptor;
      case 2:
        return myDescriptionBlock__BehaviorDescriptor;
      case 3:
        return myExecuteBlock__BehaviorDescriptor;
      case 4:
        return myIntention__BehaviorDescriptor;
      case 5:
        return myIntentionDeclaration__BehaviorDescriptor;
      case 6:
        return myIsApplicableBlock__BehaviorDescriptor;
      case 7:
        return myParameter__BehaviorDescriptor;
      case 8:
        return myParameterizedDescriptionBlock__BehaviorDescriptor;
      case 9:
        return myParameterizedExecuteBlock__BehaviorDescriptor;
      case 10:
        return myParameterizedIntentionDeclaration__BehaviorDescriptor;
      case 11:
        return myQueryBlock__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0p = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x2303633a9c3cc675L), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x323731f511d1c1bbL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x115b81bfaa7L), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x115b82d36d9L), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x71ffad1474b12a0bL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x115b81b652bL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x115b82b10f5L), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x6688b42d39674b7aL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x1925e8184af03861L), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x1925e8184af310edL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x120cd519c2dL), MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x120c89cc719L)).seal();
}
