package jetbrains.mps.lang.constraints.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.cells.BigCellUtil;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.openapi.editor.style.StyleRegistry;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.MPSFonts;

public class ConstraintFunction_ReferentSearchScope_Scope_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createComponent_5hmuo0_a(editorContext, node);
  }
  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_5hmuo0_a(editorContext, node);
  }
  private EditorCell createComponent_5hmuo0_a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.baseLanguage.editor.ConceptFunction_Component");
    EditorCell bigCell = BigCellUtil.findBigCell(editorCell, node);
    if (bigCell != null) {
      bigCell.setBig(true);
    }
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_a");
    editorCell.setBig(true);
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createCollection_5hmuo0_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b0(editorContext, node));
    editorCell.addEditorCell(this.createComponent_5hmuo0_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_e0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createComponent_5hmuo0_a0a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b0a(editorContext, node));
    return editorCell;
  }
  private EditorCell createComponent_5hmuo0_a0a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, 0, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray)));
    style.set(StyleAttributes.TEXT_BACKGROUND_COLOR, 0, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray));
    editorCell.getStyle().putAll(style);
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "provider");
    editorCell.setCellId("Constant_5hmuo0_b0a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, 0, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray)));
    style.set(StyleAttributes.TEXT_BACKGROUND_COLOR, 0, StyleRegistry.getInstance().getSimpleColor(MPSColors.lightGray));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_5hmuo0_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createComponent_5hmuo0_c0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.ShortDescriptionEditorComponent");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_5hmuo0_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "macros:");
    editorCell.setCellId("Constant_5hmuo0_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setGridLayout(true);
    editorCell.addEditorCell(this.createCollection_5hmuo0_a5a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_b5a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_c5a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_d5a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_e5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_a5a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_a5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a0f0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_b0f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a0f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "referenceNode");
    editorCell.setCellId("Constant_5hmuo0_a0f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_b0f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_b0f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a1a5a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b1a5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a1a5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "node that contains reference link.");
    editorCell.setCellId("Constant_5hmuo0_a1a5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b1a5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(optional - may not exist yet. In this case, reference is being created)");
    editorCell.setCellId("Constant_5hmuo0_b1a5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.ITALIC);
    style.set(StyleAttributes.TEXT_BACKGROUND_COLOR, 0, StyleRegistry.getInstance().getSimpleColor(MPSColors.pink));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_b5a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_b5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a1f0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_b1f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a1f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "contextNode");
    editorCell.setCellId("Constant_5hmuo0_a1f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_b1f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_b1f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a1b5a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b1b5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a1b5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "closest not-null context node.");
    editorCell.setCellId("Constant_5hmuo0_a1b5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b1b5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "if referenceNode exists then contextNode equals referenceNode.");
    editorCell.setCellId("Constant_5hmuo0_b1b5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.ITALIC);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_c5a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_c5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a2f0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_b2f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a2f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "containmentLink");
    editorCell.setCellId("Constant_5hmuo0_a2f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_b2f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_b2f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a1c5a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b1c5a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_c1c5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a1c5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "containment link between context node and its non-exist child");
    editorCell.setCellId("Constant_5hmuo0_a1c5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b1c5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "where reference is being created.");
    editorCell.setCellId("Constant_5hmuo0_b1c5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_c1c5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "if referenceNode exists then this parameter has no sence.");
    editorCell.setCellId("Constant_5hmuo0_c1c5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.ITALIC);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_d5a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_d5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a3f0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b3f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a3f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "position");
    editorCell.setCellId("Constant_5hmuo0_a3f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b3f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "context node child position in role.");
    editorCell.setCellId("Constant_5hmuo0_b3f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_e5a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_e5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a4f0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5hmuo0_b4f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a4f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "linkTarget");
    editorCell.setCellId("Constant_5hmuo0_a4f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_5hmuo0_b4f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5hmuo0_b4f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_5hmuo0_a1e5a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5hmuo0_b1e5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_a1e5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "concept where link can refer to.");
    editorCell.setCellId("Constant_5hmuo0_a1e5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5hmuo0_b1e5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "it can be useful in case when link is supposed to be specialized.");
    editorCell.setCellId("Constant_5hmuo0_b1e5a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.ITALIC);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
}
