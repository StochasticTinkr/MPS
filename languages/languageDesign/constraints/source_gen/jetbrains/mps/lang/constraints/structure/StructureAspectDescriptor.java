package jetbrains.mps.lang.constraints.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(43);
  /*package*/ final ConceptDescriptor myConceptConceptConstraints = createDescriptorForConceptConstraints();
  /*package*/ final ConceptDescriptor myConceptConceptParameter_ReferentSearchScope_enclosingNode = createDescriptorForConceptParameter_ReferentSearchScope_enclosingNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_checkedNode = createDescriptorForConstraintFunctionParameter_checkedNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_childConcept = createDescriptorForConstraintFunctionParameter_childConcept();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_childNode = createDescriptorForConstraintFunctionParameter_childNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_containingLink = createDescriptorForConstraintFunctionParameter_containingLink();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_contextNode = createDescriptorForConstraintFunctionParameter_contextNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_contextRole = createDescriptorForConstraintFunctionParameter_contextRole();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_exists = createDescriptorForConstraintFunctionParameter_exists();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_inEditor = createDescriptorForConstraintFunctionParameter_inEditor();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_link = createDescriptorForConstraintFunctionParameter_link();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_linkTarget = createDescriptorForConstraintFunctionParameter_linkTarget();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_newReferentNode = createDescriptorForConstraintFunctionParameter_newReferentNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_oldReferentNode = createDescriptorForConstraintFunctionParameter_oldReferentNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_parameterNode = createDescriptorForConstraintFunctionParameter_parameterNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_parentNode = createDescriptorForConstraintFunctionParameter_parentNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_position = createDescriptorForConstraintFunctionParameter_position();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_referenceNode = createDescriptorForConstraintFunctionParameter_referenceNode();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_smartReference = createDescriptorForConstraintFunctionParameter_smartReference();
  /*package*/ final ConceptDescriptor myConceptConstraintFunctionParameter_visible = createDescriptorForConstraintFunctionParameter_visible();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_CanBeAChild = createDescriptorForConstraintFunction_CanBeAChild();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_CanBeAParent = createDescriptorForConstraintFunction_CanBeAParent();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_CanBeARoot = createDescriptorForConstraintFunction_CanBeARoot();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_CanBeAnAncestor = createDescriptorForConstraintFunction_CanBeAnAncestor();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_GetAlternativeIcon = createDescriptorForConstraintFunction_GetAlternativeIcon();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_GetInstanceIcon = createDescriptorForConstraintFunction_GetInstanceIcon();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_PropertyGetter = createDescriptorForConstraintFunction_PropertyGetter();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_PropertySetter = createDescriptorForConstraintFunction_PropertySetter();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_PropertyValidator = createDescriptorForConstraintFunction_PropertyValidator();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_RefSetHandlerKeepsReference = createDescriptorForConstraintFunction_RefSetHandlerKeepsReference();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSearchScope_AbstractBase = createDescriptorForConstraintFunction_ReferentSearchScope_AbstractBase();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSearchScope_Factory = createDescriptorForConstraintFunction_ReferentSearchScope_Factory();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSearchScope_Presentation = createDescriptorForConstraintFunction_ReferentSearchScope_Presentation();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSearchScope_Scope = createDescriptorForConstraintFunction_ReferentSearchScope_Scope();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSearchScope_Validator = createDescriptorForConstraintFunction_ReferentSearchScope_Validator();
  /*package*/ final ConceptDescriptor myConceptConstraintFunction_ReferentSetHandler = createDescriptorForConstraintFunction_ReferentSetHandler();
  /*package*/ final ConceptDescriptor myConceptConstraintsFunctionParameter_node = createDescriptorForConstraintsFunctionParameter_node();
  /*package*/ final ConceptDescriptor myConceptConstraintsFunctionParameter_propertyValue = createDescriptorForConstraintsFunctionParameter_propertyValue();
  /*package*/ final ConceptDescriptor myConceptInheritedNodeScopeFactory = createDescriptorForInheritedNodeScopeFactory();
  /*package*/ final ConceptDescriptor myConceptNodeDefaultSearchScope = createDescriptorForNodeDefaultSearchScope();
  /*package*/ final ConceptDescriptor myConceptNodePropertyConstraint = createDescriptorForNodePropertyConstraint();
  /*package*/ final ConceptDescriptor myConceptNodeReferentConstraint = createDescriptorForNodeReferentConstraint();
  /*package*/ final ConceptDescriptor myConceptNodeScopeFactory = createDescriptorForNodeScopeFactory();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptConceptConstraints.getId(), 0);
    myIndexMap.put(myConceptConceptParameter_ReferentSearchScope_enclosingNode.getId(), 1);
    myIndexMap.put(myConceptConstraintFunctionParameter_checkedNode.getId(), 2);
    myIndexMap.put(myConceptConstraintFunctionParameter_childConcept.getId(), 3);
    myIndexMap.put(myConceptConstraintFunctionParameter_childNode.getId(), 4);
    myIndexMap.put(myConceptConstraintFunctionParameter_containingLink.getId(), 5);
    myIndexMap.put(myConceptConstraintFunctionParameter_contextNode.getId(), 6);
    myIndexMap.put(myConceptConstraintFunctionParameter_contextRole.getId(), 7);
    myIndexMap.put(myConceptConstraintFunctionParameter_exists.getId(), 8);
    myIndexMap.put(myConceptConstraintFunctionParameter_inEditor.getId(), 9);
    myIndexMap.put(myConceptConstraintFunctionParameter_link.getId(), 10);
    myIndexMap.put(myConceptConstraintFunctionParameter_linkTarget.getId(), 11);
    myIndexMap.put(myConceptConstraintFunctionParameter_newReferentNode.getId(), 12);
    myIndexMap.put(myConceptConstraintFunctionParameter_oldReferentNode.getId(), 13);
    myIndexMap.put(myConceptConstraintFunctionParameter_parameterNode.getId(), 14);
    myIndexMap.put(myConceptConstraintFunctionParameter_parentNode.getId(), 15);
    myIndexMap.put(myConceptConstraintFunctionParameter_position.getId(), 16);
    myIndexMap.put(myConceptConstraintFunctionParameter_referenceNode.getId(), 17);
    myIndexMap.put(myConceptConstraintFunctionParameter_smartReference.getId(), 18);
    myIndexMap.put(myConceptConstraintFunctionParameter_visible.getId(), 19);
    myIndexMap.put(myConceptConstraintFunction_CanBeAChild.getId(), 20);
    myIndexMap.put(myConceptConstraintFunction_CanBeAParent.getId(), 21);
    myIndexMap.put(myConceptConstraintFunction_CanBeARoot.getId(), 22);
    myIndexMap.put(myConceptConstraintFunction_CanBeAnAncestor.getId(), 23);
    myIndexMap.put(myConceptConstraintFunction_GetAlternativeIcon.getId(), 24);
    myIndexMap.put(myConceptConstraintFunction_GetInstanceIcon.getId(), 25);
    myIndexMap.put(myConceptConstraintFunction_PropertyGetter.getId(), 26);
    myIndexMap.put(myConceptConstraintFunction_PropertySetter.getId(), 27);
    myIndexMap.put(myConceptConstraintFunction_PropertyValidator.getId(), 28);
    myIndexMap.put(myConceptConstraintFunction_RefSetHandlerKeepsReference.getId(), 29);
    myIndexMap.put(myConceptConstraintFunction_ReferentSearchScope_AbstractBase.getId(), 30);
    myIndexMap.put(myConceptConstraintFunction_ReferentSearchScope_Factory.getId(), 31);
    myIndexMap.put(myConceptConstraintFunction_ReferentSearchScope_Presentation.getId(), 32);
    myIndexMap.put(myConceptConstraintFunction_ReferentSearchScope_Scope.getId(), 33);
    myIndexMap.put(myConceptConstraintFunction_ReferentSearchScope_Validator.getId(), 34);
    myIndexMap.put(myConceptConstraintFunction_ReferentSetHandler.getId(), 35);
    myIndexMap.put(myConceptConstraintsFunctionParameter_node.getId(), 36);
    myIndexMap.put(myConceptConstraintsFunctionParameter_propertyValue.getId(), 37);
    myIndexMap.put(myConceptInheritedNodeScopeFactory.getId(), 38);
    myIndexMap.put(myConceptNodeDefaultSearchScope.getId(), 39);
    myIndexMap.put(myConceptNodePropertyConstraint.getId(), 40);
    myIndexMap.put(myConceptNodeReferentConstraint.getId(), 41);
    myIndexMap.put(myConceptNodeScopeFactory.getId(), 42);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConceptConstraints, myConceptConceptParameter_ReferentSearchScope_enclosingNode, myConceptConstraintFunctionParameter_checkedNode, myConceptConstraintFunctionParameter_childConcept, myConceptConstraintFunctionParameter_childNode, myConceptConstraintFunctionParameter_containingLink, myConceptConstraintFunctionParameter_contextNode, myConceptConstraintFunctionParameter_contextRole, myConceptConstraintFunctionParameter_exists, myConceptConstraintFunctionParameter_inEditor, myConceptConstraintFunctionParameter_link, myConceptConstraintFunctionParameter_linkTarget, myConceptConstraintFunctionParameter_newReferentNode, myConceptConstraintFunctionParameter_oldReferentNode, myConceptConstraintFunctionParameter_parameterNode, myConceptConstraintFunctionParameter_parentNode, myConceptConstraintFunctionParameter_position, myConceptConstraintFunctionParameter_referenceNode, myConceptConstraintFunctionParameter_smartReference, myConceptConstraintFunctionParameter_visible, myConceptConstraintFunction_CanBeAChild, myConceptConstraintFunction_CanBeAParent, myConceptConstraintFunction_CanBeARoot, myConceptConstraintFunction_CanBeAnAncestor, myConceptConstraintFunction_GetAlternativeIcon, myConceptConstraintFunction_GetInstanceIcon, myConceptConstraintFunction_PropertyGetter, myConceptConstraintFunction_PropertySetter, myConceptConstraintFunction_PropertyValidator, myConceptConstraintFunction_RefSetHandlerKeepsReference, myConceptConstraintFunction_ReferentSearchScope_AbstractBase, myConceptConstraintFunction_ReferentSearchScope_Factory, myConceptConstraintFunction_ReferentSearchScope_Presentation, myConceptConstraintFunction_ReferentSearchScope_Scope, myConceptConstraintFunction_ReferentSearchScope_Validator, myConceptConstraintFunction_ReferentSetHandler, myConceptConstraintsFunctionParameter_node, myConceptConstraintsFunctionParameter_propertyValue, myConceptInheritedNodeScopeFactory, myConceptNodeDefaultSearchScope, myConceptNodePropertyConstraint, myConceptNodeReferentConstraint, myConceptNodeScopeFactory);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptConceptConstraints;
      case 1:
        return myConceptConceptParameter_ReferentSearchScope_enclosingNode;
      case 2:
        return myConceptConstraintFunctionParameter_checkedNode;
      case 3:
        return myConceptConstraintFunctionParameter_childConcept;
      case 4:
        return myConceptConstraintFunctionParameter_childNode;
      case 5:
        return myConceptConstraintFunctionParameter_containingLink;
      case 6:
        return myConceptConstraintFunctionParameter_contextNode;
      case 7:
        return myConceptConstraintFunctionParameter_contextRole;
      case 8:
        return myConceptConstraintFunctionParameter_exists;
      case 9:
        return myConceptConstraintFunctionParameter_inEditor;
      case 10:
        return myConceptConstraintFunctionParameter_link;
      case 11:
        return myConceptConstraintFunctionParameter_linkTarget;
      case 12:
        return myConceptConstraintFunctionParameter_newReferentNode;
      case 13:
        return myConceptConstraintFunctionParameter_oldReferentNode;
      case 14:
        return myConceptConstraintFunctionParameter_parameterNode;
      case 15:
        return myConceptConstraintFunctionParameter_parentNode;
      case 16:
        return myConceptConstraintFunctionParameter_position;
      case 17:
        return myConceptConstraintFunctionParameter_referenceNode;
      case 18:
        return myConceptConstraintFunctionParameter_smartReference;
      case 19:
        return myConceptConstraintFunctionParameter_visible;
      case 20:
        return myConceptConstraintFunction_CanBeAChild;
      case 21:
        return myConceptConstraintFunction_CanBeAParent;
      case 22:
        return myConceptConstraintFunction_CanBeARoot;
      case 23:
        return myConceptConstraintFunction_CanBeAnAncestor;
      case 24:
        return myConceptConstraintFunction_GetAlternativeIcon;
      case 25:
        return myConceptConstraintFunction_GetInstanceIcon;
      case 26:
        return myConceptConstraintFunction_PropertyGetter;
      case 27:
        return myConceptConstraintFunction_PropertySetter;
      case 28:
        return myConceptConstraintFunction_PropertyValidator;
      case 29:
        return myConceptConstraintFunction_RefSetHandlerKeepsReference;
      case 30:
        return myConceptConstraintFunction_ReferentSearchScope_AbstractBase;
      case 31:
        return myConceptConstraintFunction_ReferentSearchScope_Factory;
      case 32:
        return myConceptConstraintFunction_ReferentSearchScope_Presentation;
      case 33:
        return myConceptConstraintFunction_ReferentSearchScope_Scope;
      case 34:
        return myConceptConstraintFunction_ReferentSearchScope_Validator;
      case 35:
        return myConceptConstraintFunction_ReferentSetHandler;
      case 36:
        return myConceptConstraintsFunctionParameter_node;
      case 37:
        return myConceptConstraintsFunctionParameter_propertyValue;
      case 38:
        return myConceptInheritedNodeScopeFactory;
      case 39:
        return myConceptNodeDefaultSearchScope;
      case 40:
        return myConceptNodePropertyConstraint;
      case 41:
        return myConceptNodeReferentConstraint;
      case 42:
        return myConceptNodeScopeFactory;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForConceptConstraints() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConceptConstraints", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11a7208faaeL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1213093968558");
    b.associate("concept", 0x11a720969b6L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(true).origin("1213093996982").done();
    b.associate("defaultConcreteConcept", 0x11a72ce9037L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L).optional(true).origin("1213106917431").done();
    b.aggregate("property", 0x11a7246dc3dL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a5eaa48L).optional(true).ordered(true).multiple(true).origin("1213098023997").done();
    b.aggregate("referent", 0x11a726c901bL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b731752daL).optional(true).ordered(true).multiple(true).origin("1213100494875").done();
    b.aggregate("defaultScope", 0x11a727527f6L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10dead47852L).optional(true).ordered(true).multiple(false).origin("1213101058038").done();
    b.aggregate("canBeChild", 0x11a72c7a3f1L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11817c381baL).optional(true).ordered(true).multiple(false).origin("1213106463729").done();
    b.aggregate("canBeRoot", 0x11db3f8211dL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11db3f6ffbbL).optional(true).ordered(true).multiple(false).origin("1227085062429").done();
    b.aggregate("canBeParent", 0x11a72c7dc2aL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x1181873ed50L).optional(true).ordered(true).multiple(false).origin("1213106478122").done();
    b.aggregate("canBeAncestor", 0x6cfa709738a97560L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x6d03b53f575b9685L).optional(true).ordered(true).multiple(false).origin("7852712695066883424").done();
    b.aggregate("alternativeIcon", 0x341b038f9307e5d8L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x341b038f9307e5cfL).optional(true).ordered(true).multiple(false).origin("3754598629525415384").done();
    b.aggregate("instanceIcon", 0x13cd31e62ef6c43cL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x13cd31e62ef65a72L).optional(true).ordered(true).multiple(false).origin("1426851521646478396").done();
    b.alias("Concept Constraints");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptParameter_ReferentSearchScope_enclosingNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConceptParameter_ReferentSearchScope_enclosingNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d7448bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1148934636683");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("enclosingNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_checkedNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_checkedNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x297f56a5546902a8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/2990203945683059368");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("checkedNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_childConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_childConcept", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11818761c19L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1203001236505");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("childConcept");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_childNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_childNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x5d82bba5f0907509L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/6738154313879680265");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("childNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_containingLink() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_containingLink", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x295782e439c9459bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/2978993595262518683");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("containingLink");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_contextNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_contextNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x7c6f6cc2e7bb76f0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/8966504967485224688");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("contextNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_contextRole() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_contextRole", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x40a0f5576472817aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/4656991770397278586");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("contextRole");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_exists() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_exists", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x40a0f55764728181L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/4656991770397278593");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("exists");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_inEditor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_inEditor", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x3fb59c48ff4b8cfdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/4590747232508808445");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("inEditor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_link() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_link", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11818f5cad4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1203009604308");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("link");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_linkTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_linkTarget", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x118bd28275fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1205764368223");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("linkTarget");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_newReferentNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_newReferentNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10ed447b91aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1163202640154");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("newReferentNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_oldReferentNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_oldReferentNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10ed4488befL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1163202694127");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("oldReferentNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_parameterNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_parameterNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x36367902116a29ccL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/3906442776579549644");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("parameterNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_parentNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_parentNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11817c5715bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1202989658459");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("parentNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_position() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_position", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x40a0f55764728188L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/4656991770397278600");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("position");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_referenceNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_referenceNode", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10ed4294f69L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1163200647017");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("referenceNode");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_smartReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_smartReference", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x5df04ce71509adfdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/6768994795311967741");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("smartReference");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunctionParameter_visible() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunctionParameter_visible", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x5df04ce71509adf4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/6768994795311967732");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("visible");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_CanBeAChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_CanBeAChild", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11817c381baL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1202989531578");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_CanBeAParent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_CanBeAParent", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x1181873ed50L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1203001093456");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_CanBeARoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_CanBeARoot", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11db3f6ffbbL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1227084988347");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_CanBeAnAncestor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_CanBeAnAncestor", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x6d03b53f575b9685L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/7855321458717464197");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_GetAlternativeIcon() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_GetAlternativeIcon", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x341b038f9307e5cfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/3754598629525415375");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_GetInstanceIcon() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_GetInstanceIcon", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x13cd31e62ef65a72L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1426851521646451314");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_PropertyGetter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_PropertyGetter", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a68f861L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1147467790433");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("getter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_PropertySetter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_PropertySetter", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10c71c4f329L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1152959968041");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("setter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_PropertyValidator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_PropertyValidator", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11a369c051fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1212096972063");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("validator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_RefSetHandlerKeepsReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_RefSetHandlerKeepsReference", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x44df12c18fcb2300L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/4962705936936018688");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("keeps reference");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSearchScope_AbstractBase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSearchScope_AbstractBase", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d516b4L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1148934493876");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSearchScope_Factory() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSearchScope_Factory", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b72e99b73L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d516b4L);
    b.parent(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1148684180339");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("search scope (deprecated)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSearchScope_Presentation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSearchScope_Presentation", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x36367902116a44c1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d516b4L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/3906442776579556545");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("search scope item presentation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSearchScope_Scope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSearchScope_Scope", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x4ec772c80d1cb34bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d516b4L);
    b.parent(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/5676632058862809931");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("reference scope");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSearchScope_Validator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSearchScope_Validator", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x30502bd604b2430aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b81d516b4L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/3481330710159180554");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("reference validity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintFunction_ReferentSetHandler() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintFunction_ReferentSetHandler", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10ed4250f82L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1163200368514");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("'referent set' event handler");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintsFunctionParameter_node() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintsFunctionParameter_node", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a71bcdcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1147468365020");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintsFunctionParameter_propertyValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "ConstraintsFunctionParameter_propertyValue", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10c7c69f5aeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1153138554286");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("propertyValue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInheritedNodeScopeFactory() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "InheritedNodeScopeFactory", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73b2L);
    b.class_(false, false, false);
    b.parent(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/8401916545537438642");
    b.associate("kind", 0x74999a95393c73b3L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(false).origin("8401916545537438643").done();
    b.alias("inherited");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeDefaultSearchScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "NodeDefaultSearchScope", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10dead47852L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1159285995602");
    b.prop("description", 0x10dead60cf2L, "1159286099186");
    b.aggregate("searchScopeFactory", 0x10dead647b3L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL).optional(false).ordered(true).multiple(false).origin("1159286114227").done();
    b.aggregate("validator", 0x30502bd604b257c2L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x30502bd604b2430aL).optional(true).ordered(true).multiple(false).origin("3481330710159185858").done();
    b.aggregate("presentation", 0x36367902116b5f22L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x36367902116a44c1L).optional(true).ordered(true).multiple(false).origin("3906442776579628834").done();
    b.alias("default search scope");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodePropertyConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "NodePropertyConstraint", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a5eaa48L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1147467115080");
    b.associate("applicableProperty", 0x10b2a61697bL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL).optional(false).origin("1147467295099").done();
    b.aggregate("propertyGetter", 0x10b2a75c8ccL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a68f861L).optional(true).ordered(true).multiple(false).origin("1147468630220").done();
    b.aggregate("propertySetter", 0x10c71f4acb5L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10c71c4f329L).optional(true).ordered(true).multiple(false).origin("1152963095733").done();
    b.aggregate("propertyValidator", 0x11a36a3ca53L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x11a369c051fL).optional(true).ordered(true).multiple(false).origin("1212097481299").done();
    b.alias("property {<{applicableProperty}>}");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeReferentConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "NodeReferentConstraint", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b731752daL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/1148687176410");
    b.associate("applicableLink", 0x10b7317b98aL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL).optional(false).origin("1148687202698").done();
    b.aggregate("searchScopeFactory", 0x10b7319e797L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL).optional(true).ordered(true).multiple(false).origin("1148687345559").done();
    b.aggregate("validator", 0x30502bd604b5fe45L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x30502bd604b2430aL).optional(true).ordered(true).multiple(false).origin("3481330710159425093").done();
    b.aggregate("presentation", 0x36367902116a44c4L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x36367902116a44c1L).optional(true).ordered(true).multiple(false).origin("3906442776579556548").done();
    b.aggregate("referentSetHandler", 0x10ed4593a89L).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10ed4250f82L).optional(true).ordered(true).multiple(false).origin("1163203787401").done();
    b.aggregate("keepsReference", 0x7a8b97cf0435231fL).target(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x44df12c18fcb2300L).optional(true).ordered(true).multiple(false).origin("8830318409774605087").done();
    b.alias("link {<{applicableLink}>}");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeScopeFactory() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.constraints", "NodeScopeFactory", 0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x74999a95393c73aaL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c8959030d(jetbrains.mps.lang.constraints.structure)/8401916545537438634");
    return b.create();
  }
}
