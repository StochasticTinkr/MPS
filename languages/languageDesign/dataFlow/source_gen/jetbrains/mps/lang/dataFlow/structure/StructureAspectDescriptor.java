package jetbrains.mps.lang.dataFlow.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(34);
  /*package*/ final ConceptDescriptor myConceptAfterPosition = createDescriptorForAfterPosition();
  /*package*/ final ConceptDescriptor myConceptBaseEmitJumpStatement = createDescriptorForBaseEmitJumpStatement();
  /*package*/ final ConceptDescriptor myConceptBaseEmitVariableStatement = createDescriptorForBaseEmitVariableStatement();
  /*package*/ final ConceptDescriptor myConceptBaseInstructionOperation = createDescriptorForBaseInstructionOperation();
  /*package*/ final ConceptDescriptor myConceptBeforePosition = createDescriptorForBeforePosition();
  /*package*/ final ConceptDescriptor myConceptBooleanInstructionOperation = createDescriptorForBooleanInstructionOperation();
  /*package*/ final ConceptDescriptor myConceptBuilderBlock = createDescriptorForBuilderBlock();
  /*package*/ final ConceptDescriptor myConceptDataFlowBuilderDeclaration = createDescriptorForDataFlowBuilderDeclaration();
  /*package*/ final ConceptDescriptor myConceptEmitCodeForStatement = createDescriptorForEmitCodeForStatement();
  /*package*/ final ConceptDescriptor myConceptEmitIfJumpStatement = createDescriptorForEmitIfJumpStatement();
  /*package*/ final ConceptDescriptor myConceptEmitJumpStatement = createDescriptorForEmitJumpStatement();
  /*package*/ final ConceptDescriptor myConceptEmitLabelStatement = createDescriptorForEmitLabelStatement();
  /*package*/ final ConceptDescriptor myConceptEmitMayBeUnreachable = createDescriptorForEmitMayBeUnreachable();
  /*package*/ final ConceptDescriptor myConceptEmitNopStatement = createDescriptorForEmitNopStatement();
  /*package*/ final ConceptDescriptor myConceptEmitReadStatement = createDescriptorForEmitReadStatement();
  /*package*/ final ConceptDescriptor myConceptEmitRetStatement = createDescriptorForEmitRetStatement();
  /*package*/ final ConceptDescriptor myConceptEmitStatement = createDescriptorForEmitStatement();
  /*package*/ final ConceptDescriptor myConceptEmitTryFinallyStatement = createDescriptorForEmitTryFinallyStatement();
  /*package*/ final ConceptDescriptor myConceptEmitWriteStatement = createDescriptorForEmitWriteStatement();
  /*package*/ final ConceptDescriptor myConceptGetCodeForExpression = createDescriptorForGetCodeForExpression();
  /*package*/ final ConceptDescriptor myConceptIBuilderMode = createDescriptorForIBuilderMode();
  /*package*/ final ConceptDescriptor myConceptInsertAfter = createDescriptorForInsertAfter();
  /*package*/ final ConceptDescriptor myConceptInsertBefore = createDescriptorForInsertBefore();
  /*package*/ final ConceptDescriptor myConceptInsertPosition = createDescriptorForInsertPosition();
  /*package*/ final ConceptDescriptor myConceptInstructionGetSourceOperation = createDescriptorForInstructionGetSourceOperation();
  /*package*/ final ConceptDescriptor myConceptInstructionIsJump = createDescriptorForInstructionIsJump();
  /*package*/ final ConceptDescriptor myConceptInstructionIsNop = createDescriptorForInstructionIsNop();
  /*package*/ final ConceptDescriptor myConceptInstructionIsRet = createDescriptorForInstructionIsRet();
  /*package*/ final ConceptDescriptor myConceptInstructionType = createDescriptorForInstructionType();
  /*package*/ final ConceptDescriptor myConceptIntraProcedural_BuilderMode = createDescriptorForIntraProcedural_BuilderMode();
  /*package*/ final ConceptDescriptor myConceptLabelPosition = createDescriptorForLabelPosition();
  /*package*/ final ConceptDescriptor myConceptNodeParameter = createDescriptorForNodeParameter();
  /*package*/ final ConceptDescriptor myConceptPosition = createDescriptorForPosition();
  /*package*/ final ConceptDescriptor myConceptRelativePosition = createDescriptorForRelativePosition();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAfterPosition.getId(), 0);
    myIndexMap.put(myConceptBaseEmitJumpStatement.getId(), 1);
    myIndexMap.put(myConceptBaseEmitVariableStatement.getId(), 2);
    myIndexMap.put(myConceptBaseInstructionOperation.getId(), 3);
    myIndexMap.put(myConceptBeforePosition.getId(), 4);
    myIndexMap.put(myConceptBooleanInstructionOperation.getId(), 5);
    myIndexMap.put(myConceptBuilderBlock.getId(), 6);
    myIndexMap.put(myConceptDataFlowBuilderDeclaration.getId(), 7);
    myIndexMap.put(myConceptEmitCodeForStatement.getId(), 8);
    myIndexMap.put(myConceptEmitIfJumpStatement.getId(), 9);
    myIndexMap.put(myConceptEmitJumpStatement.getId(), 10);
    myIndexMap.put(myConceptEmitLabelStatement.getId(), 11);
    myIndexMap.put(myConceptEmitMayBeUnreachable.getId(), 12);
    myIndexMap.put(myConceptEmitNopStatement.getId(), 13);
    myIndexMap.put(myConceptEmitReadStatement.getId(), 14);
    myIndexMap.put(myConceptEmitRetStatement.getId(), 15);
    myIndexMap.put(myConceptEmitStatement.getId(), 16);
    myIndexMap.put(myConceptEmitTryFinallyStatement.getId(), 17);
    myIndexMap.put(myConceptEmitWriteStatement.getId(), 18);
    myIndexMap.put(myConceptGetCodeForExpression.getId(), 19);
    myIndexMap.put(myConceptIBuilderMode.getId(), 20);
    myIndexMap.put(myConceptInsertAfter.getId(), 21);
    myIndexMap.put(myConceptInsertBefore.getId(), 22);
    myIndexMap.put(myConceptInsertPosition.getId(), 23);
    myIndexMap.put(myConceptInstructionGetSourceOperation.getId(), 24);
    myIndexMap.put(myConceptInstructionIsJump.getId(), 25);
    myIndexMap.put(myConceptInstructionIsNop.getId(), 26);
    myIndexMap.put(myConceptInstructionIsRet.getId(), 27);
    myIndexMap.put(myConceptInstructionType.getId(), 28);
    myIndexMap.put(myConceptIntraProcedural_BuilderMode.getId(), 29);
    myIndexMap.put(myConceptLabelPosition.getId(), 30);
    myIndexMap.put(myConceptNodeParameter.getId(), 31);
    myIndexMap.put(myConceptPosition.getId(), 32);
    myIndexMap.put(myConceptRelativePosition.getId(), 33);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAfterPosition, myConceptBaseEmitJumpStatement, myConceptBaseEmitVariableStatement, myConceptBaseInstructionOperation, myConceptBeforePosition, myConceptBooleanInstructionOperation, myConceptBuilderBlock, myConceptDataFlowBuilderDeclaration, myConceptEmitCodeForStatement, myConceptEmitIfJumpStatement, myConceptEmitJumpStatement, myConceptEmitLabelStatement, myConceptEmitMayBeUnreachable, myConceptEmitNopStatement, myConceptEmitReadStatement, myConceptEmitRetStatement, myConceptEmitStatement, myConceptEmitTryFinallyStatement, myConceptEmitWriteStatement, myConceptGetCodeForExpression, myConceptIBuilderMode, myConceptInsertAfter, myConceptInsertBefore, myConceptInsertPosition, myConceptInstructionGetSourceOperation, myConceptInstructionIsJump, myConceptInstructionIsNop, myConceptInstructionIsRet, myConceptInstructionType, myConceptIntraProcedural_BuilderMode, myConceptLabelPosition, myConceptNodeParameter, myConceptPosition, myConceptRelativePosition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAfterPosition;
      case 1:
        return myConceptBaseEmitJumpStatement;
      case 2:
        return myConceptBaseEmitVariableStatement;
      case 3:
        return myConceptBaseInstructionOperation;
      case 4:
        return myConceptBeforePosition;
      case 5:
        return myConceptBooleanInstructionOperation;
      case 6:
        return myConceptBuilderBlock;
      case 7:
        return myConceptDataFlowBuilderDeclaration;
      case 8:
        return myConceptEmitCodeForStatement;
      case 9:
        return myConceptEmitIfJumpStatement;
      case 10:
        return myConceptEmitJumpStatement;
      case 11:
        return myConceptEmitLabelStatement;
      case 12:
        return myConceptEmitMayBeUnreachable;
      case 13:
        return myConceptEmitNopStatement;
      case 14:
        return myConceptEmitReadStatement;
      case 15:
        return myConceptEmitRetStatement;
      case 16:
        return myConceptEmitStatement;
      case 17:
        return myConceptEmitTryFinallyStatement;
      case 18:
        return myConceptEmitWriteStatement;
      case 19:
        return myConceptGetCodeForExpression;
      case 20:
        return myConceptIBuilderMode;
      case 21:
        return myConceptInsertAfter;
      case 22:
        return myConceptInsertBefore;
      case 23:
        return myConceptInsertPosition;
      case 24:
        return myConceptInstructionGetSourceOperation;
      case 25:
        return myConceptInstructionIsJump;
      case 26:
        return myConceptInstructionIsNop;
      case 27:
        return myConceptInstructionIsRet;
      case 28:
        return myConceptInstructionType;
      case 29:
        return myConceptIntraProcedural_BuilderMode;
      case 30:
        return myConceptLabelPosition;
      case 31:
        return myConceptNodeParameter;
      case 32:
        return myConceptPosition;
      case 33:
        return myConceptRelativePosition;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAfterPosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.AfterPosition", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bb091aL)).super_("jetbrains.mps.lang.dataFlow.structure.RelativePosition").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b86667L)).parents("jetbrains.mps.lang.dataFlow.structure.RelativePosition").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b86667L)).alias("after", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206445082906")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseEmitJumpStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bc8a99L)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118e5bcba84L, "jumpTo", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L), false, false, false)).children(new String[]{"jumpTo"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206445181593")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseEmitVariableStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b40208L)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118e5b41f27L, "variable", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"variable"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206444622344")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseInstructionOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb65L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1823319949748058981")).create();
  }
  private static ConceptDescriptor createDescriptorForBeforePosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BeforePosition", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bad3a1L)).super_("jetbrains.mps.lang.dataFlow.structure.RelativePosition").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b86667L)).parents("jetbrains.mps.lang.dataFlow.structure.RelativePosition").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b86667L)).alias("before", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206445069217")).create();
  }
  private static ConceptDescriptor createDescriptorForBooleanInstructionOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).super_("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb65L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb65L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "7180022869589052771")).create();
  }
  private static ConceptDescriptor createDescriptorForBuilderBlock() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.BuilderBlock", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5960f51L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206442659665")).create();
  }
  private static ConceptDescriptor createDescriptorForDataFlowBuilderDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e58cd635L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.structure.structure.IConceptAspect", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x118e58d76a0L, "conceptDeclaration", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), false)).references("conceptDeclaration").childDescriptors(new ConceptDescriptorBuilder.Link(0x118e59865a7L, "builderBlock", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5960f51L), false, false, false), new ConceptDescriptorBuilder.Link(0x6e8db6877fd04efbL, "modes", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x6e8db6877fc9fed4L), true, true, false)).children(new String[]{"builderBlock", "modes"}, new boolean[]{false, true}).rootable().alias("Data Flow Builder", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206442055221")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitCodeForStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitCodeForStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e643e7efL)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118e6444eb9L, "codeFor", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"codeFor"}, new boolean[]{false}).alias("code for", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206454052847")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitIfJumpStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitIfJumpStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5be47c5L)).super_("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bc8a99L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bc8a99L)).alias("ifjump", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206445295557")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitJumpStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitJumpStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5be8165L)).super_("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bc8a99L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5bc8a99L)).alias("jump", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206445310309")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitLabelStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitLabelStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x1190a87adadL)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).alias("label", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1207062474157")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitMayBeUnreachable() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitMayBeUnreachable", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118eb0b6674L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.structure.Closureoid").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1192e7dfdd1L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118eb0b872cL, "emitStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L), false, false, false)).children(new String[]{"emitStatement"}, new boolean[]{false}).alias("{ <emit> }", "emit maybe unreachable command").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206534235764")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitNopStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitNopStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a554f4L)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).alias("nop", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206443660532")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitReadStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitReadStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a7d02aL)).super_("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b40208L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b40208L)).alias("read", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206443823146")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitRetStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitRetStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e6ca4377L)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).alias("ret", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206462858103")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1160a375bea5106L, "position", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L), true, false, false)).children(new String[]{"position"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206443583064")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitTryFinallyStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitTryFinallyStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x119043714f5L)).super_("jetbrains.mps.lang.dataFlow.structure.EmitStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).parents("jetbrains.mps.lang.dataFlow.structure.EmitStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5a42658L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11904378e28L, "tryPart", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false), new ConceptDescriptorBuilder.Link(0x1190437aab4L, "finallyPart", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"tryPart", "finallyPart"}, new boolean[]{false, false}).alias("try", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206956528885")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitWriteStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.EmitWriteStatement", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5afd8deL)).super_("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b40208L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b40208L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11e7d9f7c3bL, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"value"}, new boolean[]{false}).alias("write", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206444349662")).create();
  }
  private static ConceptDescriptor createDescriptorForGetCodeForExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.GetCodeForExpression", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x2912c3e08c4f3324L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2912c3e08c4f3325L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("get code for", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "2959643274329928484")).create();
  }
  private static ConceptDescriptor createDescriptorForIBuilderMode() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.IBuilderMode", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x6e8db6877fc9fed4L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "7966224008969060052")).create();
  }
  private static ConceptDescriptor createDescriptorForInsertAfter() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InsertAfter", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e662L)).super_("jetbrains.mps.lang.dataFlow.structure.InsertPosition").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L)).parents("jetbrains.mps.lang.dataFlow.structure.InsertPosition").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L)).alias("after", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "8486807419021026914")).create();
  }
  private static ConceptDescriptor createDescriptorForInsertBefore() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InsertBefore", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e664L)).super_("jetbrains.mps.lang.dataFlow.structure.InsertPosition").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L)).parents("jetbrains.mps.lang.dataFlow.structure.InsertPosition").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L)).alias("before", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "8486807419021026916")).create();
  }
  private static ConceptDescriptor createDescriptorForInsertPosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InsertPosition", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x75c73261efe5e666L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x75c73261efe5e689L, "instruction", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"instruction"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "8486807419021026918")).create();
  }
  private static ConceptDescriptor createDescriptorForInstructionGetSourceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InstructionGetSourceOperation", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb64L)).super_("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb65L)).parents("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x194dbbd57c9dbb65L)).alias("getSource", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1823319949748058980")).create();
  }
  private static ConceptDescriptor createDescriptorForInstructionIsJump() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InstructionIsJump", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x797fabdf814e7af5L)).super_("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).parents("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).alias("isJump", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "8754905177066994421")).create();
  }
  private static ConceptDescriptor createDescriptorForInstructionIsNop() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InstructionIsNop", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d5cL)).super_("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).parents("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).alias("isNop", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "7180022869589052764")).create();
  }
  private static ConceptDescriptor createDescriptorForInstructionIsRet() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InstructionIsRet", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d5dL)).super_("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).parents("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x63a490c22d094d63L)).alias("isRet", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "7180022869589052765")).create();
  }
  private static ConceptDescriptor createDescriptorForInstructionType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.InstructionType", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x44f5e79f9e613080L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("instruction", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "4969132436616196224")).create();
  }
  private static ConceptDescriptor createDescriptorForIntraProcedural_BuilderMode() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.IntraProcedural_BuilderMode", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x6e8db6877fc9fed5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.dataFlow.structure.IBuilderMode").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x6e8db6877fc9fed4L)).alias("intra-procedural", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "7966224008969060053")).create();
  }
  private static ConceptDescriptor createDescriptorForLabelPosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.LabelPosition", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x1190a8b1526L)).super_("jetbrains.mps.lang.dataFlow.structure.Position").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L)).parents("jetbrains.mps.lang.dataFlow.structure.Position").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1190a8b2ed8L, "label", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x1190a87adadL), false)).references("label").alias("after label", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1207062697254")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeParameter() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.NodeParameter", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e597667fL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("node", "node to build DFA for").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206442747519")).create();
  }
  private static ConceptDescriptor createDescriptorForPosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.Position", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206444875712")).create();
  }
  private static ConceptDescriptor createDescriptorForRelativePosition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.dataFlow.structure.RelativePosition", MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b86667L)).super_("jetbrains.mps.lang.dataFlow.structure.Position").version(1).super_(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L)).parents("jetbrains.mps.lang.dataFlow.structure.Position").parentIds(MetaIdFactory.conceptId(0x7fa12e9cb9494976L, 0xb4fa19accbc320b4L, 0x118e5b7dfc0L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118e5b89bc2L, "relativeTo", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"relativeTo"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)", "1206444910183")).create();
  }
}
