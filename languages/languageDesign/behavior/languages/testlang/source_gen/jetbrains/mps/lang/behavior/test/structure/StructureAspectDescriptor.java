package jetbrains.mps.lang.behavior.test.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(4);
  /*package*/ final ConceptDescriptor myConceptA = createDescriptorForA();
  /*package*/ final ConceptDescriptor myConceptB = createDescriptorForB();
  /*package*/ final ConceptDescriptor myConceptC = createDescriptorForC();
  /*package*/ final ConceptDescriptor myConceptI = createDescriptorForI();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptA.getId(), 0);
    myIndexMap.put(myConceptB.getId(), 1);
    myIndexMap.put(myConceptC.getId(), 2);
    myIndexMap.put(myConceptI.getId(), 3);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptA, myConceptB, myConceptC, myConceptI);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptA;
      case 1:
        return myConceptB;
      case 2:
        return myConceptC;
      case 3:
        return myConceptI;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForA() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior.test", "A", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e5b2aL);
    b.class_(false, false, false);
    b.origin("r:2031ed21-5d78-4758-831e-aa590362bfba(jetbrains.mps.lang.behavior.test.structure)/4731970554577181482");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForB() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior.test", "B", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e5b5eL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.lang.behavior.test.structure.A", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e5b2aL);
    b.origin("r:2031ed21-5d78-4758-831e-aa590362bfba(jetbrains.mps.lang.behavior.test.structure)/4731970554577181534");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForC() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior.test", "C", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e6873L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.behavior.test.structure.B", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e5b5eL);
    b.parent(0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e6814L);
    b.origin("r:2031ed21-5d78-4758-831e-aa590362bfba(jetbrains.mps.lang.behavior.test.structure)/4731970554577184883");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForI() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior.test", "I", 0xa18fb831fb54541L, 0x97c9a13312451954L, 0x41ab5625f92e6814L);
    b.interface_();
    b.origin("r:2031ed21-5d78-4758-831e-aa590362bfba(jetbrains.mps.lang.behavior.test.structure)/4731970554577184788");
    return b.create();
  }
}
