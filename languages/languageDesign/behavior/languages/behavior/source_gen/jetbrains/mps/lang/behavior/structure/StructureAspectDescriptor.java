package jetbrains.mps.lang.behavior.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptConceptBehavior = createDescriptorForConceptBehavior();
  /*package*/ final ConceptDescriptor myConceptConceptConstructorDeclaration = createDescriptorForConceptConstructorDeclaration();
  /*package*/ final ConceptDescriptor myConceptConceptMethodDeclaration = createDescriptorForConceptMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptInternalConceptDeclarationReference = createDescriptorForInternalConceptDeclarationReference();
  /*package*/ final ConceptDescriptor myConceptInternalConceptDeclarationsHolder = createDescriptorForInternalConceptDeclarationsHolder();
  /*package*/ final ConceptDescriptor myConceptLocalBehaviorMethodCall = createDescriptorForLocalBehaviorMethodCall();
  /*package*/ final ConceptDescriptor myConceptSuperConceptExpression = createDescriptorForSuperConceptExpression();
  /*package*/ final ConceptDescriptor myConceptSuperExpression = createDescriptorForSuperExpression();
  /*package*/ final ConceptDescriptor myConceptSuperNodeExpression = createDescriptorForSuperNodeExpression();
  /*package*/ final ConceptDescriptor myConceptThisConceptExpression = createDescriptorForThisConceptExpression();
  /*package*/ final ConceptDescriptor myConceptThisNodeExpression = createDescriptorForThisNodeExpression();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConceptBehavior, myConceptConceptConstructorDeclaration, myConceptConceptMethodDeclaration, myConceptInternalConceptDeclarationReference, myConceptInternalConceptDeclarationsHolder, myConceptLocalBehaviorMethodCall, myConceptSuperConceptExpression, myConceptSuperExpression, myConceptSuperNodeExpression, myConceptThisConceptExpression, myConceptThisNodeExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.ConceptBehavior:
        return myConceptConceptBehavior;
      case LanguageConceptSwitch.ConceptConstructorDeclaration:
        return myConceptConceptConstructorDeclaration;
      case LanguageConceptSwitch.ConceptMethodDeclaration:
        return myConceptConceptMethodDeclaration;
      case LanguageConceptSwitch.InternalConceptDeclarationReference:
        return myConceptInternalConceptDeclarationReference;
      case LanguageConceptSwitch.InternalConceptDeclarationsHolder:
        return myConceptInternalConceptDeclarationsHolder;
      case LanguageConceptSwitch.LocalBehaviorMethodCall:
        return myConceptLocalBehaviorMethodCall;
      case LanguageConceptSwitch.SuperConceptExpression:
        return myConceptSuperConceptExpression;
      case LanguageConceptSwitch.SuperExpression:
        return myConceptSuperExpression;
      case LanguageConceptSwitch.SuperNodeExpression:
        return myConceptSuperNodeExpression;
      case LanguageConceptSwitch.ThisConceptExpression:
        return myConceptThisConceptExpression;
      case LanguageConceptSwitch.ThisNodeExpression:
        return myConceptThisNodeExpression;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForConceptBehavior() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "ConceptBehavior", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11638b31955L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c60bb0a14L);
    b.parent(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1225194240794");
    b.associate("concept", 0x11d43447b1fL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(true).origin("1225194240799").done();
    b.aggregate("constructor", 0x11d43447b21L).target(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43471eedL).optional(false).ordered(true).multiple(false).origin("1225194240801").done();
    b.aggregate("method", 0x11d43447b25L).target(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL).optional(true).ordered(true).multiple(true).origin("1225194240805").done();
    b.alias("Concept Behavior");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptConstructorDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "ConceptConstructorDeclaration", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43471eedL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1225194413805");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "ConceptMethodDeclaration", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1225194472830");
    b.prop("isVirtual", 0x11d43480580L, "1225194472832");
    b.prop("isPrivate", 0x11d43480581L, "1225194472833");
    b.prop("isAbstract", 0x11d43480582L, "1225194472834");
    b.prop("isStatic", 0x51613f7fe129b24dL, "5864038008284099149");
    b.associate("overriddenMethod", 0x11d4348057fL).target(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL).optional(true).origin("1225194472831").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInternalConceptDeclarationReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "InternalConceptDeclarationReference", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x8fa3b96a509fe09L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/646895014681116169");
    b.associate("concept", 0x8fa3b96a509fe0aL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(false).origin("646895014681116170").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInternalConceptDeclarationsHolder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "InternalConceptDeclarationsHolder", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x8fa3b96a509fe0bL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/646895014681116171");
    b.aggregate("concept", 0x8fa3b96a509fe0cL).target(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x8fa3b96a509fe09L).optional(true).ordered(true).multiple(true).origin("646895014681116172").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalBehaviorMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "LocalBehaviorMethodCall", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x5a277db47d54d7e1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/6496299201655527393");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperConceptExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "SuperConceptExpression", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x69a9d7dcb057a7a7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x25076477397f04e3L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/7613853987897845671");
    b.associate("superConcept", 0x69a9d7dcb057a7a8L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(true).origin("7613853987897845672").done();
    b.alias("super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "SuperExpression", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x25076477397f04e3L);
    b.interface_();
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/2668211767468819683");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperNodeExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "SuperNodeExpression", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d434a6558L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x25076477397f04e3L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1225194628440");
    b.associate("superConcept", 0x498a2c3387127040L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL).optional(true).origin("5299096511375896640").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThisConceptExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "ThisConceptExpression", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x17a53cfe586da642L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d206f8d91L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1703835097132541506");
    b.alias("this");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThisNodeExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.behavior", "ThisNodeExpression", 0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d434b5be1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d206f8d91L);
    b.origin("r:3270011d-8b2d-4938-8dff-d256a759e017(jetbrains.mps.lang.behavior.structure)/1225194691553");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("this");
    return b.create();
  }
}
