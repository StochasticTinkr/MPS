package jetbrains.mps.lang.behavior.findUsages;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.C3StarMethodResolutionOrder;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import java.util.Collections;
import java.util.ArrayList;

public final class ConceptMRO extends C3StarMethodResolutionOrder<AbstractConceptWrap> {
  private static final ConceptWrap BASECONCEPT_WRAP = new ConceptWrap(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1133920641626"));

  @NotNull
  @Override
  protected List<AbstractConceptWrap> calcLinearization0(@NotNull AbstractConceptWrap concept) {
    if (concept.equals(BASECONCEPT_WRAP)) {
      return Collections.<AbstractConceptWrap>singletonList(BASECONCEPT_WRAP);
    }
    List<AbstractConceptWrap> result = new ArrayList<AbstractConceptWrap>(super.calcLinearization0(concept));
    assert result.size() > 0;
    if (result.get(result.size() - 1).equals(BASECONCEPT_WRAP)) {
      return result;
    }
    result.add(BASECONCEPT_WRAP);
    return Collections.unmodifiableList(result);
  }
}
