package jetbrains.mps.lang.behavior.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModuleOperations;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.behavior.generator.template.util.Constants;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.behavior.behavior.ConceptMethodDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.behavior.behavior.ConceptBehavior__BehaviorDescriptor;
import jetbrains.mps.lang.behavior.generator.template.util.MethodNameHelper;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.SDefaultConstructorImpl;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.behavior.ExpressionStatement__BehaviorDescriptor;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor;
import jetbrains.mps.generator.template.TemplateArgumentContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.TemplateVarContext;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.smodel.adapter.ids.MetaIdByDeclaration;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.CreateRootCondition;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import jetbrains.mps.generator.impl.query.VariableValueQuery;
import jetbrains.mps.generator.impl.query.CallArgumentQuery;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean createRootRule_Condition_4881419546810727153(final CreateRootRuleContext _context) {
    // see MPS-24613 
    return SModuleOperations.isAspect(_context.getOriginalInputModel(), "behavior");
  }
  public static boolean baseMappingRule_Condition_4698411099515225497(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType"));
  }
  public static boolean baseMappingRule_Condition_1570228009929814973(final BaseMappingRuleContext _context) {
    // see MPS-24613 
    return SModuleOperations.isAspect(((SModel) _context.getVariable("model")), "behavior");
  }
  public static Object propertyMacro_GetPropertyValue_5630687994792687407(final PropertyMacroContext _context) {
    return "my" + SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b1fL, "concept")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + Constants.BEHAVIOR_DESCRIPTOR_SUFFIX;
  }
  public static Object propertyMacro_GetPropertyValue_8228699960986687947(final PropertyMacroContext _context) {
    SNode behavior = ConceptMethodDeclaration__BehaviorDescriptor.getBehaviour_idhP3pnNF.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration")));
    return ConceptBehavior__BehaviorDescriptor.getBehaviorFqName_id66HNO1XTVFW.invoke(behavior);
  }
  public static Object propertyMacro_GetPropertyValue_8228699960986694365(final PropertyMacroContext _context) {
    return new MethodNameHelper(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration"))).getGeneratedString();
  }
  public static Object propertyMacro_GetPropertyValue_3176885412940615083(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_2386721254951957139(final PropertyMacroContext _context) {
    int mask = 0;
    if (SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d43480580L, "isVirtual")) || SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d4348057fL, "overriddenMethod")) != null) {
      mask |= SModifiersImpl.VIRTUAL;
    }
    if (SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic"))) {
      mask |= SModifiersImpl.STATIC;
    }
    if (SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x113294bffd2L, "isFinal"))) {
      mask |= SModifiersImpl.FINAL;
    }
    if (SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d43480582L, "isAbstract"))) {
      mask |= SModifiersImpl.ABSTRACT;
    }
    return mask;
  }
  public static Object propertyMacro_GetPropertyValue_5216932936550453175(final PropertyMacroContext _context) {
    return new MethodNameHelper(_context.getNode()).getGeneratedId();
  }
  public static Object propertyMacro_GetPropertyValue_3176885412940615260(final PropertyMacroContext _context) {
    return new MethodNameHelper(_context.getNode()).getGeneratedString();
  }
  public static Object propertyMacro_GetPropertyValue_2284925377906277771(final PropertyMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object propertyMacro_GetPropertyValue_1843690775058914308(final PropertyMacroContext _context) {
    return SDefaultConstructorImpl.DEFAULT_CONSTRUCTOR_NAME;
  }
  public static Object propertyMacro_GetPropertyValue_1843690775058968431(final PropertyMacroContext _context) {
    return new MethodNameHelper(_context.getNode()).getGeneratedString();
  }
  public static Object propertyMacro_GetPropertyValue_2284925377906207038(final PropertyMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object propertyMacro_GetPropertyValue_6862765979525214162(final PropertyMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static Object propertyMacro_GetPropertyValue_5387335678452459856(final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, "isFinal"));
  }
  public static Object propertyMacro_GetPropertyValue_7977232384686911568(final PropertyMacroContext _context) {
    return ((Integer) _context.getVariable("cv:methodCounter"));
  }
  public static Object propertyMacro_GetPropertyValue_6862765979524954352(final PropertyMacroContext _context) {
    return ((Integer) _context.getVariable("cv:methodCounter"));
  }
  public static Object propertyMacro_GetPropertyValue_1971977265034502291(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b1fL, "concept")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + Constants.BEHAVIOR_DESCRIPTOR_SUFFIX;
  }
  public static Object propertyMacro_GetPropertyValue_4279359955659612536(final PropertyMacroContext _context) {
    return ((Integer) _context.getVariable("cv:parameterCounter"));
  }
  public static Object propertyMacro_GetPropertyValue_4279359955659731444(final PropertyMacroContext _context) {
    return ((Integer) _context.getVariable("cv:parameterCounter"));
  }
  public static Object referenceMacro_GetReferent_6862765979525543740(final ReferenceMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_5722502787474238079(final ReferenceMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_5722502787474198307(final ReferenceMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_5722502787474200239(final ReferenceMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_8560627202334867188(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "BHClassConstructor");
  }
  public static Object referenceMacro_GetReferent_7600007869448722164(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "BHDescriptorField");
  }
  public static Object referenceMacro_GetReferent_6551427688186219815(final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b1fL, "concept"));
  }
  public static Object referenceMacro_GetReferent_8228699960984014812(final ReferenceMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_6862765979525357276(final ReferenceMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_7043879193973092538(final ReferenceMacroContext _context) {
    return Constants.THIS_NODE_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_517651233894479655(final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"));
  }
  public static Object referenceMacro_GetReferent_4006517209906256417(final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b1fL, "concept"));
  }
  public static Object referenceMacro_GetReferent_2386721254951859760(final ReferenceMacroContext _context) {
    SNode visibility = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility"));
    if (SNodeOperations.isInstanceOf(visibility, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af9586f0cL, "jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
      return "PRIVATE";
    }
    if (SNodeOperations.isInstanceOf(visibility, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af958b686L, "jetbrains.mps.baseLanguage.structure.ProtectedVisibility"))) {
      return "PROTECTED";
    }
    if (SNodeOperations.isInstanceOf(visibility, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af9581ff1L, "jetbrains.mps.baseLanguage.structure.PublicVisibility"))) {
      return "PUBLIC";
    }
    return "PACKAGE";
  }
  public static Object referenceMacro_GetReferent_737333977598577049(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "BHMethodInDescriptor");
  }
  public static Object referenceMacro_GetReferent_391057745364430042(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "BHMethodImpl");
  }
  public static Object referenceMacro_GetReferent_1703835097132705990(final ReferenceMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static Object referenceMacro_GetReferent_7613853987897925128(final ReferenceMacroContext _context) {
    return Constants.THIS_CONCEPT_VARIABLE_NAME;
  }
  public static boolean ifMacro_Condition_5722502787474237113(final IfMacroContext _context) {
    SNode enclosingMethod = SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration"), false, false);
    return enclosingMethod != null && SPropertyOperations.getBoolean(enclosingMethod, MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic"));
  }
  public static boolean ifMacro_Condition_5722502787474197944(final IfMacroContext _context) {
    SNode enclosingMethod = SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration"), false, false);
    return (enclosingMethod != null) && SPropertyOperations.getBoolean(enclosingMethod, MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic"));
  }
  public static boolean ifMacro_Condition_6133874814783379358(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration")), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic")));
  }
  public static boolean ifMacro_Condition_7977232384686803991(final IfMacroContext _context) {
    SNode enclosingMethod = SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration"), false, false);
    return ((enclosingMethod != null) && SPropertyOperations.getBoolean(enclosingMethod, MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic")));
  }
  public static boolean ifMacro_Condition_360045928603427134(final IfMacroContext _context) {
    int index = ((Integer) _context.getVariable("cv:argCounter"));
    SNode declaration = ((SNode) _context.getVariable("var:methodDeclaration"));
    if (((Integer) _context.getVariable("cv:argCounter")) >= ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).count()) {
      index = ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).count() - 1;
    }
    SNode parameter = ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).getElement(index);
    SNode type = SLinkOperations.getTarget(parameter, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
    if (SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType"))) {
      type = SLinkOperations.getTarget(SNodeOperations.cast(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, 0x11c08f5f38cL, "componentType"));
    }
    return !(SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L, "jetbrains.mps.baseLanguage.structure.PrimitiveType")));
  }
  public static boolean ifMacro_Condition_908783277635035779(final IfMacroContext _context) {
    return !(((SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility")) != null) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af9586f0cL, "jetbrains.mps.baseLanguage.structure.PrivateVisibility"))));
  }
  public static boolean ifMacro_Condition_8228699960984187042(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic")));
  }
  public static boolean ifMacro_Condition_7977232384686911617(final IfMacroContext _context) {
    return !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType")));
  }
  public static boolean ifMacro_Condition_7977232384686911670(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType"));
  }
  public static boolean ifMacro_Condition_7977232384686911687(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d43480582L, "isAbstract"))) && !(SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic")));
  }
  public static boolean ifMacro_Condition_6862765979524954409(final IfMacroContext _context) {
    return !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType")));
  }
  public static boolean ifMacro_Condition_6862765979524954470(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType"));
  }
  public static boolean ifMacro_Condition_6862765979524954487(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d43480582L, "isAbstract"))) && SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic"));
  }
  public static boolean ifMacro_Condition_391057745364429981(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x51613f7fe129b24dL, "isStatic")));
  }
  public static boolean ifMacro_Condition_4279359955659716962(final IfMacroContext _context) {
    SNode type = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
    return type != null && SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L, "jetbrains.mps.baseLanguage.structure.PrimitiveType")) && !(SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType")));
  }
  public static boolean ifMacro_Condition_4598718932037160741(final IfMacroContext _context) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, "jetbrains.mps.baseLanguage.structure.ExpressionStatement"))) {
      return (boolean) ExpressionStatement__BehaviorDescriptor.canServeAsReturn_idi2fkDTg.invoke(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, "jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
    }
    SNode type = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType"));
    return type != null && SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L, "jetbrains.mps.baseLanguage.structure.PrimitiveType")) && !(SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL, "jetbrains.mps.baseLanguage.structure.VoidType")));
  }
  public static SNode sourceNodeQuery_360045928603427201(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_360045928603427207(final SourceSubstituteMacroNodeContext _context) {
    int index = ((Integer) _context.getVariable("cv:argCounter"));
    SNode declaration = ((SNode) _context.getVariable("var:methodDeclaration"));
    if (((Integer) _context.getVariable("cv:argCounter")) >= ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).count()) {
      index = ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).count() - 1;
    }
    SNode parameter = ListSequence.fromList(SLinkOperations.getChildren(declaration, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"))).getElement(index);
    SNode type = SLinkOperations.getTarget(parameter, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
    if (SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType"))) {
      type = SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(parameter, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, 0x11c08f5f38cL, "componentType"));
    }
    return type;
  }
  public static SNode sourceNodeQuery_360045928603427268(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_8228699960986672584(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")));
  }
  public static SNode sourceNodeQuery_2356949341616272818(final SourceSubstituteMacroNodeContext _context) {
    return Type__BehaviorDescriptor.getClassExpression_idhEwIzOd.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_4698411099515244408(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, 0x11c08f5f38cL, "componentType"));
  }
  public static SNode sourceNodeQuery_7154549807540211992(final SourceSubstituteMacroNodeContext _context) {
    return Type__BehaviorDescriptor.getClassExpression_idhEwIzOd.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_517651233894477820(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_3176885412940615044(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")));
  }
  public static SNode sourceNodeQuery_2356949341616341310(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType"));
  }
  public static SNode sourceNodeQuery_7433446194418124034(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")));
  }
  public static SNode sourceNodeQuery_737333977599961070(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_1843690775058968446(final SourceSubstituteMacroNodeContext _context) {
    SNode returnType = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType"));
    return returnType;
  }
  public static SNode sourceNodeQuery_4598718932036130542(final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }
  public static SNode sourceNodeQuery_3342690505051109919(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, "body"));
  }
  public static SNode sourceNodeQuery_4547736967711224782(final SourceSubstituteMacroNodeContext _context) {
    return Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")));
  }
  public static SNode sourceNodeQuery_7830995205626882440(final SourceSubstituteMacroNodeContext _context) {
    return Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")));
  }
  public static SNode sourceNodeQuery_4698411099515235207(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
  }
  public static SNode sourceNodeQuery_7830995205626232436(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
  }
  public static SNode sourceNodeQuery_4279359955659612500(final SourceSubstituteMacroNodeContext _context) {
    SNode type = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
    return Type__BehaviorDescriptor.getBoxedType_idhEwIzNC.invoke(type);
  }
  public static SNode sourceNodeQuery_4279359955659760635(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
  }
  public static SNode sourceNodeQuery_4279359955659731408(final SourceSubstituteMacroNodeContext _context) {
    SNode type = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"));
    if (SNodeOperations.isInstanceOf(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType"))) {
      SNode componentType = SLinkOperations.getTarget(SNodeOperations.cast(type, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, "jetbrains.mps.baseLanguage.structure.VariableArityType")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL, 0x11c08f5f38cL, "componentType"));
      return _quotation_createNode_x583g4_a1a1a67(componentType);
    }
    return type;
  }
  public static SNode sourceNodeQuery_4598718932037179911(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType"));
  }
  public static Object templateArgumentQuery_4565427742315565556(final TemplateArgumentContext _context) {
    return SModelOperations.getModelName(((SModel) _context.getVariable("model"))) + ".BehaviorAspectDescriptor";
  }
  public static Object templateArgumentQuery_5700381506346626450(final TemplateArgumentContext _context) {
    return SNodeOperations.getNode("d936855b-48da-4812-a8a0-2bfddd633ac5/java:jetbrains.mps.smodel.runtime(jetbrains.mps.lang.behavior.api/)", "~BehaviorAspectDescriptor");
  }
  public static Iterable<SNode> sourceNodesQuery_5630687994792687400(final SourceSubstituteMacroNodesContext _context) {
    return ((List<SNode>) _context.getVariable("var:ConceptBehaviors"));
  }
  public static Iterable<SNode> sourceNodesQuery_1889794043260130041(final SourceSubstituteMacroNodesContext _context) {
    return ((List<SNode>) _context.getVariable("var:ConceptBehaviors"));
  }
  public static Iterable<SNode> sourceNodesQuery_360045928603427127(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, "actualArgument"));
  }
  public static Iterable<SNode> sourceNodesQuery_4698411099515327829(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"));
  }
  public static Iterable<SNode> sourceNodesQuery_3176885412940615253(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b25L, "method"));
  }
  public static Iterable<SNode> sourceNodesQuery_737333977598577042(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b25L, "method"));
  }
  public static Iterable<SNode> sourceNodesQuery_737333977599946419(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b21L, "constructor")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_163705066662263716(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"));
  }
  public static Iterable<SNode> sourceNodesQuery_1843690775058968476(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, "annotation"));
  }
  public static Iterable<SNode> sourceNodesQuery_6123852159201665308(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b25L, "method"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d4348057eL, 0x11d43480582L, "isAbstract")));
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_7977232384686911680(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b25L, "method"));
  }
  public static Iterable<SNode> sourceNodesQuery_6862765979524954480(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b25L, "method"));
  }
  public static Iterable<SNode> sourceNodesQuery_4279359955659694569(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"));
  }
  public static Object insertMacro_varValue_7385785963572954184(final TemplateVarContext _context) {
    SModel bhModel = _context.getInputModel();
    return ListSequence.fromList(SModelOperations.nodes(bhModel, MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, "jetbrains.mps.lang.behavior.structure.ConceptBehavior"))).sort(new ISelector<SNode, Long>() {
      public Long select(SNode it) {
        return MetaIdByDeclaration.getConceptId(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L, 0x87d963a55f2a9db1L, 0x11d43447b1aL, 0x11d43447b1fL, "concept"))).getIdValue();
      }
    }, true).toListSequence();
  }
  public static Object insertMacro_varValue_360045928603465626(final TemplateVarContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration"));
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("4698411099515185370", new QueriesGenerated.RRC(i++));
    rrcMethods.put("1570228009929814969", new QueriesGenerated.RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(rrcMethods.containsKey(id))) {
      return super.getReductionRuleCondition(identity);
    }
    return rrcMethods.get(id);
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.baseMappingRule_Condition_4698411099515225497(ctx);
        case 1:
          return QueriesGenerated.baseMappingRule_Condition_1570228009929814973(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, CreateRootCondition> crcMethods = new HashMap<String, CreateRootCondition>();
  {
    int i = 0;
    crcMethods.put("4881419546810727151", new QueriesGenerated.CRC(i++));
  }
  @Override
  @NotNull
  public CreateRootCondition getCreateRootRuleCondition(@NotNull QueryKey identity) {
    String id = identity.getTemplateNode().getNodeId().toString();
    if (!(crcMethods.containsKey(id))) {
      return super.getCreateRootRuleCondition(identity);
    }
    return crcMethods.get(id);
  }
  private static class CRC implements CreateRootCondition {
    private final int methodKey;
    public CRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull CreateRootRuleContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.createRootRule_Condition_4881419546810727153(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("360045928603427201", new QueriesGenerated.SNQ(i++));
    snqMethods.put("360045928603427207", new QueriesGenerated.SNQ(i++));
    snqMethods.put("360045928603427268", new QueriesGenerated.SNQ(i++));
    snqMethods.put("8228699960986672584", new QueriesGenerated.SNQ(i++));
    snqMethods.put("2356949341616272818", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4698411099515244408", new QueriesGenerated.SNQ(i++));
    snqMethods.put("7154549807540211992", new QueriesGenerated.SNQ(i++));
    snqMethods.put("517651233894477820", new QueriesGenerated.SNQ(i++));
    snqMethods.put("3176885412940615044", new QueriesGenerated.SNQ(i++));
    snqMethods.put("2356949341616341310", new QueriesGenerated.SNQ(i++));
    snqMethods.put("7433446194418124034", new QueriesGenerated.SNQ(i++));
    snqMethods.put("737333977599961070", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1843690775058968446", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4598718932036130542", new QueriesGenerated.SNQ(i++));
    snqMethods.put("3342690505051109919", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4547736967711224782", new QueriesGenerated.SNQ(i++));
    snqMethods.put("7830995205626882440", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4698411099515235207", new QueriesGenerated.SNQ(i++));
    snqMethods.put("7830995205626232436", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4279359955659612500", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4279359955659760635", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4279359955659731408", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4598718932037179911", new QueriesGenerated.SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snqMethods.containsKey(id))) {
      return super.getSourceNodeQuery(identity);
    }
    return snqMethods.get(id);
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_360045928603427201(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_360045928603427207(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_360045928603427268(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_8228699960986672584(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_2356949341616272818(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_4698411099515244408(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_7154549807540211992(ctx);
        case 7:
          return QueriesGenerated.sourceNodeQuery_517651233894477820(ctx);
        case 8:
          return QueriesGenerated.sourceNodeQuery_3176885412940615044(ctx);
        case 9:
          return QueriesGenerated.sourceNodeQuery_2356949341616341310(ctx);
        case 10:
          return QueriesGenerated.sourceNodeQuery_7433446194418124034(ctx);
        case 11:
          return QueriesGenerated.sourceNodeQuery_737333977599961070(ctx);
        case 12:
          return QueriesGenerated.sourceNodeQuery_1843690775058968446(ctx);
        case 13:
          return QueriesGenerated.sourceNodeQuery_4598718932036130542(ctx);
        case 14:
          return QueriesGenerated.sourceNodeQuery_3342690505051109919(ctx);
        case 15:
          return QueriesGenerated.sourceNodeQuery_4547736967711224782(ctx);
        case 16:
          return QueriesGenerated.sourceNodeQuery_7830995205626882440(ctx);
        case 17:
          return QueriesGenerated.sourceNodeQuery_4698411099515235207(ctx);
        case 18:
          return QueriesGenerated.sourceNodeQuery_7830995205626232436(ctx);
        case 19:
          return QueriesGenerated.sourceNodeQuery_4279359955659612500(ctx);
        case 20:
          return QueriesGenerated.sourceNodeQuery_4279359955659760635(ctx);
        case 21:
          return QueriesGenerated.sourceNodeQuery_4279359955659731408(ctx);
        case 22:
          return QueriesGenerated.sourceNodeQuery_4598718932037179911(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("5630687994792687400", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1889794043260130041", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("360045928603427127", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("4698411099515327829", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("3176885412940615253", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("737333977598577042", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("737333977599946419", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("163705066662263716", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1843690775058968476", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6123852159201665308", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("7977232384686911680", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6862765979524954480", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("4279359955659694569", new QueriesGenerated.SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snsqMethods.containsKey(id))) {
      return super.getSourceNodesQuery(identity);
    }
    return snsqMethods.get(id);
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_5630687994792687400(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1889794043260130041(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_360045928603427127(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_4698411099515327829(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_3176885412940615253(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_737333977598577042(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_737333977599946419(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_163705066662263716(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1843690775058968476(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_6123852159201665308(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_7977232384686911680(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_6862765979524954480(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_4279359955659694569(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("5630687994792687406", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "myBHDescriptor"));
    pvqMethods.put("8228699960986687946", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157912ec1L, 0x1115794e9f1L, "fqClassName"), "A_BehaviorDescriptor"));
    pvqMethods.put("8228699960986694364", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157912ec1L, 0x11157952fb6L, "fieldName"), "fooMethod"));
    pvqMethods.put("3176885412940615082", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "methodName"));
    pvqMethods.put("2386721254951957138", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("5216932936550453172", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId123"));
    pvqMethods.put("3176885412940615259", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "BH_METHOD"));
    pvqMethods.put("2284925377906277770", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "thisNode"));
    pvqMethods.put("1843690775058914307", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "__init__"));
    pvqMethods.put("1843690775058968430", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "bhMethodImpl"));
    pvqMethods.put("2284925377906207037", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "thisNode"));
    pvqMethods.put("6862765979525214161", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "thisConcept"));
    pvqMethods.put("5387335678452459853", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, "isFinal"), "false"));
    pvqMethods.put("7977232384686911567", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "1"));
    pvqMethods.put("6862765979524954351", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "1"));
    pvqMethods.put("1971977265034502290", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "BehaviorDescriptor"));
    pvqMethods.put("4279359955659612535", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
    pvqMethods.put("4279359955659731443", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "0"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5630687994792687407(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetPropertyValue_8228699960986687947(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetPropertyValue_8228699960986694365(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetPropertyValue_3176885412940615083(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetPropertyValue_2386721254951957139(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5216932936550453175(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetPropertyValue_3176885412940615260(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetPropertyValue_2284925377906277771(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1843690775058914308(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1843690775058968431(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetPropertyValue_2284925377906207038(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetPropertyValue_6862765979525214162(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetPropertyValue_5387335678452459856(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetPropertyValue_7977232384686911568(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetPropertyValue_6862765979524954352(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetPropertyValue_1971977265034502291(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetPropertyValue_4279359955659612536(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetPropertyValue_4279359955659731444(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("5722502787474237111", new QueriesGenerated.IfMC(i++));
    imcMethods.put("5722502787474197942", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6133874814783379356", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7977232384686803989", new QueriesGenerated.IfMC(i++));
    imcMethods.put("360045928603427133", new QueriesGenerated.IfMC(i++));
    imcMethods.put("908783277635035761", new QueriesGenerated.IfMC(i++));
    imcMethods.put("8228699960984187039", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7977232384686911616", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7977232384686911669", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7977232384686911686", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6862765979524954408", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6862765979524954469", new QueriesGenerated.IfMC(i++));
    imcMethods.put("6862765979524954486", new QueriesGenerated.IfMC(i++));
    imcMethods.put("391057745364429980", new QueriesGenerated.IfMC(i++));
    imcMethods.put("4279359955659716959", new QueriesGenerated.IfMC(i++));
    imcMethods.put("4598718932037160739", new QueriesGenerated.IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(imcMethods.containsKey(id))) {
      return super.getIfMacroCondition(identity);
    }
    return imcMethods.get(id);
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_5722502787474237113(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_5722502787474197944(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_6133874814783379358(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_7977232384686803991(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_360045928603427134(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_908783277635035779(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_8228699960984187042(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_7977232384686911617(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_7977232384686911670(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_7977232384686911687(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_6862765979524954409(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_6862765979524954470(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_6862765979524954487(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_391057745364429981(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_4279359955659716962(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_4598718932037160741(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("6862765979525543739", new QueriesGenerated.RTQ(0, "thisConcept"));
    rtqMethods.put("5722502787474238078", new QueriesGenerated.RTQ(1, "thisNode"));
    rtqMethods.put("5722502787474198306", new QueriesGenerated.RTQ(2, "thisConcept"));
    rtqMethods.put("5722502787474200238", new QueriesGenerated.RTQ(3, "thisNode"));
    rtqMethods.put("8560627202334867185", new QueriesGenerated.RTQ(4, "BaseBHDescriptor"));
    rtqMethods.put("7600007869448722163", new QueriesGenerated.RTQ(5, "myBHDescriptor"));
    rtqMethods.put("6551427688186219814", new QueriesGenerated.RTQ(6, "BaseConcept"));
    rtqMethods.put("8228699960984014811", new QueriesGenerated.RTQ(7, "thisNode"));
    rtqMethods.put("6862765979525357275", new QueriesGenerated.RTQ(8, "thisConcept"));
    rtqMethods.put("7043879193973092537", new QueriesGenerated.RTQ(9, "thisNode"));
    rtqMethods.put("517651233894479652", new QueriesGenerated.RTQ(10, "Byte"));
    rtqMethods.put("4006517209906256416", new QueriesGenerated.RTQ(11, "BaseConcept"));
    rtqMethods.put("2386721254951859759", new QueriesGenerated.RTQ(12, "PRIVATE"));
    rtqMethods.put("737333977598577048", new QueriesGenerated.RTQ(13, "BH_METHOD"));
    rtqMethods.put("391057745364430041", new QueriesGenerated.RTQ(14, "bhMethodImpl"));
    rtqMethods.put("1703835097132705989", new QueriesGenerated.RTQ(15, "thisConcept"));
    rtqMethods.put("7613853987897925127", new QueriesGenerated.RTQ(16, "thisConcept"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    final String id = queryKey.getTemplateNode().getNodeId().toString();
    if (!(rtqMethods.containsKey(id))) {
      return super.getReferenceTargetQuery(queryKey);
    }
    return rtqMethods.get(id);
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_6862765979525543740(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_5722502787474238079(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_5722502787474198307(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_5722502787474200239(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_8560627202334867188(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_7600007869448722164(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_6551427688186219815(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_8228699960984014812(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_6862765979525357276(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_7043879193973092538(ctx);
        case 10:
          return QueriesGenerated.referenceMacro_GetReferent_517651233894479655(ctx);
        case 11:
          return QueriesGenerated.referenceMacro_GetReferent_4006517209906256417(ctx);
        case 12:
          return QueriesGenerated.referenceMacro_GetReferent_2386721254951859760(ctx);
        case 13:
          return QueriesGenerated.referenceMacro_GetReferent_737333977598577049(ctx);
        case 14:
          return QueriesGenerated.referenceMacro_GetReferent_391057745364430042(ctx);
        case 15:
          return QueriesGenerated.referenceMacro_GetReferent_1703835097132705990(ctx);
        case 16:
          return QueriesGenerated.referenceMacro_GetReferent_7613853987897925128(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, VariableValueQuery> vvqMethods = new HashMap<String, VariableValueQuery>();
  {
    vvqMethods.put("7385785963572954182", new QueriesGenerated.VVQ(0));
    vvqMethods.put("360045928603465624", new QueriesGenerated.VVQ(1));
  }
  @NotNull
  @Override
  public VariableValueQuery getVariableValueQuery(@NotNull QueryKey queryKey) {
    final String id = queryKey.getTemplateNode().getNodeId().toString();
    if (!(vvqMethods.containsKey(id))) {
      return super.getVariableValueQuery(queryKey);
    }
    return vvqMethods.get(id);
  }
  private static class VVQ implements VariableValueQuery {
    private final int methodKey;
    /*package*/ VVQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull TemplateVarContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.insertMacro_varValue_7385785963572954184(ctx);
        case 1:
          return QueriesGenerated.insertMacro_varValue_360045928603465626(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, CallArgumentQuery> caqMethods = new HashMap<String, CallArgumentQuery>();
  {
    caqMethods.put("4565427742315565556", new QueriesGenerated.CAQ(0));
    caqMethods.put("5700381506346626450", new QueriesGenerated.CAQ(1));
  }
  @NotNull
  @Override
  public CallArgumentQuery getTemplateCallArgumentQuery(@NotNull QueryKey queryKey) {
    final String id = queryKey.getTemplateNode().getNodeId().toString();
    if (!(caqMethods.containsKey(id))) {
      return super.getTemplateCallArgumentQuery(queryKey);
    }
    return caqMethods.get(id);
  }
  private static class CAQ implements CallArgumentQuery {
    private final int methodKey;
    /*package*/ CAQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull TemplateArgumentContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.templateArgumentQuery_4565427742315565556(ctx);
        case 1:
          return QueriesGenerated.templateArgumentQuery_5700381506346626450(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static SNode _quotation_createNode_x583g4_a1a1a67(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0xf940d819f7L, "ArrayType"), null, null, false);
    quotedNode_3 = (SNode) parameter_1;
    if (quotedNode_3 != null) {
      quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d819f7L, 0xf940d819f8L, "componentType"), HUtil.copyIfNecessary(quotedNode_3));
    }
    return quotedNode_2;
  }
}
