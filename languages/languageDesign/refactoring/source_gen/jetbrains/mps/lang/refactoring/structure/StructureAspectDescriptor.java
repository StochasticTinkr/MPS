package jetbrains.mps.lang.refactoring.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(50);
  /*package*/ final ConceptDescriptor myConceptAbstractMoveExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.refactoring.structure.RefactoringAction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x2cfffca8ff395f2fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1174ee44ac2L, "whatToMove", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(0x1174ee44ac3L, "destination", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"whatToMove", "destination"}, new boolean[]{false, false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199619425400")).create();
  /*package*/ final ConceptDescriptor myConceptAbstractMoveNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620122561")).create();
  /*package*/ final ConceptDescriptor myConceptAbstractMoveNodesExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620153270")).create();
  /*package*/ final ConceptDescriptor myConceptAffectedNodesClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AffectedNodesClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1179d272ac6L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("affected nodes", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1200932465350")).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Model = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f5764daL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("model", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1209559114970")).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Module = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0577L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("module", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310775")).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_SModel = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff551cd5L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("model", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1189694741717")).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_SNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a059eL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("node", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310814")).create();
  /*package*/ final ConceptDescriptor myConceptContextMemberOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252909")).create();
  /*package*/ final ConceptDescriptor myConceptContextType = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ContextType", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b65b84aL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("refcontext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066536522")).create();
  /*package*/ final ConceptDescriptor myConceptCreateRefactoringContext = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.CreateRefactoringContext", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x335c206b02bc2de5L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x335c206b02bd34aaL, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(0x335c206b02bde745L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(0x335c206b02bed2aaL, "parameters", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false), new ConceptDescriptorBuilder.Link(0x65dd44b0af81a086L, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target", "parameters", "project"}, new boolean[]{false, true, false}).alias("create refcontext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "3700868637771181541")).create();
  /*package*/ final ConceptDescriptor myConceptDoRefactorClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.DoRefactorClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff4a9da3L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("refactor", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1189694053795")).create();
  /*package*/ final ConceptDescriptor myConceptDoWhenDoneClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1c9210c7226dbbf4L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("doWhenDone", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "2058726427123891188")).create();
  /*package*/ final ConceptDescriptor myConceptExecuteRefactoringStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ExecuteRefactoringStatement", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1fe4fcef62d0186cL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1fe4fcef62d01873L, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(0x1fe4fcef62d01870L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(0x1fe4fcef62d01871L, "parameters", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false), new ConceptDescriptorBuilder.Link(0x1fe4fcef62d01872L, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target", "parameters", "project"}, new boolean[]{false, true, false}).alias("execute refactoring", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "2298239814950983788")).create();
  /*package*/ final ConceptDescriptor myConceptGetModelsToUpdateClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x119f1c05cbcL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("additional models to update", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1210941725884")).create();
  /*package*/ final ConceptDescriptor myConceptInitClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.InitClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e4d77d2L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("init", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "5497648299878741970")).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToModelClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f56b378L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToModel", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1209559069560")).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToModuleClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0571L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToModule", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310769")).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToNodeClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0598L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToNode", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310808")).create();
  /*package*/ final ConceptDescriptor myConceptIsRefactoringApplicable = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsRefactoringApplicable", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5b9318cd86fd917dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5b9318cd86fd917eL, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(0x5b9318cd86fd94a6L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target"}, new boolean[]{false}).alias("is applicable refactoring", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6598645150040035709")).create();
  /*package*/ final ConceptDescriptor myConceptMainProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MainProjectOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x709995bad7715796L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("project", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "8113680833395644310")).create();
  /*package*/ final ConceptDescriptor myConceptModelDescriptorOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646fL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("modelDescriptor", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252911")).create();
  /*package*/ final ConceptDescriptor myConceptModelTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056aL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).alias("model", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310762")).create();
  /*package*/ final ConceptDescriptor myConceptModelsToGenerateByDefault = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateByDefault", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x3c55f2dab56d441dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("models from usages", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "4347648036456711197")).create();
  /*package*/ final ConceptDescriptor myConceptModelsToGenerateClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x175aa0f4225aa61fL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("models to generate", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1682834381185132063")).create();
  /*package*/ final ConceptDescriptor myConceptModuleOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModuleOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616471L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("module", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252913")).create();
  /*package*/ final ConceptDescriptor myConceptModuleTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModuleTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056bL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5fb04b74a77a056fL, "moduleType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL), true, false, false)).children(new String[]{"moduleType"}, new boolean[]{false}).alias("module", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310763")).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodeToModelExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef1677bL)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).alias("moveNode", "move node to model").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620319099")).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodeToNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef58749L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1174ef67b9eL, "roleInTarget", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"roleInTarget"}, new boolean[]{false}).alias("moveNode", "move node to another node").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620589385")).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodesToModelExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef7a718L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).alias("moveNodes", "move nodes to model").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620728600")).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodesToNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174efa95a1L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1174efb2b31L, "roleInTarget", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"roleInTarget"}, new boolean[]{false}).alias("moveNodes", "move nodes to another node").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1199620920737")).create();
  /*package*/ final ConceptDescriptor myConceptNodeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodeOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616473L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("node", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252915")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodeTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056cL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5fb04b74a77a0596L, "concept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), true)).references("concept").alias("node", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310764")).create();
  /*package*/ final ConceptDescriptor myConceptNodesOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodesOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616475L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("nodes", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252917")).create();
  /*package*/ final ConceptDescriptor myConceptOperationContextOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.OperationContextOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616477L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("operationContext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252919")).create();
  /*package*/ final ConceptDescriptor myConceptProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ProjectOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616479L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("mpsProject", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252921")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoring = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.Refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.lang.structure.structure.IConceptAspect", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5fb04b74a778e2d3L, "userFriendlyName")).properties("userFriendlyName").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5fb04b74a778e2e3L, "overrides", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), true)).references("overrides").childDescriptors(new ConceptDescriptorBuilder.Link(0x5fb04b74a77a0656L, "target", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L), false, false, false), new ConceptDescriptorBuilder.Link(0x5fb04b74a778e2d8L, "parameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L), true, true, false), new ConceptDescriptorBuilder.Link(0x5fb04b74a778e2d9L, "field", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0662L), true, true, false), new ConceptDescriptorBuilder.Link(0x4c4b92003e4d77d8L, "initBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e4d77d2L), true, false, false), new ConceptDescriptorBuilder.Link(0x5fb04b74a778e2ddL, "doRefactorBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff4a9da3L), false, false, false), new ConceptDescriptorBuilder.Link(0x88e6d7a0aad9adfL, "modelsToGenerateBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x175aa0f4225aa61fL), true, false, false), new ConceptDescriptorBuilder.Link(0x1c9210c7226dbbf9L, "doWhenDoneBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1c9210c7226dbbf4L), true, false, false), new ConceptDescriptorBuilder.Link(0x12b38e70a3eb6027L, "affectedNodesBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1179d272ac6L), true, false, false)).children(new String[]{"target", "parameter", "field", "initBlock", "doRefactorBlock", "modelsToGenerateBlock", "doWhenDoneBlock", "affectedNodesBlock"}, new boolean[]{false, true, true, false, false, false, false, false}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902236229")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringAction = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringAction", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x2cfffca8ff395f2fL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "3242588059496701743")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringArgument = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringArgument", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "478744034994715997")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringArgumentReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "478744034994716100")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringContext_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61724aL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("refactoringContext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066256458")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x7f299b5c69396d6fL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7f299b5c69396d73L, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").alias("refactoring", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "9163025738066652527")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringField = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringField", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0662L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", "jetbrains.mps.lang.refactoring.structure.RefactoringArgument").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902311010")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringFieldReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringFieldReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e483aaaL)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableReference").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableReference", "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "5497648299878398634")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", "jetbrains.mps.lang.refactoring.structure.RefactoringArgument").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902311012")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringParameterReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringParameterReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77cda06L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5fb04b74a77cda07L, "refactoringParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L), false)).references("refactoringParameter").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902496262")).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x5fb04b74a77a0657L, "allowMultiple")).properties("allowMultiple").childDescriptors(new ConceptDescriptorBuilder.Link(0x4c4b92003e4d7817L, "isApplicableBlock", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L), true, false, false)).children(new String[]{"isApplicableBlock"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "6895093993902310761")).create();
  /*package*/ final ConceptDescriptor myConceptRepositoryOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RepositoryOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x526920001de2794bL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("repository", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "5938312768538179915")).create();
  /*package*/ final ConceptDescriptor myConceptScopeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ScopeOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61647bL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").version(1).super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("scope", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "7953996722066252923")).create();
  /*package*/ final ConceptDescriptor myConceptUpdateModelProcedure = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x11710c75c77L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11710c8344fL, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"argument"}, new boolean[]{false}).alias("updateModel(...)", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590319(jetbrains.mps.lang.refactoring.structure)", "1198577376375")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractMoveExpression.getId(), 0);
    myIndexMap.put(myConceptAbstractMoveNodeExpression.getId(), 1);
    myIndexMap.put(myConceptAbstractMoveNodesExpression.getId(), 2);
    myIndexMap.put(myConceptAffectedNodesClause.getId(), 3);
    myIndexMap.put(myConceptConceptFunctionParameter_Model.getId(), 4);
    myIndexMap.put(myConceptConceptFunctionParameter_Module.getId(), 5);
    myIndexMap.put(myConceptConceptFunctionParameter_SModel.getId(), 6);
    myIndexMap.put(myConceptConceptFunctionParameter_SNode.getId(), 7);
    myIndexMap.put(myConceptContextMemberOperation.getId(), 8);
    myIndexMap.put(myConceptContextType.getId(), 9);
    myIndexMap.put(myConceptCreateRefactoringContext.getId(), 10);
    myIndexMap.put(myConceptDoRefactorClause.getId(), 11);
    myIndexMap.put(myConceptDoWhenDoneClause.getId(), 12);
    myIndexMap.put(myConceptExecuteRefactoringStatement.getId(), 13);
    myIndexMap.put(myConceptGetModelsToUpdateClause.getId(), 14);
    myIndexMap.put(myConceptInitClause.getId(), 15);
    myIndexMap.put(myConceptIsApplicableToModelClause.getId(), 16);
    myIndexMap.put(myConceptIsApplicableToModuleClause.getId(), 17);
    myIndexMap.put(myConceptIsApplicableToNodeClause.getId(), 18);
    myIndexMap.put(myConceptIsRefactoringApplicable.getId(), 19);
    myIndexMap.put(myConceptMainProjectOperation.getId(), 20);
    myIndexMap.put(myConceptModelDescriptorOperation.getId(), 21);
    myIndexMap.put(myConceptModelTarget.getId(), 22);
    myIndexMap.put(myConceptModelsToGenerateByDefault.getId(), 23);
    myIndexMap.put(myConceptModelsToGenerateClause.getId(), 24);
    myIndexMap.put(myConceptModuleOperation.getId(), 25);
    myIndexMap.put(myConceptModuleTarget.getId(), 26);
    myIndexMap.put(myConceptMoveNodeToModelExpression.getId(), 27);
    myIndexMap.put(myConceptMoveNodeToNodeExpression.getId(), 28);
    myIndexMap.put(myConceptMoveNodesToModelExpression.getId(), 29);
    myIndexMap.put(myConceptMoveNodesToNodeExpression.getId(), 30);
    myIndexMap.put(myConceptNodeOperation.getId(), 31);
    myIndexMap.put(myConceptNodeTarget.getId(), 32);
    myIndexMap.put(myConceptNodesOperation.getId(), 33);
    myIndexMap.put(myConceptOperationContextOperation.getId(), 34);
    myIndexMap.put(myConceptProjectOperation.getId(), 35);
    myIndexMap.put(myConceptRefactoring.getId(), 36);
    myIndexMap.put(myConceptRefactoringAction.getId(), 37);
    myIndexMap.put(myConceptRefactoringArgument.getId(), 38);
    myIndexMap.put(myConceptRefactoringArgumentReference.getId(), 39);
    myIndexMap.put(myConceptRefactoringContext_ConceptFunctionParameter.getId(), 40);
    myIndexMap.put(myConceptRefactoringExpression.getId(), 41);
    myIndexMap.put(myConceptRefactoringField.getId(), 42);
    myIndexMap.put(myConceptRefactoringFieldReference.getId(), 43);
    myIndexMap.put(myConceptRefactoringParameter.getId(), 44);
    myIndexMap.put(myConceptRefactoringParameterReference.getId(), 45);
    myIndexMap.put(myConceptRefactoringTarget.getId(), 46);
    myIndexMap.put(myConceptRepositoryOperation.getId(), 47);
    myIndexMap.put(myConceptScopeOperation.getId(), 48);
    myIndexMap.put(myConceptUpdateModelProcedure.getId(), 49);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractMoveExpression, myConceptAbstractMoveNodeExpression, myConceptAbstractMoveNodesExpression, myConceptAffectedNodesClause, myConceptConceptFunctionParameter_Model, myConceptConceptFunctionParameter_Module, myConceptConceptFunctionParameter_SModel, myConceptConceptFunctionParameter_SNode, myConceptContextMemberOperation, myConceptContextType, myConceptCreateRefactoringContext, myConceptDoRefactorClause, myConceptDoWhenDoneClause, myConceptExecuteRefactoringStatement, myConceptGetModelsToUpdateClause, myConceptInitClause, myConceptIsApplicableToModelClause, myConceptIsApplicableToModuleClause, myConceptIsApplicableToNodeClause, myConceptIsRefactoringApplicable, myConceptMainProjectOperation, myConceptModelDescriptorOperation, myConceptModelTarget, myConceptModelsToGenerateByDefault, myConceptModelsToGenerateClause, myConceptModuleOperation, myConceptModuleTarget, myConceptMoveNodeToModelExpression, myConceptMoveNodeToNodeExpression, myConceptMoveNodesToModelExpression, myConceptMoveNodesToNodeExpression, myConceptNodeOperation, myConceptNodeTarget, myConceptNodesOperation, myConceptOperationContextOperation, myConceptProjectOperation, myConceptRefactoring, myConceptRefactoringAction, myConceptRefactoringArgument, myConceptRefactoringArgumentReference, myConceptRefactoringContext_ConceptFunctionParameter, myConceptRefactoringExpression, myConceptRefactoringField, myConceptRefactoringFieldReference, myConceptRefactoringParameter, myConceptRefactoringParameterReference, myConceptRefactoringTarget, myConceptRepositoryOperation, myConceptScopeOperation, myConceptUpdateModelProcedure);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractMoveExpression;
      case 1:
        return myConceptAbstractMoveNodeExpression;
      case 2:
        return myConceptAbstractMoveNodesExpression;
      case 3:
        return myConceptAffectedNodesClause;
      case 4:
        return myConceptConceptFunctionParameter_Model;
      case 5:
        return myConceptConceptFunctionParameter_Module;
      case 6:
        return myConceptConceptFunctionParameter_SModel;
      case 7:
        return myConceptConceptFunctionParameter_SNode;
      case 8:
        return myConceptContextMemberOperation;
      case 9:
        return myConceptContextType;
      case 10:
        return myConceptCreateRefactoringContext;
      case 11:
        return myConceptDoRefactorClause;
      case 12:
        return myConceptDoWhenDoneClause;
      case 13:
        return myConceptExecuteRefactoringStatement;
      case 14:
        return myConceptGetModelsToUpdateClause;
      case 15:
        return myConceptInitClause;
      case 16:
        return myConceptIsApplicableToModelClause;
      case 17:
        return myConceptIsApplicableToModuleClause;
      case 18:
        return myConceptIsApplicableToNodeClause;
      case 19:
        return myConceptIsRefactoringApplicable;
      case 20:
        return myConceptMainProjectOperation;
      case 21:
        return myConceptModelDescriptorOperation;
      case 22:
        return myConceptModelTarget;
      case 23:
        return myConceptModelsToGenerateByDefault;
      case 24:
        return myConceptModelsToGenerateClause;
      case 25:
        return myConceptModuleOperation;
      case 26:
        return myConceptModuleTarget;
      case 27:
        return myConceptMoveNodeToModelExpression;
      case 28:
        return myConceptMoveNodeToNodeExpression;
      case 29:
        return myConceptMoveNodesToModelExpression;
      case 30:
        return myConceptMoveNodesToNodeExpression;
      case 31:
        return myConceptNodeOperation;
      case 32:
        return myConceptNodeTarget;
      case 33:
        return myConceptNodesOperation;
      case 34:
        return myConceptOperationContextOperation;
      case 35:
        return myConceptProjectOperation;
      case 36:
        return myConceptRefactoring;
      case 37:
        return myConceptRefactoringAction;
      case 38:
        return myConceptRefactoringArgument;
      case 39:
        return myConceptRefactoringArgumentReference;
      case 40:
        return myConceptRefactoringContext_ConceptFunctionParameter;
      case 41:
        return myConceptRefactoringExpression;
      case 42:
        return myConceptRefactoringField;
      case 43:
        return myConceptRefactoringFieldReference;
      case 44:
        return myConceptRefactoringParameter;
      case 45:
        return myConceptRefactoringParameterReference;
      case 46:
        return myConceptRefactoringTarget;
      case 47:
        return myConceptRepositoryOperation;
      case 48:
        return myConceptScopeOperation;
      case 49:
        return myConceptUpdateModelProcedure;
      default:
        throw new IllegalStateException();
    }
  }
}
