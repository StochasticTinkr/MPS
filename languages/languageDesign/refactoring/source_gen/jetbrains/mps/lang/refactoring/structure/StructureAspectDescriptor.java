package jetbrains.mps.lang.refactoring.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAbstractMoveExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.refactoring.structure.RefactoringAction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x2cfffca8ff395f2fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1199619459778L, "whatToMove", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1199619459779L, "destination", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"whatToMove", "destination"}, new boolean[]{false, false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAbstractMoveNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAbstractMoveNodesExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L)).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAffectedNodesClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.AffectedNodesClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1179d272ac6L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("affected nodes", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Model = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f5764daL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("model", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_Module = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0577L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("module", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_SModel = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff551cd5L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("model", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter_SNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a059eL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("node", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptContextMemberOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptContextType = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ContextType", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b65b84aL)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("refcontext", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateRefactoringContext = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.CreateRefactoringContext", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x335c206b02bc2de5L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(3700868637771248810L, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(3700868637771294533L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(3700868637771354794L, "parameters", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false), new ConceptDescriptorBuilder.Link(7340098493333217414L, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target", "parameters", "project"}, new boolean[]{false, true, false}).alias("create refcontext", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDoRefactorClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.DoRefactorClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff4a9da3L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("refactor", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDoWhenDoneClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1c9210c7226dbbf4L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("doWhenDone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteRefactoringStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ExecuteRefactoringStatement", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1fe4fcef62d0186cL)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(2298239814950983795L, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(2298239814950983792L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(2298239814950983793L, "parameters", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false), new ConceptDescriptorBuilder.Link(2298239814950983794L, "project", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target", "parameters", "project"}, new boolean[]{false, true, false}).alias("execute refactoring", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetModelsToUpdateClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x119f1c05cbcL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("additional models to update", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptInitClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.InitClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e4d77d2L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("init", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToModelClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f56b378L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToModel", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToModuleClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0571L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToModule", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableToNodeClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0598L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("isApplicableToNode", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIsRefactoringApplicable = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.IsRefactoringApplicable", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5b9318cd86fd917dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(6598645150040035710L, "refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), false)).references("refactoring").childDescriptors(new ConceptDescriptorBuilder.Link(6598645150040036518L, "target", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"target"}, new boolean[]{false}).alias("is applicable refactoring", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMainProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MainProjectOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x709995bad7715796L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("project", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModelDescriptorOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646fL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("modelDescriptor", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModelTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056aL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).alias("model", "").create();
  /*package*/ final ConceptDescriptor myConceptModelsToGenerateByDefault = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateByDefault", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x3c55f2dab56d441dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("models from usages", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModelsToGenerateClause = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x175aa0f4225aa61fL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).alias("models to generate", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModuleOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModuleOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616471L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("module", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModuleTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ModuleTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056bL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).childDescriptors(new ConceptDescriptorBuilder.Link(6895093993902310767L, "moduleType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL), true, false, false)).children(new String[]{"moduleType"}, new boolean[]{false}).alias("module", "").create();
  /*package*/ final ConceptDescriptor myConceptMoveNodeToModelExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef1677bL)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).alias("moveNode", "move node to model").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodeToNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef58749L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L)).childDescriptors(new ConceptDescriptorBuilder.Link(1199620651934L, "roleInTarget", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"roleInTarget"}, new boolean[]{false}).alias("moveNode", "move node to another node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodesToModelExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef7a718L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).alias("moveNodes", "move nodes to model").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMoveNodesToNodeExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174efa95a1L)).super_("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).parents("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L)).childDescriptors(new ConceptDescriptorBuilder.Link(1199620959025L, "roleInTarget", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"roleInTarget"}, new boolean[]{false}).alias("moveNodes", "move nodes to another node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNodeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodeOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616473L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("node", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNodeTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodeTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056cL)).super_("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).parents("jetbrains.mps.lang.refactoring.structure.RefactoringTarget").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(6895093993902310806L, "concept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), true)).references("concept").alias("node", "").create();
  /*package*/ final ConceptDescriptor myConceptNodesOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.NodesOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616475L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("nodes", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptOperationContextOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.OperationContextOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616477L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("operationContext", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ProjectOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616479L)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("mpsProject", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRefactoring = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.Refactoring", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.lang.structure.structure.IConceptAspect", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x24614259e94f0c84L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6895093993902236371L, "userFriendlyName")).properties("userFriendlyName").referenceDescriptors(new ConceptDescriptorBuilder.Ref(6895093993902236387L, "overrides", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L), true)).references("overrides").childDescriptors(new ConceptDescriptorBuilder.Link(6895093993902310998L, "target", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L), false, false, false), new ConceptDescriptorBuilder.Link(6895093993902236376L, "parameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L), true, true, false), new ConceptDescriptorBuilder.Link(6895093993902236377L, "field", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0662L), true, true, false), new ConceptDescriptorBuilder.Link(5497648299878741976L, "initBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e4d77d2L), true, false, false), new ConceptDescriptorBuilder.Link(6895093993902236381L, "doRefactorBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff4a9da3L), false, false, false), new ConceptDescriptorBuilder.Link(616550569928923871L, "modelsToGenerateBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x175aa0f4225aa61fL), true, false, false), new ConceptDescriptorBuilder.Link(2058726427123891193L, "doWhenDoneBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1c9210c7226dbbf4L), true, false, false), new ConceptDescriptorBuilder.Link(1347577327951503399L, "affectedNodesBlock", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1179d272ac6L), true, false, false)).children(new String[]{"target", "parameter", "field", "initBlock", "doRefactorBlock", "modelsToGenerateBlock", "doWhenDoneBlock", "affectedNodesBlock"}, new boolean[]{false, true, true, false, false, false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringAction = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringAction", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x2cfffca8ff395f2fL)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptRefactoringArgument = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringArgument", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptRefactoringArgumentReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptRefactoringContext_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61724aL)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("refactoringContext", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringField = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringField", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0662L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", "jetbrains.mps.lang.refactoring.structure.RefactoringArgument").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringFieldReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringFieldReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e483aaaL)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableReference").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableReference", "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", "jetbrains.mps.lang.refactoring.structure.RefactoringArgument").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL)).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringParameterReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringParameterReference", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77cda06L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(6895093993902496263L, "refactoringParameter", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L), false)).references("refactoringParameter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRefactoringTarget = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RefactoringTarget", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6895093993902310999L, "allowMultiple")).properties("allowMultiple").childDescriptors(new ConceptDescriptorBuilder.Link(5497648299878742039L, "isApplicableBlock", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L), true, false, false)).children(new String[]{"isApplicableBlock"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptRepositoryOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.RepositoryOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x526920001de2794bL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("repository", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptScopeOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.ScopeOperation", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61647bL)).super_("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").super_(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).parents("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation").parentIds(MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL)).alias("scope", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptUpdateModelProcedure = new ConceptDescriptorBuilder("jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure", MetaIdFactory.conceptId(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x11710c75c77L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(1198577431631L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"argument"}, new boolean[]{false}).alias("updateModel(...)", "").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractMoveExpression, myConceptAbstractMoveNodeExpression, myConceptAbstractMoveNodesExpression, myConceptAffectedNodesClause, myConceptConceptFunctionParameter_Model, myConceptConceptFunctionParameter_Module, myConceptConceptFunctionParameter_SModel, myConceptConceptFunctionParameter_SNode, myConceptContextMemberOperation, myConceptContextType, myConceptCreateRefactoringContext, myConceptDoRefactorClause, myConceptDoWhenDoneClause, myConceptExecuteRefactoringStatement, myConceptGetModelsToUpdateClause, myConceptInitClause, myConceptIsApplicableToModelClause, myConceptIsApplicableToModuleClause, myConceptIsApplicableToNodeClause, myConceptIsRefactoringApplicable, myConceptMainProjectOperation, myConceptModelDescriptorOperation, myConceptModelTarget, myConceptModelsToGenerateByDefault, myConceptModelsToGenerateClause, myConceptModuleOperation, myConceptModuleTarget, myConceptMoveNodeToModelExpression, myConceptMoveNodeToNodeExpression, myConceptMoveNodesToModelExpression, myConceptMoveNodesToNodeExpression, myConceptNodeOperation, myConceptNodeTarget, myConceptNodesOperation, myConceptOperationContextOperation, myConceptProjectOperation, myConceptRefactoring, myConceptRefactoringAction, myConceptRefactoringArgument, myConceptRefactoringArgumentReference, myConceptRefactoringContext_ConceptFunctionParameter, myConceptRefactoringField, myConceptRefactoringFieldReference, myConceptRefactoringParameter, myConceptRefactoringParameterReference, myConceptRefactoringTarget, myConceptRepositoryOperation, myConceptScopeOperation, myConceptUpdateModelProcedure);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0bc.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptAbstractMoveExpression;
          }
          break;
        case 1:
          if (true) {
            return myConceptAbstractMoveNodeExpression;
          }
          break;
        case 2:
          if (true) {
            return myConceptAbstractMoveNodesExpression;
          }
          break;
        case 3:
          if (true) {
            return myConceptAffectedNodesClause;
          }
          break;
        case 4:
          if (true) {
            return myConceptConceptFunctionParameter_Model;
          }
          break;
        case 5:
          if (true) {
            return myConceptConceptFunctionParameter_Module;
          }
          break;
        case 6:
          if (true) {
            return myConceptConceptFunctionParameter_SModel;
          }
          break;
        case 7:
          if (true) {
            return myConceptConceptFunctionParameter_SNode;
          }
          break;
        case 8:
          if (true) {
            return myConceptContextMemberOperation;
          }
          break;
        case 9:
          if (true) {
            return myConceptContextType;
          }
          break;
        case 10:
          if (true) {
            return myConceptCreateRefactoringContext;
          }
          break;
        case 11:
          if (true) {
            return myConceptDoRefactorClause;
          }
          break;
        case 12:
          if (true) {
            return myConceptDoWhenDoneClause;
          }
          break;
        case 13:
          if (true) {
            return myConceptExecuteRefactoringStatement;
          }
          break;
        case 14:
          if (true) {
            return myConceptGetModelsToUpdateClause;
          }
          break;
        case 15:
          if (true) {
            return myConceptInitClause;
          }
          break;
        case 16:
          if (true) {
            return myConceptIsApplicableToModelClause;
          }
          break;
        case 17:
          if (true) {
            return myConceptIsApplicableToModuleClause;
          }
          break;
        case 18:
          if (true) {
            return myConceptIsApplicableToNodeClause;
          }
          break;
        case 19:
          if (true) {
            return myConceptIsRefactoringApplicable;
          }
          break;
        case 20:
          if (true) {
            return myConceptMainProjectOperation;
          }
          break;
        case 21:
          if (true) {
            return myConceptModelDescriptorOperation;
          }
          break;
        case 22:
          if (true) {
            return myConceptModelTarget;
          }
          break;
        case 23:
          if (true) {
            return myConceptModelsToGenerateByDefault;
          }
          break;
        case 24:
          if (true) {
            return myConceptModelsToGenerateClause;
          }
          break;
        case 25:
          if (true) {
            return myConceptModuleOperation;
          }
          break;
        case 26:
          if (true) {
            return myConceptModuleTarget;
          }
          break;
        case 27:
          if (true) {
            return myConceptMoveNodeToModelExpression;
          }
          break;
        case 28:
          if (true) {
            return myConceptMoveNodeToNodeExpression;
          }
          break;
        case 29:
          if (true) {
            return myConceptMoveNodesToModelExpression;
          }
          break;
        case 30:
          if (true) {
            return myConceptMoveNodesToNodeExpression;
          }
          break;
        case 31:
          if (true) {
            return myConceptNodeOperation;
          }
          break;
        case 32:
          if (true) {
            return myConceptNodeTarget;
          }
          break;
        case 33:
          if (true) {
            return myConceptNodesOperation;
          }
          break;
        case 34:
          if (true) {
            return myConceptOperationContextOperation;
          }
          break;
        case 35:
          if (true) {
            return myConceptProjectOperation;
          }
          break;
        case 36:
          if (true) {
            return myConceptRefactoring;
          }
          break;
        case 37:
          if (true) {
            return myConceptRefactoringAction;
          }
          break;
        case 38:
          if (true) {
            return myConceptRefactoringArgument;
          }
          break;
        case 39:
          if (true) {
            return myConceptRefactoringArgumentReference;
          }
          break;
        case 40:
          if (true) {
            return myConceptRefactoringContext_ConceptFunctionParameter;
          }
          break;
        case 41:
          if (true) {
            return myConceptRefactoringField;
          }
          break;
        case 42:
          if (true) {
            return myConceptRefactoringFieldReference;
          }
          break;
        case 43:
          if (true) {
            return myConceptRefactoringParameter;
          }
          break;
        case 44:
          if (true) {
            return myConceptRefactoringParameterReference;
          }
          break;
        case 45:
          if (true) {
            return myConceptRefactoringTarget;
          }
          break;
        case 46:
          if (true) {
            return myConceptRepositoryOperation;
          }
          break;
        case 47:
          if (true) {
            return myConceptScopeOperation;
          }
          break;
        case 48:
          if (true) {
            return myConceptUpdateModelProcedure;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0bc = buildConceptIndices(MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ee3c478L, "jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eee67c1L, "jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174eeedfb6L, "jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1179d272ac6L, "jetbrains.mps.lang.refactoring.structure.AffectedNodesClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f5764daL, "jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0577L, "jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff551cd5L, "jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a059eL, "jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646dL, "jetbrains.mps.lang.refactoring.structure.ContextMemberOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b65b84aL, "jetbrains.mps.lang.refactoring.structure.ContextType"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x335c206b02bc2de5L, "jetbrains.mps.lang.refactoring.structure.CreateRefactoringContext"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x114ff4a9da3L, "jetbrains.mps.lang.refactoring.structure.DoRefactorClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1c9210c7226dbbf4L, "jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1fe4fcef62d0186cL, "jetbrains.mps.lang.refactoring.structure.ExecuteRefactoringStatement"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x119f1c05cbcL, "jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e4d77d2L, "jetbrains.mps.lang.refactoring.structure.InitClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1199f56b378L, "jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0571L, "jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0598L, "jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5b9318cd86fd917dL, "jetbrains.mps.lang.refactoring.structure.IsRefactoringApplicable"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x709995bad7715796L, "jetbrains.mps.lang.refactoring.structure.MainProjectOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61646fL, "jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056aL, "jetbrains.mps.lang.refactoring.structure.ModelTarget"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x3c55f2dab56d441dL, "jetbrains.mps.lang.refactoring.structure.ModelsToGenerateByDefault"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x175aa0f4225aa61fL, "jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616471L, "jetbrains.mps.lang.refactoring.structure.ModuleOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056bL, "jetbrains.mps.lang.refactoring.structure.ModuleTarget"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef1677bL, "jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef58749L, "jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174ef7a718L, "jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x1174efa95a1L, "jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616473L, "jetbrains.mps.lang.refactoring.structure.NodeOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a056cL, "jetbrains.mps.lang.refactoring.structure.NodeTarget"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616475L, "jetbrains.mps.lang.refactoring.structure.NodesOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616477L, "jetbrains.mps.lang.refactoring.structure.OperationContextOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b616479L, "jetbrains.mps.lang.refactoring.structure.ProjectOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L, "jetbrains.mps.lang.refactoring.structure.Refactoring"), MetaAdapterFactory.getInterfaceConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x2cfffca8ff395f2fL, "jetbrains.mps.lang.refactoring.structure.RefactoringAction"), MetaAdapterFactory.getInterfaceConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327d5dL, "jetbrains.mps.lang.refactoring.structure.RefactoringArgument"), MetaAdapterFactory.getInterfaceConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L, "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61724aL, "jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0662L, "jetbrains.mps.lang.refactoring.structure.RefactoringField"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x4c4b92003e483aaaL, "jetbrains.mps.lang.refactoring.structure.RefactoringFieldReference"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0664L, "jetbrains.mps.lang.refactoring.structure.RefactoringParameter"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77cda06L, "jetbrains.mps.lang.refactoring.structure.RefactoringParameterReference"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a77a0569L, "jetbrains.mps.lang.refactoring.structure.RefactoringTarget"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x526920001de2794bL, "jetbrains.mps.lang.refactoring.structure.RepositoryOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6e6245e06b61647bL, "jetbrains.mps.lang.refactoring.structure.ScopeOperation"), MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x11710c75c77L, "jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure"));
}
