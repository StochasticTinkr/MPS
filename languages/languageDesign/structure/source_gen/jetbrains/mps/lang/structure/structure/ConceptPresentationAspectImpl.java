package jetbrains.mps.lang.structure.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_AbstractConceptDeclaration = new ConceptPresentationBuilder().deprecated(MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x2237c3bc85b3755cL, "helpURL"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x46ab0ad5826c74caL, "conceptAlias"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x403a32c5772bbe20L, "conceptShortDescription"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x403a32c5772c7ec2L, "abstract"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x403a32c5772c7ec7L, "final"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x16096a174f259419L, "intConceptId"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x5d2e6079771f8cc0L, "conceptId"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x7cf94884f2237423L, "languageId"), MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x45b8a887cfd27b2cL, "sourceNode")).create();
  private final ConceptPresentation props_AggregationLinkDeclarationScopeKind = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AttributeInfo = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AttributeInfo_AttributedConcept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AttributeInfo_IsMultiple = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptDeclaration = new ConceptPresentationBuilder().deprecated(MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L, 0xff49c1d648L, "rootable"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L, 0x10e328118ddL, "iconPath"), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L, 0x4b014033eedc8a48L, "staticScope"), MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L, 0xf979be93cfL, "extends")).icon(IconContainer.RESOURCE_a0a0f).create();
  private final ConceptPresentation props_ConstrainedDataTypeDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0g).create();
  private final ConceptPresentation props_DataTypeDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DeprecatedNodeAnnotation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DocumentationObjective = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DocumentationObjectiveRef = new ConceptPresentationBuilder().shortDesc("smart reference to documentable target").create();
  private final ConceptPresentation props_DocumentedNodeAnnotation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EnumerationDataTypeDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0m).create();
  private final ConceptPresentation props_EnumerationMemberDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IConceptAspect = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IStructureDeprecatable = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InterfaceConceptDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0q).create();
  private final ConceptPresentation props_InterfaceConceptReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LinkDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0s).create();
  private final ConceptPresentation props_PrimitiveDataTypeDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0t).create();
  private final ConceptPresentation props_PropertyDeclaration = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0u).create();
  private final ConceptPresentation props_ReferenceLinkDeclartionScopeKind = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractConceptDeclaration:
        return props_AbstractConceptDeclaration;
      case LanguageConceptSwitch.AggregationLinkDeclarationScopeKind:
        return props_AggregationLinkDeclarationScopeKind;
      case LanguageConceptSwitch.AttributeInfo:
        return props_AttributeInfo;
      case LanguageConceptSwitch.AttributeInfo_AttributedConcept:
        return props_AttributeInfo_AttributedConcept;
      case LanguageConceptSwitch.AttributeInfo_IsMultiple:
        return props_AttributeInfo_IsMultiple;
      case LanguageConceptSwitch.ConceptDeclaration:
        return props_ConceptDeclaration;
      case LanguageConceptSwitch.ConstrainedDataTypeDeclaration:
        return props_ConstrainedDataTypeDeclaration;
      case LanguageConceptSwitch.DataTypeDeclaration:
        return props_DataTypeDeclaration;
      case LanguageConceptSwitch.DeprecatedNodeAnnotation:
        return props_DeprecatedNodeAnnotation;
      case LanguageConceptSwitch.DocumentationObjective:
        return props_DocumentationObjective;
      case LanguageConceptSwitch.DocumentationObjectiveRef:
        return props_DocumentationObjectiveRef;
      case LanguageConceptSwitch.DocumentedNodeAnnotation:
        return props_DocumentedNodeAnnotation;
      case LanguageConceptSwitch.EnumerationDataTypeDeclaration:
        return props_EnumerationDataTypeDeclaration;
      case LanguageConceptSwitch.EnumerationMemberDeclaration:
        return props_EnumerationMemberDeclaration;
      case LanguageConceptSwitch.IConceptAspect:
        return props_IConceptAspect;
      case LanguageConceptSwitch.IStructureDeprecatable:
        return props_IStructureDeprecatable;
      case LanguageConceptSwitch.InterfaceConceptDeclaration:
        return props_InterfaceConceptDeclaration;
      case LanguageConceptSwitch.InterfaceConceptReference:
        return props_InterfaceConceptReference;
      case LanguageConceptSwitch.LinkDeclaration:
        return props_LinkDeclaration;
      case LanguageConceptSwitch.PrimitiveDataTypeDeclaration:
        return props_PrimitiveDataTypeDeclaration;
      case LanguageConceptSwitch.PropertyDeclaration:
        return props_PropertyDeclaration;
      case LanguageConceptSwitch.ReferenceLinkDeclartionScopeKind:
        return props_ReferenceLinkDeclartionScopeKind;
    }
    return null;
  }
}
