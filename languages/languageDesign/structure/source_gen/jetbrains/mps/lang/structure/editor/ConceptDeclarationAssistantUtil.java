package jetbrains.mps.lang.structure.editor;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.Queue;
import jetbrains.mps.internal.collections.runtime.QueueSequence;
import java.util.LinkedList;
import jetbrains.mps.lang.structure.behavior.AbstractConceptDeclaration__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ConceptDeclarationAssistantUtil {
  private SNode myCocnept;

  public ConceptDeclarationAssistantUtil(SNode concept) {
    myCocnept = concept;
  }

  public SNode getNotEmptySuperConcept() {
    Queue<SNode> candidates = QueueSequence.fromQueueWithValues(new LinkedList<SNode>(), AbstractConceptDeclaration__BehaviorDescriptor.getImmediateSuperconcepts_idhMuxyK2.invoke(myCocnept));
    while (QueueSequence.fromQueue(candidates).isNotEmpty()) {
      SNode superConcept = QueueSequence.fromQueue(candidates).removeFirstElement();
      if (superConcept == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1133920641626") || superConcept == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1169194658468")) {
        continue;
      }
      // TODO: check if the model containint acd is writable 
      if (ListSequence.fromList(SLinkOperations.getChildren(superConcept, MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6bL, "linkDeclaration"))).isNotEmpty() || ListSequence.fromList(SLinkOperations.getChildren(superConcept, MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6cL, "propertyDeclaration"))).isNotEmpty()) {
        return superConcept;
      }
    }
    return null;
  }
}
