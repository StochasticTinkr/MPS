package jetbrains.mps.lang.structure.util;

/*Generated by MPS */

import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNodeId;

/**
 * Generates unique ids. Ids differ even from id of an optional parameter.
 * Should be used when error in ID is already detected.
 * If optional parameter is specified, the first id to try is got from node id.
 */
public class ConceptIdHelper {
  public static long generateConceptId(@Nullable SModel m, @Nullable SNode c) {
    final Wrappers._long result = new Wrappers._long(ConceptIdHelper.getDefaultIdFromNode(c));
    while (ListSequence.fromList(SModelOperations.roots(m, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_huw3go_a0a0a0a0a0b0a(SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x5d2e6079771f8cc0L, "conceptId")), result.value + "");
      }
    })) {
      result.value = randomLong();
    }
    return result.value;
  }

  public static long generatePropertyId(@Nullable SNode c, SNode p) {
    final Wrappers._long result = new Wrappers._long(ConceptIdHelper.getDefaultIdFromNode(p));
    while (ListSequence.fromList(SLinkOperations.getChildren(c, MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6cL, "propertyDeclaration"))).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_huw3go_a0a0a0a0a0b0c(SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL, 0x35a81382d82a4d9L, "propertyId")), result.value + "");
      }
    })) {
      result.value = randomLong();
    }
    return result.value;
  }

  public static long generateLinkId(@Nullable SNode c, SNode l) {
    final Wrappers._long result = new Wrappers._long(ConceptIdHelper.getDefaultIdFromNode(l));
    while (ListSequence.fromList(SLinkOperations.getChildren(c, MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0xf979c3ba6bL, "linkDeclaration"))).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_huw3go_a0a0a0a0a0b0e(SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0x35a81382d82a4e4L, "linkId")), result.value + "");
      }
    })) {
      result.value = randomLong();
    }
    return result.value;
  }

  private static long getDefaultIdFromNode(SNode c) {
    long result = randomLong();
    if (c != null) {
      SNodeId nid = c.getNodeId();
      if (nid instanceof jetbrains.mps.smodel.SNodeId.Regular) {
        result = ((jetbrains.mps.smodel.SNodeId.Regular) nid).getId();
      }
    }
    return result;
  }

  private static long randomLong() {
    return ((long) (Math.random() * Long.MAX_VALUE));
  }
  private static boolean eq_huw3go_a0a0a0a0a0b0a(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
  private static boolean eq_huw3go_a0a0a0a0a0b0c(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
  private static boolean eq_huw3go_a0a0a0a0a0b0e(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
