package jetbrains.mps.lang.structure.constraints;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.util.annotation.ToRemove;
import jetbrains.mps.lang.scopes.runtime.SimpleScope;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/**
 * 
 * @deprecated Use {@link jetbrains.mps.lang.structure.constraints.Scopes#forConcepts(SNode, SAbstractConcept) }
 */
@Deprecated
@ToRemove(version = 3.4)
public class ConceptsScope extends SimpleScope {
  @Deprecated
  public ConceptsScope(SNode contextNode, SAbstractConcept metaConcept) {
    super(getAvailableConcepts(contextNode, metaConcept));
  }
  /**
   * 
   * @deprecated Use {@link jetbrains.mps.lang.structure.constraints.Concepts#getAvailableConcepts(SNode, SAbstractConcept) }
   */
  @Deprecated
  public static Iterable<SNode> getAvailableConcepts(SNode contextNode, SAbstractConcept metaConcept) {
    return Concepts.getAvailableConcepts(contextNode, metaConcept);
  }
  @Nullable
  @Override
  public String getReferenceText(@NotNull SNode target) {
    return (String) INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SNodeOperations.cast(target, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept")));
  }
}
