package jetbrains.mps.lang.structure.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Arrays;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "jetbrains.mps.lang.structure";

  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (Arrays.binarySearch(stringSwitchCases_tpto26_a0a0a0c, concept.getName())) {
        case 0:
          return Collections.<NodeFactory>singletonList(new SetStructureIds.NodeFactory_5424895381998988571());
        case 1:
          return Collections.<NodeFactory>singletonList(new STRL_node_factories.NodeFactory_1163111194508());
        case 2:
          return Arrays.asList(new NodeFactory[]{new SetStructureIds.NodeFactory_5424895381999015757(), new DeclarationFactories.NodeFactory_850862791448416028()});
        case 3:
          return Arrays.asList(new NodeFactory[]{new SetStructureIds.NodeFactory_5424895381999015715(), new DeclarationFactories.NodeFactory_850862791450337452()});
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }
  private static String[] stringSwitchCases_tpto26_a0a0a0c = new String[]{"AbstractConceptDeclaration", "ConceptDeclaration", "LinkDeclaration", "PropertyDeclaration"};
}
