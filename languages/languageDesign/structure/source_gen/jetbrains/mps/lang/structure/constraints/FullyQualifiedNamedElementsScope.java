package jetbrains.mps.lang.structure.constraints;

/*Generated by MPS */

import jetbrains.mps.lang.scopes.runtime.SimpleScope;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/**
 * A simple scope for a sequence of concepts which uses the concept's fully qualified name as its reference text.
 */
public class FullyQualifiedNamedElementsScope extends SimpleScope {
  public FullyQualifiedNamedElementsScope(Iterable<SNode> nodes) {
    super(nodes);
  }
  public FullyQualifiedNamedElementsScope(SNode node) {
    super(node);
  }

  @Nullable
  @Override
  public String getReferenceText(@NotNull SNode target) {
    return (String) INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SNodeOperations.cast(target, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept")));
  }
}
