package jetbrains.mps.baseLanguage.builders.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AsBuilderStatement = 0;
  public static final int AsTypeBuilder = 1;
  public static final int BaseSimpleBuilderDeclaration = 2;
  public static final int BeanBuilder = 3;
  public static final int BeanPropertyBuilder = 4;
  public static final int Builder = 5;
  public static final int BuilderContainer = 6;
  public static final int BuilderCreator = 7;
  public static final int BuilderStatement = 8;
  public static final int ResultExpression = 9;
  public static final int SimpleBuilder = 10;
  public static final int SimpleBuilderChild = 11;
  public static final int SimpleBuilderChildExpression = 12;
  public static final int SimpleBuilderDeclaration = 13;
  public static final int SimpleBuilderExpression = 14;
  public static final int SimpleBuilderExtensionDeclaration = 15;
  public static final int SimpleBuilderParameter = 16;
  public static final int SimpleBuilderParameterReference = 17;
  public static final int SimpleBuilderParentExpression = 18;
  public static final int SimpleBuilderProperty = 19;
  public static final int SimpleBuilderPropertyBuilder = 20;
  public static final int SimpleBuilderPropertyExpression = 21;
  public static final int SimpleBuilderPropertyParent = 22;
  public static final int SimpleBuilderPropertyValue = 23;
  public static final int SimpleBuilders = 24;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x132aa4d8a3f7441cL, 0xa7eb3fce23492c6aL);
    builder.put(0x6c473c8a08195e1cL, AsBuilderStatement);
    builder.put(0x4acc05c8d721d314L, AsTypeBuilder);
    builder.put(0x56cd40dfa78d35b1L, BaseSimpleBuilderDeclaration);
    builder.put(0x5c83892592e1ebbfL, BeanBuilder);
    builder.put(0x252efd34f8a58ec7L, BeanPropertyBuilder);
    builder.put(0x61f1de4171d2bf0bL, Builder);
    builder.put(0x6c473c8a081aa9e4L, BuilderContainer);
    builder.put(0x61f1de4171d2bf0eL, BuilderCreator);
    builder.put(0x61f1de4171d2bf23L, BuilderStatement);
    builder.put(0x6524536b2e18dae0L, ResultExpression);
    builder.put(0x6524536b2e24c0baL, SimpleBuilder);
    builder.put(0x6524536b2e1d353aL, SimpleBuilderChild);
    builder.put(0x6524536b2e1d353eL, SimpleBuilderChildExpression);
    builder.put(0x6524536b2e1a1e38L, SimpleBuilderDeclaration);
    builder.put(0x6524536b2e1d3540L, SimpleBuilderExpression);
    builder.put(0x56cd40dfa78dcaf3L, SimpleBuilderExtensionDeclaration);
    builder.put(0x4b4c01fdd9010958L, SimpleBuilderParameter);
    builder.put(0x4b4c01fdd9029ce4L, SimpleBuilderParameterReference);
    builder.put(0x6524536b2e1d353cL, SimpleBuilderParentExpression);
    builder.put(0x4acc05c8d72870eaL, SimpleBuilderProperty);
    builder.put(0x4acc05c8d72ec05fL, SimpleBuilderPropertyBuilder);
    builder.put(0x4acc05c8d72c48e2L, SimpleBuilderPropertyExpression);
    builder.put(0x4acc05c8d72c5e70L, SimpleBuilderPropertyParent);
    builder.put(0x4acc05c8d72c5e8aL, SimpleBuilderPropertyValue);
    builder.put(0x6524536b2e1a1e3bL, SimpleBuilders);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
