package jetbrains.mps.baseLanguage.extensionMethods.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(9);
  /*package*/ final ConceptDescriptor myConceptBaseExtensionMethodContainer = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L)).super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL)).parents("jetbrains.mps.baseLanguage.structure.GenericDeclaration", "jetbrains.mps.baseLanguage.structure.IVisible", "jetbrains.mps.baseLanguage.structure.IMemberContainer").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11638b31955L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6f5433076549f51bL, "methods", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63365e7f9L), true, true, false), new ConceptDescriptorBuilder.Link(0x1b622d944bbb1c5fL, "staticFields", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1b622d944bc0aff7L), true, true, false)).children(new String[]{"methods", "staticFields"}, new boolean[]{true, true}).abstract_().sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "8022092943110829337")).create();
  /*package*/ final ConceptDescriptor myConceptExtensionMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodCall", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63359483bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.baseLanguage.structure.IMethodCall").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "1550313277221324859")).create();
  /*package*/ final ConceptDescriptor myConceptExtensionMethodDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63365e7f9L)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", "jetbrains.mps.baseLanguage.structure.ClassifierMember").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6f54330765374812L, "extendedType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false)).children(new String[]{"extendedType"}, new boolean[]{false}).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "1550313277222152185")).create();
  /*package*/ final ConceptDescriptor myConceptExtensionStaticFieldDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionStaticFieldDeclaration", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1b622d944bc0aff7L)).super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL)).parents("jetbrains.mps.baseLanguage.structure.VariableDeclaration").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL)).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "1973189701691027447")).create();
  /*package*/ final ConceptDescriptor myConceptExtensionStaticFieldReference = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionStaticFieldReference", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1b622d944bbdfbc7L)).super_("jetbrains.mps.baseLanguage.structure.VariableReference").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L)).parents("jetbrains.mps.baseLanguage.structure.VariableReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "1973189701690850247")).create();
  /*package*/ final ConceptDescriptor myConceptLocalExtendedMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.LocalExtendedMethodCall", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6aa7ca55518b9170L)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodCall").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).alias("", "local extended method call").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "7685333756920172912")).create();
  /*package*/ final ConceptDescriptor myConceptSimpleExtensionMethodsContainer = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.SimpleExtensionMethodsContainer", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076532f593L)).super_("jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer").version(1).super_(MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L)).parents("jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer").parentIds(MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L)).rootable().alias("Simple Extension Method Container", "").sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "8022092943109322131")).create();
  /*package*/ final ConceptDescriptor myConceptThisExtensionExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.ThisExtensionExpression", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x2e076d2695911333L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("this", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "3316739663067157299")).create();
  /*package*/ final ConceptDescriptor myConceptTypeExtension = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.extensionMethods.structure.TypeExtension", MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1a4abaca2a94ce10L)).super_("jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer").version(1).super_(MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L)).parents("jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer").parentIds(MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1a4abaca2a959cfeL, "type", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"type"}, new boolean[]{false}).rootable().alias("type extension", "").sourceNode(new SNodePointer("r:4f6f8ed5-c3d7-49f4-b0dd-d70029feffdf(jetbrains.mps.baseLanguage.extensionMethods.structure)", "1894531970723270160")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptBaseExtensionMethodContainer.getId(), 0);
    myIndexMap.put(myConceptExtensionMethodCall.getId(), 1);
    myIndexMap.put(myConceptExtensionMethodDeclaration.getId(), 2);
    myIndexMap.put(myConceptExtensionStaticFieldDeclaration.getId(), 3);
    myIndexMap.put(myConceptExtensionStaticFieldReference.getId(), 4);
    myIndexMap.put(myConceptLocalExtendedMethodCall.getId(), 5);
    myIndexMap.put(myConceptSimpleExtensionMethodsContainer.getId(), 6);
    myIndexMap.put(myConceptThisExtensionExpression.getId(), 7);
    myIndexMap.put(myConceptTypeExtension.getId(), 8);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseExtensionMethodContainer, myConceptExtensionMethodCall, myConceptExtensionMethodDeclaration, myConceptExtensionStaticFieldDeclaration, myConceptExtensionStaticFieldReference, myConceptLocalExtendedMethodCall, myConceptSimpleExtensionMethodsContainer, myConceptThisExtensionExpression, myConceptTypeExtension);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptBaseExtensionMethodContainer;
      case 1:
        return myConceptExtensionMethodCall;
      case 2:
        return myConceptExtensionMethodDeclaration;
      case 3:
        return myConceptExtensionStaticFieldDeclaration;
      case 4:
        return myConceptExtensionStaticFieldReference;
      case 5:
        return myConceptLocalExtendedMethodCall;
      case 6:
        return myConceptSimpleExtensionMethodsContainer;
      case 7:
        return myConceptThisExtensionExpression;
      case 8:
        return myConceptTypeExtension;
      default:
        throw new IllegalStateException();
    }
  }
}
