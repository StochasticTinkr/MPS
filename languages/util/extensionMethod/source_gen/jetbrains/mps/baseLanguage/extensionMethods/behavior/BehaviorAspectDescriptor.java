package jetbrains.mps.baseLanguage.extensionMethods.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myExtensionMethodCall__BehaviorDescriptor = new ExtensionMethodCall__BehaviorDescriptor();
  private final BHDescriptor myExtensionMethodDeclaration__BehaviorDescriptor = new ExtensionMethodDeclaration__BehaviorDescriptor();
  private final BHDescriptor myExtensionStaticFieldReference__BehaviorDescriptor = new ExtensionStaticFieldReference__BehaviorDescriptor();
  private final BHDescriptor myExtensionStaticFieldDeclaration__BehaviorDescriptor = new ExtensionStaticFieldDeclaration__BehaviorDescriptor();
  private final BHDescriptor myBaseExtensionMethodContainer__BehaviorDescriptor = new BaseExtensionMethodContainer__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0i = concept;
    switch (index_846f5o_a0i.index(cncpt_a0i)) {
      case 0:
        return myBaseExtensionMethodContainer__BehaviorDescriptor;
      case 1:
        return myExtensionMethodCall__BehaviorDescriptor;
      case 2:
        return myExtensionMethodDeclaration__BehaviorDescriptor;
      case 3:
        return myExtensionStaticFieldDeclaration__BehaviorDescriptor;
      case 4:
        return myExtensionStaticFieldReference__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0i = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L), MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63359483bL), MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63365e7f9L), MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1b622d944bc0aff7L), MetaIdFactory.conceptId(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1b622d944bbdfbc7L)).seal();
}
