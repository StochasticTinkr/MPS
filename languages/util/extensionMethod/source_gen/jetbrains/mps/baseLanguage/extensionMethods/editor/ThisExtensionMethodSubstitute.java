package jetbrains.mps.baseLanguage.extensionMethods.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.substitute.ConstraintsFilteringSubstituteMenuPartDecorator;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.lang.editor.menus.substitute.SingleItemSubstituteMenuPart;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuItem;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.presentation.NodePresentationUtil;
import jetbrains.mps.smodel.runtime.IconResource;
import jetbrains.mps.smodel.runtime.IconResourceUtil;

public class ThisExtensionMethodSubstitute extends SubstituteMenuBase {
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new ThisExtensionMethodSubstitute.SubstituteMenuPart_Group_7qarbi_a());
    return result;
  }
  public class SubstituteMenuPart_Group_7qarbi_a extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
    @Override
    protected boolean isApplicable(SubstituteMenuContext _context) {
      if ((SNodeOperations.getNodeAncestorWhereConceptInList(_context.getParentNode(), new SAbstractConcept[]{MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L, "jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer")}, true, false) != null)) {
        return true;
      }
      return false;
    }

    @Override
    protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
      return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new ConstraintsFilteringSubstituteMenuPartDecorator(new ThisExtensionMethodSubstitute.SubstituteMenuPart_Group_7qarbi_a.SubstituteMenuPart_Parameterized_7qarbi_a0(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression")));
    }
    private class SubstituteMenuPart_Parameterized_7qarbi_a0 extends ParameterizedMenuPart<SNode, SubstituteMenuItem, SubstituteMenuContext> {
      @NotNull
      @Override
      protected List<SubstituteMenuItem> createItems(SNode parameter, SubstituteMenuContext context) {
        return new ThisExtensionMethodSubstitute.SubstituteMenuPart_Group_7qarbi_a.SubstituteMenuPart_Parameterized_7qarbi_a0.SubstituteMenuPart_Action_7qarbi_a0a(parameter).createItems(context);
      }
      @Nullable
      @Override
      protected Iterable<? extends SNode> getParameters(SubstituteMenuContext _context) {
        return SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getParentNode(), MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x6f5433076549f519L, "jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer"), false, false), MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63365e7f9L, "jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration"), false, new SAbstractConcept[]{});
      }
      private class SubstituteMenuPart_Action_7qarbi_a0a extends SingleItemSubstituteMenuPart {
        private final SNode myParameterObject;
        public SubstituteMenuPart_Action_7qarbi_a0a(SNode parameterObject) {
          myParameterObject = parameterObject;
        }

        @Nullable
        @Override
        protected SubstituteMenuItem createItem(SubstituteMenuContext _context) {
          return new ThisExtensionMethodSubstitute.SubstituteMenuPart_Group_7qarbi_a.SubstituteMenuPart_Parameterized_7qarbi_a0.SubstituteMenuPart_Action_7qarbi_a0a.Item(_context);
        }
        private class Item extends DefaultSubstituteMenuItem {
          private final SubstituteMenuContext _context;
          public Item(SubstituteMenuContext context) {
            super(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression"), context.getParentNode(), context.getCurrentTargetNode(), context.getEditorContext());
            _context = context;
          }

          @Nullable
          @Override
          public SNode createNode(@NotNull String pattern) {
            SNode operationExpression = SNodeFactoryOperations.createNewNode(_context.getModel(), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression")), null);
            SLinkOperations.setTarget(SNodeFactoryOperations.setNewChild(operationExpression, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, "operation"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63359483bL, "jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodCall"))), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301adL, "baseMethodDeclaration"), SNodeOperations.cast(myParameterObject, MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x1583d1b63365e7f9L, "jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration")));
            SNode thisExpression = SNodeFactoryOperations.setNewChild(operationExpression, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, "operand"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L, 0x2e076d2695911333L, "jetbrains.mps.baseLanguage.extensionMethods.structure.ThisExtensionExpression")));
            return operationExpression;
          }
          @Nullable
          @Override
          public String getMatchingText(@NotNull String pattern) {
            if (myParameterObject instanceof SNode) {
              return NodePresentationUtil.matchingText((SNode) myParameterObject);
            }
            return "" + myParameterObject;
          }
          @Nullable
          @Override
          public String getDescriptionText(@NotNull String pattern) {
            if (myParameterObject instanceof SNode) {
              return NodePresentationUtil.descriptionText((SNode) myParameterObject);
            }
            return "" + myParameterObject;
          }
          @Nullable
          @Override
          public IconResource getIcon(@NotNull String pattern) {
            if (myParameterObject instanceof SNode) {
              return IconResourceUtil.getIconResourceForNode(((SNode) myParameterObject));
            }
            return null;
          }
        }
      }

    }
  }
}
