package jetbrains.mps.baseLanguage.extensionMethods.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BaseExtensionMethodContainer = 0;
  public static final int ExtensionMethodCall = 1;
  public static final int ExtensionMethodDeclaration = 2;
  public static final int ExtensionStaticFieldDeclaration = 3;
  public static final int ExtensionStaticFieldReference = 4;
  public static final int LocalExtendedMethodCall = 5;
  public static final int SimpleExtensionMethodsContainer = 6;
  public static final int ThisExtensionExpression = 7;
  public static final int TypeExtension = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x5dc5fc0d37ef4782L, 0x81928b5ce1f69f80L);
    builder.put(0x6f5433076549f519L, BaseExtensionMethodContainer);
    builder.put(0x1583d1b63359483bL, ExtensionMethodCall);
    builder.put(0x1583d1b63365e7f9L, ExtensionMethodDeclaration);
    builder.put(0x1b622d944bc0aff7L, ExtensionStaticFieldDeclaration);
    builder.put(0x1b622d944bbdfbc7L, ExtensionStaticFieldReference);
    builder.put(0x6aa7ca55518b9170L, LocalExtendedMethodCall);
    builder.put(0x6f5433076532f593L, SimpleExtensionMethodsContainer);
    builder.put(0x2e076d2695911333L, ThisExtensionExpression);
    builder.put(0x1a4abaca2a94ce10L, TypeExtension);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
