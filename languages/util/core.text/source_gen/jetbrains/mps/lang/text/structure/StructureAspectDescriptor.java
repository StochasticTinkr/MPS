package jetbrains.mps.lang.text.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptLine = createDescriptorForLine();
  /*package*/ final ConceptDescriptor myConceptNodeWrapperElement = createDescriptorForNodeWrapperElement();
  /*package*/ final ConceptDescriptor myConceptText = createDescriptorForText();
  /*package*/ final ConceptDescriptor myConceptTextElement = createDescriptorForTextElement();
  /*package*/ final ConceptDescriptor myConceptWord = createDescriptorForWord();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptLine, myConceptNodeWrapperElement, myConceptText, myConceptTextElement, myConceptWord);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Line:
        return myConceptLine;
      case LanguageConceptSwitch.NodeWrapperElement:
        return myConceptNodeWrapperElement;
      case LanguageConceptSwitch.Text:
        return myConceptText;
      case LanguageConceptSwitch.TextElement:
        return myConceptTextElement;
      case LanguageConceptSwitch.Word:
        return myConceptWord;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.text", "Line", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x2331694e561af166L);
    b.class_(false, false, false);
    b.origin("r:59e90602-6655-4552-86eb-441a42a9a0e4(jetbrains.mps.lang.text.structure)/2535923850359271782");
    b.version(2);
    b.aggregate("elements", 0x2331694e561af167L).target(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35ee7L).optional(false).ordered(true).multiple(true).origin("2535923850359271783").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeWrapperElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.text", "NodeWrapperElement", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x2b7b49e536031fe9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.text.structure.TextElement", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35ee7L);
    b.origin("r:59e90602-6655-4552-86eb-441a42a9a0e4(jetbrains.mps.lang.text.structure)/3133179214568824809");
    b.version(2);
    b.aggregate("node", 0x2b7b49e536031feaL).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(true).ordered(true).multiple(false).origin("3133179214568824810").done();
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForText() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.text", "Text", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x2331694e5619f411L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x38518aff8a105fd6L);
    b.origin("r:59e90602-6655-4552-86eb-441a42a9a0e4(jetbrains.mps.lang.text.structure)/2535923850359206929");
    b.version(2);
    b.aggregate("lines", 0x2331694e561a03b8L).target(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x2331694e561af166L).optional(false).ordered(true).multiple(true).origin("2535923850359210936").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.text", "TextElement", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35ee7L);
    b.class_(false, true, false);
    b.origin("r:59e90602-6655-4552-86eb-441a42a9a0e4(jetbrains.mps.lang.text.structure)/155656958578482919");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.text", "Word", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35f04L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.text.structure.TextElement", 0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35ee7L);
    b.origin("r:59e90602-6655-4552-86eb-441a42a9a0e4(jetbrains.mps.lang.text.structure)/155656958578482948");
    b.version(2);
    b.prop("value", 0x229012ddae35f05L, "155656958578482949");
    b.prop("bold", 0x57d1fa7f2af1d47eL, "6328114375520539774");
    b.prop("italic", 0x57d1fa7f2af1d481L, "6328114375520539777");
    b.prop("underlined", 0x57d1fa7f2af1d494L, "6328114375520539796");
    b.prop("url", 0x57d1fa7f2af1d485L, "6328114375520539781");
    return b.create();
  }
}
