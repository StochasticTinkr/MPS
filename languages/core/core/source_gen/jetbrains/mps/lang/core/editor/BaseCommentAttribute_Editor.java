package jetbrains.mps.lang.core.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.OldNewCompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.OldChildNodeSubstituteInfoHolder;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.openapi.editor.menus.transformation.MenuLookup;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import java.util.Collection;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SLanguage;
import java.util.Collections;
import jetbrains.mps.lang.editor.menus.transformation.DefaultEmptyCellMenu;

public class BaseCommentAttribute_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_si1ien_a(editorContext, node);
  }
  private EditorCell createCollection_si1ien_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_si1ien_a");
    editorCell.setBig(true);
    BaseCommentAttribute_Actions.setCellActions(editorCell, node, editorContext);
    editorCell.addEditorCell(this.createRefNode_si1ien_a0(editorContext, node));
    return editorCell;
  }
  private EditorCell createRefNode_si1ien_a0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new BaseCommentAttribute_Editor.commentedNodeSingleRoleHandler_si1ien_a0(node, MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, 0x2ab99f0d2248e89dL, "commentedNode"), editorContext);
    return provider.createCell();
  }
  private class commentedNodeSingleRoleHandler_si1ien_a0 extends SingleRoleCellProvider {
    public commentedNodeSingleRoleHandler_si1ien_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell), new OldChildNodeSubstituteInfoHolder(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext))));
      if (editorCell.getRole() == null) {
        editorCell.setRole("commentedNode");
      }
      BaseCommentAttribute_Actions.setCellActions(editorCell, myOwnerNode, myEditorContext);
    }
    @Override
    public EditorCell createCell() {
      try {
        myEditorContext.getCellFactory().pushCellContext();
        myEditorContext.getCellFactory().addCellContextHints(new String[]{"jetbrains.mps.lang.core.editor.BaseEditorContextHints.comment"});
        myEditorContext.getCellFactory().removeCellContextHints();
        return super.createCell();
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_commentedNode");
      installCellInfo(null, editorCell);
      editorCell.setTransformationMenuLookup(new MenuLookup<TransformationMenu>() {
        public Collection<TransformationMenu> lookup(@NotNull Collection<SLanguage> p0) {
          return Collections.<TransformationMenu>singleton(new DefaultEmptyCellMenu(MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute"), MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, 0x2ab99f0d2248e89dL, "commentedNode")));
        }
      });

      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no commentedNode>";
    }
  }
}
