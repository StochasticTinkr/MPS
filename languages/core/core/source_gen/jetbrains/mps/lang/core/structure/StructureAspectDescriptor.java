package jetbrains.mps.lang.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptBaseCommentAttribute = createDescriptorForBaseCommentAttribute();
  /*package*/ final ConceptDescriptor myConceptBaseConcept = createDescriptorForBaseConcept();
  /*package*/ final ConceptDescriptor myConceptChildAttribute = createDescriptorForChildAttribute();
  /*package*/ final ConceptDescriptor myConceptExportScope = createDescriptorForExportScope();
  /*package*/ final ConceptDescriptor myConceptExportScopeModule = createDescriptorForExportScopeModule();
  /*package*/ final ConceptDescriptor myConceptExportScopeNamespace = createDescriptorForExportScopeNamespace();
  /*package*/ final ConceptDescriptor myConceptExportScopePublic = createDescriptorForExportScopePublic();
  /*package*/ final ConceptDescriptor myConceptIAntisuppressErrors = createDescriptorForIAntisuppressErrors();
  /*package*/ final ConceptDescriptor myConceptICanSuppressErrors = createDescriptorForICanSuppressErrors();
  /*package*/ final ConceptDescriptor myConceptIContainer = createDescriptorForIContainer();
  /*package*/ final ConceptDescriptor myConceptIDeprecatable = createDescriptorForIDeprecatable();
  /*package*/ final ConceptDescriptor myConceptIDontApplyTypesystemRules = createDescriptorForIDontApplyTypesystemRules();
  /*package*/ final ConceptDescriptor myConceptIDontSubstituteByDefault = createDescriptorForIDontSubstituteByDefault();
  /*package*/ final ConceptDescriptor myConceptIMetaLevelChanger = createDescriptorForIMetaLevelChanger();
  /*package*/ final ConceptDescriptor myConceptINamedConcept = createDescriptorForINamedConcept();
  /*package*/ final ConceptDescriptor myConceptIOldCommentAnnotation = createDescriptorForIOldCommentAnnotation();
  /*package*/ final ConceptDescriptor myConceptIOldCommentContainer = createDescriptorForIOldCommentContainer();
  /*package*/ final ConceptDescriptor myConceptIResolveInfo = createDescriptorForIResolveInfo();
  /*package*/ final ConceptDescriptor myConceptISkipConstraintsChecking = createDescriptorForISkipConstraintsChecking();
  /*package*/ final ConceptDescriptor myConceptISmartReferent = createDescriptorForISmartReferent();
  /*package*/ final ConceptDescriptor myConceptIStubForAnotherConcept = createDescriptorForIStubForAnotherConcept();
  /*package*/ final ConceptDescriptor myConceptISuppressErrors = createDescriptorForISuppressErrors();
  /*package*/ final ConceptDescriptor myConceptIType = createDescriptorForIType();
  /*package*/ final ConceptDescriptor myConceptIWrapper = createDescriptorForIWrapper();
  /*package*/ final ConceptDescriptor myConceptImplementationContainer = createDescriptorForImplementationContainer();
  /*package*/ final ConceptDescriptor myConceptImplementationPart = createDescriptorForImplementationPart();
  /*package*/ final ConceptDescriptor myConceptImplementationWithStubPart = createDescriptorForImplementationWithStubPart();
  /*package*/ final ConceptDescriptor myConceptInterfacePart = createDescriptorForInterfacePart();
  /*package*/ final ConceptDescriptor myConceptLinkAttribute = createDescriptorForLinkAttribute();
  /*package*/ final ConceptDescriptor myConceptMigrationAnnotation = createDescriptorForMigrationAnnotation();
  /*package*/ final ConceptDescriptor myConceptNodeAttribute = createDescriptorForNodeAttribute();
  /*package*/ final ConceptDescriptor myConceptPropertyAttribute = createDescriptorForPropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptReviewMigration = createDescriptorForReviewMigration();
  /*package*/ final ConceptDescriptor myConceptScopeFacade = createDescriptorForScopeFacade();
  /*package*/ final ConceptDescriptor myConceptScopeProvider = createDescriptorForScopeProvider();
  /*package*/ final ConceptDescriptor myConceptSideTransformInfo = createDescriptorForSideTransformInfo();
  /*package*/ final ConceptDescriptor myConceptSuppressErrorsAnnotation = createDescriptorForSuppressErrorsAnnotation();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptBaseCommentAttribute, myConceptBaseConcept, myConceptChildAttribute, myConceptExportScope, myConceptExportScopeModule, myConceptExportScopeNamespace, myConceptExportScopePublic, myConceptIAntisuppressErrors, myConceptICanSuppressErrors, myConceptIContainer, myConceptIDeprecatable, myConceptIDontApplyTypesystemRules, myConceptIDontSubstituteByDefault, myConceptIMetaLevelChanger, myConceptINamedConcept, myConceptIOldCommentAnnotation, myConceptIOldCommentContainer, myConceptIResolveInfo, myConceptISkipConstraintsChecking, myConceptISmartReferent, myConceptIStubForAnotherConcept, myConceptISuppressErrors, myConceptIType, myConceptIWrapper, myConceptImplementationContainer, myConceptImplementationPart, myConceptImplementationWithStubPart, myConceptInterfacePart, myConceptLinkAttribute, myConceptMigrationAnnotation, myConceptNodeAttribute, myConceptPropertyAttribute, myConceptReviewMigration, myConceptScopeFacade, myConceptScopeProvider, myConceptSideTransformInfo, myConceptSuppressErrorsAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.BaseCommentAttribute:
        return myConceptBaseCommentAttribute;
      case LanguageConceptSwitch.BaseConcept:
        return myConceptBaseConcept;
      case LanguageConceptSwitch.ChildAttribute:
        return myConceptChildAttribute;
      case LanguageConceptSwitch.ExportScope:
        return myConceptExportScope;
      case LanguageConceptSwitch.ExportScopeModule:
        return myConceptExportScopeModule;
      case LanguageConceptSwitch.ExportScopeNamespace:
        return myConceptExportScopeNamespace;
      case LanguageConceptSwitch.ExportScopePublic:
        return myConceptExportScopePublic;
      case LanguageConceptSwitch.IAntisuppressErrors:
        return myConceptIAntisuppressErrors;
      case LanguageConceptSwitch.ICanSuppressErrors:
        return myConceptICanSuppressErrors;
      case LanguageConceptSwitch.IContainer:
        return myConceptIContainer;
      case LanguageConceptSwitch.IDeprecatable:
        return myConceptIDeprecatable;
      case LanguageConceptSwitch.IDontApplyTypesystemRules:
        return myConceptIDontApplyTypesystemRules;
      case LanguageConceptSwitch.IDontSubstituteByDefault:
        return myConceptIDontSubstituteByDefault;
      case LanguageConceptSwitch.IMetaLevelChanger:
        return myConceptIMetaLevelChanger;
      case LanguageConceptSwitch.INamedConcept:
        return myConceptINamedConcept;
      case LanguageConceptSwitch.IOldCommentAnnotation:
        return myConceptIOldCommentAnnotation;
      case LanguageConceptSwitch.IOldCommentContainer:
        return myConceptIOldCommentContainer;
      case LanguageConceptSwitch.IResolveInfo:
        return myConceptIResolveInfo;
      case LanguageConceptSwitch.ISkipConstraintsChecking:
        return myConceptISkipConstraintsChecking;
      case LanguageConceptSwitch.ISmartReferent:
        return myConceptISmartReferent;
      case LanguageConceptSwitch.IStubForAnotherConcept:
        return myConceptIStubForAnotherConcept;
      case LanguageConceptSwitch.ISuppressErrors:
        return myConceptISuppressErrors;
      case LanguageConceptSwitch.IType:
        return myConceptIType;
      case LanguageConceptSwitch.IWrapper:
        return myConceptIWrapper;
      case LanguageConceptSwitch.ImplementationContainer:
        return myConceptImplementationContainer;
      case LanguageConceptSwitch.ImplementationPart:
        return myConceptImplementationPart;
      case LanguageConceptSwitch.ImplementationWithStubPart:
        return myConceptImplementationWithStubPart;
      case LanguageConceptSwitch.InterfacePart:
        return myConceptInterfacePart;
      case LanguageConceptSwitch.LinkAttribute:
        return myConceptLinkAttribute;
      case LanguageConceptSwitch.MigrationAnnotation:
        return myConceptMigrationAnnotation;
      case LanguageConceptSwitch.NodeAttribute:
        return myConceptNodeAttribute;
      case LanguageConceptSwitch.PropertyAttribute:
        return myConceptPropertyAttribute;
      case LanguageConceptSwitch.ReviewMigration:
        return myConceptReviewMigration;
      case LanguageConceptSwitch.ScopeFacade:
        return myConceptScopeFacade;
      case LanguageConceptSwitch.ScopeProvider:
        return myConceptScopeProvider;
      case LanguageConceptSwitch.SideTransformInfo:
        return myConceptSideTransformInfo;
      case LanguageConceptSwitch.SuppressErrorsAnnotation:
        return myConceptSuppressErrorsAnnotation;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "Attribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.lang.core.structure.BaseConcept", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/5169995583184591161");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseCommentAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "BaseCommentAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.ChildAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x50ef06e32fec9043L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x1ec383e5b4bdca56L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/4452961908202556907");
    b.aggregate("commentedNode", 0x2ab99f0d2248e89dL).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(false).ordered(true).multiple(false).origin("3078666699043039389").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "BaseConcept", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1133920641626");
    b.prop("shortDescription", 0x10d34f97574L, "1156234966388");
    b.prop("virtualPackage", 0x115eca8579fL, "1193676396447");
    b.aggregate("smodelAttribute", 0x47bf8397520e5942L).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L).optional(true).ordered(true).multiple(true).origin("5169995583184591170").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChildAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ChildAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.Attribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/709746936026466394");
    b.prop("linkRole", 0x9d98713f249b585L, "709746936026609029");
    b.prop("linkId", 0x9d98713f249b587L, "709746936026609031");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExportScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ExportScope", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/5425021671150136555");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExportScopeModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ExportScopeModule", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aebaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.ExportScope", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2565736246230036154");
    b.alias("@export(module)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExportScopeNamespace() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ExportScopeNamespace", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.ExportScope", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2565736246230036151");
    b.prop("namespace", 0x239b5385a7e2aeb9L, "2565736246230036153");
    b.alias("@export(namespace)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExportScopePublic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ExportScopePublic", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.ExportScope", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2565736246230036150");
    b.alias("@export(public)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAntisuppressErrors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IAntisuppressErrors", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0xe8924c64a55a26fL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1047408822409601647");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForICanSuppressErrors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ICanSuppressErrors", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f42L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3393165121846091586");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IContainer", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1233160296597");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDeprecatable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IDeprecatable", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11d205fe38dL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1224608834445");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDontApplyTypesystemRules() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IDontApplyTypesystemRules", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x1ec383e5b4bdca56L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2216760464199502422");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDontSubstituteByDefault() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IDontSubstituteByDefault", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1835621062190663819");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMetaLevelChanger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IMetaLevelChanger", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2cc012b1584bd3aL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/201537367881071930");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForINamedConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "INamedConcept", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1169194658468");
    b.prop("name", 0x110396ec041L, "1169194664001");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOldCommentAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IOldCommentAnnotation", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9b3ed4f3a4d01ecL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/699163291708883436");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOldCommentContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IOldCommentContainer", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x39384475a5756fb0L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/4123120730935488432");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIResolveInfo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IResolveInfo", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1196978630214");
    b.prop("resolveInfo", 0x116b17cd415L, "1196978656277");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISkipConstraintsChecking() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ISkipConstraintsChecking", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x50ef06e32fec9043L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/5831887615299457091");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISmartReferent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ISmartReferent", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x62763dc803b97bd8L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/7094926192234036184");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStubForAnotherConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IStubForAnotherConcept", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x226fb4c3ba26d45L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/155087542027447621");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISuppressErrors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ISuppressErrors", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3393165121846091587");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IType", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1234971358450");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "IWrapper", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11c6fd75034L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1221647093812");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplementationContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ImplementationContainer", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7d2577L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1319728274783151479");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplementationPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ImplementationPart", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1319728274783077719");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplementationWithStubPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ImplementationWithStubPart", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x612410e32cf46136L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/6999738288738427190");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInterfacePart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "InterfacePart", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/1319728274784973096");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinkAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "LinkAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.Attribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3364660638048049745");
    b.prop("linkRole", 0x18649a5c82123514L, "1757699476691236116");
    b.prop("linkId", 0x129f3f612792fc5cL, "1341860900488019036");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMigrationAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "MigrationAnnotation", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61f0c2c8L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2482611074347614920");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.Attribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3364660638048049748");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "PropertyAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.Attribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3364660638048049750");
    b.prop("propertyName", 0x18649a5c82123515L, "1757699476691236117");
    b.prop("propertyId", 0x129f3f61278d556dL, "1341860900487648621");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReviewMigration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ReviewMigration", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61e234c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61f0c2c8L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/2482611074346661065");
    b.prop("reasonShort", 0x2274019e61e234d6L, "2482611074346661078");
    b.prop("todo", 0x2274019e61e234d1L, "2482611074346661073");
    b.prop("readableId", 0x2274019e61e9f6eaL, "2482611074347169514");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScopeFacade() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ScopeFacade", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3361475375157466558");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScopeProvider() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "ScopeProvider", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/3734116213129792499");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSideTransformInfo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "SideTransformInfo", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0xad0053c7ae9194dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/779128492853369165");
    b.prop("side", 0xad0053c7aee2321L, "779128492853699361");
    b.prop("cellId", 0xad0053c7af1b9bbL, "779128492853934523");
    b.prop("anchorTag", 0xad0053c7af1bf58L, "779128492853935960");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuppressErrorsAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.core", "SuppressErrorsAnnotation", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3a98b0957fe8e5d2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.origin("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)/4222318806802425298");
    return b.create();
  }
}
