package jetbrains.mps.lang.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(35);
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptBaseCommentAttribute = createDescriptorForBaseCommentAttribute();
  /*package*/ final ConceptDescriptor myConceptBaseConcept = createDescriptorForBaseConcept();
  /*package*/ final ConceptDescriptor myConceptChildAttribute = createDescriptorForChildAttribute();
  /*package*/ final ConceptDescriptor myConceptExportScope = createDescriptorForExportScope();
  /*package*/ final ConceptDescriptor myConceptExportScopeModule = createDescriptorForExportScopeModule();
  /*package*/ final ConceptDescriptor myConceptExportScopeNamespace = createDescriptorForExportScopeNamespace();
  /*package*/ final ConceptDescriptor myConceptExportScopePublic = createDescriptorForExportScopePublic();
  /*package*/ final ConceptDescriptor myConceptIAntisuppressErrors = createDescriptorForIAntisuppressErrors();
  /*package*/ final ConceptDescriptor myConceptICanSuppressErrors = createDescriptorForICanSuppressErrors();
  /*package*/ final ConceptDescriptor myConceptIContainer = createDescriptorForIContainer();
  /*package*/ final ConceptDescriptor myConceptIDeprecatable = createDescriptorForIDeprecatable();
  /*package*/ final ConceptDescriptor myConceptIDontApplyTypesystemRules = createDescriptorForIDontApplyTypesystemRules();
  /*package*/ final ConceptDescriptor myConceptIDontSubstituteByDefault = createDescriptorForIDontSubstituteByDefault();
  /*package*/ final ConceptDescriptor myConceptIMetaLevelChanger = createDescriptorForIMetaLevelChanger();
  /*package*/ final ConceptDescriptor myConceptINamedConcept = createDescriptorForINamedConcept();
  /*package*/ final ConceptDescriptor myConceptIOldCommentAnnotation = createDescriptorForIOldCommentAnnotation();
  /*package*/ final ConceptDescriptor myConceptIOldCommentContainer = createDescriptorForIOldCommentContainer();
  /*package*/ final ConceptDescriptor myConceptIResolveInfo = createDescriptorForIResolveInfo();
  /*package*/ final ConceptDescriptor myConceptISkipConstraintsChecking = createDescriptorForISkipConstraintsChecking();
  /*package*/ final ConceptDescriptor myConceptIStubForAnotherConcept = createDescriptorForIStubForAnotherConcept();
  /*package*/ final ConceptDescriptor myConceptISuppressErrors = createDescriptorForISuppressErrors();
  /*package*/ final ConceptDescriptor myConceptIType = createDescriptorForIType();
  /*package*/ final ConceptDescriptor myConceptIWrapper = createDescriptorForIWrapper();
  /*package*/ final ConceptDescriptor myConceptImplementationContainer = createDescriptorForImplementationContainer();
  /*package*/ final ConceptDescriptor myConceptImplementationPart = createDescriptorForImplementationPart();
  /*package*/ final ConceptDescriptor myConceptImplementationWithStubPart = createDescriptorForImplementationWithStubPart();
  /*package*/ final ConceptDescriptor myConceptInterfacePart = createDescriptorForInterfacePart();
  /*package*/ final ConceptDescriptor myConceptLinkAttribute = createDescriptorForLinkAttribute();
  /*package*/ final ConceptDescriptor myConceptNodeAttribute = createDescriptorForNodeAttribute();
  /*package*/ final ConceptDescriptor myConceptPropertyAttribute = createDescriptorForPropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptScopeFacade = createDescriptorForScopeFacade();
  /*package*/ final ConceptDescriptor myConceptScopeProvider = createDescriptorForScopeProvider();
  /*package*/ final ConceptDescriptor myConceptSideTransformInfo = createDescriptorForSideTransformInfo();
  /*package*/ final ConceptDescriptor myConceptSuppressErrorsAnnotation = createDescriptorForSuppressErrorsAnnotation();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAttribute.getId(), 0);
    myIndexMap.put(myConceptBaseCommentAttribute.getId(), 1);
    myIndexMap.put(myConceptBaseConcept.getId(), 2);
    myIndexMap.put(myConceptChildAttribute.getId(), 3);
    myIndexMap.put(myConceptExportScope.getId(), 4);
    myIndexMap.put(myConceptExportScopeModule.getId(), 5);
    myIndexMap.put(myConceptExportScopeNamespace.getId(), 6);
    myIndexMap.put(myConceptExportScopePublic.getId(), 7);
    myIndexMap.put(myConceptIAntisuppressErrors.getId(), 8);
    myIndexMap.put(myConceptICanSuppressErrors.getId(), 9);
    myIndexMap.put(myConceptIContainer.getId(), 10);
    myIndexMap.put(myConceptIDeprecatable.getId(), 11);
    myIndexMap.put(myConceptIDontApplyTypesystemRules.getId(), 12);
    myIndexMap.put(myConceptIDontSubstituteByDefault.getId(), 13);
    myIndexMap.put(myConceptIMetaLevelChanger.getId(), 14);
    myIndexMap.put(myConceptINamedConcept.getId(), 15);
    myIndexMap.put(myConceptIOldCommentAnnotation.getId(), 16);
    myIndexMap.put(myConceptIOldCommentContainer.getId(), 17);
    myIndexMap.put(myConceptIResolveInfo.getId(), 18);
    myIndexMap.put(myConceptISkipConstraintsChecking.getId(), 19);
    myIndexMap.put(myConceptIStubForAnotherConcept.getId(), 20);
    myIndexMap.put(myConceptISuppressErrors.getId(), 21);
    myIndexMap.put(myConceptIType.getId(), 22);
    myIndexMap.put(myConceptIWrapper.getId(), 23);
    myIndexMap.put(myConceptImplementationContainer.getId(), 24);
    myIndexMap.put(myConceptImplementationPart.getId(), 25);
    myIndexMap.put(myConceptImplementationWithStubPart.getId(), 26);
    myIndexMap.put(myConceptInterfacePart.getId(), 27);
    myIndexMap.put(myConceptLinkAttribute.getId(), 28);
    myIndexMap.put(myConceptNodeAttribute.getId(), 29);
    myIndexMap.put(myConceptPropertyAttribute.getId(), 30);
    myIndexMap.put(myConceptScopeFacade.getId(), 31);
    myIndexMap.put(myConceptScopeProvider.getId(), 32);
    myIndexMap.put(myConceptSideTransformInfo.getId(), 33);
    myIndexMap.put(myConceptSuppressErrorsAnnotation.getId(), 34);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptBaseCommentAttribute, myConceptBaseConcept, myConceptChildAttribute, myConceptExportScope, myConceptExportScopeModule, myConceptExportScopeNamespace, myConceptExportScopePublic, myConceptIAntisuppressErrors, myConceptICanSuppressErrors, myConceptIContainer, myConceptIDeprecatable, myConceptIDontApplyTypesystemRules, myConceptIDontSubstituteByDefault, myConceptIMetaLevelChanger, myConceptINamedConcept, myConceptIOldCommentAnnotation, myConceptIOldCommentContainer, myConceptIResolveInfo, myConceptISkipConstraintsChecking, myConceptIStubForAnotherConcept, myConceptISuppressErrors, myConceptIType, myConceptIWrapper, myConceptImplementationContainer, myConceptImplementationPart, myConceptImplementationWithStubPart, myConceptInterfacePart, myConceptLinkAttribute, myConceptNodeAttribute, myConceptPropertyAttribute, myConceptScopeFacade, myConceptScopeProvider, myConceptSideTransformInfo, myConceptSuppressErrorsAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAttribute;
      case 1:
        return myConceptBaseCommentAttribute;
      case 2:
        return myConceptBaseConcept;
      case 3:
        return myConceptChildAttribute;
      case 4:
        return myConceptExportScope;
      case 5:
        return myConceptExportScopeModule;
      case 6:
        return myConceptExportScopeNamespace;
      case 7:
        return myConceptExportScopePublic;
      case 8:
        return myConceptIAntisuppressErrors;
      case 9:
        return myConceptICanSuppressErrors;
      case 10:
        return myConceptIContainer;
      case 11:
        return myConceptIDeprecatable;
      case 12:
        return myConceptIDontApplyTypesystemRules;
      case 13:
        return myConceptIDontSubstituteByDefault;
      case 14:
        return myConceptIMetaLevelChanger;
      case 15:
        return myConceptINamedConcept;
      case 16:
        return myConceptIOldCommentAnnotation;
      case 17:
        return myConceptIOldCommentContainer;
      case 18:
        return myConceptIResolveInfo;
      case 19:
        return myConceptISkipConstraintsChecking;
      case 20:
        return myConceptIStubForAnotherConcept;
      case 21:
        return myConceptISuppressErrors;
      case 22:
        return myConceptIType;
      case 23:
        return myConceptIWrapper;
      case 24:
        return myConceptImplementationContainer;
      case 25:
        return myConceptImplementationPart;
      case 26:
        return myConceptImplementationWithStubPart;
      case 27:
        return myConceptInterfacePart;
      case 28:
        return myConceptLinkAttribute;
      case 29:
        return myConceptNodeAttribute;
      case 30:
        return myConceptPropertyAttribute;
      case 31:
        return myConceptScopeFacade;
      case 32:
        return myConceptScopeProvider;
      case 33:
        return myConceptSideTransformInfo;
      case 34:
        return myConceptSuppressErrorsAnnotation;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.Attribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "5169995583184591161")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseCommentAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.BaseCommentAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL)).super_("jetbrains.mps.lang.core.structure.ChildAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL)).parents("jetbrains.mps.lang.core.structure.ChildAttribute", "jetbrains.mps.lang.core.structure.ISkipConstraintsChecking", "jetbrains.mps.lang.core.structure.IDontApplyTypesystemRules", "jetbrains.mps.lang.core.structure.ISuppressErrors", "jetbrains.mps.lang.core.structure.IWrapper").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x50ef06e32fec9043L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x1ec383e5b4bdca56L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11c6fd75034L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2ab99f0d2248e89dL, "commentedNode", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, false, false)).children(new String[]{"commentedNode"}, new boolean[]{false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "4452961908202556907")).create();
  }
  private static ConceptDescriptor createDescriptorForBaseConcept() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.BaseConcept", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).version(1).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x10d34f97574L, "shortDescription"), new ConceptDescriptorBuilder.Prop(0x10d34fa226eL, "alias"), new ConceptDescriptorBuilder.Prop(0x115eca8579fL, "virtualPackage")).properties("shortDescription", "alias", "virtualPackage").childDescriptors(new ConceptDescriptorBuilder.Link(0x47bf8397520e5942L, "smodelAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L), true, true, false)).children(new String[]{"smodelAttribute"}, new boolean[]{true}).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1133920641626")).create();
  }
  private static ConceptDescriptor createDescriptorForChildAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ChildAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL)).super_("jetbrains.mps.lang.core.structure.Attribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).parents("jetbrains.mps.lang.core.structure.Attribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x9d98713f249b585L, "linkRole"), new ConceptDescriptorBuilder.Prop(0x9d98713f249b587L, "linkId")).properties("linkRole", "linkId").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "709746936026466394")).create();
  }
  private static ConceptDescriptor createDescriptorForExportScope() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScope", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "5425021671150136555")).create();
  }
  private static ConceptDescriptor createDescriptorForExportScopeModule() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopeModule", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aebaL)).super_("jetbrains.mps.lang.core.structure.ExportScope").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).parents("jetbrains.mps.lang.core.structure.ExportScope").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).alias("@export(module)", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "2565736246230036154")).create();
  }
  private static ConceptDescriptor createDescriptorForExportScopeNamespace() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopeNamespace", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb7L)).super_("jetbrains.mps.lang.core.structure.ExportScope").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).parents("jetbrains.mps.lang.core.structure.ExportScope").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x239b5385a7e2aeb9L, "namespace")).properties("namespace").alias("@export(namespace)", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "2565736246230036151")).create();
  }
  private static ConceptDescriptor createDescriptorForExportScopePublic() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopePublic", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb6L)).super_("jetbrains.mps.lang.core.structure.ExportScope").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).parents("jetbrains.mps.lang.core.structure.ExportScope").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL)).alias("@export(public)", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "2565736246230036150")).create();
  }
  private static ConceptDescriptor createDescriptorForIAntisuppressErrors() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IAntisuppressErrors", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0xe8924c64a55a26fL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1047408822409601647")).create();
  }
  private static ConceptDescriptor createDescriptorForICanSuppressErrors() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ICanSuppressErrors", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f42L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3393165121846091586")).create();
  }
  private static ConceptDescriptor createDescriptorForIContainer() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IContainer", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1233160296597")).create();
  }
  private static ConceptDescriptor createDescriptorForIDeprecatable() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IDeprecatable", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11d205fe38dL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1224608834445")).create();
  }
  private static ConceptDescriptor createDescriptorForIDontApplyTypesystemRules() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IDontApplyTypesystemRules", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x1ec383e5b4bdca56L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "2216760464199502422")).create();
  }
  private static ConceptDescriptor createDescriptorForIDontSubstituteByDefault() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IDontSubstituteByDefault", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1835621062190663819")).create();
  }
  private static ConceptDescriptor createDescriptorForIMetaLevelChanger() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IMetaLevelChanger", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2cc012b1584bd3aL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "201537367881071930")).create();
  }
  private static ConceptDescriptor createDescriptorForINamedConcept() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.INamedConcept", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).version(1).interface_().propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x110396ec041L, "name")).properties("name").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1169194658468")).create();
  }
  private static ConceptDescriptor createDescriptorForIOldCommentAnnotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IOldCommentAnnotation", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9b3ed4f3a4d01ecL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "699163291708883436")).create();
  }
  private static ConceptDescriptor createDescriptorForIOldCommentContainer() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IOldCommentContainer", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x39384475a5756fb0L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "4123120730935488432")).create();
  }
  private static ConceptDescriptor createDescriptorForIResolveInfo() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IResolveInfo", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L)).version(1).interface_().propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116b17cd415L, "resolveInfo")).properties("resolveInfo").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1196978630214")).create();
  }
  private static ConceptDescriptor createDescriptorForISkipConstraintsChecking() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ISkipConstraintsChecking", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x50ef06e32fec9043L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "5831887615299457091")).create();
  }
  private static ConceptDescriptor createDescriptorForIStubForAnotherConcept() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IStubForAnotherConcept", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x226fb4c3ba26d45L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "155087542027447621")).create();
  }
  private static ConceptDescriptor createDescriptorForISuppressErrors() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ISuppressErrors", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3393165121846091587")).create();
  }
  private static ConceptDescriptor createDescriptorForIType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IType", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1234971358450")).create();
  }
  private static ConceptDescriptor createDescriptorForIWrapper() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IWrapper", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11c6fd75034L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1221647093812")).create();
  }
  private static ConceptDescriptor createDescriptorForImplementationContainer() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationContainer", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7d2577L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1319728274783151479")).create();
  }
  private static ConceptDescriptor createDescriptorForImplementationPart() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationPart", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.ScopeFacade").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1319728274783077719")).create();
  }
  private static ConceptDescriptor createDescriptorForImplementationWithStubPart() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationWithStubPart", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x612410e32cf46136L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.ImplementationPart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "6999738288738427190")).create();
  }
  private static ConceptDescriptor createDescriptorForInterfacePart() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.InterfacePart", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1319728274784973096")).create();
  }
  private static ConceptDescriptor createDescriptorForLinkAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.LinkAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L)).super_("jetbrains.mps.lang.core.structure.Attribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).parents("jetbrains.mps.lang.core.structure.Attribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x18649a5c82123514L, "linkRole"), new ConceptDescriptorBuilder.Prop(0x129f3f612792fc5cL, "linkId")).properties("linkRole", "linkId").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3364660638048049745")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.NodeAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).super_("jetbrains.mps.lang.core.structure.Attribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).parents("jetbrains.mps.lang.core.structure.Attribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3364660638048049748")).create();
  }
  private static ConceptDescriptor createDescriptorForPropertyAttribute() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.PropertyAttribute", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L)).super_("jetbrains.mps.lang.core.structure.Attribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).parents("jetbrains.mps.lang.core.structure.Attribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x18649a5c82123515L, "propertyName"), new ConceptDescriptorBuilder.Prop(0x129f3f61278d556dL, "propertyId")).properties("propertyName", "propertyId").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3364660638048049750")).create();
  }
  private static ConceptDescriptor createDescriptorForScopeFacade() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ScopeFacade", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3361475375157466558")).create();
  }
  private static ConceptDescriptor createDescriptorForScopeProvider() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ScopeProvider", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "3734116213129792499")).create();
  }
  private static ConceptDescriptor createDescriptorForSideTransformInfo() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.SideTransformInfo", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0xad0053c7ae9194dL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xad0053c7aee2321L, "side"), new ConceptDescriptorBuilder.Prop(0xad0053c7af1b9bbL, "cellId"), new ConceptDescriptorBuilder.Prop(0xad0053c7af1bf58L, "anchorTag")).properties("side", "cellId", "anchorTag").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "779128492853369165")).create();
  }
  private static ConceptDescriptor createDescriptorForSuppressErrorsAnnotation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3a98b0957fe8e5d2L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.ISuppressErrors").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "4222318806802425298")).create();
  }
}
