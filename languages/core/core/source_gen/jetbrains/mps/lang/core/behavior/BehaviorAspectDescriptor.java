package jetbrains.mps.lang.core.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myBaseConcept__BehaviorDescriptor = new BaseConcept__BehaviorDescriptor();
  private final BHDescriptor myINamedConcept__BehaviorDescriptor = new INamedConcept__BehaviorDescriptor();
  private final BHDescriptor myIResolveInfo__BehaviorDescriptor = new IResolveInfo__BehaviorDescriptor();
  private final BHDescriptor myIDeprecatable__BehaviorDescriptor = new IDeprecatable__BehaviorDescriptor();
  private final BHDescriptor myIMetaLevelChanger__BehaviorDescriptor = new IMetaLevelChanger__BehaviorDescriptor();
  private final BHDescriptor myChildAttribute__BehaviorDescriptor = new ChildAttribute__BehaviorDescriptor();
  private final BHDescriptor myImplementationContainer__BehaviorDescriptor = new ImplementationContainer__BehaviorDescriptor();
  private final BHDescriptor myReviewMigration__BehaviorDescriptor = new ReviewMigration__BehaviorDescriptor();
  private final BHDescriptor myMigrationAnnotation__BehaviorDescriptor = new MigrationAnnotation__BehaviorDescriptor();
  private final BHDescriptor myExportScopePublic__BehaviorDescriptor = new ExportScopePublic__BehaviorDescriptor();
  private final BHDescriptor myExportScopeNamespace__BehaviorDescriptor = new ExportScopeNamespace__BehaviorDescriptor();
  private final BHDescriptor myExportScopeModule__BehaviorDescriptor = new ExportScopeModule__BehaviorDescriptor();
  private final BHDescriptor myLinkAttribute__BehaviorDescriptor = new LinkAttribute__BehaviorDescriptor();
  private final BHDescriptor myPropertyAttribute__BehaviorDescriptor = new PropertyAttribute__BehaviorDescriptor();
  private final BHDescriptor myISuppressErrors__BehaviorDescriptor = new ISuppressErrors__BehaviorDescriptor();
  private final BHDescriptor myScopeProvider__BehaviorDescriptor = new ScopeProvider__BehaviorDescriptor();
  private final BHDescriptor myIOldCommentContainer__BehaviorDescriptor = new IOldCommentContainer__BehaviorDescriptor();
  private final BHDescriptor mySuppressErrorsAnnotation__BehaviorDescriptor = new SuppressErrorsAnnotation__BehaviorDescriptor();
  private final BHDescriptor myBaseCommentAttribute__BehaviorDescriptor = new BaseCommentAttribute__BehaviorDescriptor();
  private final BHDescriptor myAttribute__BehaviorDescriptor = new Attribute__BehaviorDescriptor();
  private final BHDescriptor myExportScope__BehaviorDescriptor = new ExportScope__BehaviorDescriptor();
  private final BHDescriptor myISmartReferent__BehaviorDescriptor = new ISmartReferent__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (index_846f5o_a0z.index(cncpt)) {
      case 0:
        return myAttribute__BehaviorDescriptor;
      case 1:
        return myBaseCommentAttribute__BehaviorDescriptor;
      case 2:
        return myBaseConcept__BehaviorDescriptor;
      case 3:
        return myChildAttribute__BehaviorDescriptor;
      case 4:
        return myExportScope__BehaviorDescriptor;
      case 5:
        return myExportScopeModule__BehaviorDescriptor;
      case 6:
        return myExportScopeNamespace__BehaviorDescriptor;
      case 7:
        return myExportScopePublic__BehaviorDescriptor;
      case 8:
        return myIDeprecatable__BehaviorDescriptor;
      case 9:
        return myIMetaLevelChanger__BehaviorDescriptor;
      case 10:
        return myINamedConcept__BehaviorDescriptor;
      case 11:
        return myIOldCommentContainer__BehaviorDescriptor;
      case 12:
        return myIResolveInfo__BehaviorDescriptor;
      case 13:
        return myISmartReferent__BehaviorDescriptor;
      case 14:
        return myISuppressErrors__BehaviorDescriptor;
      case 15:
        return myImplementationContainer__BehaviorDescriptor;
      case 16:
        return myLinkAttribute__BehaviorDescriptor;
      case 17:
        return myMigrationAnnotation__BehaviorDescriptor;
      case 18:
        return myPropertyAttribute__BehaviorDescriptor;
      case 19:
        return myReviewMigration__BehaviorDescriptor;
      case 20:
        return myScopeProvider__BehaviorDescriptor;
      case 21:
        return mySuppressErrorsAnnotation__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0z = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x47bf8397520e5939L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x4b498c7787b32cebL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aebaL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb7L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x239b5385a7e2aeb6L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11d205fe38dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2cc012b1584bd3aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x39384475a5756fb0L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x62763dc803b97bd8L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7d2577L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61f0c2c8L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2274019e61e234c9L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3a98b0957fe8e5d2L)).seal();
}
