package jetbrains.mps.lang.core.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum SideTransformSide {
  right("right", "right"),
  left("left", "left");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private SideTransformSide(String name, String value) {
    myName = name;
    myValue = value;

  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<SideTransformSide> getConstants() {
    List<SideTransformSide> list = ListSequence.fromList(new LinkedList<SideTransformSide>());
    ListSequence.fromList(list).addElement(SideTransformSide.right);
    ListSequence.fromList(list).addElement(SideTransformSide.left);
    return list;
  }
  public static SideTransformSide getDefault() {
    return SideTransformSide.right;
  }
  public static SideTransformSide parseValue(String value) {
    if (value == null) {
      return SideTransformSide.getDefault();
    }
    if (value.equals(SideTransformSide.right.getValueAsString())) {
      return SideTransformSide.right;
    }
    if (value.equals(SideTransformSide.left.getValueAsString())) {
      return SideTransformSide.left;
    }
    return SideTransformSide.getDefault();
  }
}
