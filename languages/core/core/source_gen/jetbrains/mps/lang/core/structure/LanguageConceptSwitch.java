package jetbrains.mps.lang.core.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attribute = 0;
  public static final int BaseCommentAttribute = 1;
  public static final int BaseConcept = 2;
  public static final int ChildAttribute = 3;
  public static final int ExportScope = 4;
  public static final int ExportScopeModule = 5;
  public static final int ExportScopeNamespace = 6;
  public static final int ExportScopePublic = 7;
  public static final int IAntisuppressErrors = 8;
  public static final int ICanSuppressErrors = 9;
  public static final int IContainer = 10;
  public static final int IDeprecatable = 11;
  public static final int IDontApplyTypesystemRules = 12;
  public static final int IDontSubstituteByDefault = 13;
  public static final int IMetaLevelChanger = 14;
  public static final int INamedConcept = 15;
  public static final int IOldCommentAnnotation = 16;
  public static final int IOldCommentContainer = 17;
  public static final int IResolveInfo = 18;
  public static final int ISkipConstraintsChecking = 19;
  public static final int ISmartReferent = 20;
  public static final int IStubForAnotherConcept = 21;
  public static final int ISuppressErrors = 22;
  public static final int IType = 23;
  public static final int IWrapper = 24;
  public static final int ImplementationContainer = 25;
  public static final int ImplementationPart = 26;
  public static final int ImplementationWithStubPart = 27;
  public static final int InterfacePart = 28;
  public static final int LinkAttribute = 29;
  public static final int MigrationAnnotation = 30;
  public static final int NodeAttribute = 31;
  public static final int PropertyAttribute = 32;
  public static final int ReviewMigration = 33;
  public static final int ScopeFacade = 34;
  public static final int ScopeProvider = 35;
  public static final int SideTransformInfo = 36;
  public static final int SuppressErrorsAnnotation = 37;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL);
    builder.put(0x47bf8397520e5939L, Attribute);
    builder.put(0x3dcc194340c24debL, BaseCommentAttribute);
    builder.put(0x10802efe25aL, BaseConcept);
    builder.put(0x9d98713f247885aL, ChildAttribute);
    builder.put(0x4b498c7787b32cebL, ExportScope);
    builder.put(0x239b5385a7e2aebaL, ExportScopeModule);
    builder.put(0x239b5385a7e2aeb7L, ExportScopeNamespace);
    builder.put(0x239b5385a7e2aeb6L, ExportScopePublic);
    builder.put(0xe8924c64a55a26fL, IAntisuppressErrors);
    builder.put(0x2f16f1b357e19f42L, ICanSuppressErrors);
    builder.put(0x11f1e14d895L, IContainer);
    builder.put(0x11d205fe38dL, IDeprecatable);
    builder.put(0x1ec383e5b4bdca56L, IDontApplyTypesystemRules);
    builder.put(0x19796fa16a19888bL, IDontSubstituteByDefault);
    builder.put(0x2cc012b1584bd3aL, IMetaLevelChanger);
    builder.put(0x110396eaaa4L, INamedConcept);
    builder.put(0x9b3ed4f3a4d01ecL, IOldCommentAnnotation);
    builder.put(0x39384475a5756fb0L, IOldCommentContainer);
    builder.put(0x116b17c6e46L, IResolveInfo);
    builder.put(0x50ef06e32fec9043L, ISkipConstraintsChecking);
    builder.put(0x62763dc803b97bd8L, ISmartReferent);
    builder.put(0x226fb4c3ba26d45L, IStubForAnotherConcept);
    builder.put(0x2f16f1b357e19f43L, ISuppressErrors);
    builder.put(0x11f8a0774f2L, IType);
    builder.put(0x11c6fd75034L, IWrapper);
    builder.put(0x12509ddfaa7d2577L, ImplementationContainer);
    builder.put(0x12509ddfaa7c0557L, ImplementationPart);
    builder.put(0x612410e32cf46136L, ImplementationWithStubPart);
    builder.put(0x12509ddfaa98f128L, InterfacePart);
    builder.put(0x2eb1ad060897da51L, LinkAttribute);
    builder.put(0x2274019e61f0c2c8L, MigrationAnnotation);
    builder.put(0x2eb1ad060897da54L, NodeAttribute);
    builder.put(0x2eb1ad060897da56L, PropertyAttribute);
    builder.put(0x2274019e61e234c9L, ReviewMigration);
    builder.put(0x2ea65c0b397bd5beL, ScopeFacade);
    builder.put(0x33d23ee961a0cbf3L, ScopeProvider);
    builder.put(0xad0053c7ae9194dL, SideTransformInfo);
    builder.put(0x3a98b0957fe8e5d2L, SuppressErrorsAnnotation);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
