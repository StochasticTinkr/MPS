package jetbrains.mps.baseLanguage.refactorings;

/*Generated by MPS */

import jetbrains.mps.refactoring.runtime.RefactoringAspectBase;
import jetbrains.mps.refactoring.framework.IRefactoring;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import java.util.Arrays;

public class RefactoringAspectDescriptor extends RefactoringAspectBase {
  private final IRefactoring[] myRefactorings;


  public RefactoringAspectDescriptor() {
    myRefactorings = new IRefactoring[5];
    myRefactorings[0] = new RenameMethod();
    myRefactorings[1] = new MakeFieldFinal();
    myRefactorings[2] = new MakeFieldStatic();
    myRefactorings[3] = new ChangeMethodSignature();
    myRefactorings[4] = new SafeDeleteConceptMethod();
  }
  @NotNull
  @Override
  public Collection<IRefactoring> getRefactorings() {
    return Arrays.asList(myRefactorings);
  }
}
