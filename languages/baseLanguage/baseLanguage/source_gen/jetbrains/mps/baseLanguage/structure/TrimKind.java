package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum TrimKind {
  both("both", "both"),
  leading("leading", "leading"),
  trailing("trailing", "trailing");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private TrimKind(String name, String value) {
    myName = name;
    myValue = value;

  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<TrimKind> getConstants() {
    List<TrimKind> list = ListSequence.fromList(new LinkedList<TrimKind>());
    ListSequence.fromList(list).addElement(TrimKind.both);
    ListSequence.fromList(list).addElement(TrimKind.leading);
    ListSequence.fromList(list).addElement(TrimKind.trailing);
    return list;
  }
  public static TrimKind getDefault() {
    return TrimKind.both;
  }
  public static TrimKind parseValue(String value) {
    if (value == null) {
      return TrimKind.getDefault();
    }
    if (value.equals(TrimKind.both.getValueAsString())) {
      return TrimKind.both;
    }
    if (value.equals(TrimKind.leading.getValueAsString())) {
      return TrimKind.leading;
    }
    if (value.equals(TrimKind.trailing.getValueAsString())) {
      return TrimKind.trailing;
    }
    return TrimKind.getDefault();
  }
}
