package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractClassifierReference = createDescriptorForAbstractClassifierReference();
  /*package*/ final ConceptDescriptor myConceptAbstractCreator = createDescriptorForAbstractCreator();
  /*package*/ final ConceptDescriptor myConceptAbstractForStatement = createDescriptorForAbstractForStatement();
  /*package*/ final ConceptDescriptor myConceptAbstractLoopStatement = createDescriptorForAbstractLoopStatement();
  /*package*/ final ConceptDescriptor myConceptAbstractOperation = createDescriptorForAbstractOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractUnaryNumberOperation = createDescriptorForAbstractUnaryNumberOperation();
  /*package*/ final ConceptDescriptor myConceptAdditionalForLoopVariable = createDescriptorForAdditionalForLoopVariable();
  /*package*/ final ConceptDescriptor myConceptAndAssignmentExpression = createDescriptorForAndAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptAndExpression = createDescriptorForAndExpression();
  /*package*/ final ConceptDescriptor myConceptAnnotation = createDescriptorForAnnotation();
  /*package*/ final ConceptDescriptor myConceptAnnotationInstance = createDescriptorForAnnotationInstance();
  /*package*/ final ConceptDescriptor myConceptAnnotationInstanceExpression = createDescriptorForAnnotationInstanceExpression();
  /*package*/ final ConceptDescriptor myConceptAnnotationInstanceValue = createDescriptorForAnnotationInstanceValue();
  /*package*/ final ConceptDescriptor myConceptAnnotationMethodDeclaration = createDescriptorForAnnotationMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptAnonymousClass = createDescriptorForAnonymousClass();
  /*package*/ final ConceptDescriptor myConceptAnonymousClassCreator = createDescriptorForAnonymousClassCreator();
  /*package*/ final ConceptDescriptor myConceptArrayAccessExpression = createDescriptorForArrayAccessExpression();
  /*package*/ final ConceptDescriptor myConceptArrayClassExpression = createDescriptorForArrayClassExpression();
  /*package*/ final ConceptDescriptor myConceptArrayCloneOperation = createDescriptorForArrayCloneOperation();
  /*package*/ final ConceptDescriptor myConceptArrayCreator = createDescriptorForArrayCreator();
  /*package*/ final ConceptDescriptor myConceptArrayCreatorWithInitializer = createDescriptorForArrayCreatorWithInitializer();
  /*package*/ final ConceptDescriptor myConceptArrayLengthOperation = createDescriptorForArrayLengthOperation();
  /*package*/ final ConceptDescriptor myConceptArrayLiteral = createDescriptorForArrayLiteral();
  /*package*/ final ConceptDescriptor myConceptArrayType = createDescriptorForArrayType();
  /*package*/ final ConceptDescriptor myConceptAsExpression = createDescriptorForAsExpression();
  /*package*/ final ConceptDescriptor myConceptAssertStatement = createDescriptorForAssertStatement();
  /*package*/ final ConceptDescriptor myConceptAssignmentExpression = createDescriptorForAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptBLBottomType = createDescriptorForBLBottomType();
  /*package*/ final ConceptDescriptor myConceptBaseAssignmentExpression = createDescriptorForBaseAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptBaseMethodCall = createDescriptorForBaseMethodCall();
  /*package*/ final ConceptDescriptor myConceptBaseMethodDeclaration = createDescriptorForBaseMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptBaseStringOperation = createDescriptorForBaseStringOperation();
  /*package*/ final ConceptDescriptor myConceptBaseVariableDeclaration = createDescriptorForBaseVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptBaseVariableReference = createDescriptorForBaseVariableReference();
  /*package*/ final ConceptDescriptor myConceptBinaryBitwiseOperation = createDescriptorForBinaryBitwiseOperation();
  /*package*/ final ConceptDescriptor myConceptBinaryCompareOperation = createDescriptorForBinaryCompareOperation();
  /*package*/ final ConceptDescriptor myConceptBinaryOperation = createDescriptorForBinaryOperation();
  /*package*/ final ConceptDescriptor myConceptBitwiseAndExpression = createDescriptorForBitwiseAndExpression();
  /*package*/ final ConceptDescriptor myConceptBitwiseNotExpression = createDescriptorForBitwiseNotExpression();
  /*package*/ final ConceptDescriptor myConceptBitwiseOrExpression = createDescriptorForBitwiseOrExpression();
  /*package*/ final ConceptDescriptor myConceptBitwiseXorExpression = createDescriptorForBitwiseXorExpression();
  /*package*/ final ConceptDescriptor myConceptBlockStatement = createDescriptorForBlockStatement();
  /*package*/ final ConceptDescriptor myConceptBooleanConstant = createDescriptorForBooleanConstant();
  /*package*/ final ConceptDescriptor myConceptBooleanType = createDescriptorForBooleanType();
  /*package*/ final ConceptDescriptor myConceptBreakStatement = createDescriptorForBreakStatement();
  /*package*/ final ConceptDescriptor myConceptByteType = createDescriptorForByteType();
  /*package*/ final ConceptDescriptor myConceptCastExpression = createDescriptorForCastExpression();
  /*package*/ final ConceptDescriptor myConceptCatchClause = createDescriptorForCatchClause();
  /*package*/ final ConceptDescriptor myConceptCharConstant = createDescriptorForCharConstant();
  /*package*/ final ConceptDescriptor myConceptCharType = createDescriptorForCharType();
  /*package*/ final ConceptDescriptor myConceptClassConcept = createDescriptorForClassConcept();
  /*package*/ final ConceptDescriptor myConceptClassCreator = createDescriptorForClassCreator();
  /*package*/ final ConceptDescriptor myConceptClassifier = createDescriptorForClassifier();
  /*package*/ final ConceptDescriptor myConceptClassifierClassExpression = createDescriptorForClassifierClassExpression();
  /*package*/ final ConceptDescriptor myConceptClassifierMember = createDescriptorForClassifierMember();
  /*package*/ final ConceptDescriptor myConceptClassifierType = createDescriptorForClassifierType();
  /*package*/ final ConceptDescriptor myConceptClosure = createDescriptorForClosure();
  /*package*/ final ConceptDescriptor myConceptClosureParameter = createDescriptorForClosureParameter();
  /*package*/ final ConceptDescriptor myConceptClosureParameterReference = createDescriptorForClosureParameterReference();
  /*package*/ final ConceptDescriptor myConceptClosureoid = createDescriptorForClosureoid();
  /*package*/ final ConceptDescriptor myConceptCommentPart = createDescriptorForCommentPart();
  /*package*/ final ConceptDescriptor myConceptCommentedStatement = createDescriptorForCommentedStatement();
  /*package*/ final ConceptDescriptor myConceptCommentedStatementsBlock = createDescriptorForCommentedStatementsBlock();
  /*package*/ final ConceptDescriptor myConceptConceptFunction = createDescriptorForConceptFunction();
  /*package*/ final ConceptDescriptor myConceptConceptFunctionParameter = createDescriptorForConceptFunctionParameter();
  /*package*/ final ConceptDescriptor myConceptConstructorDeclaration = createDescriptorForConstructorDeclaration();
  /*package*/ final ConceptDescriptor myConceptConstructorInvocationStatement = createDescriptorForConstructorInvocationStatement();
  /*package*/ final ConceptDescriptor myConceptContextClassifierKind = createDescriptorForContextClassifierKind();
  /*package*/ final ConceptDescriptor myConceptContinueStatement = createDescriptorForContinueStatement();
  /*package*/ final ConceptDescriptor myConceptCustomPropertyImplementation = createDescriptorForCustomPropertyImplementation();
  /*package*/ final ConceptDescriptor myConceptCustomSetterPropertyImplementation = createDescriptorForCustomSetterPropertyImplementation();
  /*package*/ final ConceptDescriptor myConceptDefaultClassCreator = createDescriptorForDefaultClassCreator();
  /*package*/ final ConceptDescriptor myConceptDefaultGetAccessor = createDescriptorForDefaultGetAccessor();
  /*package*/ final ConceptDescriptor myConceptDefaultPropertyImplementation = createDescriptorForDefaultPropertyImplementation();
  /*package*/ final ConceptDescriptor myConceptDefaultSetAccessor = createDescriptorForDefaultSetAccessor();
  /*package*/ final ConceptDescriptor myConceptDimensionExpression = createDescriptorForDimensionExpression();
  /*package*/ final ConceptDescriptor myConceptDivAssignmentExpression = createDescriptorForDivAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptDivExpression = createDescriptorForDivExpression();
  /*package*/ final ConceptDescriptor myConceptDoWhileStatement = createDescriptorForDoWhileStatement();
  /*package*/ final ConceptDescriptor myConceptDotExpression = createDescriptorForDotExpression();
  /*package*/ final ConceptDescriptor myConceptDoubleType = createDescriptorForDoubleType();
  /*package*/ final ConceptDescriptor myConceptElsifClause = createDescriptorForElsifClause();
  /*package*/ final ConceptDescriptor myConceptEnumClass = createDescriptorForEnumClass();
  /*package*/ final ConceptDescriptor myConceptEnumConstantDeclaration = createDescriptorForEnumConstantDeclaration();
  /*package*/ final ConceptDescriptor myConceptEnumConstantReference = createDescriptorForEnumConstantReference();
  /*package*/ final ConceptDescriptor myConceptEnumValueOfExpression = createDescriptorForEnumValueOfExpression();
  /*package*/ final ConceptDescriptor myConceptEnumValuesExpression = createDescriptorForEnumValuesExpression();
  /*package*/ final ConceptDescriptor myConceptEqualsExpression = createDescriptorForEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptEscapeOperation = createDescriptorForEscapeOperation();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptExpressionStatement = createDescriptorForExpressionStatement();
  /*package*/ final ConceptDescriptor myConceptFieldDeclaration = createDescriptorForFieldDeclaration();
  /*package*/ final ConceptDescriptor myConceptFieldReferenceOperation = createDescriptorForFieldReferenceOperation();
  /*package*/ final ConceptDescriptor myConceptFloatType = createDescriptorForFloatType();
  /*package*/ final ConceptDescriptor myConceptFloatingPointConstant = createDescriptorForFloatingPointConstant();
  /*package*/ final ConceptDescriptor myConceptFloatingPointFloatConstant = createDescriptorForFloatingPointFloatConstant();
  /*package*/ final ConceptDescriptor myConceptForStatement = createDescriptorForForStatement();
  /*package*/ final ConceptDescriptor myConceptForeachStatement = createDescriptorForForeachStatement();
  /*package*/ final ConceptDescriptor myConceptGenericDeclaration = createDescriptorForGenericDeclaration();
  /*package*/ final ConceptDescriptor myConceptGenericNewExpression = createDescriptorForGenericNewExpression();
  /*package*/ final ConceptDescriptor myConceptGetAccessor = createDescriptorForGetAccessor();
  /*package*/ final ConceptDescriptor myConceptGreaterThanExpression = createDescriptorForGreaterThanExpression();
  /*package*/ final ConceptDescriptor myConceptGreaterThanOrEqualsExpression = createDescriptorForGreaterThanOrEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptHasAnnotation = createDescriptorForHasAnnotation();
  /*package*/ final ConceptDescriptor myConceptHexIntegerLiteral = createDescriptorForHexIntegerLiteral();
  /*package*/ final ConceptDescriptor myConceptIAnonymousClass = createDescriptorForIAnonymousClass();
  /*package*/ final ConceptDescriptor myConceptIBLDeprecatable = createDescriptorForIBLDeprecatable();
  /*package*/ final ConceptDescriptor myConceptIBinaryLike = createDescriptorForIBinaryLike();
  /*package*/ final ConceptDescriptor myConceptIClassifier = createDescriptorForIClassifier();
  /*package*/ final ConceptDescriptor myConceptIClassifierMember = createDescriptorForIClassifierMember();
  /*package*/ final ConceptDescriptor myConceptIClassifierType = createDescriptorForIClassifierType();
  /*package*/ final ConceptDescriptor myConceptIConditional = createDescriptorForIConditional();
  /*package*/ final ConceptDescriptor myConceptIContainsStatementList = createDescriptorForIContainsStatementList();
  /*package*/ final ConceptDescriptor myConceptIControlFlowInterrupter = createDescriptorForIControlFlowInterrupter();
  /*package*/ final ConceptDescriptor myConceptIExtractMethodAvailable = createDescriptorForIExtractMethodAvailable();
  /*package*/ final ConceptDescriptor myConceptIFinalWrapper = createDescriptorForIFinalWrapper();
  /*package*/ final ConceptDescriptor myConceptIGenericType = createDescriptorForIGenericType();
  /*package*/ final ConceptDescriptor myConceptIHasModifiers = createDescriptorForIHasModifiers();
  /*package*/ final ConceptDescriptor myConceptIIncompleteParen = createDescriptorForIIncompleteParen();
  /*package*/ final ConceptDescriptor myConceptIInternalType = createDescriptorForIInternalType();
  /*package*/ final ConceptDescriptor myConceptILocalDeclaration = createDescriptorForILocalDeclaration();
  /*package*/ final ConceptDescriptor myConceptILocalReference = createDescriptorForILocalReference();
  /*package*/ final ConceptDescriptor myConceptILocalVariableElement = createDescriptorForILocalVariableElement();
  /*package*/ final ConceptDescriptor myConceptILocalVariableElementList = createDescriptorForILocalVariableElementList();
  /*package*/ final ConceptDescriptor myConceptIMemberContainer = createDescriptorForIMemberContainer();
  /*package*/ final ConceptDescriptor myConceptIMethodCall = createDescriptorForIMethodCall();
  /*package*/ final ConceptDescriptor myConceptIMethodLike = createDescriptorForIMethodLike();
  /*package*/ final ConceptDescriptor myConceptIOperation = createDescriptorForIOperation();
  /*package*/ final ConceptDescriptor myConceptIParameter = createDescriptorForIParameter();
  /*package*/ final ConceptDescriptor myConceptISkipsReturn = createDescriptorForISkipsReturn();
  /*package*/ final ConceptDescriptor myConceptIStatementListContainer = createDescriptorForIStatementListContainer();
  /*package*/ final ConceptDescriptor myConceptIStaticContainerForMethods = createDescriptorForIStaticContainerForMethods();
  /*package*/ final ConceptDescriptor myConceptIThisExpression = createDescriptorForIThisExpression();
  /*package*/ final ConceptDescriptor myConceptITryCatchStatement = createDescriptorForITryCatchStatement();
  /*package*/ final ConceptDescriptor myConceptITypeApplicable = createDescriptorForITypeApplicable();
  /*package*/ final ConceptDescriptor myConceptIValidIdentifier = createDescriptorForIValidIdentifier();
  /*package*/ final ConceptDescriptor myConceptIVariableAssignment = createDescriptorForIVariableAssignment();
  /*package*/ final ConceptDescriptor myConceptIVariableDeclaration = createDescriptorForIVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptIVariableReference = createDescriptorForIVariableReference();
  /*package*/ final ConceptDescriptor myConceptIVisible = createDescriptorForIVisible();
  /*package*/ final ConceptDescriptor myConceptIWillBeClassifier = createDescriptorForIWillBeClassifier();
  /*package*/ final ConceptDescriptor myConceptIYetUnresolved = createDescriptorForIYetUnresolved();
  /*package*/ final ConceptDescriptor myConceptIfStatement = createDescriptorForIfStatement();
  /*package*/ final ConceptDescriptor myConceptImplicitAnnotationInstanceValue = createDescriptorForImplicitAnnotationInstanceValue();
  /*package*/ final ConceptDescriptor myConceptImplicitAnnotationMethodKind = createDescriptorForImplicitAnnotationMethodKind();
  /*package*/ final ConceptDescriptor myConceptIncompleteLeftParen = createDescriptorForIncompleteLeftParen();
  /*package*/ final ConceptDescriptor myConceptIncompleteMemberDeclaration = createDescriptorForIncompleteMemberDeclaration();
  /*package*/ final ConceptDescriptor myConceptIncompleteRightParen = createDescriptorForIncompleteRightParen();
  /*package*/ final ConceptDescriptor myConceptInstanceInitializer = createDescriptorForInstanceInitializer();
  /*package*/ final ConceptDescriptor myConceptInstanceMethodCallOperation = createDescriptorForInstanceMethodCallOperation();
  /*package*/ final ConceptDescriptor myConceptInstanceMethodDeclaration = createDescriptorForInstanceMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptInstanceOfExpression = createDescriptorForInstanceOfExpression();
  /*package*/ final ConceptDescriptor myConceptIntegerConstant = createDescriptorForIntegerConstant();
  /*package*/ final ConceptDescriptor myConceptIntegerLiteral = createDescriptorForIntegerLiteral();
  /*package*/ final ConceptDescriptor myConceptIntegerType = createDescriptorForIntegerType();
  /*package*/ final ConceptDescriptor myConceptInterface = createDescriptorForInterface();
  /*package*/ final ConceptDescriptor myConceptIsEmptyOperation = createDescriptorForIsEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptIsNotEmptyOperation = createDescriptorForIsNotEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptJavaImport = createDescriptorForJavaImport();
  /*package*/ final ConceptDescriptor myConceptJavaImports = createDescriptorForJavaImports();
  /*package*/ final ConceptDescriptor myConceptJavaModifier = createDescriptorForJavaModifier();
  /*package*/ final ConceptDescriptor myConceptLeftShiftAssignmentExpression = createDescriptorForLeftShiftAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptLessThanExpression = createDescriptorForLessThanExpression();
  /*package*/ final ConceptDescriptor myConceptLessThanOrEqualsExpression = createDescriptorForLessThanOrEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptLocalInstanceFieldReference = createDescriptorForLocalInstanceFieldReference();
  /*package*/ final ConceptDescriptor myConceptLocalInstanceMethodCall = createDescriptorForLocalInstanceMethodCall();
  /*package*/ final ConceptDescriptor myConceptLocalMethodCall = createDescriptorForLocalMethodCall();
  /*package*/ final ConceptDescriptor myConceptLocalPropertyReference = createDescriptorForLocalPropertyReference();
  /*package*/ final ConceptDescriptor myConceptLocalStaticFieldReference = createDescriptorForLocalStaticFieldReference();
  /*package*/ final ConceptDescriptor myConceptLocalStaticMethodCall = createDescriptorForLocalStaticMethodCall();
  /*package*/ final ConceptDescriptor myConceptLocalToMethodKind = createDescriptorForLocalToMethodKind();
  /*package*/ final ConceptDescriptor myConceptLocalVariableDeclaration = createDescriptorForLocalVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptLocalVariableDeclarationStatement = createDescriptorForLocalVariableDeclarationStatement();
  /*package*/ final ConceptDescriptor myConceptLongLiteral = createDescriptorForLongLiteral();
  /*package*/ final ConceptDescriptor myConceptLongType = createDescriptorForLongType();
  /*package*/ final ConceptDescriptor myConceptLoopLabel = createDescriptorForLoopLabel();
  /*package*/ final ConceptDescriptor myConceptLoopLabelReference = createDescriptorForLoopLabelReference();
  /*package*/ final ConceptDescriptor myConceptLowerBoundType = createDescriptorForLowerBoundType();
  /*package*/ final ConceptDescriptor myConceptMethodDeclaration = createDescriptorForMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptMinusAssignmentExpression = createDescriptorForMinusAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptMinusExpression = createDescriptorForMinusExpression();
  /*package*/ final ConceptDescriptor myConceptModifier = createDescriptorForModifier();
  /*package*/ final ConceptDescriptor myConceptMulAssignmentExpression = createDescriptorForMulAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptMulExpression = createDescriptorForMulExpression();
  /*package*/ final ConceptDescriptor myConceptNPEEqualsExpression = createDescriptorForNPEEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptNPENotEqualsExpression = createDescriptorForNPENotEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptNestedNewExpression = createDescriptorForNestedNewExpression();
  /*package*/ final ConceptDescriptor myConceptNotEqualsExpression = createDescriptorForNotEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptNotExpression = createDescriptorForNotExpression();
  /*package*/ final ConceptDescriptor myConceptNullLiteral = createDescriptorForNullLiteral();
  /*package*/ final ConceptDescriptor myConceptNullType = createDescriptorForNullType();
  /*package*/ final ConceptDescriptor myConceptNumber = createDescriptorForNumber();
  /*package*/ final ConceptDescriptor myConceptOperationAssignmentExpression = createDescriptorForOperationAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptOrAssignmentExpression = createDescriptorForOrAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptOrExpression = createDescriptorForOrExpression();
  /*package*/ final ConceptDescriptor myConceptParameterDeclaration = createDescriptorForParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptParenthesizedExpression = createDescriptorForParenthesizedExpression();
  /*package*/ final ConceptDescriptor myConceptPlaceholderMember = createDescriptorForPlaceholderMember();
  /*package*/ final ConceptDescriptor myConceptPlusAssignmentExpression = createDescriptorForPlusAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptPlusExpression = createDescriptorForPlusExpression();
  /*package*/ final ConceptDescriptor myConceptPostfixDecrementExpression = createDescriptorForPostfixDecrementExpression();
  /*package*/ final ConceptDescriptor myConceptPostfixIncrementExpression = createDescriptorForPostfixIncrementExpression();
  /*package*/ final ConceptDescriptor myConceptPrefixDecrementExpression = createDescriptorForPrefixDecrementExpression();
  /*package*/ final ConceptDescriptor myConceptPrefixIncrementExpression = createDescriptorForPrefixIncrementExpression();
  /*package*/ final ConceptDescriptor myConceptPrimitiveClassExpression = createDescriptorForPrimitiveClassExpression();
  /*package*/ final ConceptDescriptor myConceptPrimitiveType = createDescriptorForPrimitiveType();
  /*package*/ final ConceptDescriptor myConceptPrivateVisibility = createDescriptorForPrivateVisibility();
  /*package*/ final ConceptDescriptor myConceptProperty = createDescriptorForProperty();
  /*package*/ final ConceptDescriptor myConceptPropertyImplementation = createDescriptorForPropertyImplementation();
  /*package*/ final ConceptDescriptor myConceptPropertyReference = createDescriptorForPropertyReference();
  /*package*/ final ConceptDescriptor myConceptPropertyValueReference = createDescriptorForPropertyValueReference();
  /*package*/ final ConceptDescriptor myConceptProtectedVisibility = createDescriptorForProtectedVisibility();
  /*package*/ final ConceptDescriptor myConceptPublicVisibility = createDescriptorForPublicVisibility();
  /*package*/ final ConceptDescriptor myConceptQualifiedSuperMethodCall = createDescriptorForQualifiedSuperMethodCall();
  /*package*/ final ConceptDescriptor myConceptRemAssignmentExpression = createDescriptorForRemAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptRemExpression = createDescriptorForRemExpression();
  /*package*/ final ConceptDescriptor myConceptRemarkStatement = createDescriptorForRemarkStatement();
  /*package*/ final ConceptDescriptor myConceptReturnStatement = createDescriptorForReturnStatement();
  /*package*/ final ConceptDescriptor myConceptRightShiftAssignmentExpression = createDescriptorForRightShiftAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptSetAccessor = createDescriptorForSetAccessor();
  /*package*/ final ConceptDescriptor myConceptShiftLeftExpression = createDescriptorForShiftLeftExpression();
  /*package*/ final ConceptDescriptor myConceptShiftRightExpression = createDescriptorForShiftRightExpression();
  /*package*/ final ConceptDescriptor myConceptShiftRightUnsignedExpression = createDescriptorForShiftRightUnsignedExpression();
  /*package*/ final ConceptDescriptor myConceptShortType = createDescriptorForShortType();
  /*package*/ final ConceptDescriptor myConceptSingleLineComment = createDescriptorForSingleLineComment();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStatementCommentPart = createDescriptorForStatementCommentPart();
  /*package*/ final ConceptDescriptor myConceptStatementList = createDescriptorForStatementList();
  /*package*/ final ConceptDescriptor myConceptStaticFieldDeclaration = createDescriptorForStaticFieldDeclaration();
  /*package*/ final ConceptDescriptor myConceptStaticFieldReference = createDescriptorForStaticFieldReference();
  /*package*/ final ConceptDescriptor myConceptStaticInitializer = createDescriptorForStaticInitializer();
  /*package*/ final ConceptDescriptor myConceptStaticKind = createDescriptorForStaticKind();
  /*package*/ final ConceptDescriptor myConceptStaticMethodCall = createDescriptorForStaticMethodCall();
  /*package*/ final ConceptDescriptor myConceptStaticMethodDeclaration = createDescriptorForStaticMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptStringBooleanOperation = createDescriptorForStringBooleanOperation();
  /*package*/ final ConceptDescriptor myConceptStringLiteral = createDescriptorForStringLiteral();
  /*package*/ final ConceptDescriptor myConceptStringToken = createDescriptorForStringToken();
  /*package*/ final ConceptDescriptor myConceptStringType = createDescriptorForStringType();
  /*package*/ final ConceptDescriptor myConceptStubStatementList = createDescriptorForStubStatementList();
  /*package*/ final ConceptDescriptor myConceptSubstringExpression = createDescriptorForSubstringExpression();
  /*package*/ final ConceptDescriptor myConceptSuperConstructorInvocation = createDescriptorForSuperConstructorInvocation();
  /*package*/ final ConceptDescriptor myConceptSuperConstructorKind = createDescriptorForSuperConstructorKind();
  /*package*/ final ConceptDescriptor myConceptSuperInerfaceKind = createDescriptorForSuperInerfaceKind();
  /*package*/ final ConceptDescriptor myConceptSuperMethodCall = createDescriptorForSuperMethodCall();
  /*package*/ final ConceptDescriptor myConceptSuperMethodKind = createDescriptorForSuperMethodKind();
  /*package*/ final ConceptDescriptor myConceptSwitchCase = createDescriptorForSwitchCase();
  /*package*/ final ConceptDescriptor myConceptSwitchStatement = createDescriptorForSwitchStatement();
  /*package*/ final ConceptDescriptor myConceptSynchronizedStatement = createDescriptorForSynchronizedStatement();
  /*package*/ final ConceptDescriptor myConceptTernaryOperatorExpression = createDescriptorForTernaryOperatorExpression();
  /*package*/ final ConceptDescriptor myConceptTextCommentPart = createDescriptorForTextCommentPart();
  /*package*/ final ConceptDescriptor myConceptThisConstructorInvocation = createDescriptorForThisConstructorInvocation();
  /*package*/ final ConceptDescriptor myConceptThisConstructorKind = createDescriptorForThisConstructorKind();
  /*package*/ final ConceptDescriptor myConceptThisExpression = createDescriptorForThisExpression();
  /*package*/ final ConceptDescriptor myConceptThrowStatement = createDescriptorForThrowStatement();
  /*package*/ final ConceptDescriptor myConceptTokens = createDescriptorForTokens();
  /*package*/ final ConceptDescriptor myConceptTrimOperation = createDescriptorForTrimOperation();
  /*package*/ final ConceptDescriptor myConceptTryCatchStatement = createDescriptorForTryCatchStatement();
  /*package*/ final ConceptDescriptor myConceptTryStatement = createDescriptorForTryStatement();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptTypeAnnotable = createDescriptorForTypeAnnotable();
  /*package*/ final ConceptDescriptor myConceptTypeDerivable = createDescriptorForTypeDerivable();
  /*package*/ final ConceptDescriptor myConceptTypeVariableDeclaration = createDescriptorForTypeVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptTypeVariableReference = createDescriptorForTypeVariableReference();
  /*package*/ final ConceptDescriptor myConceptUnaryMinus = createDescriptorForUnaryMinus();
  /*package*/ final ConceptDescriptor myConceptUndefinedType = createDescriptorForUndefinedType();
  /*package*/ final ConceptDescriptor myConceptUnknownConsCall = createDescriptorForUnknownConsCall();
  /*package*/ final ConceptDescriptor myConceptUnknownDotCall = createDescriptorForUnknownDotCall();
  /*package*/ final ConceptDescriptor myConceptUnknownLocalCall = createDescriptorForUnknownLocalCall();
  /*package*/ final ConceptDescriptor myConceptUnknownNameRef = createDescriptorForUnknownNameRef();
  /*package*/ final ConceptDescriptor myConceptUnknownNew = createDescriptorForUnknownNew();
  /*package*/ final ConceptDescriptor myConceptUnresolvedNameReference = createDescriptorForUnresolvedNameReference();
  /*package*/ final ConceptDescriptor myConceptUnsignedRightShiftAssignmentExpression = createDescriptorForUnsignedRightShiftAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptUpperBoundType = createDescriptorForUpperBoundType();
  /*package*/ final ConceptDescriptor myConceptUsingStatement = createDescriptorForUsingStatement();
  /*package*/ final ConceptDescriptor myConceptValueParameter = createDescriptorForValueParameter();
  /*package*/ final ConceptDescriptor myConceptVarType = createDescriptorForVarType();
  /*package*/ final ConceptDescriptor myConceptVariableArityType = createDescriptorForVariableArityType();
  /*package*/ final ConceptDescriptor myConceptVariableDeclaration = createDescriptorForVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptVariableReference = createDescriptorForVariableReference();
  /*package*/ final ConceptDescriptor myConceptVisibility = createDescriptorForVisibility();
  /*package*/ final ConceptDescriptor myConceptVoidType = createDescriptorForVoidType();
  /*package*/ final ConceptDescriptor myConceptWhileStatement = createDescriptorForWhileStatement();
  /*package*/ final ConceptDescriptor myConceptWildCardType = createDescriptorForWildCardType();
  /*package*/ final ConceptDescriptor myConceptXorAssignmentExpression = createDescriptorForXorAssignmentExpression();
  /*package*/ final EnumerationDescriptor myEnumerationTrimKind = new EnumerationDescriptor_TrimKind();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_CharConstant_String = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1177d450137L, "_CharConstant_String", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1200397549879", "[^\\\\']|(\\\\([btnfr\"'\\\\]|([0-3]?[0-7]{1,2})|(u[0-9a-fA-F]{4})))");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_FPNumber_String = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L, "_FPNumber_String", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1113006251687", "-?[0-9]+\\.[0-9]*([Ee][\\+\\-]?[0-9]+)?[dD]?");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_FloatNumberValue = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x494547eeedc219baL, "_FloatNumberValue", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5279705229678483898", "-?[0-9]+\\.[0-9]*([Ee][\\+\\-]?[0-9]+)?[fF]");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_HexNumberValue = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5d761ebb61934eadL, "_HexNumberValue", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6734604082923916973", "[0-9a-fA-F]+");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_Identifier_String = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc2bbf5889L, "_Identifier_String", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1083065718921", "[a-zA-Z[_]][a-zA-Z0-9[_]]*");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_LongType_String = new ConstrainedStringDatatypeDescriptorImpl(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3b4187227177134aL, "_LongType_String", "r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4269842503726207818", "-?[0-9]+(l|L)");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractClassifierReference, myConceptAbstractCreator, myConceptAbstractForStatement, myConceptAbstractLoopStatement, myConceptAbstractOperation, myConceptAbstractUnaryNumberOperation, myConceptAdditionalForLoopVariable, myConceptAndAssignmentExpression, myConceptAndExpression, myConceptAnnotation, myConceptAnnotationInstance, myConceptAnnotationInstanceExpression, myConceptAnnotationInstanceValue, myConceptAnnotationMethodDeclaration, myConceptAnonymousClass, myConceptAnonymousClassCreator, myConceptArrayAccessExpression, myConceptArrayClassExpression, myConceptArrayCloneOperation, myConceptArrayCreator, myConceptArrayCreatorWithInitializer, myConceptArrayLengthOperation, myConceptArrayLiteral, myConceptArrayType, myConceptAsExpression, myConceptAssertStatement, myConceptAssignmentExpression, myConceptBLBottomType, myConceptBaseAssignmentExpression, myConceptBaseMethodCall, myConceptBaseMethodDeclaration, myConceptBaseStringOperation, myConceptBaseVariableDeclaration, myConceptBaseVariableReference, myConceptBinaryBitwiseOperation, myConceptBinaryCompareOperation, myConceptBinaryOperation, myConceptBitwiseAndExpression, myConceptBitwiseNotExpression, myConceptBitwiseOrExpression, myConceptBitwiseXorExpression, myConceptBlockStatement, myConceptBooleanConstant, myConceptBooleanType, myConceptBreakStatement, myConceptByteType, myConceptCastExpression, myConceptCatchClause, myConceptCharConstant, myConceptCharType, myConceptClassConcept, myConceptClassCreator, myConceptClassifier, myConceptClassifierClassExpression, myConceptClassifierMember, myConceptClassifierType, myConceptClosure, myConceptClosureParameter, myConceptClosureParameterReference, myConceptClosureoid, myConceptCommentPart, myConceptCommentedStatement, myConceptCommentedStatementsBlock, myConceptConceptFunction, myConceptConceptFunctionParameter, myConceptConstructorDeclaration, myConceptConstructorInvocationStatement, myConceptContextClassifierKind, myConceptContinueStatement, myConceptCustomPropertyImplementation, myConceptCustomSetterPropertyImplementation, myConceptDefaultClassCreator, myConceptDefaultGetAccessor, myConceptDefaultPropertyImplementation, myConceptDefaultSetAccessor, myConceptDimensionExpression, myConceptDivAssignmentExpression, myConceptDivExpression, myConceptDoWhileStatement, myConceptDotExpression, myConceptDoubleType, myConceptElsifClause, myConceptEnumClass, myConceptEnumConstantDeclaration, myConceptEnumConstantReference, myConceptEnumValueOfExpression, myConceptEnumValuesExpression, myConceptEqualsExpression, myConceptEscapeOperation, myConceptExpression, myConceptExpressionStatement, myConceptFieldDeclaration, myConceptFieldReferenceOperation, myConceptFloatType, myConceptFloatingPointConstant, myConceptFloatingPointFloatConstant, myConceptForStatement, myConceptForeachStatement, myConceptGenericDeclaration, myConceptGenericNewExpression, myConceptGetAccessor, myConceptGreaterThanExpression, myConceptGreaterThanOrEqualsExpression, myConceptHasAnnotation, myConceptHexIntegerLiteral, myConceptIAnonymousClass, myConceptIBLDeprecatable, myConceptIBinaryLike, myConceptIClassifier, myConceptIClassifierMember, myConceptIClassifierType, myConceptIConditional, myConceptIContainsStatementList, myConceptIControlFlowInterrupter, myConceptIExtractMethodAvailable, myConceptIFinalWrapper, myConceptIGenericType, myConceptIHasModifiers, myConceptIIncompleteParen, myConceptIInternalType, myConceptILocalDeclaration, myConceptILocalReference, myConceptILocalVariableElement, myConceptILocalVariableElementList, myConceptIMemberContainer, myConceptIMethodCall, myConceptIMethodLike, myConceptIOperation, myConceptIParameter, myConceptISkipsReturn, myConceptIStatementListContainer, myConceptIStaticContainerForMethods, myConceptIThisExpression, myConceptITryCatchStatement, myConceptITypeApplicable, myConceptIValidIdentifier, myConceptIVariableAssignment, myConceptIVariableDeclaration, myConceptIVariableReference, myConceptIVisible, myConceptIWillBeClassifier, myConceptIYetUnresolved, myConceptIfStatement, myConceptImplicitAnnotationInstanceValue, myConceptImplicitAnnotationMethodKind, myConceptIncompleteLeftParen, myConceptIncompleteMemberDeclaration, myConceptIncompleteRightParen, myConceptInstanceInitializer, myConceptInstanceMethodCallOperation, myConceptInstanceMethodDeclaration, myConceptInstanceOfExpression, myConceptIntegerConstant, myConceptIntegerLiteral, myConceptIntegerType, myConceptInterface, myConceptIsEmptyOperation, myConceptIsNotEmptyOperation, myConceptJavaImport, myConceptJavaImports, myConceptJavaModifier, myConceptLeftShiftAssignmentExpression, myConceptLessThanExpression, myConceptLessThanOrEqualsExpression, myConceptLocalInstanceFieldReference, myConceptLocalInstanceMethodCall, myConceptLocalMethodCall, myConceptLocalPropertyReference, myConceptLocalStaticFieldReference, myConceptLocalStaticMethodCall, myConceptLocalToMethodKind, myConceptLocalVariableDeclaration, myConceptLocalVariableDeclarationStatement, myConceptLongLiteral, myConceptLongType, myConceptLoopLabel, myConceptLoopLabelReference, myConceptLowerBoundType, myConceptMethodDeclaration, myConceptMinusAssignmentExpression, myConceptMinusExpression, myConceptModifier, myConceptMulAssignmentExpression, myConceptMulExpression, myConceptNPEEqualsExpression, myConceptNPENotEqualsExpression, myConceptNestedNewExpression, myConceptNotEqualsExpression, myConceptNotExpression, myConceptNullLiteral, myConceptNullType, myConceptNumber, myConceptOperationAssignmentExpression, myConceptOrAssignmentExpression, myConceptOrExpression, myConceptParameterDeclaration, myConceptParenthesizedExpression, myConceptPlaceholderMember, myConceptPlusAssignmentExpression, myConceptPlusExpression, myConceptPostfixDecrementExpression, myConceptPostfixIncrementExpression, myConceptPrefixDecrementExpression, myConceptPrefixIncrementExpression, myConceptPrimitiveClassExpression, myConceptPrimitiveType, myConceptPrivateVisibility, myConceptProperty, myConceptPropertyImplementation, myConceptPropertyReference, myConceptPropertyValueReference, myConceptProtectedVisibility, myConceptPublicVisibility, myConceptQualifiedSuperMethodCall, myConceptRemAssignmentExpression, myConceptRemExpression, myConceptRemarkStatement, myConceptReturnStatement, myConceptRightShiftAssignmentExpression, myConceptSetAccessor, myConceptShiftLeftExpression, myConceptShiftRightExpression, myConceptShiftRightUnsignedExpression, myConceptShortType, myConceptSingleLineComment, myConceptStatement, myConceptStatementCommentPart, myConceptStatementList, myConceptStaticFieldDeclaration, myConceptStaticFieldReference, myConceptStaticInitializer, myConceptStaticKind, myConceptStaticMethodCall, myConceptStaticMethodDeclaration, myConceptStringBooleanOperation, myConceptStringLiteral, myConceptStringToken, myConceptStringType, myConceptStubStatementList, myConceptSubstringExpression, myConceptSuperConstructorInvocation, myConceptSuperConstructorKind, myConceptSuperInerfaceKind, myConceptSuperMethodCall, myConceptSuperMethodKind, myConceptSwitchCase, myConceptSwitchStatement, myConceptSynchronizedStatement, myConceptTernaryOperatorExpression, myConceptTextCommentPart, myConceptThisConstructorInvocation, myConceptThisConstructorKind, myConceptThisExpression, myConceptThrowStatement, myConceptTokens, myConceptTrimOperation, myConceptTryCatchStatement, myConceptTryStatement, myConceptType, myConceptTypeAnnotable, myConceptTypeDerivable, myConceptTypeVariableDeclaration, myConceptTypeVariableReference, myConceptUnaryMinus, myConceptUndefinedType, myConceptUnknownConsCall, myConceptUnknownDotCall, myConceptUnknownLocalCall, myConceptUnknownNameRef, myConceptUnknownNew, myConceptUnresolvedNameReference, myConceptUnsignedRightShiftAssignmentExpression, myConceptUpperBoundType, myConceptUsingStatement, myConceptValueParameter, myConceptVarType, myConceptVariableArityType, myConceptVariableDeclaration, myConceptVariableReference, myConceptVisibility, myConceptVoidType, myConceptWhileStatement, myConceptWildCardType, myConceptXorAssignmentExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractClassifierReference:
        return myConceptAbstractClassifierReference;
      case LanguageConceptSwitch.AbstractCreator:
        return myConceptAbstractCreator;
      case LanguageConceptSwitch.AbstractForStatement:
        return myConceptAbstractForStatement;
      case LanguageConceptSwitch.AbstractLoopStatement:
        return myConceptAbstractLoopStatement;
      case LanguageConceptSwitch.AbstractOperation:
        return myConceptAbstractOperation;
      case LanguageConceptSwitch.AbstractUnaryNumberOperation:
        return myConceptAbstractUnaryNumberOperation;
      case LanguageConceptSwitch.AdditionalForLoopVariable:
        return myConceptAdditionalForLoopVariable;
      case LanguageConceptSwitch.AndAssignmentExpression:
        return myConceptAndAssignmentExpression;
      case LanguageConceptSwitch.AndExpression:
        return myConceptAndExpression;
      case LanguageConceptSwitch.Annotation:
        return myConceptAnnotation;
      case LanguageConceptSwitch.AnnotationInstance:
        return myConceptAnnotationInstance;
      case LanguageConceptSwitch.AnnotationInstanceExpression:
        return myConceptAnnotationInstanceExpression;
      case LanguageConceptSwitch.AnnotationInstanceValue:
        return myConceptAnnotationInstanceValue;
      case LanguageConceptSwitch.AnnotationMethodDeclaration:
        return myConceptAnnotationMethodDeclaration;
      case LanguageConceptSwitch.AnonymousClass:
        return myConceptAnonymousClass;
      case LanguageConceptSwitch.AnonymousClassCreator:
        return myConceptAnonymousClassCreator;
      case LanguageConceptSwitch.ArrayAccessExpression:
        return myConceptArrayAccessExpression;
      case LanguageConceptSwitch.ArrayClassExpression:
        return myConceptArrayClassExpression;
      case LanguageConceptSwitch.ArrayCloneOperation:
        return myConceptArrayCloneOperation;
      case LanguageConceptSwitch.ArrayCreator:
        return myConceptArrayCreator;
      case LanguageConceptSwitch.ArrayCreatorWithInitializer:
        return myConceptArrayCreatorWithInitializer;
      case LanguageConceptSwitch.ArrayLengthOperation:
        return myConceptArrayLengthOperation;
      case LanguageConceptSwitch.ArrayLiteral:
        return myConceptArrayLiteral;
      case LanguageConceptSwitch.ArrayType:
        return myConceptArrayType;
      case LanguageConceptSwitch.AsExpression:
        return myConceptAsExpression;
      case LanguageConceptSwitch.AssertStatement:
        return myConceptAssertStatement;
      case LanguageConceptSwitch.AssignmentExpression:
        return myConceptAssignmentExpression;
      case LanguageConceptSwitch.BLBottomType:
        return myConceptBLBottomType;
      case LanguageConceptSwitch.BaseAssignmentExpression:
        return myConceptBaseAssignmentExpression;
      case LanguageConceptSwitch.BaseMethodCall:
        return myConceptBaseMethodCall;
      case LanguageConceptSwitch.BaseMethodDeclaration:
        return myConceptBaseMethodDeclaration;
      case LanguageConceptSwitch.BaseStringOperation:
        return myConceptBaseStringOperation;
      case LanguageConceptSwitch.BaseVariableDeclaration:
        return myConceptBaseVariableDeclaration;
      case LanguageConceptSwitch.BaseVariableReference:
        return myConceptBaseVariableReference;
      case LanguageConceptSwitch.BinaryBitwiseOperation:
        return myConceptBinaryBitwiseOperation;
      case LanguageConceptSwitch.BinaryCompareOperation:
        return myConceptBinaryCompareOperation;
      case LanguageConceptSwitch.BinaryOperation:
        return myConceptBinaryOperation;
      case LanguageConceptSwitch.BitwiseAndExpression:
        return myConceptBitwiseAndExpression;
      case LanguageConceptSwitch.BitwiseNotExpression:
        return myConceptBitwiseNotExpression;
      case LanguageConceptSwitch.BitwiseOrExpression:
        return myConceptBitwiseOrExpression;
      case LanguageConceptSwitch.BitwiseXorExpression:
        return myConceptBitwiseXorExpression;
      case LanguageConceptSwitch.BlockStatement:
        return myConceptBlockStatement;
      case LanguageConceptSwitch.BooleanConstant:
        return myConceptBooleanConstant;
      case LanguageConceptSwitch.BooleanType:
        return myConceptBooleanType;
      case LanguageConceptSwitch.BreakStatement:
        return myConceptBreakStatement;
      case LanguageConceptSwitch.ByteType:
        return myConceptByteType;
      case LanguageConceptSwitch.CastExpression:
        return myConceptCastExpression;
      case LanguageConceptSwitch.CatchClause:
        return myConceptCatchClause;
      case LanguageConceptSwitch.CharConstant:
        return myConceptCharConstant;
      case LanguageConceptSwitch.CharType:
        return myConceptCharType;
      case LanguageConceptSwitch.ClassConcept:
        return myConceptClassConcept;
      case LanguageConceptSwitch.ClassCreator:
        return myConceptClassCreator;
      case LanguageConceptSwitch.Classifier:
        return myConceptClassifier;
      case LanguageConceptSwitch.ClassifierClassExpression:
        return myConceptClassifierClassExpression;
      case LanguageConceptSwitch.ClassifierMember:
        return myConceptClassifierMember;
      case LanguageConceptSwitch.ClassifierType:
        return myConceptClassifierType;
      case LanguageConceptSwitch.Closure:
        return myConceptClosure;
      case LanguageConceptSwitch.ClosureParameter:
        return myConceptClosureParameter;
      case LanguageConceptSwitch.ClosureParameterReference:
        return myConceptClosureParameterReference;
      case LanguageConceptSwitch.Closureoid:
        return myConceptClosureoid;
      case LanguageConceptSwitch.CommentPart:
        return myConceptCommentPart;
      case LanguageConceptSwitch.CommentedStatement:
        return myConceptCommentedStatement;
      case LanguageConceptSwitch.CommentedStatementsBlock:
        return myConceptCommentedStatementsBlock;
      case LanguageConceptSwitch.ConceptFunction:
        return myConceptConceptFunction;
      case LanguageConceptSwitch.ConceptFunctionParameter:
        return myConceptConceptFunctionParameter;
      case LanguageConceptSwitch.ConstructorDeclaration:
        return myConceptConstructorDeclaration;
      case LanguageConceptSwitch.ConstructorInvocationStatement:
        return myConceptConstructorInvocationStatement;
      case LanguageConceptSwitch.ContextClassifierKind:
        return myConceptContextClassifierKind;
      case LanguageConceptSwitch.ContinueStatement:
        return myConceptContinueStatement;
      case LanguageConceptSwitch.CustomPropertyImplementation:
        return myConceptCustomPropertyImplementation;
      case LanguageConceptSwitch.CustomSetterPropertyImplementation:
        return myConceptCustomSetterPropertyImplementation;
      case LanguageConceptSwitch.DefaultClassCreator:
        return myConceptDefaultClassCreator;
      case LanguageConceptSwitch.DefaultGetAccessor:
        return myConceptDefaultGetAccessor;
      case LanguageConceptSwitch.DefaultPropertyImplementation:
        return myConceptDefaultPropertyImplementation;
      case LanguageConceptSwitch.DefaultSetAccessor:
        return myConceptDefaultSetAccessor;
      case LanguageConceptSwitch.DimensionExpression:
        return myConceptDimensionExpression;
      case LanguageConceptSwitch.DivAssignmentExpression:
        return myConceptDivAssignmentExpression;
      case LanguageConceptSwitch.DivExpression:
        return myConceptDivExpression;
      case LanguageConceptSwitch.DoWhileStatement:
        return myConceptDoWhileStatement;
      case LanguageConceptSwitch.DotExpression:
        return myConceptDotExpression;
      case LanguageConceptSwitch.DoubleType:
        return myConceptDoubleType;
      case LanguageConceptSwitch.ElsifClause:
        return myConceptElsifClause;
      case LanguageConceptSwitch.EnumClass:
        return myConceptEnumClass;
      case LanguageConceptSwitch.EnumConstantDeclaration:
        return myConceptEnumConstantDeclaration;
      case LanguageConceptSwitch.EnumConstantReference:
        return myConceptEnumConstantReference;
      case LanguageConceptSwitch.EnumValueOfExpression:
        return myConceptEnumValueOfExpression;
      case LanguageConceptSwitch.EnumValuesExpression:
        return myConceptEnumValuesExpression;
      case LanguageConceptSwitch.EqualsExpression:
        return myConceptEqualsExpression;
      case LanguageConceptSwitch.EscapeOperation:
        return myConceptEscapeOperation;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.ExpressionStatement:
        return myConceptExpressionStatement;
      case LanguageConceptSwitch.FieldDeclaration:
        return myConceptFieldDeclaration;
      case LanguageConceptSwitch.FieldReferenceOperation:
        return myConceptFieldReferenceOperation;
      case LanguageConceptSwitch.FloatType:
        return myConceptFloatType;
      case LanguageConceptSwitch.FloatingPointConstant:
        return myConceptFloatingPointConstant;
      case LanguageConceptSwitch.FloatingPointFloatConstant:
        return myConceptFloatingPointFloatConstant;
      case LanguageConceptSwitch.ForStatement:
        return myConceptForStatement;
      case LanguageConceptSwitch.ForeachStatement:
        return myConceptForeachStatement;
      case LanguageConceptSwitch.GenericDeclaration:
        return myConceptGenericDeclaration;
      case LanguageConceptSwitch.GenericNewExpression:
        return myConceptGenericNewExpression;
      case LanguageConceptSwitch.GetAccessor:
        return myConceptGetAccessor;
      case LanguageConceptSwitch.GreaterThanExpression:
        return myConceptGreaterThanExpression;
      case LanguageConceptSwitch.GreaterThanOrEqualsExpression:
        return myConceptGreaterThanOrEqualsExpression;
      case LanguageConceptSwitch.HasAnnotation:
        return myConceptHasAnnotation;
      case LanguageConceptSwitch.HexIntegerLiteral:
        return myConceptHexIntegerLiteral;
      case LanguageConceptSwitch.IAnonymousClass:
        return myConceptIAnonymousClass;
      case LanguageConceptSwitch.IBLDeprecatable:
        return myConceptIBLDeprecatable;
      case LanguageConceptSwitch.IBinaryLike:
        return myConceptIBinaryLike;
      case LanguageConceptSwitch.IClassifier:
        return myConceptIClassifier;
      case LanguageConceptSwitch.IClassifierMember:
        return myConceptIClassifierMember;
      case LanguageConceptSwitch.IClassifierType:
        return myConceptIClassifierType;
      case LanguageConceptSwitch.IConditional:
        return myConceptIConditional;
      case LanguageConceptSwitch.IContainsStatementList:
        return myConceptIContainsStatementList;
      case LanguageConceptSwitch.IControlFlowInterrupter:
        return myConceptIControlFlowInterrupter;
      case LanguageConceptSwitch.IExtractMethodAvailable:
        return myConceptIExtractMethodAvailable;
      case LanguageConceptSwitch.IFinalWrapper:
        return myConceptIFinalWrapper;
      case LanguageConceptSwitch.IGenericType:
        return myConceptIGenericType;
      case LanguageConceptSwitch.IHasModifiers:
        return myConceptIHasModifiers;
      case LanguageConceptSwitch.IIncompleteParen:
        return myConceptIIncompleteParen;
      case LanguageConceptSwitch.IInternalType:
        return myConceptIInternalType;
      case LanguageConceptSwitch.ILocalDeclaration:
        return myConceptILocalDeclaration;
      case LanguageConceptSwitch.ILocalReference:
        return myConceptILocalReference;
      case LanguageConceptSwitch.ILocalVariableElement:
        return myConceptILocalVariableElement;
      case LanguageConceptSwitch.ILocalVariableElementList:
        return myConceptILocalVariableElementList;
      case LanguageConceptSwitch.IMemberContainer:
        return myConceptIMemberContainer;
      case LanguageConceptSwitch.IMethodCall:
        return myConceptIMethodCall;
      case LanguageConceptSwitch.IMethodLike:
        return myConceptIMethodLike;
      case LanguageConceptSwitch.IOperation:
        return myConceptIOperation;
      case LanguageConceptSwitch.IParameter:
        return myConceptIParameter;
      case LanguageConceptSwitch.ISkipsReturn:
        return myConceptISkipsReturn;
      case LanguageConceptSwitch.IStatementListContainer:
        return myConceptIStatementListContainer;
      case LanguageConceptSwitch.IStaticContainerForMethods:
        return myConceptIStaticContainerForMethods;
      case LanguageConceptSwitch.IThisExpression:
        return myConceptIThisExpression;
      case LanguageConceptSwitch.ITryCatchStatement:
        return myConceptITryCatchStatement;
      case LanguageConceptSwitch.ITypeApplicable:
        return myConceptITypeApplicable;
      case LanguageConceptSwitch.IValidIdentifier:
        return myConceptIValidIdentifier;
      case LanguageConceptSwitch.IVariableAssignment:
        return myConceptIVariableAssignment;
      case LanguageConceptSwitch.IVariableDeclaration:
        return myConceptIVariableDeclaration;
      case LanguageConceptSwitch.IVariableReference:
        return myConceptIVariableReference;
      case LanguageConceptSwitch.IVisible:
        return myConceptIVisible;
      case LanguageConceptSwitch.IWillBeClassifier:
        return myConceptIWillBeClassifier;
      case LanguageConceptSwitch.IYetUnresolved:
        return myConceptIYetUnresolved;
      case LanguageConceptSwitch.IfStatement:
        return myConceptIfStatement;
      case LanguageConceptSwitch.ImplicitAnnotationInstanceValue:
        return myConceptImplicitAnnotationInstanceValue;
      case LanguageConceptSwitch.ImplicitAnnotationMethodKind:
        return myConceptImplicitAnnotationMethodKind;
      case LanguageConceptSwitch.IncompleteLeftParen:
        return myConceptIncompleteLeftParen;
      case LanguageConceptSwitch.IncompleteMemberDeclaration:
        return myConceptIncompleteMemberDeclaration;
      case LanguageConceptSwitch.IncompleteRightParen:
        return myConceptIncompleteRightParen;
      case LanguageConceptSwitch.InstanceInitializer:
        return myConceptInstanceInitializer;
      case LanguageConceptSwitch.InstanceMethodCallOperation:
        return myConceptInstanceMethodCallOperation;
      case LanguageConceptSwitch.InstanceMethodDeclaration:
        return myConceptInstanceMethodDeclaration;
      case LanguageConceptSwitch.InstanceOfExpression:
        return myConceptInstanceOfExpression;
      case LanguageConceptSwitch.IntegerConstant:
        return myConceptIntegerConstant;
      case LanguageConceptSwitch.IntegerLiteral:
        return myConceptIntegerLiteral;
      case LanguageConceptSwitch.IntegerType:
        return myConceptIntegerType;
      case LanguageConceptSwitch.Interface:
        return myConceptInterface;
      case LanguageConceptSwitch.IsEmptyOperation:
        return myConceptIsEmptyOperation;
      case LanguageConceptSwitch.IsNotEmptyOperation:
        return myConceptIsNotEmptyOperation;
      case LanguageConceptSwitch.JavaImport:
        return myConceptJavaImport;
      case LanguageConceptSwitch.JavaImports:
        return myConceptJavaImports;
      case LanguageConceptSwitch.JavaModifier:
        return myConceptJavaModifier;
      case LanguageConceptSwitch.LeftShiftAssignmentExpression:
        return myConceptLeftShiftAssignmentExpression;
      case LanguageConceptSwitch.LessThanExpression:
        return myConceptLessThanExpression;
      case LanguageConceptSwitch.LessThanOrEqualsExpression:
        return myConceptLessThanOrEqualsExpression;
      case LanguageConceptSwitch.LocalInstanceFieldReference:
        return myConceptLocalInstanceFieldReference;
      case LanguageConceptSwitch.LocalInstanceMethodCall:
        return myConceptLocalInstanceMethodCall;
      case LanguageConceptSwitch.LocalMethodCall:
        return myConceptLocalMethodCall;
      case LanguageConceptSwitch.LocalPropertyReference:
        return myConceptLocalPropertyReference;
      case LanguageConceptSwitch.LocalStaticFieldReference:
        return myConceptLocalStaticFieldReference;
      case LanguageConceptSwitch.LocalStaticMethodCall:
        return myConceptLocalStaticMethodCall;
      case LanguageConceptSwitch.LocalToMethodKind:
        return myConceptLocalToMethodKind;
      case LanguageConceptSwitch.LocalVariableDeclaration:
        return myConceptLocalVariableDeclaration;
      case LanguageConceptSwitch.LocalVariableDeclarationStatement:
        return myConceptLocalVariableDeclarationStatement;
      case LanguageConceptSwitch.LongLiteral:
        return myConceptLongLiteral;
      case LanguageConceptSwitch.LongType:
        return myConceptLongType;
      case LanguageConceptSwitch.LoopLabel:
        return myConceptLoopLabel;
      case LanguageConceptSwitch.LoopLabelReference:
        return myConceptLoopLabelReference;
      case LanguageConceptSwitch.LowerBoundType:
        return myConceptLowerBoundType;
      case LanguageConceptSwitch.MethodDeclaration:
        return myConceptMethodDeclaration;
      case LanguageConceptSwitch.MinusAssignmentExpression:
        return myConceptMinusAssignmentExpression;
      case LanguageConceptSwitch.MinusExpression:
        return myConceptMinusExpression;
      case LanguageConceptSwitch.Modifier:
        return myConceptModifier;
      case LanguageConceptSwitch.MulAssignmentExpression:
        return myConceptMulAssignmentExpression;
      case LanguageConceptSwitch.MulExpression:
        return myConceptMulExpression;
      case LanguageConceptSwitch.NPEEqualsExpression:
        return myConceptNPEEqualsExpression;
      case LanguageConceptSwitch.NPENotEqualsExpression:
        return myConceptNPENotEqualsExpression;
      case LanguageConceptSwitch.NestedNewExpression:
        return myConceptNestedNewExpression;
      case LanguageConceptSwitch.NotEqualsExpression:
        return myConceptNotEqualsExpression;
      case LanguageConceptSwitch.NotExpression:
        return myConceptNotExpression;
      case LanguageConceptSwitch.NullLiteral:
        return myConceptNullLiteral;
      case LanguageConceptSwitch.NullType:
        return myConceptNullType;
      case LanguageConceptSwitch.Number:
        return myConceptNumber;
      case LanguageConceptSwitch.OperationAssignmentExpression:
        return myConceptOperationAssignmentExpression;
      case LanguageConceptSwitch.OrAssignmentExpression:
        return myConceptOrAssignmentExpression;
      case LanguageConceptSwitch.OrExpression:
        return myConceptOrExpression;
      case LanguageConceptSwitch.ParameterDeclaration:
        return myConceptParameterDeclaration;
      case LanguageConceptSwitch.ParenthesizedExpression:
        return myConceptParenthesizedExpression;
      case LanguageConceptSwitch.PlaceholderMember:
        return myConceptPlaceholderMember;
      case LanguageConceptSwitch.PlusAssignmentExpression:
        return myConceptPlusAssignmentExpression;
      case LanguageConceptSwitch.PlusExpression:
        return myConceptPlusExpression;
      case LanguageConceptSwitch.PostfixDecrementExpression:
        return myConceptPostfixDecrementExpression;
      case LanguageConceptSwitch.PostfixIncrementExpression:
        return myConceptPostfixIncrementExpression;
      case LanguageConceptSwitch.PrefixDecrementExpression:
        return myConceptPrefixDecrementExpression;
      case LanguageConceptSwitch.PrefixIncrementExpression:
        return myConceptPrefixIncrementExpression;
      case LanguageConceptSwitch.PrimitiveClassExpression:
        return myConceptPrimitiveClassExpression;
      case LanguageConceptSwitch.PrimitiveType:
        return myConceptPrimitiveType;
      case LanguageConceptSwitch.PrivateVisibility:
        return myConceptPrivateVisibility;
      case LanguageConceptSwitch.Property:
        return myConceptProperty;
      case LanguageConceptSwitch.PropertyImplementation:
        return myConceptPropertyImplementation;
      case LanguageConceptSwitch.PropertyReference:
        return myConceptPropertyReference;
      case LanguageConceptSwitch.PropertyValueReference:
        return myConceptPropertyValueReference;
      case LanguageConceptSwitch.ProtectedVisibility:
        return myConceptProtectedVisibility;
      case LanguageConceptSwitch.PublicVisibility:
        return myConceptPublicVisibility;
      case LanguageConceptSwitch.QualifiedSuperMethodCall:
        return myConceptQualifiedSuperMethodCall;
      case LanguageConceptSwitch.RemAssignmentExpression:
        return myConceptRemAssignmentExpression;
      case LanguageConceptSwitch.RemExpression:
        return myConceptRemExpression;
      case LanguageConceptSwitch.RemarkStatement:
        return myConceptRemarkStatement;
      case LanguageConceptSwitch.ReturnStatement:
        return myConceptReturnStatement;
      case LanguageConceptSwitch.RightShiftAssignmentExpression:
        return myConceptRightShiftAssignmentExpression;
      case LanguageConceptSwitch.SetAccessor:
        return myConceptSetAccessor;
      case LanguageConceptSwitch.ShiftLeftExpression:
        return myConceptShiftLeftExpression;
      case LanguageConceptSwitch.ShiftRightExpression:
        return myConceptShiftRightExpression;
      case LanguageConceptSwitch.ShiftRightUnsignedExpression:
        return myConceptShiftRightUnsignedExpression;
      case LanguageConceptSwitch.ShortType:
        return myConceptShortType;
      case LanguageConceptSwitch.SingleLineComment:
        return myConceptSingleLineComment;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.StatementCommentPart:
        return myConceptStatementCommentPart;
      case LanguageConceptSwitch.StatementList:
        return myConceptStatementList;
      case LanguageConceptSwitch.StaticFieldDeclaration:
        return myConceptStaticFieldDeclaration;
      case LanguageConceptSwitch.StaticFieldReference:
        return myConceptStaticFieldReference;
      case LanguageConceptSwitch.StaticInitializer:
        return myConceptStaticInitializer;
      case LanguageConceptSwitch.StaticKind:
        return myConceptStaticKind;
      case LanguageConceptSwitch.StaticMethodCall:
        return myConceptStaticMethodCall;
      case LanguageConceptSwitch.StaticMethodDeclaration:
        return myConceptStaticMethodDeclaration;
      case LanguageConceptSwitch.StringBooleanOperation:
        return myConceptStringBooleanOperation;
      case LanguageConceptSwitch.StringLiteral:
        return myConceptStringLiteral;
      case LanguageConceptSwitch.StringToken:
        return myConceptStringToken;
      case LanguageConceptSwitch.StringType:
        return myConceptStringType;
      case LanguageConceptSwitch.StubStatementList:
        return myConceptStubStatementList;
      case LanguageConceptSwitch.SubstringExpression:
        return myConceptSubstringExpression;
      case LanguageConceptSwitch.SuperConstructorInvocation:
        return myConceptSuperConstructorInvocation;
      case LanguageConceptSwitch.SuperConstructorKind:
        return myConceptSuperConstructorKind;
      case LanguageConceptSwitch.SuperInerfaceKind:
        return myConceptSuperInerfaceKind;
      case LanguageConceptSwitch.SuperMethodCall:
        return myConceptSuperMethodCall;
      case LanguageConceptSwitch.SuperMethodKind:
        return myConceptSuperMethodKind;
      case LanguageConceptSwitch.SwitchCase:
        return myConceptSwitchCase;
      case LanguageConceptSwitch.SwitchStatement:
        return myConceptSwitchStatement;
      case LanguageConceptSwitch.SynchronizedStatement:
        return myConceptSynchronizedStatement;
      case LanguageConceptSwitch.TernaryOperatorExpression:
        return myConceptTernaryOperatorExpression;
      case LanguageConceptSwitch.TextCommentPart:
        return myConceptTextCommentPart;
      case LanguageConceptSwitch.ThisConstructorInvocation:
        return myConceptThisConstructorInvocation;
      case LanguageConceptSwitch.ThisConstructorKind:
        return myConceptThisConstructorKind;
      case LanguageConceptSwitch.ThisExpression:
        return myConceptThisExpression;
      case LanguageConceptSwitch.ThrowStatement:
        return myConceptThrowStatement;
      case LanguageConceptSwitch.Tokens:
        return myConceptTokens;
      case LanguageConceptSwitch.TrimOperation:
        return myConceptTrimOperation;
      case LanguageConceptSwitch.TryCatchStatement:
        return myConceptTryCatchStatement;
      case LanguageConceptSwitch.TryStatement:
        return myConceptTryStatement;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.TypeAnnotable:
        return myConceptTypeAnnotable;
      case LanguageConceptSwitch.TypeDerivable:
        return myConceptTypeDerivable;
      case LanguageConceptSwitch.TypeVariableDeclaration:
        return myConceptTypeVariableDeclaration;
      case LanguageConceptSwitch.TypeVariableReference:
        return myConceptTypeVariableReference;
      case LanguageConceptSwitch.UnaryMinus:
        return myConceptUnaryMinus;
      case LanguageConceptSwitch.UndefinedType:
        return myConceptUndefinedType;
      case LanguageConceptSwitch.UnknownConsCall:
        return myConceptUnknownConsCall;
      case LanguageConceptSwitch.UnknownDotCall:
        return myConceptUnknownDotCall;
      case LanguageConceptSwitch.UnknownLocalCall:
        return myConceptUnknownLocalCall;
      case LanguageConceptSwitch.UnknownNameRef:
        return myConceptUnknownNameRef;
      case LanguageConceptSwitch.UnknownNew:
        return myConceptUnknownNew;
      case LanguageConceptSwitch.UnresolvedNameReference:
        return myConceptUnresolvedNameReference;
      case LanguageConceptSwitch.UnsignedRightShiftAssignmentExpression:
        return myConceptUnsignedRightShiftAssignmentExpression;
      case LanguageConceptSwitch.UpperBoundType:
        return myConceptUpperBoundType;
      case LanguageConceptSwitch.UsingStatement:
        return myConceptUsingStatement;
      case LanguageConceptSwitch.ValueParameter:
        return myConceptValueParameter;
      case LanguageConceptSwitch.VarType:
        return myConceptVarType;
      case LanguageConceptSwitch.VariableArityType:
        return myConceptVariableArityType;
      case LanguageConceptSwitch.VariableDeclaration:
        return myConceptVariableDeclaration;
      case LanguageConceptSwitch.VariableReference:
        return myConceptVariableReference;
      case LanguageConceptSwitch.Visibility:
        return myConceptVisibility;
      case LanguageConceptSwitch.VoidType:
        return myConceptVoidType;
      case LanguageConceptSwitch.WhileStatement:
        return myConceptWhileStatement;
      case LanguageConceptSwitch.WildCardType:
        return myConceptWildCardType;
      case LanguageConceptSwitch.XorAssignmentExpression:
        return myConceptXorAssignmentExpression;
      default:
        return null;
    }
  }

  @Override
  public Collection<EnumerationDescriptor> getEnumerationDescriptors() {
    return Arrays.asList(myEnumerationTrimKind);
  }

  @Override
  public Collection<ConstrainedStringDatatypeDescriptor> getConstrainedStringDatatypeDescriptors() {
    return Arrays.asList(myCSDatatype_CharConstant_String, myCSDatatype_FPNumber_String, myCSDatatype_FloatNumberValue, myCSDatatype_HexNumberValue, myCSDatatype_Identifier_String, myCSDatatype_LongType_String);
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractClassifierReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractClassifierReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6c91efa5ec8cd7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7812779912047922391");
    b.version(2);
    b.associate("classifier", 0x6c6c91efa5ecbbb2L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("7812779912047934386").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1145552809883");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractForStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1144230876926");
    b.version(2);
    b.aggregate("variable", 0x10a6979f36bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL).optional(true).ordered(true).multiple(false).origin("1144230900587").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractLoopStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1154032098014");
    b.version(2);
    b.property("label", 0x11745b5371dL).type(PrimitiveTypeId.STRING).origin("1199465379613").done();
    b.aggregate("body", 0x10cb1ada6e8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1154032183016").done();
    b.aggregate("loopLabel", 0x50c493bf9555131L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9552f6aL).optional(true).ordered(true).multiple(false).origin("363746191845183793").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1196792d150L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1208623485264");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractUnaryNumberOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1239714755177");
    b.version(2);
    b.aggregate("expression", 0x120a4c433a6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1239714902950").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdditionalForLoopVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AdditionalForLoopVariable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x19659b074928781eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1830039279190439966");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AndAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862eaaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501418");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("&=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AndExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb7c3070eeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1080120340718");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("&&");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Annotation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a69dc80cL);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.Interface", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188206331916");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("@interface");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotationInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnnotationInstance", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188207840427");
    b.version(2);
    b.associate("annotation", 0x114a6b85d40L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a69dc80cL).optional(false).origin("1188208074048").done();
    b.aggregate("value", 0x114a71c697fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71b1af4L).optional(true).ordered(true).multiple(true).origin("1188214630783").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotationInstanceExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnnotationInstanceExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71a2770L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188214482800");
    b.version(2);
    b.aggregate("annotationInstance", 0x114a71a8526L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL).optional(false).ordered(true).multiple(false).origin("1188214506790").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("annotation instance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotationInstanceValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnnotationInstanceValue", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71b1af4L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188214545140");
    b.version(2);
    b.associate("key", 0x114a71b44e3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L).optional(false).origin("1188214555875").done();
    b.aggregate("value", 0x114a71c0fc4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1188214607812").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnnotationMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnnotationMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188206574119");
    b.version(2);
    b.aggregate("defaultValue", 0x505a7bf53e13af48L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("5790076564176875336").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnonymousClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnonymousClass", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2f89e470eed6258eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x7c8556154508e980L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1170345865475");
    b.version(2);
    b.associate("classifier", 0x1107e0fd2a0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("1170346070688").done();
    b.aggregate("parameter", 0x1107e104a89L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1170346101385").done();
    b.aggregate("typeParameter", 0x117ac45a693L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("1201186121363").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnonymousClassCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AnonymousClassCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1133e3b449aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1182160077978");
    b.version(2);
    b.aggregate("cls", 0x1133e3b8b49L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L).optional(false).ordered(true).multiple(false).origin("1182160096073").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("anonymous class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayAccessExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayAccessExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11126b40c25L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1173175405605");
    b.version(2);
    b.aggregate("array", 0x11126b6de5aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1173175590490").done();
    b.aggregate("index", 0x11126b6ac89L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1173175577737").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayClassExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayClassExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x115f7830a32a65e7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1251851371723515367");
    b.version(2);
    b.aggregate("arrayType", 0x115f7830a32a65e8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d819f7L).optional(false).ordered(true).multiple(false).origin("1251851371723515368").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayCloneOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayCloneOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x483ee9d7f09580d6L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5205855332950442198");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("clone()");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x113e4952f12L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1184950988562");
    b.version(2);
    b.aggregate("componentType", 0x113e49578edL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1184951007469").done();
    b.aggregate("dimensionExpression", 0x113e4b36742L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x113e4b2dfdaL).optional(false).ordered(true).multiple(true).origin("1184952969026").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("array");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayCreatorWithInitializer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayCreatorWithInitializer", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cd01b77ddL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1154542696413");
    b.version(2);
    b.aggregate("componentType", 0x10cd01cf3c4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1154542793668").done();
    b.aggregate("initValue", 0x10cd01d19acL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1154542803372").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("array with initializer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayLengthOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayLengthOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1197781411dL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1208890769693");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("length");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a770dc0dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188220165133");
    b.version(2);
    b.aggregate("item", 0x114a770fdbfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1188220173759").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArrayType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ArrayType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d819f7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534760951");
    b.version(2);
    b.aggregate("componentType", 0xf940d819f8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1070534760952").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d00538bdfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224071154655");
    b.version(2);
    b.aggregate("expression", 0x11d00538be0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1224071154656").done();
    b.aggregate("classifierType", 0x11d00538be1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(false).ordered(true).multiple(false).origin("1224071154657").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("as");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAssertStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AssertStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1160998861373");
    b.version(2);
    b.aggregate("condition", 0x10e50ed44ceL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1160998896846").done();
    b.aggregate("message", 0x10e50ed92e0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1160998916832").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("assert");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "AssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e96L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11b0d00332cL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068498886294");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBLBottomType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BLBottomType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1210c38a8adL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1241450588333");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("BLBottom");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11b0d00332cL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1215693861676");
    b.version(2);
    b.aggregate("lValue", 0xf8c77f1e97L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1068498886295").done();
    b.aggregate("rValue", 0xf8c77f1e99L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1068498886297").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068499141036");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11f4b6b2435L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x72de18bba2dc2a73L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x203eeb62af522fa5L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7d2577L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123132");
    b.version(2);
    b.property("isFinal", 0x113294bffd2L).type(PrimitiveTypeId.BOOLEAN).origin("1181808852946").done();
    b.property("isSynchronized", 0x3b576cda23612c7aL).type(PrimitiveTypeId.BOOLEAN).origin("4276006055363816570").done();
    b.aggregate("returnType", 0xf8cc56b1fdL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1068580123133").done();
    b.aggregate("parameter", 0xf8cc56b1feL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L).optional(true).ordered(true).multiple(true).origin("1068580123134").done();
    b.aggregate("body", 0xf8cc56b1ffL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1068580123135").done();
    b.aggregate("throwsItem", 0x10f383d6949L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("1164879685961").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseStringOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseStringOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dc8da1L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271315873");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4972933694980447171");
    b.version(2);
    b.aggregate("type", 0x4ed4d318133c80ceL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("5680397130376446158").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBaseVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BaseVariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5497648299878491908");
    b.version(2);
    b.associate("baseVariableDeclaration", 0x4c4b92003e49a705L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L).optional(false).origin("5497648299878491909").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryBitwiseOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224500579375");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryCompareOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BinaryCompareOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x12094ea9f7dL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1239448985469");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081773326031");
    b.version(2);
    b.aggregate("rightExpression", 0xfbdeb7a11bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1081773367579").done();
    b.aggregate("leftExpression", 0xfbdeb7a11cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1081773367580").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<?>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBitwiseAndExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BitwiseAndExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19eede01L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224500764161");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("&");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBitwiseNotExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BitwiseNotExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d6d026f5fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225894555487");
    b.version(2);
    b.aggregate("expression", 0x11d6d026f62L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225894555490").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("~(expr)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBitwiseOrExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BitwiseOrExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ef4652L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224500790866");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBitwiseXorExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BitwiseXorExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ef69abL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224500799915");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("^");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BlockStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1082485599095");
    b.version(2);
    b.aggregate("statements", 0xfc092b6b78L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1082485599096").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BooleanConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123137");
    b.version(2);
    b.property("value", 0xf8cc56b202L).type(PrimitiveTypeId.BOOLEAN).origin("1068580123138").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("boolean constant");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BooleanType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d6513eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534644030");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("boolean");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBreakStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "BreakStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081855346303");
    b.version(2);
    b.property("label", 0x11745bfb2d8L).type(PrimitiveTypeId.STRING).origin("1199466066648").done();
    b.aggregate("loopLabelReference", 0x7dae85d6eb42f8c4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L).optional(true).ordered(true).multiple(false).origin("9056323058805176516").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("break");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForByteType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ByteType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d5b617L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534604311");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("byte");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCastExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CastExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940dabe4aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534934090");
    b.version(2);
    b.aggregate("type", 0xf940dabe4bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1070534934091").done();
    b.aggregate("expression", 0xf940dabe4cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1070534934092").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("(type)exp");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCatchClause() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CatchClause", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL);
    b.class_(false, false, false);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1164903280175");
    b.version(2);
    b.aggregate("throwable", 0x10f39a6a2f1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL).optional(false).ordered(true).multiple(false).origin("1164903359217").done();
    b.aggregate("catchBody", 0x10f39a6a2f2L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1164903359218").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CharConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1177d44b21bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1200397529627");
    b.version(2);
    b.property("charConstant", 0x1177d44ddefL).type(MetaIdFactory.constrainedStringDataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1177d450137L)).origin("1200397540847").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("'");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CharType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d4f826L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534555686");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("char");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.Classifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068390468198");
    b.version(2);
    b.property("abstractClass", 0xfa5cee6dfaL).type(PrimitiveTypeId.BOOLEAN).origin("1075300953594").done();
    b.property("isFinal", 0x11c6af4b284L).type(PrimitiveTypeId.BOOLEAN).origin("1221565133444").done();
    b.property("isStatic", 0x451f9e9f920b7f7dL).type(PrimitiveTypeId.BOOLEAN).origin("4980874121082273661").done();
    b.aggregate("field", 0xf8c108ca67L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L).optional(true).ordered(true).multiple(true).origin("1068390468199").done();
    b.aggregate("constructor", 0xf8c108ca69L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b204L).optional(true).ordered(true).multiple(true).origin("1068390468201").done();
    b.aggregate("staticMethod", 0xf93c860970L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbbebabf0aL).optional(true).ordered(true).multiple(true).origin("1070462273904").done();
    b.aggregate("superclass", 0x10f6353296dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(true).ordered(true).multiple(false).origin("1165602531693").done();
    b.aggregate("implementedInterface", 0xff2ac0b419L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(true).ordered(true).multiple(true).origin("1095933932569").done();
    b.aggregate("instanceInitializer", 0x118f0bb6f38L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118f0b909f7L).optional(true).ordered(true).multiple(false).origin("1206629658424").done();
    b.aggregate("classInitializer", 0x11c7540b43aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c7538039dL).optional(true).ordered(true).multiple(false).origin("1221737886778").done();
    b.aggregate("staticInitializer", 0x110ca5f7c5aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(true).ordered(true).multiple(false).origin("1171626359898").done();
    b.aggregate("property", 0x117b77c3991L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b744dafeL).optional(true).ordered(true).multiple(true).origin("1201374247313").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClassCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a59b0fbceL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1212685548494");
    b.version(2);
    b.aggregate("typeParameter", 0x11a59c8ffe0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("1212687122400").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Classifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb113dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11638b31955L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x62763dc803b97bd8L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1107461130800");
    b.version(2);
    b.property("nestedName", 0x11a134c900dL).type(PrimitiveTypeId.STRING).origin("1211504562189").done();
    b.property("isDeprecated", 0x11ce63f4b3bL).type(PrimitiveTypeId.BOOLEAN).origin("1223633619771").done();
    b.property("nonStatic", 0x73c6d8a8c021f99L).type(PrimitiveTypeId.BOOLEAN).origin("521412098689998745").done();
    b.aggregate("member", 0x4a9a46de59132803L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL).optional(true).ordered(false).multiple(true).origin("5375687026011219971").done();
    b.aggregate("staticField", 0x106c32c4395L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL).optional(true).ordered(true).multiple(true).origin("1128555889557").done();
    b.aggregate("method", 0x101f2cc410bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL).optional(true).ordered(true).multiple(true).origin("1107880067339").done();
    b.aggregate("staticInnerClassifiers", 0x1126b0986b7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(true).ordered(true).multiple(true).origin("1178616825527").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassifierClassExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClassifierClassExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x103fb730c14L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1116615150612");
    b.version(2);
    b.associate("classifier", 0x103fb73a43eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("1116615189566").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassifierMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClassifierMember", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.interface_();
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb113eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1178285077437");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassifierType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClassifierType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb7f7eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1107535904670");
    b.version(2);
    b.associate("classifier", 0x101de490babL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("1107535924139").done();
    b.aggregate("parameter", 0x102419671abL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("1109201940907").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClosure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Closure", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c63f4f3f3L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1192e7dfdd1L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1152728232947");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClosureParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClosureParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c7edb2aa8L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153179527848");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClosureParameterReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ClosureParameterReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c7edba8b3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153179560115");
    b.version(2);
    b.associate("closureParameter", 0x10c7edc81a4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c7edb2aa8L).optional(false).origin("1153179615652").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClosureoid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Closureoid", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1192e7dfdd1L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1207665819089");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CommentPart", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6329021646629104955");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentedStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CommentedStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11ef4675fccL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1232461062092");
    b.version(2);
    b.aggregate("statement", 0x11ef467946eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(false).origin("1232461075566").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommentedStatementsBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CommentedStatementsBlock", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1121e2102fdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1206e9046e6L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x39384475a5756fb0L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1177326519037");
    b.version(2);
    b.aggregate("statement", 0x1121e2157e4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(true).origin("1177326540772").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("/*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptFunction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ConceptFunction", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7d2577L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1137021947720");
    b.version(2);
    b.aggregate("body", 0x108bbd29b4aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1137022507850").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConceptFunctionParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ConceptFunctionParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d486a1d9eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1107135704075");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstructorDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ConstructorDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b204L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123140");
    b.version(2);
    b.property("nestedName", 0x11a135d952bL).type(PrimitiveTypeId.STRING).origin("1211505677611").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("constructor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstructorInvocationStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ConstructorInvocationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x121119ae5ffL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1241540912639");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContextClassifierKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ContextClassifierKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x32e8e5805c50376L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/229277139747537782");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContinueStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ContinueStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1082113931046");
    b.version(2);
    b.property("label", 0x11745fca58eL).type(PrimitiveTypeId.STRING).origin("1199470060942").done();
    b.aggregate("loopLabelReference", 0x7dae85d6eb43bbbdL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L).optional(true).ordered(true).multiple(false).origin("9056323058805226429").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("continue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomPropertyImplementation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CustomPropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b8f1b18eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b75f36c8L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201398722958");
    b.version(2);
    b.aggregate("getAccessor", 0x117b927a740L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b9245fc5L).optional(false).ordered(true).multiple(false).origin("1201402259264").done();
    b.aggregate("setAccessor", 0x117bd9b26faL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117bd9ac3d9L).optional(true).ordered(true).multiple(false).origin("1201476937466").done();
    b.alias("custom");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomSetterPropertyImplementation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "CustomSetterPropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3b7a2005a14cfe5eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b75f36c8L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4285773203949551198");
    b.version(2);
    b.aggregate("getAccessor", 0x3b7a2005a14d0184L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117e0abf7abL).optional(false).ordered(true).multiple(false).origin("4285773203949552004").done();
    b.aggregate("setAccessor", 0x3b7a2005a14d0185L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117bd9ac3d9L).optional(true).ordered(true).multiple(false).origin("4285773203949552005").done();
    b.alias("custom setter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultClassCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DefaultClassCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2724644c0ac833a5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2820489544401957797");
    b.version(2);
    b.associate("classifier", 0x2724644c0ac833a6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("2820489544401957798").done();
    b.aggregate("typeParameter", 0x2724644c0accfdb3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("2820489544402271667").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultGetAccessor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DefaultGetAccessor", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117e0abf7abL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1202065242027");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultPropertyImplementation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DefaultPropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b7633177L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b75f36c8L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201372606839");
    b.version(2);
    b.aggregate("defaultGetAccessor", 0x117e0adb525L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117e0abf7abL).optional(false).ordered(true).multiple(false).origin("1202065356069").done();
    b.aggregate("defaultSetAccessor", 0x117e16fe6eaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117e16a7273L).optional(false).ordered(true).multiple(false).origin("1202078082794").done();
    b.alias("default");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefaultSetAccessor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DefaultSetAccessor", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117e16a7273L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1202077725299");
    b.version(2);
    b.aggregate("visibility", 0x117e16abba2L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL).optional(true).ordered(true).multiple(false).origin("1202077744034").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDimensionExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DimensionExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x113e4b2dfdaL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1184952934362");
    b.version(2);
    b.aggregate("expression", 0x113e4b846d4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1184953288404").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDivAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DivAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862ea4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501412");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("/=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDivExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DivExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xff2bbc13daL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1095950406618");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("/");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDoWhileStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DoWhileStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11232674988L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1177666668936");
    b.version(2);
    b.aggregate("condition", 0x11232679422L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1177666688034").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("do");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDotExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DotExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1197027756228");
    b.version(2);
    b.aggregate("operand", 0x116b46a4416L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1197027771414").done();
    b.aggregate("operation", 0x116b46b36c4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L).optional(false).ordered(true).multiple(false).origin("1197027833540").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDoubleType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "DoubleType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d451a6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534513062");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("double");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElsifClause() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ElsifClause", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118ceceb41aL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1206060495898");
    b.version(2);
    b.aggregate("condition", 0x118ced0983eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1206060619838").done();
    b.aggregate("statementList", 0x118ced0f8fdL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1206060644605").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EnumClass", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1083245097125");
    b.version(2);
    b.aggregate("enumConstant", 0xfc367503acL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L).optional(true).ordered(true).multiple(true).origin("1083245396908").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("enum");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumConstantDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EnumConstantDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11638b31955L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1083245299891");
    b.version(2);
    b.aggregate("method", 0x6d60019ab157734L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL).optional(true).ordered(true).multiple(true).origin("492581319488141108").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumConstantReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EnumConstantReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc37588bc8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1083260308424");
    b.version(2);
    b.associate("enumClass", 0x10a758428feL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L).optional(false).origin("1144432896254").done();
    b.associate("enumConstantDeclaration", 0xfc37588bcaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367388b3L).optional(false).origin("1083260308426").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(".<enum>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumValueOfExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EnumValueOfExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d1e5db156L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224575136086");
    b.version(2);
    b.associate("enumClass", 0x11d1e5e45e8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L).optional(false).origin("1224575174120").done();
    b.aggregate("value", 0x11d1e5e065dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1224575157853").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("valueOf");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumValuesExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EnumValuesExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d1e4bce56L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224573963862");
    b.version(2);
    b.associate("enumClass", 0x11d1e4bf6afL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L).optional(false).origin("1224573974191").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("values");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123152");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("==");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEscapeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "EscapeOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x144805fc3e36da43L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseStringOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dc8da1L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1461424660015405635");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("escape");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068431790191");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ExpressionStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11c6fd75034L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123155");
    b.version(2);
    b.aggregate("expression", 0xf8cc56b214L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1068580123156").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFieldDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "FieldDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068390468200");
    b.version(2);
    b.property("isVolatile", 0x120c4a208a1L).type(PrimitiveTypeId.BOOLEAN).origin("1240249534625").done();
    b.property("isTransient", 0x776fe644792f90adL).type(PrimitiveTypeId.BOOLEAN).origin("8606350594693632173").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("field");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFieldReferenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "FieldReferenceOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b483d77aL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1197029447546");
    b.version(2);
    b.associate("fieldDeclaration", 0x116b484a653L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L).optional(false).origin("1197029500499").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "FloatType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d327fdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534436861");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("float");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatingPointConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "FloatingPointConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1111509017652");
    b.version(2);
    b.property("value", 0x103245d193fL).type(MetaIdFactory.constrainedStringDataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("1113006610751").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("floating point constant (double)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatingPointFloatConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "FloatingPointFloatConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x494547eeedc219b9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5279705229678483897");
    b.version(2);
    b.property("value", 0x494547eeedc219bbL).type(MetaIdFactory.constrainedStringDataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x494547eeedc219baL)).origin("5279705229678483899").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("floating point constant (float)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ForStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractForStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1144231330558");
    b.version(2);
    b.aggregate("condition", 0x10a69819132L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1144231399730").done();
    b.aggregate("iteration", 0x10a6981b2c5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1144231408325").done();
    b.aggregate("additionalVar", 0xe5318742b9d1411L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x19659b074928781eL).optional(true).ordered(true).multiple(true).origin("1032195626824963089").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("for");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForeachStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ForeachStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a6933ce33L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractForStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1144226303539");
    b.version(2);
    b.aggregate("iterable", 0x10a6934ab66L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1144226360166").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("for");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGenericDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "GenericDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1109279851642");
    b.version(2);
    b.aggregate("typeVariableDeclaration", 0x102463bb98eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1024639ed74L).optional(true).ordered(true).multiple(true).origin("1109279881614").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGenericNewExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "GenericNewExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab8473cc5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1145552977093");
    b.version(2);
    b.aggregate("creator", 0x10ab847b486L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL).optional(false).ordered(true).multiple(false).origin("1145553007750").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("new");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetAccessor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "GetAccessor", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b9245fc5L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201402044357");
    b.version(2);
    b.aggregate("statementList", 0x11800267618L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1202593363480").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGreaterThanExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "GreaterThanExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbced38fcfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x12094ea9f7dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081506762703");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGreaterThanOrEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "GreaterThanOrEqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c8d0fac2cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x12094ea9f7dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153417849900");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHasAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "HasAnnotation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1188208481402");
    b.version(2);
    b.aggregate("annotation", 0x114a6beb0bdL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL).optional(true).ordered(true).multiple(true).origin("1188208488637").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHexIntegerLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "HexIntegerLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129761e073L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.IntegerLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1179360813171");
    b.version(2);
    b.property("value", 0x11297628b3cL).type(MetaIdFactory.constrainedStringDataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5d761ebb61934eadL)).origin("1179360856892").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("0x");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAnonymousClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IAnonymousClass", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2f89e470eed6258eL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3425520165286454670");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBLDeprecatable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IBLDeprecatable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11d205fe38dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224848483129");
    b.version(2);
    b.property("isDeprecated", 0x11d2ea948a4L).type(PrimitiveTypeId.BOOLEAN).origin("1224848525476").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBinaryLike() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IBinaryLike", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1742226163722651198");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIClassifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IClassifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb113dL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7405920559687209277");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIClassifierMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IClassifierMember", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb113eL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7405920559687209278");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIClassifierType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IClassifierType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x66c71d82c2eb7f7eL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7405920559687237502");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IConditional", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4235809288648185282");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIContainsStatementList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IContainsStatementList", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1237545921771");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIControlFlowInterrupter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IControlFlowInterrupter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x7c8556154508e980L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8972672481958095232");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIExtractMethodAvailable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IExtractMethodAvailable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c60bb0a14L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1221393582612");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIFinalWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IFinalWrapper", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4dfebb23d6d75dcaL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5620135147607645642");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIGenericType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IGenericType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4107091686347010317");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIHasModifiers() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IHasModifiers", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x203eeb62af522fa5L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2323553266850475941");
    b.version(2);
    b.aggregate("modifiers", 0x203eeb62af522fb1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x21592d9e7375c5a6L).optional(true).ordered(true).multiple(true).origin("2323553266850475953").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIIncompleteParen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IIncompleteParen", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xede3fe8510255edL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1071364028384826861");
    b.version(2);
    b.property("count", 0xede3fe8510255eeL).type(PrimitiveTypeId.INTEGER).origin("1071364028384826862").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIInternalType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IInternalType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118cd59904dL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1206036041805");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILocalDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ILocalDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2d45f01afccba89cL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3262277503800813724");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILocalReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ILocalReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2d45f01afccba89dL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3262277503800813725");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILocalVariableElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ILocalVariableElement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1206e6cc291L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1238803202705");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILocalVariableElementList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ILocalVariableElementList", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1206e9046e6L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1238805530342");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMemberContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IMemberContainer", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11638b31955L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1194952169813");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.interface_();
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11f4b6b2435L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1204053956946");
    b.version(2);
    b.associate("baseMethodDeclaration", 0xf8c78301adL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL).optional(false).origin("1068499141037").done();
    b.aggregate("actualArgument", 0xf8c78301aeL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1068499141038").done();
    b.aggregate("typeArgument", 0x4500f31eb02a7788L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(true).origin("4972241301747169160").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMethodLike() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IMethodLike", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1239354281271");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1197027803184");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d486a1d9eL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225280593310");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISkipsReturn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ISkipsReturn", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x74bdb321e1ee0043L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8412076637103718467");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStatementListContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IStatementListContainer", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1199653749349");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStaticContainerForMethods() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IStaticContainerForMethods", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c8f444674L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1222174328436");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIThisExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IThisExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d206f8d91L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224609861009");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForITryCatchStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ITryCatchStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3399756d2c03d422L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3718132079121388578");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForITypeApplicable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ITypeApplicable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x72de18bba2dc2a73L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8277080359323839091");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIValidIdentifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IValidIdentifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1212170275853");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVariableAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IVariableAssignment", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11cfb3b82a4L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1223985693348");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5432666129547687712");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IVariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xe34de34746464f2L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1023687332192347378");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVisible() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IVisible", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1178549954367");
    b.version(2);
    b.aggregate("visibility", 0x112670d886aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL).optional(true).ordered(true).multiple(false).origin("1178549979242").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIWillBeClassifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IWillBeClassifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ff8b7a0d94242e1L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4609636120081351393");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIYetUnresolved() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IYetUnresolved", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8136348407761606757");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIfStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IfStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123159");
    b.version(2);
    b.property("forceOneLine", 0x3dffcc410476e370L).type(PrimitiveTypeId.BOOLEAN).origin("4467513934994662256").done();
    b.property("forceMultiLine", 0x3dffcc410476e371L).type(PrimitiveTypeId.BOOLEAN).origin("4467513934994662257").done();
    b.aggregate("condition", 0xf8cc56b218L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1068580123160").done();
    b.aggregate("ifFalseStatement", 0xfc092b6b76L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(false).origin("1082485599094").done();
    b.aggregate("ifTrue", 0xf8cc56b219L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1068580123161").done();
    b.aggregate("elsifClauses", 0x118cecf1287L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118ceceb41aL).optional(true).ordered(true).multiple(true).origin("1206060520071").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplicitAnnotationInstanceValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ImplicitAnnotationInstanceValue", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x23cf7b405b3b9761L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71b1af4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2580416627845338977");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImplicitAnnotationMethodKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ImplicitAnnotationMethodKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5ce6f8ed8648519aL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6694311595176645018");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncompleteLeftParen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IncompleteLeftParen", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x64a1ef64cd9b42ceL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xede3fe8510255edL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7251340091268481742");
    b.version(2);
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncompleteMemberDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IncompleteMemberDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x32175ac2e6fcc181L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x203eeb62af522fa5L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3609453419506221441");
    b.version(2);
    b.property("static", 0x32175ac2e6fdaf94L).type(PrimitiveTypeId.BOOLEAN).origin("3609453419506282388").done();
    b.property("final", 0x32175ac2e6fdaf96L).type(PrimitiveTypeId.BOOLEAN).origin("3609453419506282390").done();
    b.property("abstract", 0x32175ac2e6fdaf99L).type(PrimitiveTypeId.BOOLEAN).origin("3609453419506282393").done();
    b.property("synchronized", 0x32175ac2e6fdb595L).type(PrimitiveTypeId.BOOLEAN).origin("3609453419506283925").done();
    b.property("volatile", 0x32175ac2e6fdbea6L).type(PrimitiveTypeId.BOOLEAN).origin("3609453419506286246").done();
    b.property("transient", 0x58197aef3e5e4dd7L).type(PrimitiveTypeId.BOOLEAN).origin("6348240317717564887").done();
    b.property("native", 0x73f30e3dfbaac721L).type(PrimitiveTypeId.BOOLEAN).origin("8355037393080469281").done();
    b.aggregate("type", 0x32175ac2e8b632a8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("3609453419535151784").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncompleteRightParen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IncompleteRightParen", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2052c4520af308e1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xede3fe8510255edL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2329139813954029793");
    b.version(2);
    b.alias(")");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstanceInitializer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "InstanceInitializer", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118f0b909f7L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1206629501431");
    b.version(2);
    b.aggregate("statementList", 0x118f0b95a3bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1206629521979").done();
    b.kind(ConceptKind.IMPLEMENTATION, StaticScope.GLOBAL);
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstanceMethodCallOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "InstanceMethodCallOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118154a6332L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1202948039474");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstanceMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "InstanceMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.MethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x72de18bba2dc2a73L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123165");
    b.version(2);
    b.property("isAbstract", 0x1126a8d157dL).type(PrimitiveTypeId.BOOLEAN).origin("1178608670077").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("method");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstanceOfExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "InstanceOfExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbbff03700L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081256982272");
    b.version(2);
    b.aggregate("leftExpression", 0xfbbff06218L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1081256993304").done();
    b.aggregate("classType", 0xfbbff06219L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1081256993305").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("instanceof");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegerConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IntegerConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.IntegerLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580320020");
    b.version(2);
    b.property("value", 0xf8cc59b315L).type(PrimitiveTypeId.INTEGER).origin("1068580320021").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("integer constant");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegerLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IntegerLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1179362310214");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegerType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IntegerType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d22479L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534370425");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Interface", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.Classifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1107796713796");
    b.version(2);
    b.aggregate("extendedInterface", 0x101eddadad7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(true).ordered(true).multiple(true).origin("1107797138135").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("interface");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsEmptyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IsEmptyOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dd5e7aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.StringBooleanOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47de7e99L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271369338");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("isEmpty");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsNotEmptyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "IsNotEmptyOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47ddf763L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.StringBooleanOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47de7e99L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271408483");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("isNotEmpty");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJavaImport() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "JavaImport", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x64c0181e603bcfL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5a98df4004080866L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/28358707492436943");
    b.version(2);
    b.property("onDemand", 0x64c0181e603bd0L).type(PrimitiveTypeId.BOOLEAN).origin("28358707492436944").done();
    b.property("static", 0x4d5c30eb30af1572L).type(PrimitiveTypeId.BOOLEAN).origin("5574384225470059890").done();
    b.alias("java import");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJavaImports() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "JavaImports", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x53f7c33f069862f2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6050519299856556786");
    b.version(2);
    b.aggregate("entries", 0x64c0181e6020a7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x64c0181e603bcfL).optional(true).ordered(true).multiple(true).origin("28358707492429991").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJavaModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "JavaModifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1027dd744a287198L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Modifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x21592d9e7375c5a6L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1164142520228671896");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLeftShiftAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LeftShiftAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862eaeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501422");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<<=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLessThanExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LessThanExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbced3b82aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x12094ea9f7dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081506773034");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLessThanOrEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LessThanOrEqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c8d53a915L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x12094ea9f7dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153422305557");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalInstanceFieldReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalInstanceFieldReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c0ba864df016178L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7785501532031639928");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalInstanceMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalInstanceMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2a8fe0cadfaa8af2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.LocalMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9404L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3066917033203108594");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9404L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7812454656619025412");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalPropertyReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalPropertyReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x515d7a8d927e9fb3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5862977038373003187");
    b.version(2);
    b.associate("property", 0x515d7a8d927e9fb4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b744dafeL).optional(false).origin("5862977038373003188").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalStaticFieldReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalStaticFieldReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x110e12d8c7dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1172008963197");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalStaticMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalStaticMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x110e4207559L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.LocalMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9404L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1172058436953");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalToMethodKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalToMethodKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6f3ee8ef1412df0L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/501006281268604400");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11cfb3b82a4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2d45f01afccba89cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242863");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.ROOT);
    b.alias("<type> <var>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalVariableDeclarationStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LocalVariableDeclarationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11c6fd75034L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242864");
    b.version(2);
    b.aggregate("localVariableDeclaration", 0xf8cc67c7f1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL).optional(false).ordered(true).multiple(false).origin("1068581242865").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<type> <var>;");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLongLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LongLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3b418722717710b4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4269842503726207156");
    b.version(2);
    b.property("value", 0x3b418722717710b5L).type(MetaIdFactory.constrainedStringDataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3b4187227177134aL)).origin("4269842503726207157").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLongType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LongType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242867");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("long");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLoopLabel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LoopLabel", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9552f6aL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6f3ee8ef1412df0L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/363746191845175146");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLoopLabelReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LoopLabelReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/363746191845183785");
    b.version(2);
    b.associate("loopLabel", 0x50c493bf955512aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9552f6aL).optional(false).origin("363746191845183786").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLowerBoundType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "LowerBoundType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x110dae9d53dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1171903862077");
    b.version(2);
    b.aggregate("bound", 0x110dae9f25bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1171903869531").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("? super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "MethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7812454656619025416");
    b.version(2);
    b.property("isNative", 0x73f30e3df95c0b73L).type(PrimitiveTypeId.BOOLEAN).origin("8355037393041754995").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMinusAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "MinusAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11b0d14a4eaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1215695201514");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("-=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMinusExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "MinusExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242869");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Modifier", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x21592d9e7375c5a6L);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2403002034744051110");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMulAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "MulAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be8616ecL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304495340");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("*=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMulExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "MulExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfe476b758fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1092119917967");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNPEEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NPEEqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dc0e3bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271283259");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(":eq:");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNPENotEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NPENotEqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47db1c91L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271221393");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(":ne:");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNestedNewExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NestedNewExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x650f9fedfcb5b664L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.GenericNewExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab8473cc5L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7282214966977214052");
    b.version(2);
    b.alias("new");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotEqualsExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NotEqualsExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9e20e303fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1073239437375");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("!=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NotExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbcf6bd10dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081516740877");
    b.version(2);
    b.aggregate("expression", 0xfbcf6c30a4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1081516765348").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("!");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNullLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NullLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940cd6167L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070534058343");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("null");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNullType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "NullType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1185ff468caL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1204200696010");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("nulltype");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumber() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Number", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10d68c2ecd3L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1157103807699");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11b0d00332cL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4957392803029437192");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "OrAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862ea8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501416");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("|=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "OrExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb8255689fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1080223426719");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("||");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameterDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ParameterDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11cfb3b82a4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068498886292");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.ROOT);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParenthesizedExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ParenthesizedExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb4ed32b7fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1079359253375");
    b.version(2);
    b.aggregate("expression", 0xfb4ed32b80L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1079359253376").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("(expr)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlaceholderMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PlaceholderMember", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1458378889e6d166L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1465982738277781862");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlusAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PlusAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11b0d1476d2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1215695189714");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("+=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlusExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PlusExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7fbL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242875");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPostfixDecrementExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PostfixDecrementExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11aded05fe6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1214918975462");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("postfix decrement");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPostfixIncrementExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PostfixIncrementExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11adecdb4f0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1214918800624");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("postfix increment");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrefixDecrementExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PrefixDecrementExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a472f0e8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1239709577448");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("--");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrefixIncrementExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PrefixIncrementExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a46df580L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1239709250944");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("++");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrimitiveClassExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PrimitiveClassExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3f57ea36bd70a4e1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4564374268190696673");
    b.version(2);
    b.aggregate("primitiveType", 0x3f57ea36bd70a4e2L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L).optional(false).ordered(true).multiple(false).origin("4564374268190696674").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrimitiveType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1164118113764");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrivateVisibility() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PrivateVisibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af9586f0cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Visibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1146644623116");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("private");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Property", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b744dafeL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201370618622");
    b.version(2);
    b.property("propertyName", 0x117b75204e4L).type(PrimitiveTypeId.STRING).origin("1201371481316").done();
    b.aggregate("type", 0x117b752a0b9L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1201371521209").done();
    b.aggregate("propertyImplementation", 0x117b75fb65aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b75f36c8L).optional(false).ordered(true).multiple(false).origin("1201372378714").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("property");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyImplementation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PropertyImplementation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b75f36c8L);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201372346056");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PropertyReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b821eaaeL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201385106094");
    b.version(2);
    b.associate("property", 0x117b823ed57L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b744dafeL).optional(false).origin("1201385237847").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyValueReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PropertyValueReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2463999e524f3bf5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2622108313324567541");
    b.version(2);
    b.associate("owningProperty", 0x2463999e5366cff1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117b744dafeL).optional(false).origin("2622108313342889969").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProtectedVisibility() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ProtectedVisibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af958b686L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Visibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1146644641414");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("protected");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPublicVisibility() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "PublicVisibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af9581ff1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Visibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1146644602865");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("public");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualifiedSuperMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "QualifiedSuperMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x37f722a7ce38076aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.SuperMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9d78b55aaL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4032730095448229738");
    b.version(2);
    b.associate("classifier", 0x37f722a7ce38077dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("4032730095448229757").done();
    b.alias("qualified super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "RemAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862ea6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501414");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("%=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "RemExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c8d509af4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153422105332");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("%");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemarkStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "RemarkStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1101757c8faL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1168622733562");
    b.version(2);
    b.property("value", 0x110175cdb2bL).type(PrimitiveTypeId.STRING).origin("1168623065899").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("//");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReturnStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ReturnStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581242878");
    b.version(2);
    b.aggregate("expression", 0xf8cc6bf96cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1068581517676").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("return");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRightShiftAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "RightShiftAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862eb0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501424");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">>=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetAccessor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SetAccessor", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117bd9ac3d9L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201476912089");
    b.version(2);
    b.aggregate("statementList", 0x11800260be3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1202593336291").done();
    b.alias("setter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShiftLeftExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ShiftLeftExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d6cde9fb9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225892208569");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<<");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShiftRightExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ShiftRightExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d6ce051dfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225892319711");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShiftRightUnsignedExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ShiftRightUnsignedExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x470fa5a7b03ac59L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d19ec0c2fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/320030840061144153");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShortType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ShortType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940cc380dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070533982221");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("short");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingleLineComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SingleLineComment", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x39384475a5756fb0L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6329021646629104954");
    b.version(2);
    b.aggregate("commentPart", 0x57d533a7af16ff73L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL).optional(true).ordered(true).multiple(true).origin("6329021646629175155").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("//");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1206e6cc291L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f42L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123157");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("<statement>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatementCommentPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StatementCommentPart", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af16ff67L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.CommentPart", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6329021646629175143");
    b.version(2);
    b.aggregate("commentedStatement", 0x57d533a7af16ff68L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(false).ordered(true).multiple(false).origin("6329021646629175144").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatementList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StatementList", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f1e14d895L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1206e9046e6L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x612410e32cf46136L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068580123136");
    b.version(2);
    b.stub(0x4975dc2bdcfa0c49L);
    b.aggregate("statement", 0xf8cc6bf961L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L).optional(true).ordered(true).multiple(true).origin("1068581517665").done();
    b.kind(ConceptKind.IMPLEMENTATION_WITH_STUB, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticFieldDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticFieldDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x427c475b3d6201deL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070462154015");
    b.version(2);
    b.property("isVolatile", 0x59c57f2ed491b12fL).type(PrimitiveTypeId.BOOLEAN).origin("6468716278899126575").done();
    b.property("isTransient", 0x59c57f2ed491ae1aL).type(PrimitiveTypeId.BOOLEAN).origin("6468716278899125786").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("static field");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticFieldReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticFieldReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940c80846L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070533707846");
    b.version(2);
    b.associate("classifier", 0x10a75869f9bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("1144433057691").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(".<static field>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticInitializer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticInitializer", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c7538039dL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1221737317277");
    b.version(2);
    b.aggregate("statementList", 0x11c7538039eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1221737317278").done();
    b.kind(ConceptKind.IMPLEMENTATION, StaticScope.GLOBAL);
    b.alias("static {");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x427c475b3d6201deL);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4790782560812794334");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbbebabf09L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081236700937");
    b.version(2);
    b.associate("classConcept", 0x10a7588b546L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(false).origin("1144433194310").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(".<static method>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticMethodDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StaticMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbbebabf0aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.MethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x427c475b3d6201deL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1081236700938");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("static method");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringBooleanOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StringBooleanOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47de7e99L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseStringOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dc8da1L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271443097");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StringLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070475926800");
    b.version(2);
    b.property("value", 0xf93d565d11L).type(PrimitiveTypeId.STRING).origin("1070475926801").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringToken() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StringToken", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5eb0cab441189a51L);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6823176311001356881");
    b.version(2);
    b.property("value", 0x5eb0cab441189a52L).type(PrimitiveTypeId.STRING).origin("6823176311001356882").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StringType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47da71ecL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271177708");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("string");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStubStatementList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "StubStatementList", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4975dc2bdcfa0c49L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.StatementList", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x226fb4c3ba26d45L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/5293379017992965193");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("stub statement list");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstringExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SubstringExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47df21f3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271484915");
    b.version(2);
    b.aggregate("operand", 0x11d47df21f4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225271484916").done();
    b.aggregate("startIndex", 0x11d47df21f5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1225271484917").done();
    b.aggregate("endIndex", 0x11d47df21f6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1225271484918").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperConstructorInvocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SuperConstructorInvocation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d512e1eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x121119ae5ffL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070475587102");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperConstructorKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SuperConstructorKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x216400b63b2e0f21L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2406048883599609633");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperInerfaceKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SuperInerfaceKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x73048d24d425f35eL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8287904403586151262");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperMethodCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SuperMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9d78b55aaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1073063089578");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperMethodKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SuperMethodKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5bd477669f55a5a4L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6617045035157661092");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSwitchCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SwitchCase", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1163670641947");
    b.version(2);
    b.aggregate("expression", 0x10ef02d67cfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1163670677455").done();
    b.aggregate("body", 0x10ef02d8048L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1163670683720").done();
    b.alias("case");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSwitchStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SwitchStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1163670490218");
    b.version(2);
    b.property("label", 0x117b7e94b9bL).type(PrimitiveTypeId.STRING).origin("1201381395355").done();
    b.aggregate("expression", 0x10ef02ec241L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1163670766145").done();
    b.aggregate("case", 0x10ef02edcafL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL).optional(true).ordered(true).multiple(true).origin("1163670772911").done();
    b.aggregate("defaultBlock", 0x10ef02c1b6eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(true).ordered(true).multiple(false).origin("1163670592366").done();
    b.aggregate("switchLabel", 0x4091554b655a230eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9552f6aL).optional(true).ordered(true).multiple(false).origin("4652593672361747214").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("switch");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSynchronizedStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "SynchronizedStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1106df1d8d8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1170075670744");
    b.version(2);
    b.aggregate("expression", 0x1106df2b910L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1170075728144").done();
    b.aggregate("block", 0x1106df2d95cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1170075736412").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("synchronized");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTernaryOperatorExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TernaryOperatorExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef01239c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x182da1771714863eL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1163668896201");
    b.version(2);
    b.aggregate("condition", 0x10ef012826fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1163668914799").done();
    b.aggregate("ifTrue", 0x10ef012a1c0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1163668922816").done();
    b.aggregate("ifFalse", 0x10ef012cedcL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1163668934364").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("(expr) ? (expr) : expr");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextCommentPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TextCommentPart", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.CommentPart", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3bL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6329021646629104957");
    b.version(2);
    b.property("text", 0x57d533a7af15ed3eL).type(PrimitiveTypeId.STRING).origin("6329021646629104958").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThisConstructorInvocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ThisConstructorInvocation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1127b878882L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x121119ae5ffL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1178893518978");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("this");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThisConstructorKind() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ThisConstructorKind", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x216400b63b3173a4L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2406048883599831972");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThisExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ThisExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d4da00cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d206f8d91L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1070475354124");
    b.version(2);
    b.associate("classConcept", 0x1136d9d21b3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L).optional(true).origin("1182955020723").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("this");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThrowStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ThrowStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f3ee082d8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1164991038168");
    b.version(2);
    b.aggregate("throwable", 0x10f3ee0cd6fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1164991057263").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("throw");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTokens() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Tokens", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5a98df4004080866L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/6528213125912070246");
    b.version(2);
    b.property("tokens", 0x1996ec29712bdd92L).type(PrimitiveTypeId.STRING).origin("1843920760191311250").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrimOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TrimOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47e0122aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseStringOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47dc8da1L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1225271546410");
    b.version(2);
    b.property("trimKind", 0x11d47e0122dL).type(MetaIdFactory.enumerationId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47df9506L)).origin("1225271546413").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("trim");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTryCatchStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TryCatchStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f383e6771L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3399756d2c03d422L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1164879751025");
    b.version(2);
    b.aggregate("body", 0x10f383e83d4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1164879758292").done();
    b.aggregate("catchClause", 0x10f39a8ba1fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL).optional(false).ordered(true).multiple(true).origin("1164903496223").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("try {...} catch");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTryStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TryStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3399756d2c03d422L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1153952380246");
    b.version(2);
    b.aggregate("body", 0x10cacec83aeL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1153952416686").done();
    b.aggregate("finallyBody", 0x10cacecb713L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1153952429843").done();
    b.aggregate("catchClause", 0x10f39abd97cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL).optional(true).ordered(true).multiple(true).origin("1164903700860").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("try {...} finally");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068431790189");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeAnnotable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TypeAnnotable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11f4b6b2435L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1233920926773");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeDerivable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TypeDerivable", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L);
    b.interface_();
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1201183863028");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TypeVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1024639ed74L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1109279763828");
    b.version(2);
    b.property("extends", 0x11ae375ecc5L).type(PrimitiveTypeId.BOOLEAN).origin("1214996933829").done();
    b.aggregate("bound", 0x11ae375bda0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1214996921760").done();
    b.aggregate("auxBounds", 0x11ae913a476L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(true).ordered(true).multiple(true).origin("1215091156086").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTypeVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "TypeVariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102467229d8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1109283449304");
    b.version(2);
    b.associate("typeVariableDeclaration", 0x1024673a581L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1024639ed74L).optional(false).origin("1109283546497").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnaryMinus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnaryMinus", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6fea7de6103549b1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120a4c1f269L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8064396509828172209");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUndefinedType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UndefinedType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x431d52a5d09a4ea9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/4836112446988635817");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("undefined");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnknownConsCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnknownConsCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x7e4a5cff51167b74L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/9100188248702352244");
    b.version(2);
    b.property("isSuper", 0x7e4a5cff51167ce2L).type(PrimitiveTypeId.BOOLEAN).origin("9100188248702352610").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnknownDotCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnknownDotCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x245faa02186fc7b5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.UnknownNameRef", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x759937a5973279b7L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2621000434129553333");
    b.version(2);
    b.property("callee", 0x439f6403036ad2f4L).type(PrimitiveTypeId.STRING).origin("4872723285943177972").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnknownLocalCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnknownLocalCall", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x245faa02186fc5d6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2621000434129552854");
    b.version(2);
    b.property("callee", 0x245faa02186fc5f0L).type(PrimitiveTypeId.STRING).origin("2621000434129552880").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnknownNameRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnknownNameRef", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x759937a5973279b7L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x5a98df4004080866L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/8473865358220097975");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnknownNew() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnknownNew", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2dda7700ec3ae154L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x70ea1dc4c5721865L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/3304084122476667220");
    b.version(2);
    b.property("className", 0x2dda7700ec3bb537L).type(PrimitiveTypeId.STRING).origin("3304084122476721463").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnresolvedNameReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnresolvedNameReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x28e9fc3ba3fa3940L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/2948164764175055168");
    b.version(2);
    b.property("resolveName", 0x28e9fc3ba3fa3941L).type(PrimitiveTypeId.STRING).origin("2948164764175055169").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnsignedRightShiftAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UnsignedRightShiftAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x470fa5a7b0ad087L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/320030840061612167");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias(">>>=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUpperBoundType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UpperBoundType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x110daeaa84aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1171903916106");
    b.version(2);
    b.aggregate("bound", 0x110daeaa84bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1171903916107").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("? extends");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUsingStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "UsingStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d0053f19bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1224071180699");
    b.version(2);
    b.aggregate("resource", 0x11d0053f19dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(true).origin("1224071180701").done();
    b.aggregate("body", 0x11d0053f19eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1224071180702").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("using(...)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "ValueParameter", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117dd047c70L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1202003934320");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("value");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "VarType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112353ac52dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1177714083117");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableArityType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "VariableArityType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c08f42e7bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1219920932475");
    b.version(2);
    b.aggregate("componentType", 0x11c08f5f38cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1219921048460").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11f4b6b2435L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068431474542");
    b.version(2);
    b.property("isFinal", 0x111f9e9f00cL).type(PrimitiveTypeId.BOOLEAN).origin("1176718929932").done();
    b.aggregate("initializer", 0xf8c37f506eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1068431790190").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "VariableReference", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11f4b6b2435L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xe34de34746464f2L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x2d45f01afccba89dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068498886296");
    b.version(2);
    b.associate("variableDeclaration", 0xf8cc6bf960L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL).optional(false).origin("1068581517664").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisibility() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "Visibility", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10af957d96eL);
    b.class_(false, true, false);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1146644584814");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVoidType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "VoidType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc6bf96dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.PrimitiveType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1068581517677");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("void");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhileStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "WhileStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x3ac89e1b122cd5c2L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1076505808687");
    b.version(2);
    b.aggregate("condition", 0xfaa4bf0f30L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1076505808688").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("while");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWildCardType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "WildCardType", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x110dae5f4a3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/1171903607971");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("?");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForXorAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage", "XorAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x617aa860be862eacL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x44cc327d2ca5cb08L);
    b.origin("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)/7024111702304501420");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("^=");
    return b.create();
  }
}
