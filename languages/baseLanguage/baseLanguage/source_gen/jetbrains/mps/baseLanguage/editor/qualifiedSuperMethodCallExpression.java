package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.substitute.SingleItemSubstituteMenuPart;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuItem;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.runtime.IconResource;
import jetbrains.mps.smodel.runtime.IconResourceUtil;

public class qualifiedSuperMethodCallExpression extends SubstituteMenuBase {
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new qualifiedSuperMethodCallExpression.SubstituteMenuPart_Group_37w0d7_a());
    return result;
  }
  public class SubstituteMenuPart_Group_37w0d7_a extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
    @Override
    protected boolean isApplicable(SubstituteMenuContext _context) {
      return SNodeOperations.getNodeAncestorWhereConceptInList(_context.getParentNode(), new SAbstractConcept[]{MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b204L, "jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL, "jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")}, false, false) != null;
    }

    @Override
    protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
      return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new qualifiedSuperMethodCallExpression.SubstituteMenuPart_Group_37w0d7_a.SubstituteMenuPart_Parameterized_37w0d7_a0());
    }
    private class SubstituteMenuPart_Parameterized_37w0d7_a0 extends ParameterizedMenuPart<SNode, SubstituteMenuItem, SubstituteMenuContext> {
      @NotNull
      @Override
      protected List<SubstituteMenuItem> createItems(SNode parameter, SubstituteMenuContext context) {
        return new qualifiedSuperMethodCallExpression.SubstituteMenuPart_Group_37w0d7_a.SubstituteMenuPart_Parameterized_37w0d7_a0.SubstituteMenuPart_Action_37w0d7_a0a(parameter).createItems(context);
      }
      @Nullable
      @Override
      protected Iterable<? extends SNode> getParameters(SubstituteMenuContext _context) {
        //  'qualified this' - only in inner classes 
        List<SNode> result = new ArrayList<SNode>();
        SNode classifier = SNodeOperations.getNodeAncestor(_context.getParentNode(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, "jetbrains.mps.baseLanguage.structure.Classifier"), false, false);
        if (!((boolean) IClassifierMember__BehaviorDescriptor.isStatic_id6r77ob2USS8.invoke(classifier))) {
          for (SNode parentClassifier : SNodeOperations.getNodeAncestors(classifier, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, "jetbrains.mps.baseLanguage.structure.Classifier"), false)) {
            if (!(SNodeOperations.isInstanceOf(parentClassifier, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, "jetbrains.mps.baseLanguage.structure.AnonymousClass")))) {
              ListSequence.fromList(result).addElement(parentClassifier);
              if ((boolean) IClassifierMember__BehaviorDescriptor.isStatic_id6r77ob2USS8.invoke(parentClassifier)) {
                break;
              }
            }
          }
        }
        return result;
      }
      private class SubstituteMenuPart_Action_37w0d7_a0a extends SingleItemSubstituteMenuPart {
        private final SNode myParameterObject;
        public SubstituteMenuPart_Action_37w0d7_a0a(SNode parameterObject) {
          myParameterObject = parameterObject;
        }

        @Nullable
        @Override
        protected SubstituteMenuItem createItem(SubstituteMenuContext _context) {
          return new qualifiedSuperMethodCallExpression.SubstituteMenuPart_Group_37w0d7_a.SubstituteMenuPart_Parameterized_37w0d7_a0.SubstituteMenuPart_Action_37w0d7_a0a.Item(_context);
        }
        private class Item extends DefaultSubstituteMenuItem {
          private final SubstituteMenuContext _context;
          public Item(SubstituteMenuContext context) {
            super(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9d78b55aaL, "jetbrains.mps.baseLanguage.structure.SuperMethodCall"), context.getParentNode(), context.getCurrentTargetNode(), context.getEditorContext());
            _context = context;
          }

          @Nullable
          @Override
          public SNode createNode(@NotNull String pattern) {
            SNode superCall = SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x37f722a7ce38076aL, "jetbrains.mps.baseLanguage.structure.QualifiedSuperMethodCall")), null);
            SLinkOperations.setTarget(superCall, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x37f722a7ce38076aL, 0x37f722a7ce38077dL, "classifier"), myParameterObject);
            return superCall;
          }
          @Nullable
          @Override
          public IconResource getIcon(@NotNull String pattern) {
            if (myParameterObject instanceof SNode) {
              return IconResourceUtil.getIconResourceForNode(((SNode) myParameterObject));
            }
            return null;
          }
          @Nullable
          @Override
          public String getMatchingText(@NotNull String pattern) {
            return myParameterObject + ".super";
          }
          @Nullable
          @Override
          public String getDescriptionText(@NotNull String pattern) {
            return "qualified 'super'";
          }
        }
      }

    }
  }
}
