package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;

/*package*/ class Statement_comment_InspectorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public Statement_comment_InspectorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createNextEditor_ffwlke_a();
  }

  private EditorCell createNextEditor_ffwlke_a() {
    try {
      getCellFactory().pushCellContext();
      getCellFactory().removeCellContextHints(new String[]{"jetbrains.mps.lang.core.editor.BaseEditorContextHints.comment"});
      {
        EditorCell editorCell = getCellFactory().createEditorCell(myNode, true, Statement_comment_Editor.class);
        editorCell.setBig(true);
        editorCell.setCellContext(getCellFactory().getCellContext());
        return editorCell;
      }
    } finally {
      getCellFactory().popCellContext();
    }
  }
}
