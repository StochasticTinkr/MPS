package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.nodeEditor.cellActions.SideTransformSubstituteInfo;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.transformation.DefaultConceptMenusTransformationMenuPart;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.baseLanguage.behavior.ThisExpression__BehaviorDescriptor;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import jetbrains.mps.nodeEditor.cellMenu.SideTransformCompletionActionItem;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.openapi.editor.selection.SelectionManager;

public class ThisExpression_TransformationMenu extends TransformationMenuBase {
  private final Set<String> myLocations = SetSequence.fromSetAndArray(new HashSet<String>(), SideTransformSubstituteInfo.Side.LEFT.myMenuLocation, SideTransformSubstituteInfo.Side.RIGHT.myMenuLocation, SideTransformSubstituteInfo.Side.LEFT.myMenuLocation);
  @Override
  public boolean isApplicableToLocation(@NotNull String location) {
    return SetSequence.fromSet(myLocations).contains(location);
  }

  @Override
  @NotNull
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), SideTransformSubstituteInfo.Side.LEFT.myMenuLocation, SideTransformSubstituteInfo.Side.RIGHT.myMenuLocation).contains(_context.getMenuLocation())) {
      result.add(new DefaultConceptMenusTransformationMenuPart(SModelUtil.getDirectSuperConcepts(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d4da00cL, "jetbrains.mps.baseLanguage.structure.ThisExpression"))));
    }
    if (ListSequence.fromListAndArray(new ArrayList<String>(), SideTransformSubstituteInfo.Side.LEFT.myMenuLocation).contains(_context.getMenuLocation())) {
      result.add(new ThisExpression_TransformationMenu.TransformationMenuPart_Group_xqoe4o_a1());
    }
    return result;
  }

  public class TransformationMenuPart_Group_xqoe4o_a1 extends GroupMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d4da00cL, 0x1136d9d21b3L, "classConcept")) == null);
    }

    @Override
    protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
      return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new ThisExpression_TransformationMenu.TransformationMenuPart_Group_xqoe4o_a1.TransformationMenuPart_Parameterized_xqoe4o_a0b());
    }
    private class TransformationMenuPart_Parameterized_xqoe4o_a0b extends ParameterizedMenuPart<SNode, TransformationMenuItem, TransformationMenuContext> {

      @NotNull
      @Override
      protected List<TransformationMenuItem> createItems(SNode parameter, TransformationMenuContext context) {
        return new ThisExpression_TransformationMenu.TransformationMenuPart_Group_xqoe4o_a1.TransformationMenuPart_Parameterized_xqoe4o_a0b.TransformationMenuPart_Action_xqoe4o_a0a1(parameter).createItems(context);
      }

      @Nullable
      @Override
      protected Iterable<? extends SNode> getParameters(TransformationMenuContext _context) {
        return (List<SNode>) ThisExpression__BehaviorDescriptor.getPossibleClassifiers_idhGcjiYt.invoke(_context.getNode());
      }

      private class TransformationMenuPart_Action_xqoe4o_a0a1 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
        private final SNode myParameterObject;
        public TransformationMenuPart_Action_xqoe4o_a0a1(SNode parameterObject) {
          myParameterObject = parameterObject;
        }
        @Nullable
        protected TransformationMenuItem createItem(TransformationMenuContext context) {
          return new ThisExpression_TransformationMenu.TransformationMenuPart_Group_xqoe4o_a1.TransformationMenuPart_Parameterized_xqoe4o_a0b.TransformationMenuPart_Action_xqoe4o_a0a1.Item(context);
        }

        private class Item extends ActionItemBase implements SideTransformCompletionActionItem {
          private final TransformationMenuContext _context;

          private Item(TransformationMenuContext context) {
            _context = context;
          }

          @Nullable
          @Override
          public String getLabelText(String pattern) {
            return SPropertyOperations.getString(myParameterObject, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + ".";
          }

          @Override
          public void execute(@NotNull String pattern) {
            SNode expr = SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d4da00cL, "jetbrains.mps.baseLanguage.structure.ThisExpression")), null);
            SLinkOperations.setTarget(expr, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d4da00cL, 0x1136d9d21b3L, "classConcept"), myParameterObject);
            SNodeOperations.replaceWithAnother(_context.getNode(), expr);
            SelectionUtil.selectLabelCellAnSetCaret(_context.getEditorContext(), expr, SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL, -1);
          }


        }
      }
    }
  }
}
