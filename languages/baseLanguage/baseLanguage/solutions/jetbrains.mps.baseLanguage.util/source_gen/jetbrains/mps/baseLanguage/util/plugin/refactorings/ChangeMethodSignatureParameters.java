package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.pattern.util.MatchingUtil;

public class ChangeMethodSignatureParameters {
  private SNode myMethod;
  private SNode myOldMethod;
  private List<String> myParametersIds = ListSequence.fromList(new ArrayList<String>());
  public ChangeMethodSignatureParameters(SNode declaration) {
    this.myMethod = SNodeOperations.copyNode(declaration);
    this.myOldMethod = SNodeOperations.copyNode(declaration);
    for (SNode param : ListSequence.fromList(SLinkOperations.getChildren(this.myMethod, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter")))) {
      ListSequence.fromList(this.myParametersIds).addElement(param.getNodeId().toString());
    }
  }
  public SNode getDeclaration() {
    return this.myMethod;
  }
  public List<String> getIdList() {
    return this.myParametersIds;
  }
  public boolean isVisibilityChanged() {
    return neq_viavx4_a0a0g(SNodeOperations.getConcept(SLinkOperations.getTarget(SNodeOperations.cast(this.myMethod, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, "jetbrains.mps.baseLanguage.structure.IVisible")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility"))), SNodeOperations.getConcept(SLinkOperations.getTarget(SNodeOperations.cast(this.myOldMethod, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, "jetbrains.mps.baseLanguage.structure.IVisible")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility"))));
  }
  public boolean isReturnValueChanged() {
    return !((MatchingUtil.matchNodes(SLinkOperations.getTarget(this.myMethod, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")), SLinkOperations.getTarget(this.myOldMethod, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType")))));
  }
  private static boolean neq_viavx4_a0a0g(Object a, Object b) {
    return !(((a != null ? a.equals(b) : a == b)));
  }
}
