package jetbrains.mps.baseLanguage.lightweightdsl.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAutoInitDSLClass__BehaviorDescriptor = new AutoInitDSLClass__BehaviorDescriptor();
  private final BHDescriptor myMethodInstance__BehaviorDescriptor = new MethodInstance__BehaviorDescriptor();
  private final BHDescriptor myDependentTypeDescriptor__BehaviorDescriptor = new DependentTypeDescriptor__BehaviorDescriptor();
  private final BHDescriptor myDSLDescriptor__BehaviorDescriptor = new DSLDescriptor__BehaviorDescriptor();
  private final BHDescriptor myParameterDescriptor__BehaviorDescriptor = new ParameterDescriptor__BehaviorDescriptor();
  private final BHDescriptor myMethodDescriptor__BehaviorDescriptor = new MethodDescriptor__BehaviorDescriptor();
  private final BHDescriptor myDependentTypeInstance__BehaviorDescriptor = new DependentTypeInstance__BehaviorDescriptor();
  private final BHDescriptor myEmptyMemberDescriptor__BehaviorDescriptor = new EmptyMemberDescriptor__BehaviorDescriptor();
  private final BHDescriptor myMemberPlaceholder__BehaviorDescriptor = new MemberPlaceholder__BehaviorDescriptor();
  private final BHDescriptor myPropertyInstance__BehaviorDescriptor = new PropertyInstance__BehaviorDescriptor();
  private final BHDescriptor myMemberInstance__BehaviorDescriptor = new MemberInstance__BehaviorDescriptor();
  private final BHDescriptor myStringPropertyInstance__BehaviorDescriptor = new StringPropertyInstance__BehaviorDescriptor();
  private final BHDescriptor myBooleanPropertyInstance__BehaviorDescriptor = new BooleanPropertyInstance__BehaviorDescriptor();
  private final BHDescriptor myIntegerPropertyInstance__BehaviorDescriptor = new IntegerPropertyInstance__BehaviorDescriptor();
  private final BHDescriptor myPropertyDescriptor__BehaviorDescriptor = new PropertyDescriptor__BehaviorDescriptor();
  private final BHDescriptor myDSLClassMember__BehaviorDescriptor = new DSLClassMember__BehaviorDescriptor();
  private final BHDescriptor myPlaceholderModifier__BehaviorDescriptor = new PlaceholderModifier__BehaviorDescriptor();
  private final BHDescriptor myCustomMemberDescriptor__BehaviorDescriptor = new CustomMemberDescriptor__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAutoInitDSLClass__BehaviorDescriptor;
      case 1:
        return myBooleanPropertyInstance__BehaviorDescriptor;
      case 2:
        return myCustomMemberDescriptor__BehaviorDescriptor;
      case 3:
        return myDSLClassMember__BehaviorDescriptor;
      case 4:
        return myDSLDescriptor__BehaviorDescriptor;
      case 5:
        return myDependentTypeDescriptor__BehaviorDescriptor;
      case 6:
        return myDependentTypeInstance__BehaviorDescriptor;
      case 7:
        return myEmptyMemberDescriptor__BehaviorDescriptor;
      case 8:
        return myIntegerPropertyInstance__BehaviorDescriptor;
      case 9:
        return myMemberInstance__BehaviorDescriptor;
      case 10:
        return myMemberPlaceholder__BehaviorDescriptor;
      case 11:
        return myMethodDescriptor__BehaviorDescriptor;
      case 12:
        return myMethodInstance__BehaviorDescriptor;
      case 13:
        return myParameterDescriptor__BehaviorDescriptor;
      case 14:
        return myPlaceholderModifier__BehaviorDescriptor;
      case 15:
        return myPropertyDescriptor__BehaviorDescriptor;
      case 16:
        return myPropertyInstance__BehaviorDescriptor;
      case 17:
        return myStringPropertyInstance__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e84100ec3L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x72b255a044805d9cL), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x72b255a0447fe4c7L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d160L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d15cL), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d16bL), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x50c63f9f4a0dea5fL), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e84100ec5L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9179L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d7db2L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d167L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d154L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d164L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x72b255a044804f29L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x72b255a0447fbb31L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9151L), MetaIdFactory.conceptId(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e84100d04L)).seal();
}
