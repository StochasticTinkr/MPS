package jetbrains.mps.baseLanguage.logging.runtime.model;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import org.apache.log4j.Priority;
import org.apache.log4j.LogManager;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.project.Project;
import jetbrains.mps.project.ProjectManager;
import jetbrains.mps.messages.MessageKind;
import jetbrains.mps.messages.Message;
import jetbrains.mps.ide.messages.MessagesViewTool;

public final class LoggingRuntime {
  public static void log(@NotNull Priority priority, String msg, @NotNull Class<?> sender) {
    LogManager.getLogger(sender).log(priority, msg);
  }

  public static void printToMessagesView(@NotNull Priority priority, String msg, @NotNull Class<?> sender, @Nullable Object hintObject, @Nullable Throwable throwable, @Nullable Project project) {
    if (project == null) {
      for (Project p : ProjectManager.getInstance().getOpenedProjects()) {
        printToMessagesView(priority, msg, sender, hintObject, throwable, p);
      }
      return;
    }

    MessageKind kind = MessageKind.fromPriority(priority);
    Message message = new Message(kind, sender, msg);
    message.setHintObject(hintObject);
    message.setException(throwable);
    MessagesViewTool messagesView = project.getComponent(MessagesViewTool.class);
    messagesView.add(message);
  }
}
