package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(170);
  /*package*/ final ConceptDescriptor myConceptAbstractContainerCreator = createDescriptorForAbstractContainerCreator();
  /*package*/ final ConceptDescriptor myConceptAbstractContainerType = createDescriptorForAbstractContainerType();
  /*package*/ final ConceptDescriptor myConceptAbstractEnumeratorOperation = createDescriptorForAbstractEnumeratorOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractIteratorOperation = createDescriptorForAbstractIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractMappingOperation = createDescriptorForAbstractMappingOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractSetOperation = createDescriptorForAbstractSetOperation();
  /*package*/ final ConceptDescriptor myConceptAddAllElementsOperation = createDescriptorForAddAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptAddAllSetElementsOperation = createDescriptorForAddAllSetElementsOperation();
  /*package*/ final ConceptDescriptor myConceptAddElementOperation = createDescriptorForAddElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddFirstElementOperation = createDescriptorForAddFirstElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddLastElementOperation = createDescriptorForAddLastElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddSetElementOperation = createDescriptorForAddSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptAllConstant = createDescriptorForAllConstant();
  /*package*/ final ConceptDescriptor myConceptAllOperation = createDescriptorForAllOperation();
  /*package*/ final ConceptDescriptor myConceptAlsoSortOperation = createDescriptorForAlsoSortOperation();
  /*package*/ final ConceptDescriptor myConceptAnyOperation = createDescriptorForAnyOperation();
  /*package*/ final ConceptDescriptor myConceptAsSequenceOperation = createDescriptorForAsSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptAsSynchronizedOperation = createDescriptorForAsSynchronizedOperation();
  /*package*/ final ConceptDescriptor myConceptAsUnmodifiableOperation = createDescriptorForAsUnmodifiableOperation();
  /*package*/ final ConceptDescriptor myConceptBinaryOperation = createDescriptorForBinaryOperation();
  /*package*/ final ConceptDescriptor myConceptChunkOperation = createDescriptorForChunkOperation();
  /*package*/ final ConceptDescriptor myConceptClearAllElementsOperation = createDescriptorForClearAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptClearSetOperation = createDescriptorForClearSetOperation();
  /*package*/ final ConceptDescriptor myConceptCollectionType = createDescriptorForCollectionType();
  /*package*/ final ConceptDescriptor myConceptComparatorSortOperation = createDescriptorForComparatorSortOperation();
  /*package*/ final ConceptDescriptor myConceptConcatOperation = createDescriptorForConcatOperation();
  /*package*/ final ConceptDescriptor myConceptContainerIteratorType = createDescriptorForContainerIteratorType();
  /*package*/ final ConceptDescriptor myConceptContainsAllOperation = createDescriptorForContainsAllOperation();
  /*package*/ final ConceptDescriptor myConceptContainsKeyOperation = createDescriptorForContainsKeyOperation();
  /*package*/ final ConceptDescriptor myConceptContainsOperation = createDescriptorForContainsOperation();
  /*package*/ final ConceptDescriptor myConceptContainsValueOperation = createDescriptorForContainsValueOperation();
  /*package*/ final ConceptDescriptor myConceptCustomContainerCreator = createDescriptorForCustomContainerCreator();
  /*package*/ final ConceptDescriptor myConceptCustomContainerDeclaration = createDescriptorForCustomContainerDeclaration();
  /*package*/ final ConceptDescriptor myConceptCustomContainers = createDescriptorForCustomContainers();
  /*package*/ final ConceptDescriptor myConceptCustomMapCreator = createDescriptorForCustomMapCreator();
  /*package*/ final ConceptDescriptor myConceptCutOperation = createDescriptorForCutOperation();
  /*package*/ final ConceptDescriptor myConceptDequeType = createDescriptorForDequeType();
  /*package*/ final ConceptDescriptor myConceptDisjunctOperation = createDescriptorForDisjunctOperation();
  /*package*/ final ConceptDescriptor myConceptDistinctOperation = createDescriptorForDistinctOperation();
  /*package*/ final ConceptDescriptor myConceptDowncastExpression = createDescriptorForDowncastExpression();
  /*package*/ final ConceptDescriptor myConceptEnumeratorType = createDescriptorForEnumeratorType();
  /*package*/ final ConceptDescriptor myConceptExcludeOperation = createDescriptorForExcludeOperation();
  /*package*/ final ConceptDescriptor myConceptFindFirstOperation = createDescriptorForFindFirstOperation();
  /*package*/ final ConceptDescriptor myConceptFindLastOperation = createDescriptorForFindLastOperation();
  /*package*/ final ConceptDescriptor myConceptFoldLeftOperation = createDescriptorForFoldLeftOperation();
  /*package*/ final ConceptDescriptor myConceptFoldRightOperation = createDescriptorForFoldRightOperation();
  /*package*/ final ConceptDescriptor myConceptForEachStatement = createDescriptorForForEachStatement();
  /*package*/ final ConceptDescriptor myConceptForEachVariable = createDescriptorForForEachVariable();
  /*package*/ final ConceptDescriptor myConceptForEachVariableReference = createDescriptorForForEachVariableReference();
  /*package*/ final ConceptDescriptor myConceptGetCurrentOperation = createDescriptorForGetCurrentOperation();
  /*package*/ final ConceptDescriptor myConceptGetElementOperation = createDescriptorForGetElementOperation();
  /*package*/ final ConceptDescriptor myConceptGetEnumeratorOperation = createDescriptorForGetEnumeratorOperation();
  /*package*/ final ConceptDescriptor myConceptGetFirstOperation = createDescriptorForGetFirstOperation();
  /*package*/ final ConceptDescriptor myConceptGetIndexOfOperation = createDescriptorForGetIndexOfOperation();
  /*package*/ final ConceptDescriptor myConceptGetIteratorOperation = createDescriptorForGetIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptGetKeysOperation = createDescriptorForGetKeysOperation();
  /*package*/ final ConceptDescriptor myConceptGetLastIndexOfOperation = createDescriptorForGetLastIndexOfOperation();
  /*package*/ final ConceptDescriptor myConceptGetLastOperation = createDescriptorForGetLastOperation();
  /*package*/ final ConceptDescriptor myConceptGetNextOperation = createDescriptorForGetNextOperation();
  /*package*/ final ConceptDescriptor myConceptGetSizeOperation = createDescriptorForGetSizeOperation();
  /*package*/ final ConceptDescriptor myConceptGetValuesOperation = createDescriptorForGetValuesOperation();
  /*package*/ final ConceptDescriptor myConceptHasNextOperation = createDescriptorForHasNextOperation();
  /*package*/ final ConceptDescriptor myConceptHashMapCreator = createDescriptorForHashMapCreator();
  /*package*/ final ConceptDescriptor myConceptHashSetCreator = createDescriptorForHashSetCreator();
  /*package*/ final ConceptDescriptor myConceptHeadListOperation = createDescriptorForHeadListOperation();
  /*package*/ final ConceptDescriptor myConceptHeadMapOperation = createDescriptorForHeadMapOperation();
  /*package*/ final ConceptDescriptor myConceptHeadSetOperation = createDescriptorForHeadSetOperation();
  /*package*/ final ConceptDescriptor myConceptIApplicableToCollection = createDescriptorForIApplicableToCollection();
  /*package*/ final ConceptDescriptor myConceptIApplicableToDeque = createDescriptorForIApplicableToDeque();
  /*package*/ final ConceptDescriptor myConceptIApplicableToList = createDescriptorForIApplicableToList();
  /*package*/ final ConceptDescriptor myConceptIApplicableToNothing = createDescriptorForIApplicableToNothing();
  /*package*/ final ConceptDescriptor myConceptIApplicableToQueue = createDescriptorForIApplicableToQueue();
  /*package*/ final ConceptDescriptor myConceptIApplicableToStack = createDescriptorForIApplicableToStack();
  /*package*/ final ConceptDescriptor myConceptICollectionOperation = createDescriptorForICollectionOperation();
  /*package*/ final ConceptDescriptor myConceptIContainerOperation = createDescriptorForIContainerOperation();
  /*package*/ final ConceptDescriptor myConceptIDequeOperation = createDescriptorForIDequeOperation();
  /*package*/ final ConceptDescriptor myConceptIListOperation = createDescriptorForIListOperation();
  /*package*/ final ConceptDescriptor myConceptIQueueOperation = createDescriptorForIQueueOperation();
  /*package*/ final ConceptDescriptor myConceptIStackOperation = createDescriptorForIStackOperation();
  /*package*/ final ConceptDescriptor myConceptInsertElementOperation = createDescriptorForInsertElementOperation();
  /*package*/ final ConceptDescriptor myConceptInternalSequenceOperation = createDescriptorForInternalSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptIntersectOperation = createDescriptorForIntersectOperation();
  /*package*/ final ConceptDescriptor myConceptIsEmptyOperation = createDescriptorForIsEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptIsNotEmptyOperation = createDescriptorForIsNotEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptIteratorType = createDescriptorForIteratorType();
  /*package*/ final ConceptDescriptor myConceptJoinOperation = createDescriptorForJoinOperation();
  /*package*/ final ConceptDescriptor myConceptKeyAccessOperation = createDescriptorForKeyAccessOperation();
  /*package*/ final ConceptDescriptor myConceptLinkedHashMapCreator = createDescriptorForLinkedHashMapCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedHashSetCreator = createDescriptorForLinkedHashSetCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedListCreator = createDescriptorForLinkedListCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedListType = createDescriptorForLinkedListType();
  /*package*/ final ConceptDescriptor myConceptListCreatorWithInit = createDescriptorForListCreatorWithInit();
  /*package*/ final ConceptDescriptor myConceptListElementAccessExpression = createDescriptorForListElementAccessExpression();
  /*package*/ final ConceptDescriptor myConceptListType = createDescriptorForListType();
  /*package*/ final ConceptDescriptor myConceptMapAsSequenceVarRef = createDescriptorForMapAsSequenceVarRef();
  /*package*/ final ConceptDescriptor myConceptMapClearOperation = createDescriptorForMapClearOperation();
  /*package*/ final ConceptDescriptor myConceptMapElement = createDescriptorForMapElement();
  /*package*/ final ConceptDescriptor myConceptMapEntry = createDescriptorForMapEntry();
  /*package*/ final ConceptDescriptor myConceptMapInitializer = createDescriptorForMapInitializer();
  /*package*/ final ConceptDescriptor myConceptMapOperation = createDescriptorForMapOperation();
  /*package*/ final ConceptDescriptor myConceptMapOperationExpression = createDescriptorForMapOperationExpression();
  /*package*/ final ConceptDescriptor myConceptMapRemoveOperation = createDescriptorForMapRemoveOperation();
  /*package*/ final ConceptDescriptor myConceptMapType = createDescriptorForMapType();
  /*package*/ final ConceptDescriptor myConceptMappingType = createDescriptorForMappingType();
  /*package*/ final ConceptDescriptor myConceptMappingsSetOperation = createDescriptorForMappingsSetOperation();
  /*package*/ final ConceptDescriptor myConceptMoveNextOperation = createDescriptorForMoveNextOperation();
  /*package*/ final ConceptDescriptor myConceptMultiForEachPair = createDescriptorForMultiForEachPair();
  /*package*/ final ConceptDescriptor myConceptMultiForEachStatement = createDescriptorForMultiForEachStatement();
  /*package*/ final ConceptDescriptor myConceptMultiForEachVariable = createDescriptorForMultiForEachVariable();
  /*package*/ final ConceptDescriptor myConceptMultiForEachVariableReference = createDescriptorForMultiForEachVariableReference();
  /*package*/ final ConceptDescriptor myConceptNoArgumentsSequenceOperation = createDescriptorForNoArgumentsSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptOfTypeOperation = createDescriptorForOfTypeOperation();
  /*package*/ final ConceptDescriptor myConceptPageOperation = createDescriptorForPageOperation();
  /*package*/ final ConceptDescriptor myConceptPeekOperation = createDescriptorForPeekOperation();
  /*package*/ final ConceptDescriptor myConceptPopOperation = createDescriptorForPopOperation();
  /*package*/ final ConceptDescriptor myConceptPriorityQueueCreator = createDescriptorForPriorityQueueCreator();
  /*package*/ final ConceptDescriptor myConceptPushOperation = createDescriptorForPushOperation();
  /*package*/ final ConceptDescriptor myConceptPutAllOperation = createDescriptorForPutAllOperation();
  /*package*/ final ConceptDescriptor myConceptQueueType = createDescriptorForQueueType();
  /*package*/ final ConceptDescriptor myConceptReduceLeftOperation = createDescriptorForReduceLeftOperation();
  /*package*/ final ConceptDescriptor myConceptReduceRightOperation = createDescriptorForReduceRightOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAllElementsOperation = createDescriptorForRemoveAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAllSetElementsOperation = createDescriptorForRemoveAllSetElementsOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAtElementOperation = createDescriptorForRemoveAtElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveElementOperation = createDescriptorForRemoveElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveFirstElementOperation = createDescriptorForRemoveFirstElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveLastElementOperation = createDescriptorForRemoveLastElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveOperation = createDescriptorForRemoveOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveSetElementOperation = createDescriptorForRemoveSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveWhereOperation = createDescriptorForRemoveWhereOperation();
  /*package*/ final ConceptDescriptor myConceptReverseOperation = createDescriptorForReverseOperation();
  /*package*/ final ConceptDescriptor myConceptSelectOperation = createDescriptorForSelectOperation();
  /*package*/ final ConceptDescriptor myConceptSequenceCreator = createDescriptorForSequenceCreator();
  /*package*/ final ConceptDescriptor myConceptSequenceOperation = createDescriptorForSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptSequenceType = createDescriptorForSequenceType();
  /*package*/ final ConceptDescriptor myConceptSetElementOperation = createDescriptorForSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptSetType = createDescriptorForSetType();
  /*package*/ final ConceptDescriptor myConceptSingleArgumentSequenceOperation = createDescriptorForSingleArgumentSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptSingletonSequenceCreator = createDescriptorForSingletonSequenceCreator();
  /*package*/ final ConceptDescriptor myConceptSkipOperation = createDescriptorForSkipOperation();
  /*package*/ final ConceptDescriptor myConceptSkipStatement = createDescriptorForSkipStatement();
  /*package*/ final ConceptDescriptor myConceptSmartClosureParameterDeclaration = createDescriptorForSmartClosureParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptSortDirection = createDescriptorForSortDirection();
  /*package*/ final ConceptDescriptor myConceptSortOperation = createDescriptorForSortOperation();
  /*package*/ final ConceptDescriptor myConceptSortedMapOperation = createDescriptorForSortedMapOperation();
  /*package*/ final ConceptDescriptor myConceptSortedMapType = createDescriptorForSortedMapType();
  /*package*/ final ConceptDescriptor myConceptSortedSetOperation = createDescriptorForSortedSetOperation();
  /*package*/ final ConceptDescriptor myConceptSortedSetType = createDescriptorForSortedSetType();
  /*package*/ final ConceptDescriptor myConceptStackType = createDescriptorForStackType();
  /*package*/ final ConceptDescriptor myConceptStopStatement = createDescriptorForStopStatement();
  /*package*/ final ConceptDescriptor myConceptSubListOperation = createDescriptorForSubListOperation();
  /*package*/ final ConceptDescriptor myConceptSubMapOperation = createDescriptorForSubMapOperation();
  /*package*/ final ConceptDescriptor myConceptSubSetOperation = createDescriptorForSubSetOperation();
  /*package*/ final ConceptDescriptor myConceptTailListOperation = createDescriptorForTailListOperation();
  /*package*/ final ConceptDescriptor myConceptTailMapOperation = createDescriptorForTailMapOperation();
  /*package*/ final ConceptDescriptor myConceptTailOperation = createDescriptorForTailOperation();
  /*package*/ final ConceptDescriptor myConceptTailSetOperation = createDescriptorForTailSetOperation();
  /*package*/ final ConceptDescriptor myConceptTakeOperation = createDescriptorForTakeOperation();
  /*package*/ final ConceptDescriptor myConceptTestAddElementOperation = createDescriptorForTestAddElementOperation();
  /*package*/ final ConceptDescriptor myConceptTestRemoveElementOperation = createDescriptorForTestRemoveElementOperation();
  /*package*/ final ConceptDescriptor myConceptToArrayOperation = createDescriptorForToArrayOperation();
  /*package*/ final ConceptDescriptor myConceptToIteratorOperation = createDescriptorForToIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptToListOperation = createDescriptorForToListOperation();
  /*package*/ final ConceptDescriptor myConceptTranslateOperation = createDescriptorForTranslateOperation();
  /*package*/ final ConceptDescriptor myConceptTreeMapCreator = createDescriptorForTreeMapCreator();
  /*package*/ final ConceptDescriptor myConceptTreeSetCreator = createDescriptorForTreeSetCreator();
  /*package*/ final ConceptDescriptor myConceptUnionOperation = createDescriptorForUnionOperation();
  /*package*/ final ConceptDescriptor myConceptValueAccessOperation = createDescriptorForValueAccessOperation();
  /*package*/ final ConceptDescriptor myConceptVisitAllOperation = createDescriptorForVisitAllOperation();
  /*package*/ final ConceptDescriptor myConceptWhereOperation = createDescriptorForWhereOperation();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractContainerCreator.getId(), 0);
    myIndexMap.put(myConceptAbstractContainerType.getId(), 1);
    myIndexMap.put(myConceptAbstractEnumeratorOperation.getId(), 2);
    myIndexMap.put(myConceptAbstractIteratorOperation.getId(), 3);
    myIndexMap.put(myConceptAbstractMappingOperation.getId(), 4);
    myIndexMap.put(myConceptAbstractSetOperation.getId(), 5);
    myIndexMap.put(myConceptAddAllElementsOperation.getId(), 6);
    myIndexMap.put(myConceptAddAllSetElementsOperation.getId(), 7);
    myIndexMap.put(myConceptAddElementOperation.getId(), 8);
    myIndexMap.put(myConceptAddFirstElementOperation.getId(), 9);
    myIndexMap.put(myConceptAddLastElementOperation.getId(), 10);
    myIndexMap.put(myConceptAddSetElementOperation.getId(), 11);
    myIndexMap.put(myConceptAllConstant.getId(), 12);
    myIndexMap.put(myConceptAllOperation.getId(), 13);
    myIndexMap.put(myConceptAlsoSortOperation.getId(), 14);
    myIndexMap.put(myConceptAnyOperation.getId(), 15);
    myIndexMap.put(myConceptAsSequenceOperation.getId(), 16);
    myIndexMap.put(myConceptAsSynchronizedOperation.getId(), 17);
    myIndexMap.put(myConceptAsUnmodifiableOperation.getId(), 18);
    myIndexMap.put(myConceptBinaryOperation.getId(), 19);
    myIndexMap.put(myConceptChunkOperation.getId(), 20);
    myIndexMap.put(myConceptClearAllElementsOperation.getId(), 21);
    myIndexMap.put(myConceptClearSetOperation.getId(), 22);
    myIndexMap.put(myConceptCollectionType.getId(), 23);
    myIndexMap.put(myConceptComparatorSortOperation.getId(), 24);
    myIndexMap.put(myConceptConcatOperation.getId(), 25);
    myIndexMap.put(myConceptContainerIteratorType.getId(), 26);
    myIndexMap.put(myConceptContainsAllOperation.getId(), 27);
    myIndexMap.put(myConceptContainsKeyOperation.getId(), 28);
    myIndexMap.put(myConceptContainsOperation.getId(), 29);
    myIndexMap.put(myConceptContainsValueOperation.getId(), 30);
    myIndexMap.put(myConceptCustomContainerCreator.getId(), 31);
    myIndexMap.put(myConceptCustomContainerDeclaration.getId(), 32);
    myIndexMap.put(myConceptCustomContainers.getId(), 33);
    myIndexMap.put(myConceptCustomMapCreator.getId(), 34);
    myIndexMap.put(myConceptCutOperation.getId(), 35);
    myIndexMap.put(myConceptDequeType.getId(), 36);
    myIndexMap.put(myConceptDisjunctOperation.getId(), 37);
    myIndexMap.put(myConceptDistinctOperation.getId(), 38);
    myIndexMap.put(myConceptDowncastExpression.getId(), 39);
    myIndexMap.put(myConceptEnumeratorType.getId(), 40);
    myIndexMap.put(myConceptExcludeOperation.getId(), 41);
    myIndexMap.put(myConceptFindFirstOperation.getId(), 42);
    myIndexMap.put(myConceptFindLastOperation.getId(), 43);
    myIndexMap.put(myConceptFoldLeftOperation.getId(), 44);
    myIndexMap.put(myConceptFoldRightOperation.getId(), 45);
    myIndexMap.put(myConceptForEachStatement.getId(), 46);
    myIndexMap.put(myConceptForEachVariable.getId(), 47);
    myIndexMap.put(myConceptForEachVariableReference.getId(), 48);
    myIndexMap.put(myConceptGetCurrentOperation.getId(), 49);
    myIndexMap.put(myConceptGetElementOperation.getId(), 50);
    myIndexMap.put(myConceptGetEnumeratorOperation.getId(), 51);
    myIndexMap.put(myConceptGetFirstOperation.getId(), 52);
    myIndexMap.put(myConceptGetIndexOfOperation.getId(), 53);
    myIndexMap.put(myConceptGetIteratorOperation.getId(), 54);
    myIndexMap.put(myConceptGetKeysOperation.getId(), 55);
    myIndexMap.put(myConceptGetLastIndexOfOperation.getId(), 56);
    myIndexMap.put(myConceptGetLastOperation.getId(), 57);
    myIndexMap.put(myConceptGetNextOperation.getId(), 58);
    myIndexMap.put(myConceptGetSizeOperation.getId(), 59);
    myIndexMap.put(myConceptGetValuesOperation.getId(), 60);
    myIndexMap.put(myConceptHasNextOperation.getId(), 61);
    myIndexMap.put(myConceptHashMapCreator.getId(), 62);
    myIndexMap.put(myConceptHashSetCreator.getId(), 63);
    myIndexMap.put(myConceptHeadListOperation.getId(), 64);
    myIndexMap.put(myConceptHeadMapOperation.getId(), 65);
    myIndexMap.put(myConceptHeadSetOperation.getId(), 66);
    myIndexMap.put(myConceptIApplicableToCollection.getId(), 67);
    myIndexMap.put(myConceptIApplicableToDeque.getId(), 68);
    myIndexMap.put(myConceptIApplicableToList.getId(), 69);
    myIndexMap.put(myConceptIApplicableToNothing.getId(), 70);
    myIndexMap.put(myConceptIApplicableToQueue.getId(), 71);
    myIndexMap.put(myConceptIApplicableToStack.getId(), 72);
    myIndexMap.put(myConceptICollectionOperation.getId(), 73);
    myIndexMap.put(myConceptIContainerOperation.getId(), 74);
    myIndexMap.put(myConceptIDequeOperation.getId(), 75);
    myIndexMap.put(myConceptIListOperation.getId(), 76);
    myIndexMap.put(myConceptIQueueOperation.getId(), 77);
    myIndexMap.put(myConceptIStackOperation.getId(), 78);
    myIndexMap.put(myConceptInsertElementOperation.getId(), 79);
    myIndexMap.put(myConceptInternalSequenceOperation.getId(), 80);
    myIndexMap.put(myConceptIntersectOperation.getId(), 81);
    myIndexMap.put(myConceptIsEmptyOperation.getId(), 82);
    myIndexMap.put(myConceptIsNotEmptyOperation.getId(), 83);
    myIndexMap.put(myConceptIteratorType.getId(), 84);
    myIndexMap.put(myConceptJoinOperation.getId(), 85);
    myIndexMap.put(myConceptKeyAccessOperation.getId(), 86);
    myIndexMap.put(myConceptLinkedHashMapCreator.getId(), 87);
    myIndexMap.put(myConceptLinkedHashSetCreator.getId(), 88);
    myIndexMap.put(myConceptLinkedListCreator.getId(), 89);
    myIndexMap.put(myConceptLinkedListType.getId(), 90);
    myIndexMap.put(myConceptListCreatorWithInit.getId(), 91);
    myIndexMap.put(myConceptListElementAccessExpression.getId(), 92);
    myIndexMap.put(myConceptListType.getId(), 93);
    myIndexMap.put(myConceptMapAsSequenceVarRef.getId(), 94);
    myIndexMap.put(myConceptMapClearOperation.getId(), 95);
    myIndexMap.put(myConceptMapElement.getId(), 96);
    myIndexMap.put(myConceptMapEntry.getId(), 97);
    myIndexMap.put(myConceptMapInitializer.getId(), 98);
    myIndexMap.put(myConceptMapOperation.getId(), 99);
    myIndexMap.put(myConceptMapOperationExpression.getId(), 100);
    myIndexMap.put(myConceptMapRemoveOperation.getId(), 101);
    myIndexMap.put(myConceptMapType.getId(), 102);
    myIndexMap.put(myConceptMappingType.getId(), 103);
    myIndexMap.put(myConceptMappingsSetOperation.getId(), 104);
    myIndexMap.put(myConceptMoveNextOperation.getId(), 105);
    myIndexMap.put(myConceptMultiForEachPair.getId(), 106);
    myIndexMap.put(myConceptMultiForEachStatement.getId(), 107);
    myIndexMap.put(myConceptMultiForEachVariable.getId(), 108);
    myIndexMap.put(myConceptMultiForEachVariableReference.getId(), 109);
    myIndexMap.put(myConceptNoArgumentsSequenceOperation.getId(), 110);
    myIndexMap.put(myConceptOfTypeOperation.getId(), 111);
    myIndexMap.put(myConceptPageOperation.getId(), 112);
    myIndexMap.put(myConceptPeekOperation.getId(), 113);
    myIndexMap.put(myConceptPopOperation.getId(), 114);
    myIndexMap.put(myConceptPriorityQueueCreator.getId(), 115);
    myIndexMap.put(myConceptPushOperation.getId(), 116);
    myIndexMap.put(myConceptPutAllOperation.getId(), 117);
    myIndexMap.put(myConceptQueueType.getId(), 118);
    myIndexMap.put(myConceptReduceLeftOperation.getId(), 119);
    myIndexMap.put(myConceptReduceRightOperation.getId(), 120);
    myIndexMap.put(myConceptRemoveAllElementsOperation.getId(), 121);
    myIndexMap.put(myConceptRemoveAllSetElementsOperation.getId(), 122);
    myIndexMap.put(myConceptRemoveAtElementOperation.getId(), 123);
    myIndexMap.put(myConceptRemoveElementOperation.getId(), 124);
    myIndexMap.put(myConceptRemoveFirstElementOperation.getId(), 125);
    myIndexMap.put(myConceptRemoveLastElementOperation.getId(), 126);
    myIndexMap.put(myConceptRemoveOperation.getId(), 127);
    myIndexMap.put(myConceptRemoveSetElementOperation.getId(), 128);
    myIndexMap.put(myConceptRemoveWhereOperation.getId(), 129);
    myIndexMap.put(myConceptReverseOperation.getId(), 130);
    myIndexMap.put(myConceptSelectOperation.getId(), 131);
    myIndexMap.put(myConceptSequenceCreator.getId(), 132);
    myIndexMap.put(myConceptSequenceOperation.getId(), 133);
    myIndexMap.put(myConceptSequenceType.getId(), 134);
    myIndexMap.put(myConceptSetElementOperation.getId(), 135);
    myIndexMap.put(myConceptSetType.getId(), 136);
    myIndexMap.put(myConceptSingleArgumentSequenceOperation.getId(), 137);
    myIndexMap.put(myConceptSingletonSequenceCreator.getId(), 138);
    myIndexMap.put(myConceptSkipOperation.getId(), 139);
    myIndexMap.put(myConceptSkipStatement.getId(), 140);
    myIndexMap.put(myConceptSmartClosureParameterDeclaration.getId(), 141);
    myIndexMap.put(myConceptSortDirection.getId(), 142);
    myIndexMap.put(myConceptSortOperation.getId(), 143);
    myIndexMap.put(myConceptSortedMapOperation.getId(), 144);
    myIndexMap.put(myConceptSortedMapType.getId(), 145);
    myIndexMap.put(myConceptSortedSetOperation.getId(), 146);
    myIndexMap.put(myConceptSortedSetType.getId(), 147);
    myIndexMap.put(myConceptStackType.getId(), 148);
    myIndexMap.put(myConceptStopStatement.getId(), 149);
    myIndexMap.put(myConceptSubListOperation.getId(), 150);
    myIndexMap.put(myConceptSubMapOperation.getId(), 151);
    myIndexMap.put(myConceptSubSetOperation.getId(), 152);
    myIndexMap.put(myConceptTailListOperation.getId(), 153);
    myIndexMap.put(myConceptTailMapOperation.getId(), 154);
    myIndexMap.put(myConceptTailOperation.getId(), 155);
    myIndexMap.put(myConceptTailSetOperation.getId(), 156);
    myIndexMap.put(myConceptTakeOperation.getId(), 157);
    myIndexMap.put(myConceptTestAddElementOperation.getId(), 158);
    myIndexMap.put(myConceptTestRemoveElementOperation.getId(), 159);
    myIndexMap.put(myConceptToArrayOperation.getId(), 160);
    myIndexMap.put(myConceptToIteratorOperation.getId(), 161);
    myIndexMap.put(myConceptToListOperation.getId(), 162);
    myIndexMap.put(myConceptTranslateOperation.getId(), 163);
    myIndexMap.put(myConceptTreeMapCreator.getId(), 164);
    myIndexMap.put(myConceptTreeSetCreator.getId(), 165);
    myIndexMap.put(myConceptUnionOperation.getId(), 166);
    myIndexMap.put(myConceptValueAccessOperation.getId(), 167);
    myIndexMap.put(myConceptVisitAllOperation.getId(), 168);
    myIndexMap.put(myConceptWhereOperation.getId(), 169);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractContainerCreator, myConceptAbstractContainerType, myConceptAbstractEnumeratorOperation, myConceptAbstractIteratorOperation, myConceptAbstractMappingOperation, myConceptAbstractSetOperation, myConceptAddAllElementsOperation, myConceptAddAllSetElementsOperation, myConceptAddElementOperation, myConceptAddFirstElementOperation, myConceptAddLastElementOperation, myConceptAddSetElementOperation, myConceptAllConstant, myConceptAllOperation, myConceptAlsoSortOperation, myConceptAnyOperation, myConceptAsSequenceOperation, myConceptAsSynchronizedOperation, myConceptAsUnmodifiableOperation, myConceptBinaryOperation, myConceptChunkOperation, myConceptClearAllElementsOperation, myConceptClearSetOperation, myConceptCollectionType, myConceptComparatorSortOperation, myConceptConcatOperation, myConceptContainerIteratorType, myConceptContainsAllOperation, myConceptContainsKeyOperation, myConceptContainsOperation, myConceptContainsValueOperation, myConceptCustomContainerCreator, myConceptCustomContainerDeclaration, myConceptCustomContainers, myConceptCustomMapCreator, myConceptCutOperation, myConceptDequeType, myConceptDisjunctOperation, myConceptDistinctOperation, myConceptDowncastExpression, myConceptEnumeratorType, myConceptExcludeOperation, myConceptFindFirstOperation, myConceptFindLastOperation, myConceptFoldLeftOperation, myConceptFoldRightOperation, myConceptForEachStatement, myConceptForEachVariable, myConceptForEachVariableReference, myConceptGetCurrentOperation, myConceptGetElementOperation, myConceptGetEnumeratorOperation, myConceptGetFirstOperation, myConceptGetIndexOfOperation, myConceptGetIteratorOperation, myConceptGetKeysOperation, myConceptGetLastIndexOfOperation, myConceptGetLastOperation, myConceptGetNextOperation, myConceptGetSizeOperation, myConceptGetValuesOperation, myConceptHasNextOperation, myConceptHashMapCreator, myConceptHashSetCreator, myConceptHeadListOperation, myConceptHeadMapOperation, myConceptHeadSetOperation, myConceptIApplicableToCollection, myConceptIApplicableToDeque, myConceptIApplicableToList, myConceptIApplicableToNothing, myConceptIApplicableToQueue, myConceptIApplicableToStack, myConceptICollectionOperation, myConceptIContainerOperation, myConceptIDequeOperation, myConceptIListOperation, myConceptIQueueOperation, myConceptIStackOperation, myConceptInsertElementOperation, myConceptInternalSequenceOperation, myConceptIntersectOperation, myConceptIsEmptyOperation, myConceptIsNotEmptyOperation, myConceptIteratorType, myConceptJoinOperation, myConceptKeyAccessOperation, myConceptLinkedHashMapCreator, myConceptLinkedHashSetCreator, myConceptLinkedListCreator, myConceptLinkedListType, myConceptListCreatorWithInit, myConceptListElementAccessExpression, myConceptListType, myConceptMapAsSequenceVarRef, myConceptMapClearOperation, myConceptMapElement, myConceptMapEntry, myConceptMapInitializer, myConceptMapOperation, myConceptMapOperationExpression, myConceptMapRemoveOperation, myConceptMapType, myConceptMappingType, myConceptMappingsSetOperation, myConceptMoveNextOperation, myConceptMultiForEachPair, myConceptMultiForEachStatement, myConceptMultiForEachVariable, myConceptMultiForEachVariableReference, myConceptNoArgumentsSequenceOperation, myConceptOfTypeOperation, myConceptPageOperation, myConceptPeekOperation, myConceptPopOperation, myConceptPriorityQueueCreator, myConceptPushOperation, myConceptPutAllOperation, myConceptQueueType, myConceptReduceLeftOperation, myConceptReduceRightOperation, myConceptRemoveAllElementsOperation, myConceptRemoveAllSetElementsOperation, myConceptRemoveAtElementOperation, myConceptRemoveElementOperation, myConceptRemoveFirstElementOperation, myConceptRemoveLastElementOperation, myConceptRemoveOperation, myConceptRemoveSetElementOperation, myConceptRemoveWhereOperation, myConceptReverseOperation, myConceptSelectOperation, myConceptSequenceCreator, myConceptSequenceOperation, myConceptSequenceType, myConceptSetElementOperation, myConceptSetType, myConceptSingleArgumentSequenceOperation, myConceptSingletonSequenceCreator, myConceptSkipOperation, myConceptSkipStatement, myConceptSmartClosureParameterDeclaration, myConceptSortDirection, myConceptSortOperation, myConceptSortedMapOperation, myConceptSortedMapType, myConceptSortedSetOperation, myConceptSortedSetType, myConceptStackType, myConceptStopStatement, myConceptSubListOperation, myConceptSubMapOperation, myConceptSubSetOperation, myConceptTailListOperation, myConceptTailMapOperation, myConceptTailOperation, myConceptTailSetOperation, myConceptTakeOperation, myConceptTestAddElementOperation, myConceptTestRemoveElementOperation, myConceptToArrayOperation, myConceptToIteratorOperation, myConceptToListOperation, myConceptTranslateOperation, myConceptTreeMapCreator, myConceptTreeSetCreator, myConceptUnionOperation, myConceptValueAccessOperation, myConceptVisitAllOperation, myConceptWhereOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractContainerCreator;
      case 1:
        return myConceptAbstractContainerType;
      case 2:
        return myConceptAbstractEnumeratorOperation;
      case 3:
        return myConceptAbstractIteratorOperation;
      case 4:
        return myConceptAbstractMappingOperation;
      case 5:
        return myConceptAbstractSetOperation;
      case 6:
        return myConceptAddAllElementsOperation;
      case 7:
        return myConceptAddAllSetElementsOperation;
      case 8:
        return myConceptAddElementOperation;
      case 9:
        return myConceptAddFirstElementOperation;
      case 10:
        return myConceptAddLastElementOperation;
      case 11:
        return myConceptAddSetElementOperation;
      case 12:
        return myConceptAllConstant;
      case 13:
        return myConceptAllOperation;
      case 14:
        return myConceptAlsoSortOperation;
      case 15:
        return myConceptAnyOperation;
      case 16:
        return myConceptAsSequenceOperation;
      case 17:
        return myConceptAsSynchronizedOperation;
      case 18:
        return myConceptAsUnmodifiableOperation;
      case 19:
        return myConceptBinaryOperation;
      case 20:
        return myConceptChunkOperation;
      case 21:
        return myConceptClearAllElementsOperation;
      case 22:
        return myConceptClearSetOperation;
      case 23:
        return myConceptCollectionType;
      case 24:
        return myConceptComparatorSortOperation;
      case 25:
        return myConceptConcatOperation;
      case 26:
        return myConceptContainerIteratorType;
      case 27:
        return myConceptContainsAllOperation;
      case 28:
        return myConceptContainsKeyOperation;
      case 29:
        return myConceptContainsOperation;
      case 30:
        return myConceptContainsValueOperation;
      case 31:
        return myConceptCustomContainerCreator;
      case 32:
        return myConceptCustomContainerDeclaration;
      case 33:
        return myConceptCustomContainers;
      case 34:
        return myConceptCustomMapCreator;
      case 35:
        return myConceptCutOperation;
      case 36:
        return myConceptDequeType;
      case 37:
        return myConceptDisjunctOperation;
      case 38:
        return myConceptDistinctOperation;
      case 39:
        return myConceptDowncastExpression;
      case 40:
        return myConceptEnumeratorType;
      case 41:
        return myConceptExcludeOperation;
      case 42:
        return myConceptFindFirstOperation;
      case 43:
        return myConceptFindLastOperation;
      case 44:
        return myConceptFoldLeftOperation;
      case 45:
        return myConceptFoldRightOperation;
      case 46:
        return myConceptForEachStatement;
      case 47:
        return myConceptForEachVariable;
      case 48:
        return myConceptForEachVariableReference;
      case 49:
        return myConceptGetCurrentOperation;
      case 50:
        return myConceptGetElementOperation;
      case 51:
        return myConceptGetEnumeratorOperation;
      case 52:
        return myConceptGetFirstOperation;
      case 53:
        return myConceptGetIndexOfOperation;
      case 54:
        return myConceptGetIteratorOperation;
      case 55:
        return myConceptGetKeysOperation;
      case 56:
        return myConceptGetLastIndexOfOperation;
      case 57:
        return myConceptGetLastOperation;
      case 58:
        return myConceptGetNextOperation;
      case 59:
        return myConceptGetSizeOperation;
      case 60:
        return myConceptGetValuesOperation;
      case 61:
        return myConceptHasNextOperation;
      case 62:
        return myConceptHashMapCreator;
      case 63:
        return myConceptHashSetCreator;
      case 64:
        return myConceptHeadListOperation;
      case 65:
        return myConceptHeadMapOperation;
      case 66:
        return myConceptHeadSetOperation;
      case 67:
        return myConceptIApplicableToCollection;
      case 68:
        return myConceptIApplicableToDeque;
      case 69:
        return myConceptIApplicableToList;
      case 70:
        return myConceptIApplicableToNothing;
      case 71:
        return myConceptIApplicableToQueue;
      case 72:
        return myConceptIApplicableToStack;
      case 73:
        return myConceptICollectionOperation;
      case 74:
        return myConceptIContainerOperation;
      case 75:
        return myConceptIDequeOperation;
      case 76:
        return myConceptIListOperation;
      case 77:
        return myConceptIQueueOperation;
      case 78:
        return myConceptIStackOperation;
      case 79:
        return myConceptInsertElementOperation;
      case 80:
        return myConceptInternalSequenceOperation;
      case 81:
        return myConceptIntersectOperation;
      case 82:
        return myConceptIsEmptyOperation;
      case 83:
        return myConceptIsNotEmptyOperation;
      case 84:
        return myConceptIteratorType;
      case 85:
        return myConceptJoinOperation;
      case 86:
        return myConceptKeyAccessOperation;
      case 87:
        return myConceptLinkedHashMapCreator;
      case 88:
        return myConceptLinkedHashSetCreator;
      case 89:
        return myConceptLinkedListCreator;
      case 90:
        return myConceptLinkedListType;
      case 91:
        return myConceptListCreatorWithInit;
      case 92:
        return myConceptListElementAccessExpression;
      case 93:
        return myConceptListType;
      case 94:
        return myConceptMapAsSequenceVarRef;
      case 95:
        return myConceptMapClearOperation;
      case 96:
        return myConceptMapElement;
      case 97:
        return myConceptMapEntry;
      case 98:
        return myConceptMapInitializer;
      case 99:
        return myConceptMapOperation;
      case 100:
        return myConceptMapOperationExpression;
      case 101:
        return myConceptMapRemoveOperation;
      case 102:
        return myConceptMapType;
      case 103:
        return myConceptMappingType;
      case 104:
        return myConceptMappingsSetOperation;
      case 105:
        return myConceptMoveNextOperation;
      case 106:
        return myConceptMultiForEachPair;
      case 107:
        return myConceptMultiForEachStatement;
      case 108:
        return myConceptMultiForEachVariable;
      case 109:
        return myConceptMultiForEachVariableReference;
      case 110:
        return myConceptNoArgumentsSequenceOperation;
      case 111:
        return myConceptOfTypeOperation;
      case 112:
        return myConceptPageOperation;
      case 113:
        return myConceptPeekOperation;
      case 114:
        return myConceptPopOperation;
      case 115:
        return myConceptPriorityQueueCreator;
      case 116:
        return myConceptPushOperation;
      case 117:
        return myConceptPutAllOperation;
      case 118:
        return myConceptQueueType;
      case 119:
        return myConceptReduceLeftOperation;
      case 120:
        return myConceptReduceRightOperation;
      case 121:
        return myConceptRemoveAllElementsOperation;
      case 122:
        return myConceptRemoveAllSetElementsOperation;
      case 123:
        return myConceptRemoveAtElementOperation;
      case 124:
        return myConceptRemoveElementOperation;
      case 125:
        return myConceptRemoveFirstElementOperation;
      case 126:
        return myConceptRemoveLastElementOperation;
      case 127:
        return myConceptRemoveOperation;
      case 128:
        return myConceptRemoveSetElementOperation;
      case 129:
        return myConceptRemoveWhereOperation;
      case 130:
        return myConceptReverseOperation;
      case 131:
        return myConceptSelectOperation;
      case 132:
        return myConceptSequenceCreator;
      case 133:
        return myConceptSequenceOperation;
      case 134:
        return myConceptSequenceType;
      case 135:
        return myConceptSetElementOperation;
      case 136:
        return myConceptSetType;
      case 137:
        return myConceptSingleArgumentSequenceOperation;
      case 138:
        return myConceptSingletonSequenceCreator;
      case 139:
        return myConceptSkipOperation;
      case 140:
        return myConceptSkipStatement;
      case 141:
        return myConceptSmartClosureParameterDeclaration;
      case 142:
        return myConceptSortDirection;
      case 143:
        return myConceptSortOperation;
      case 144:
        return myConceptSortedMapOperation;
      case 145:
        return myConceptSortedMapType;
      case 146:
        return myConceptSortedSetOperation;
      case 147:
        return myConceptSortedSetType;
      case 148:
        return myConceptStackType;
      case 149:
        return myConceptStopStatement;
      case 150:
        return myConceptSubListOperation;
      case 151:
        return myConceptSubMapOperation;
      case 152:
        return myConceptSubSetOperation;
      case 153:
        return myConceptTailListOperation;
      case 154:
        return myConceptTailMapOperation;
      case 155:
        return myConceptTailOperation;
      case 156:
        return myConceptTailSetOperation;
      case 157:
        return myConceptTakeOperation;
      case 158:
        return myConceptTestAddElementOperation;
      case 159:
        return myConceptTestRemoveElementOperation;
      case 160:
        return myConceptToArrayOperation;
      case 161:
        return myConceptToIteratorOperation;
      case 162:
        return myConceptToListOperation;
      case 163:
        return myConceptTranslateOperation;
      case 164:
        return myConceptTreeMapCreator;
      case 165:
        return myConceptTreeSetCreator;
      case 166:
        return myConceptUnionOperation;
      case 167:
        return myConceptValueAccessOperation;
      case 168:
        return myConceptVisitAllOperation;
      case 169:
        return myConceptWhereOperation;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAbstractContainerCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1202df24e9fL, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237721435807")), new ConceptDescriptorBuilder.Link(0x1202df24ea0L, "initValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237721435808")), new ConceptDescriptorBuilder.Link(0x1202e9082e6L, "copyFrom", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237731803878")), new ConceptDescriptorBuilder.Link(0x15ae66cec05cb2eaL, "initSize", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1562299158920737514"))).children(new String[]{"elementType", "initValue", "copyFrom", "initSize"}, new boolean[]{false, true, false, false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237721394592")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractContainerType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4eec26fcbaf8c39cL, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5686963296372573084"))).children(new String[]{"elementType"}, new boolean[]{false}).abstract_().alias("", "container type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5686963296372573083")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractEnumeratorOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237497044713")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractIteratorOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237470736245")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractMappingOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240824716764")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226566831166")).create();
  }
  private static ConceptDescriptor createDescriptorForAddAllElementsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddAllElementsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e3d20dbefL)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("addAll", "add all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1160666733551")).create();
  }
  private static ConceptDescriptor createDescriptorForAddAllSetElementsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddAllSetElementsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d969dca87L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d969e1c69L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226592623721"))).children(new String[]{"argument"}, new boolean[]{false}).alias("addAll", "add all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226592602759")).create();
  }
  private static ConceptDescriptor createDescriptorForAddElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e39e3ff80L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("add", "add an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1160612413312")).create();
  }
  private static ConceptDescriptor createDescriptorForAddFirstElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddFirstElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0384e32L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("addFirst", "add element as first").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227022159410")).create();
  }
  private static ConceptDescriptor createDescriptorForAddLastElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddLastElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0389d32L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL)).alias("addLast", "add element as last").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227022179634")).create();
  }
  private static ConceptDescriptor createDescriptorForAddSetElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AddSetElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9514ebd8L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d951a651bL, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226567214363"))).children(new String[]{"argument"}, new boolean[]{false}).alias("add", "add an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226566855640")).create();
  }
  private static ConceptDescriptor createDescriptorForAllConstant() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AllConstant", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12031a066ecL)).super_("jetbrains.mps.baseLanguage.structure.IntegerLiteral").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L)).parents("jetbrains.mps.baseLanguage.structure.IntegerLiteral").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L)).alias("ALL", "all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237783176940")).create();
  }
  private static ConceptDescriptor createDescriptorForAllOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AllOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fad85a8f5L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("all", "check if all elements match the condition").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1235566831861")).create();
  }
  private static ConceptDescriptor createDescriptorForAlsoSortOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AlsoSortOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x85158df752ff560L)).super_("jetbrains.mps.baseLanguage.collections.structure.SortOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b81cc8f6L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b81cc8f6L)).alias("alsoSortBy", "sort by secondary key").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "599357942184015200")).create();
  }
  private static ConceptDescriptor createDescriptorForAnyOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AnyOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fad816cd8L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("any", "check if there are any elements matching the condition").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1235566554328")).create();
  }
  private static ConceptDescriptor createDescriptorForAsSequenceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AsSequenceOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c92e6703L)).super_("jetbrains.mps.baseLanguage.structure.AbstractOperation").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1196792d150L)).parents("jetbrains.mps.baseLanguage.structure.AbstractOperation", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1196792d150L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("asSequence", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240325842691")).create();
  }
  private static ConceptDescriptor createDescriptorForAsSynchronizedOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AsSynchronizedOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3fffa24b059bcd85L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.ICollectionOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("asSynchronized", "synchronized collection").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4611582986551020933")).create();
  }
  private static ConceptDescriptor createDescriptorForAsUnmodifiableOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.AsUnmodifiableOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x230f7a18a5abce80L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.ICollectionOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("asUnmodifiable", "unmodifiable collection").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "2526372162255441536")).create();
  }
  private static ConceptDescriptor createDescriptorForBinaryOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x112051c6c86L, "rightExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176906787974"))).children(new String[]{"rightExpression"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176906603202")).create();
  }
  private static ConceptDescriptor createDescriptorForChunkOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118bc7eaf3fL, "length", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205753261887"))).children(new String[]{"length"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205753243362")).create();
  }
  private static ConceptDescriptor createDescriptorForClearAllElementsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ClearAllElementsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db03915deL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("clear", "clear all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227022210526")).create();
  }
  private static ConceptDescriptor createDescriptorForClearSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ClearSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11daafd2413L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).alias("clear", "clear all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226934395923")).create();
  }
  private static ConceptDescriptor createDescriptorForCollectionType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CollectionType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x62e1df06bd2172b2L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).alias("collection", "abstract collection type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "7125221305512719026")).create();
  }
  private static ConceptDescriptor createDescriptorForComparatorSortOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ComparatorSortOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x119a966b94dL)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x119a96853fdL, "ascending", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1209727996925"))).children(new String[]{"ascending"}, new boolean[]{false}).alias("sort", "sort using comparator").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1209727891789")).create();
  }
  private static ConceptDescriptor createDescriptorForConcatOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ConcatOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x112f6f0e9beL)).super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).parents("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).alias("concat", "produce a sequence concatenation").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1180964022718")).create();
  }
  private static ConceptDescriptor createDescriptorForContainerIteratorType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120bec64a7eL)).super_("jetbrains.mps.baseLanguage.collections.structure.IteratorType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ed2b158L)).parents("jetbrains.mps.baseLanguage.collections.structure.IteratorType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ed2b158L)).alias("modifying_iterator", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240151247486")).create();
  }
  private static ConceptDescriptor createDescriptorForContainsAllOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ContainsAllOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5507720272481451L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).alias("containsAll", "test if sequence contains all element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6126991172893676625")).create();
  }
  private static ConceptDescriptor createDescriptorForContainsKeyOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ContainsKeyOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117b3740258L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x117c8321b8fL, "key", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201654602639"))).children(new String[]{"key"}, new boolean[]{false}).alias("containsKey", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201306600024")).create();
  }
  private static ConceptDescriptor createDescriptorForContainsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ContainsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x110efd61311L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).alias("contains", "test if sequence contains an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172254888721")).create();
  }
  private static ConceptDescriptor createDescriptorForContainsValueOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ContainsValueOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1203903c318L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12039041567L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237907150183"))).children(new String[]{"value"}, new boolean[]{false}).alias("containsValue", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237907129112")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainerCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x127be81db92655b3L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x127be81db92655b4L, "containerDeclaration", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L), false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1331913329176106420"))).references("containerDeclaration").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1331913329176106419")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainerDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L)).super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL)).parents("jetbrains.mps.baseLanguage.structure.GenericDeclaration", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.structure.IVisible").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x54a5d587c1f3c83fL, "containerType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6099516049394485311")), new ConceptDescriptorBuilder.Link(0x54a5d587c1f3c840L, "runtimeType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6099516049394485312")), new ConceptDescriptorBuilder.Link(0x11c2034ca3135818L, "factory", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1279588871814993944"))).children(new String[]{"containerType", "runtimeType", "factory"}, new boolean[]{false, false, false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6099516049394485216")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainers() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CustomContainers", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c84cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x54a5d587c1f3c84eL, "containerDeclaration", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L), true, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6099516049394485326"))).children(new String[]{"containerDeclaration"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6099516049394485324")).create();
  }
  private static ConceptDescriptor createDescriptorForCustomMapCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CustomMapCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x15e2150d4bff8a67L)).super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).parents("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x15e2150d4bff8a6aL, "containerDeclaration", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L), false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1576845966386891370"))).references("containerDeclaration").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1576845966386891367")).create();
  }
  private static ConceptDescriptor createDescriptorForCutOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.CutOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc83b40eL)).super_("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L)).parents("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L)).alias("cut", "exclude elements from the end").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205753590798")).create();
  }
  private static ConceptDescriptor createDescriptorForDequeType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.DequeType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e99e9ab97de7711L)).super_("jetbrains.mps.baseLanguage.collections.structure.QueueType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf74491L)).parents("jetbrains.mps.baseLanguage.collections.structure.QueueType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf74491L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).alias("deque", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3357971920378033937")).create();
  }
  private static ConceptDescriptor createDescriptorForDisjunctOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.DisjunctOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b342c640L)).super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).parents("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).alias("disjunction", "produce an exclusive disjunction").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205598340672")).create();
  }
  private static ConceptDescriptor createDescriptorForDistinctOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.DistinctOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1127b99dbbcL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("distinct", "produce sequence with unique elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1178894719932")).create();
  }
  private static ConceptDescriptor createDescriptorForDowncastExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.DowncastExpression", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11df825e596L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11df8269ecfL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1228228959951"))).children(new String[]{"expression"}, new boolean[]{false}).alias("downcast", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1228228912534")).create();
  }
  private static ConceptDescriptor createDescriptorForEnumeratorType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.EnumeratorType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020864111L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12020864112L, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237496250642"))).children(new String[]{"elementType"}, new boolean[]{false}).alias("enumerator", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237496250641")).create();
  }
  private static ConceptDescriptor createDescriptorForExcludeOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ExcludeOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x112061bbddcL)).super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).parents("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).alias("except", "subtract a sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176923520476")).create();
  }
  private static ConceptDescriptor createDescriptorForFindFirstOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.FindFirstOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6310c940L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("findFirst", "find first element that matches").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225727723840")).create();
  }
  private static ConceptDescriptor createDescriptorForFindLastOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.FindLastOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6339caa8L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("findLast", "find last element that matches").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225730411176")).create();
  }
  private static ConceptDescriptor createDescriptorForFoldLeftOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.FoldLeftOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1520010667848262L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x152001066784e4e4L, "seed", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069421796"))).children(new String[]{"seed"}, new boolean[]{false}).alias("foldLeft", "perform left folding").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069396578")).create();
  }
  private static ConceptDescriptor createDescriptorForFoldRightOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.FoldRightOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x152001066784e507L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x152001066784e509L, "seed", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069421833"))).children(new String[]{"seed"}, new boolean[]{false}).alias("foldRight", "perform right folding").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069421831")).create();
  }
  private static ConceptDescriptor createDescriptorForForEachStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac65f399L)).super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).parents("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x10cac7231f1L, "variable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153944400369")), new ConceptDescriptorBuilder.Link(0x10cac72911aL, "inputSequence", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153944424730"))).children(new String[]{"variable", "inputSequence"}, new boolean[]{false, false}).alias("foreach", "foreach <e> in <sequence>").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153943597977")).create();
  }
  private static ConceptDescriptor createDescriptorForForEachVariable() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ForEachVariable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.baseLanguage.structure.IVariableDeclaration", "jetbrains.mps.lang.core.structure.IResolveInfo").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L)).staticScope(StaticScope.ROOT).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153944193378")).create();
  }
  private static ConceptDescriptor createDescriptorForForEachVariableReference() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6fa5c3L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.IVariableReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xe34de34746464f2L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x10cac7007baL, "variable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L), false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153944258490"))).references("variable").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1153944233411")).create();
  }
  private static ConceptDescriptor createDescriptorForGetCurrentOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetCurrentOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f063174L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L)).alias("current", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237471080820")).create();
  }
  private static ConceptDescriptor createDescriptorForGetElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec44fd67eL)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).alias("get", "get element by index").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1162934736510")).create();
  }
  private static ConceptDescriptor createDescriptorForGetEnumeratorOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetEnumeratorOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12023af43bdL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("enumerator", "get the enumerator").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237549269949")).create();
  }
  private static ConceptDescriptor createDescriptorForGetFirstOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetFirstOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f5eb70c62L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("first", "get the first element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1165525191778")).create();
  }
  private static ConceptDescriptor createDescriptorForGetIndexOfOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetIndexOfOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x110bc593e18L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).alias("indexOf", "get the index of an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1171391069720")).create();
  }
  private static ConceptDescriptor createDescriptorForGetIteratorOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetIteratorOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ecef58aL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("iterator", "get the iterator").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237467461002")).create();
  }
  private static ConceptDescriptor createDescriptorForGetKeysOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetKeysOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117d52db67cL)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).alias("keys", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201872418428")).create();
  }
  private static ConceptDescriptor createDescriptorForGetLastIndexOfOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetLastIndexOfOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x37cbb2bef55da8aeL)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).alias("lastIndexOf", "get the index of an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4020503625588385966")).create();
  }
  private static ConceptDescriptor createDescriptorForGetLastOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetLastOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f62ee22c8L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("last", "get the last element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1165595910856")).create();
  }
  private static ConceptDescriptor createDescriptorForGetNextOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetNextOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f05703dL)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).alias("next", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237471031357")).create();
  }
  private static ConceptDescriptor createDescriptorForGetSizeOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetSizeOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec4627e6fL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("size", "get the sequence size").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1162935959151")).create();
  }
  private static ConceptDescriptor createDescriptorForGetValuesOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.GetValuesOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12039220e97L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).alias("values", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237909114519")).create();
  }
  private static ConceptDescriptor createDescriptorForHasNextOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HasNextOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f035df4L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).alias("hasNext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237470895604")).create();
  }
  private static ConceptDescriptor createDescriptorForHashMapCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x116dbb5b4d0L, "keyType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197687026896")), new ConceptDescriptorBuilder.Link(0x116dbb5d76dL, "valueType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197687035757")), new ConceptDescriptorBuilder.Link(0x118f24c9eb0L, "initializer", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f2481867L), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655950512")), new ConceptDescriptorBuilder.Link(0x15ae66cec0613b7fL, "initSize", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1562299158921034623"))).children(new String[]{"keyType", "valueType", "initializer", "initSize"}, new boolean[]{false, false, false, false}).alias("hashmap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197686869805")).create();
  }
  private static ConceptDescriptor createDescriptorForHashSetCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).alias("hashset", "create new hashset").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226516258405")).create();
  }
  private static ConceptDescriptor createDescriptorForHeadListOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HeadListOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x489c7f2006b05842L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x489c7f2006b05844L, "upToIndex", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5232196642625574980"))).children(new String[]{"upToIndex"}, new boolean[]{false}).alias("headList", "head list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5232196642625574978")).create();
  }
  private static ConceptDescriptor createDescriptorForHeadMapOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HeadMapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4071445L)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c40fad39L, "toKey", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240239942969"))).children(new String[]{"toKey"}, new boolean[]{false}).alias("headMap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240239379525")).create();
  }
  private static ConceptDescriptor createDescriptorForHeadSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.HeadSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4bdd40dL)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c4be03acL, "toElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251368364"))).children(new String[]{"toElement"}, new boolean[]{false}).alias("headSet", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251356173")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToCollection() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936692983")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToDeque() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToDeque", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IApplicableToNothing").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936692987")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToList() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IApplicableToNothing").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936692984")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToNothing() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToNothing", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.IDontSubstituteByDefault", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936691958")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToQueue() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IApplicableToDeque").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936692988")).create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToStack() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IApplicableToDeque").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5994574781936692989")).create();
  }
  private static ConceptDescriptor createDescriptorForICollectionOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ICollectionOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IContainerOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4327124999333572296")).create();
  }
  private static ConceptDescriptor createDescriptorForIContainerOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IContainerOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "2141797557972817928")).create();
  }
  private static ConceptDescriptor createDescriptorForIDequeOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6801639034384909353")).create();
  }
  private static ConceptDescriptor createDescriptorForIListOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IListOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.ICollectionOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "2141797557973018607")).create();
  }
  private static ConceptDescriptor createDescriptorForIQueueOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IContainerOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "497032923610827734")).create();
  }
  private static ConceptDescriptor createDescriptorForIStackOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IStackOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL)).version(1).interface_().parents("jetbrains.mps.baseLanguage.collections.structure.IContainerOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6801639034384909355")).create();
  }
  private static ConceptDescriptor createDescriptorForInsertElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.InsertElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d5cc25c8fL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d5cc2f695L, "index", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225621960341")), new ConceptDescriptorBuilder.Link(0x11d5cc2b50dL, "element", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225621943565"))).children(new String[]{"index", "element"}, new boolean[]{false, false}).alias("insert", "insert element at an index").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225621920911")).create();
  }
  private static ConceptDescriptor createDescriptorForInternalSequenceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11883748452L, "closure", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1204796294226"))).children(new String[]{"closure"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1204796164442")).create();
  }
  private static ConceptDescriptor createDescriptorForIntersectOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IntersectOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1120602b2e4L)).super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).parents("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).alias("intersect", "produce an intersection").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176921879268")).create();
  }
  private static ConceptDescriptor createDescriptorForIsEmptyOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IsEmptyOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f5f053dc7L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("isEmpty", "test if sequence is empty").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1165530316231")).create();
  }
  private static ConceptDescriptor createDescriptorForIsNotEmptyOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IsNotEmptyOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111ecf423b7L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("isNotEmpty", "test if sequence is not empty").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176501494711")).create();
  }
  private static ConceptDescriptor createDescriptorForIteratorType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.IteratorType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ed2b158L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1201ed311a7L, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237467730343"))).children(new String[]{"elementType"}, new boolean[]{false}).alias("iterator", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237467705688")).create();
  }
  private static ConceptDescriptor createDescriptorForJoinOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.JoinOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120debe16c6L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120debf4541L, "delimiter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240687658305"))).children(new String[]{"delimiter"}, new boolean[]{false}).alias("join", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240687580870")).create();
  }
  private static ConceptDescriptor createDescriptorForKeyAccessOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.KeyAccessOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6f85873L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL)).alias("key", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240825616499")).create();
  }
  private static ConceptDescriptor createDescriptorForLinkedHashMapCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.LinkedHashMapCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c2ad6432L)).super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).parents("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x120c2de2559L, "order", new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240219919705"))).properties("order").alias("linked_hashmap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240216724530")).create();
  }
  private static ConceptDescriptor createDescriptorForLinkedHashSetCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.LinkedHashSetCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c2b5bbfdL)).super_("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L)).parents("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L)).alias("linked_hashset", "create new linked hashset").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240217271293")).create();
  }
  private static ConceptDescriptor createDescriptorForLinkedListCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.LinkedListCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11daf69a138L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).alias("linkedlist", "create new linked list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227008614712")).create();
  }
  private static ConceptDescriptor createDescriptorForLinkedListType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.LinkedListType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a890137e9L)).super_("jetbrains.mps.baseLanguage.collections.structure.ListType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL)).parents("jetbrains.mps.baseLanguage.collections.structure.ListType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL)).alias("linkedlist", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3358009230509553641")).create();
  }
  private static ConceptDescriptor createDescriptorForListCreatorWithInit() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e39306c2eL)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).alias("arraylist", "create new array list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1160600644654")).create();
  }
  private static ConceptDescriptor createDescriptorForListElementAccessExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ListElementAccessExpression", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6213c318L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d621460b5L, "list", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225711182005")), new ConceptDescriptorBuilder.Link(0x11d621484e5L, "index", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225711191269"))).children(new String[]{"list", "index"}, new boolean[]{false, false}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225711141656")).create();
  }
  private static ConceptDescriptor createDescriptorForListType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ListType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x10c25fe95c5L, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151688676805"))).children(new String[]{"elementType"}, new boolean[]{false}).alias("list", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151688443754")).create();
  }
  private static ConceptDescriptor createDescriptorForMapAsSequenceVarRef() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapAsSequenceVarRef", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x59f2b8b299d62ef0L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x59f2b8b299d6e72bL, "original", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6481445890964252459"))).children(new String[]{"original"}, new boolean[]{false}).staticScope(StaticScope.ROOT).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6481445890964205296")).create();
  }
  private static ConceptDescriptor createDescriptorForMapClearOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapClearOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11962b7f964L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).alias("clear", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1208542034276")).create();
  }
  private static ConceptDescriptor createDescriptorForMapElement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapElement", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116ea555a25L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x116ea576ac7L, "map", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197932505799")), new ConceptDescriptorBuilder.Link(0x116ea57b648L, "key", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197932525128"))).children(new String[]{"map", "key"}, new boolean[]{false, false}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197932370469")).create();
  }
  private static ConceptDescriptor createDescriptorForMapEntry() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapEntry", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f249550fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118f24b00ccL, "key", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655844556")), new ConceptDescriptorBuilder.Link(0x118f24b224fL, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655853135"))).children(new String[]{"key", "value"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655735055")).create();
  }
  private static ConceptDescriptor createDescriptorForMapInitializer() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapInitializer", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f2481867L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118f24be244L, "entries", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f249550fL), true, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655902276"))).children(new String[]{"entries"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1206655653991")).create();
  }
  private static ConceptDescriptor createDescriptorForMapOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201225890326")).create();
  }
  private static ConceptDescriptor createDescriptorForMapOperationExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapOperationExpression", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117ae10e4d9L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x117ae11d026L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201216278566")), new ConceptDescriptorBuilder.Link(0x117aea4e016L, "mapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201225916438"))).children(new String[]{"expression", "mapOperation"}, new boolean[]{false, false}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201216218329")).create();
  }
  private static ConceptDescriptor createDescriptorForMapRemoveOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapRemoveOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11914b836a4L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11914b92bc5L, "key", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1207233489861"))).children(new String[]{"key"}, new boolean[]{false}).alias("removeKey", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1207233427108")).create();
  }
  private static ConceptDescriptor createDescriptorForMapType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MapType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116db7e6bcbL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x116db7f62a8L, "keyType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197683466920")), new ConceptDescriptorBuilder.Link(0x116db7f8516L, "valueType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197683475734"))).children(new String[]{"keyType", "valueType"}, new boolean[]{false, false}).alias("map", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1197683403723")).create();
  }
  private static ConceptDescriptor createDescriptorForMappingType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MappingType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120cf0ddd15L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120cf0e3925L, "keyType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240424397093")), new ConceptDescriptorBuilder.Link(0x120cf0e4f44L, "valueType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240424402756"))).children(new String[]{"keyType", "valueType"}, new boolean[]{false, false}).alias("mapping", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240424373525")).create();
  }
  private static ConceptDescriptor createDescriptorForMappingsSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MappingsSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e8af3ac1L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).alias("mappings", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240854379201")).create();
  }
  private static ConceptDescriptor createDescriptorForMoveNextOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MoveNextOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f0773d2L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L)).alias("moveNext", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1237471163346")).create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachPair() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MultiForEachPair", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea15L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7d7db8f4181fea42L, "variable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099778")), new ConceptDescriptorBuilder.Link(0x7d7db8f4181fea17L, "input", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099735"))).children(new String[]{"variable", "input"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099733")).create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MultiForEachStatement", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fe9f2L)).super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).parents("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7d7db8f4181fea16L, "forEach", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea15L), false, true, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099734"))).children(new String[]{"forEach"}, new boolean[]{true}).alias("foreach", "foreach loop over multiple variables").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099698")).create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachVariable() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MultiForEachVariable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.baseLanguage.structure.IVariableDeclaration").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "9042586985346099736")).create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachVariableReference() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.MultiForEachVariableReference", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x731a0dad81895f16L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x731a0dad818984f5L, "variable", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L), false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "8293956702609966325"))).references("variable").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "8293956702609956630")).create();
  }
  private static ConceptDescriptor createDescriptorForNoArgumentsSequenceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "540871147943782829")).create();
  }
  private static ConceptDescriptor createDescriptorForOfTypeOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.OfTypeOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3fffa24b05a04797L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3fffa24b05a047a8L, "requestedType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4611582986551314344"))).children(new String[]{"requestedType"}, new boolean[]{false}).alias("ofType", "select elements of the specified type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4611582986551314327")).create();
  }
  private static ConceptDescriptor createDescriptorForPageOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PageOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11108717200L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1110871a70cL, "fromElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172667737868")), new ConceptDescriptorBuilder.Link(0x1110871d001L, "toElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172667748353"))).children(new String[]{"fromElement", "toElement"}, new boolean[]{false, false}).alias("page", "select a subsequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172667724288")).create();
  }
  private static ConceptDescriptor createDescriptorForPeekOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PeekOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x50486375c8941225L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("peek", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5784983078884872741")).create();
  }
  private static ConceptDescriptor createDescriptorForPopOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PopOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a88f42ff5L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("pop", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3358009230508699637")).create();
  }
  private static ConceptDescriptor createDescriptorForPriorityQueueCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PriorityQueueCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a89009f6cL)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L)).alias("priority_queue", "create new priority queue").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3358009230509514604")).create();
  }
  private static ConceptDescriptor createDescriptorForPushOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PushOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a88f4311cL)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("push", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3358009230508699932")).create();
  }
  private static ConceptDescriptor createDescriptorForPutAllOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.PutAllOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120ebcea0f9L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120ebd0f530L, "map", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240906921264"))).children(new String[]{"map"}, new boolean[]{false}).alias("putAll", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240906768633")).create();
  }
  private static ConceptDescriptor createDescriptorForQueueType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.QueueType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf74491L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).alias("queue", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5686963296372475025")).create();
  }
  private static ConceptDescriptor createDescriptorForReduceLeftOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ReduceLeftOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x152001066783f27aL)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("reduceLeft", "perform left reduction").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069359738")).create();
  }
  private static ConceptDescriptor createDescriptorForReduceRightOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ReduceRightOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x15200106678481b3L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("reduceRight", "perform right reduction").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1522217801069396403")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAllElementsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveAllElementsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11154a8aed3L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("removeAll", "remove all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1173946412755")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAllSetElementsOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveAllSetElementsOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d96b14ae4L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d96b1a226L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226593903142"))).children(new String[]{"argument"}, new boolean[]{false}).alias("removeAll", "remove all elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226593880804")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAtElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveAtElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db038dd8cL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11db03a0e95L, "index", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227022274197"))).children(new String[]{"index"}, new boolean[]{false}).alias("removeAt", "remove element at an index").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227022196108")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10fcd477695L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("remove", "remove an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1167380149909")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveFirstElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveFirstElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0742a49L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL)).alias("removeFirst", "remove first element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227026082377")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveLastElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveLastElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db074584bL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToDeque").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL)).alias("removeLast", "remove last element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1227026094155")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120becad360L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("remove", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240151544672")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveSetElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveSetElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d968cae32L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d968cfea4L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226591501988"))).children(new String[]{"argument"}, new boolean[]{false}).alias("remove", "remove an element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226591481394")).create();
  }
  private static ConceptDescriptor createDescriptorForRemoveWhereOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.RemoveWhereOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2a691766608266ccL)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IStackOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.IDequeOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToStack", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToQueue").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL)).alias("removeWhere", "filter out the matched elements").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "3055999550620853964")).create();
  }
  private static ConceptDescriptor createDescriptorForReverseOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ReverseOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111c5da033eL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).alias("reverse", "create a list with elements in reverse order").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1175845471038")).create();
  }
  private static ConceptDescriptor createDescriptorForSelectOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SelectOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117e4785fdeL)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("select", "transform each element to another type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1202128969694")).create();
  }
  private static ConceptDescriptor createDescriptorForSequenceCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SequenceCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d14c97b16L)).super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d14c9ea5eL, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1224414456414")), new ConceptDescriptorBuilder.Link(0x11d14ca1317L, "initializer", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1224414466839"))).children(new String[]{"elementType", "initializer"}, new boolean[]{false, false}).alias("sequence", "create new sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1224414427926")).create();
  }
  private static ConceptDescriptor createDescriptorForSequenceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151701983961")).create();
  }
  private static ConceptDescriptor createDescriptorForSequenceType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SequenceType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c260e9444L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x10c260ee40eL, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151689745422"))).children(new String[]{"elementType"}, new boolean[]{false}).alias("sequence", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151689724996")).create();
  }
  private static ConceptDescriptor createDescriptorForSetElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SetElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d5e2fc7c1L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d5e302908L, "index", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225645893896")), new ConceptDescriptorBuilder.Link(0x11d5e30290aL, "element", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225645893898"))).children(new String[]{"index", "element"}, new boolean[]{false, false}).alias("set", "set an element at an index").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1225645868993")).create();
  }
  private static ConceptDescriptor createDescriptorForSetType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SetType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d91cc51e3L, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226511765987"))).children(new String[]{"elementType"}, new boolean[]{false}).alias("set", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1226511727824")).create();
  }
  private static ConceptDescriptor createDescriptorForSingleArgumentSequenceOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7818f71827244b6L, "argument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "540871147943773366"))).children(new String[]{"argument"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "540871147943773365")).create();
  }
  private static ConceptDescriptor createDescriptorForSingletonSequenceCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SingletonSequenceCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fade5d82aL)).super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11fade6759fL, "elementType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1235573175711")), new ConceptDescriptorBuilder.Link(0x11fade6a3c0L, "singletonValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1235573187520"))).children(new String[]{"elementType", "singletonValue"}, new boolean[]{false, false}).alias("singleton", "create singleton sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1235573135402")).create();
  }
  private static ConceptDescriptor createDescriptorForSkipOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SkipOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111076c0538L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11107e408a4L, "elementsToSkip", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172658456740"))).children(new String[]{"elementsToSkip"}, new boolean[]{false}).alias("skip", "exclude elements from the beginning").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172650591544")).create();
  }
  private static ConceptDescriptor createDescriptorForSkipStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SkipStatement", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d16b423daL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("skip", "skip to next element in input sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1224446583770")).create();
  }
  private static ConceptDescriptor createDescriptorForSmartClosureParameterDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118374464e4L)).super_("jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x118276b7086L)).parents("jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x118276b7086L)).alias("~ <name>", "smart closure parameter").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1203518072036")).create();
  }
  private static ConceptDescriptor createDescriptorForSortDirection() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortDirection", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11257567b07L)).super_("jetbrains.mps.baseLanguage.structure.BooleanConstant").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L)).parents("jetbrains.mps.baseLanguage.structure.BooleanConstant", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1178286324487")).create();
  }
  private static ConceptDescriptor createDescriptorForSortOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b81cc8f6L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118b81e3c02L, "ascending", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205679832066"))).children(new String[]{"ascending"}, new boolean[]{false}).alias("sortBy", "sort by key").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205679737078")).create();
  }
  private static ConceptDescriptor createDescriptorForSortedMapOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).parents("jetbrains.mps.baseLanguage.collections.structure.MapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240239309184")).create();
  }
  private static ConceptDescriptor createDescriptorForSortedMapType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortedMapType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4067207L)).super_("jetbrains.mps.baseLanguage.collections.structure.MapType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116db7e6bcbL)).parents("jetbrains.mps.baseLanguage.collections.structure.MapType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116db7e6bcbL)).alias("sorted_map", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240239337991")).create();
  }
  private static ConceptDescriptor createDescriptorForSortedSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251169236")).create();
  }
  private static ConceptDescriptor createDescriptorForSortedSetType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SortedSetType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c482dd1aL)).super_("jetbrains.mps.baseLanguage.collections.structure.SetType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L)).parents("jetbrains.mps.baseLanguage.collections.structure.SetType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L)).alias("sorted_set", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240247491866")).create();
  }
  private static ConceptDescriptor createDescriptorForStackType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.StackType", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46ee5eecL)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).alias("stack", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "6801639034384703212")).create();
  }
  private static ConceptDescriptor createDescriptorForStopStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.StopStatement", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d17046bf4L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("stop", "stop iterating input sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1224451845108")).create();
  }
  private static ConceptDescriptor createDescriptorForSubListOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SubListOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4e2f4f8785270237L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4e2f4f8785270248L, "fromIndex", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5633809102336885320")), new ConceptDescriptorBuilder.Link(0x4e2f4f8785270249L, "upToIndex", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5633809102336885321"))).children(new String[]{"fromIndex", "upToIndex"}, new boolean[]{false, false}).alias("subList", "sub list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5633809102336885303")).create();
  }
  private static ConceptDescriptor createDescriptorForSubMapOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SubMapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4139de2L)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c414e7c9L, "fromKey", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240240285641")), new ConceptDescriptorBuilder.Link(0x120c414ffdaL, "toKey", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240240291802"))).children(new String[]{"fromKey", "toKey"}, new boolean[]{false, false}).alias("subMap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240240201186")).create();
  }
  private static ConceptDescriptor createDescriptorForSubSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.SubSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4c28b15L)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c4c2a92aL, "fromElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251672874")), new ConceptDescriptorBuilder.Link(0x120c4c2c53bL, "toElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251680059"))).children(new String[]{"fromElement", "toElement"}, new boolean[]{false, false}).alias("subSet", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251665173")).create();
  }
  private static ConceptDescriptor createDescriptorForTailListOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TailListOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x489c7f2006b0588eL)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToList").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x489c7f2006b05890L, "fromIndex", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5232196642625575056"))).children(new String[]{"fromIndex"}, new boolean[]{false}).alias("tailList", "tail list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5232196642625575054")).create();
  }
  private static ConceptDescriptor createDescriptorForTailMapOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TailMapOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4127c90L)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c412c56bL, "fromKey", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240240145771"))).children(new String[]{"fromKey"}, new boolean[]{false}).alias("tailMap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240240127120")).create();
  }
  private static ConceptDescriptor createDescriptorForTailOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TailOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc844e46L)).super_("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L)).parents("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L)).alias("tail", "include elements at the end").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1205753630278")).create();
  }
  private static ConceptDescriptor createDescriptorForTailSetOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TailSetOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4c1050eL)).super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).parents("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x120c4c1332bL, "fromElement", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251577131"))).children(new String[]{"fromElement"}, new boolean[]{false}).alias("tailSet", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240251565326")).create();
  }
  private static ConceptDescriptor createDescriptorForTakeOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TakeOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111083dd9b7L)).super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x111083e4b4eL, "elementsToTake", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172664372046"))).children(new String[]{"elementsToTake"}, new boolean[]{false}).alias("take", "include elements at the beginning").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1172664342967")).create();
  }
  private static ConceptDescriptor createDescriptorForTestAddElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TestAddElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4f19baa8d7926e59L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("testAdd", "add an element and test the outcome").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "5699792037748043353")).create();
  }
  private static ConceptDescriptor createDescriptorForTestRemoveElementOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TestRemoveElementOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3888a033868c4fa5L)).super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L)).parents("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IApplicableToCollection").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL), MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L)).alias("testRemove", "remove an element and test the outcome").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "4073682006117732261")).create();
  }
  private static ConceptDescriptor createDescriptorForToArrayOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ToArrayOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x113e55393bdL)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("toArray", "convert to an array").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1184963466173")).create();
  }
  private static ConceptDescriptor createDescriptorForToIteratorOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ToIteratorOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11914e10330L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("iterator", "convert to an iterator").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1207236100912")).create();
  }
  private static ConceptDescriptor createDescriptorForToListOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ToListOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26cea325L)).super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).parents("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL)).alias("toList", "convert to a list").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1151702311717")).create();
  }
  private static ConceptDescriptor createDescriptorForTranslateOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TranslateOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117d06362dcL)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("selectMany", "transform each element to a sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1201792049884")).create();
  }
  private static ConceptDescriptor createDescriptorForTreeMapCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TreeMapCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c408d37aL)).super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).parents("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL)).alias("treemap", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240239494010")).create();
  }
  private static ConceptDescriptor createDescriptorForTreeSetCreator() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.TreeSetCreator", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4838d33L)).super_("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L)).parents("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1f622b3701eae8beL, "comparator", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "2261417478148778174"))).children(new String[]{"comparator"}, new boolean[]{false}).alias("treeset", "create new treeset").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240247536947")).create();
  }
  private static ConceptDescriptor createDescriptorForUnionOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.UnionOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11204e5336dL)).super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).parents("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L)).alias("union", "produce an union").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1176903168877")).create();
  }
  private static ConceptDescriptor createDescriptorForValueAccessOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ValueAccessOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ec6b83L)).super_("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL)).parents("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL)).alias("value", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1240824834947")).create();
  }
  private static ConceptDescriptor createDescriptorForVisitAllOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.VisitAllOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188e700c31L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("forEach", "execute for each element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1204980550705")).create();
  }
  private static ConceptDescriptor createDescriptorForWhereOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.WhereOperation", MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117e3fd45c4L)).super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").version(1).super_(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parentIds(MetaIdFactory.conceptId(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL)).alias("where", "include only matched element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)", "1202120902084")).create();
  }
}
