package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractContainerCreator = createDescriptorForAbstractContainerCreator();
  /*package*/ final ConceptDescriptor myConceptAbstractContainerType = createDescriptorForAbstractContainerType();
  /*package*/ final ConceptDescriptor myConceptAbstractEnumeratorOperation = createDescriptorForAbstractEnumeratorOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractIteratorOperation = createDescriptorForAbstractIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractMappingOperation = createDescriptorForAbstractMappingOperation();
  /*package*/ final ConceptDescriptor myConceptAbstractSetOperation = createDescriptorForAbstractSetOperation();
  /*package*/ final ConceptDescriptor myConceptAddAllElementsOperation = createDescriptorForAddAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptAddAllSetElementsOperation = createDescriptorForAddAllSetElementsOperation();
  /*package*/ final ConceptDescriptor myConceptAddElementOperation = createDescriptorForAddElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddFirstElementOperation = createDescriptorForAddFirstElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddLastElementOperation = createDescriptorForAddLastElementOperation();
  /*package*/ final ConceptDescriptor myConceptAddSetElementOperation = createDescriptorForAddSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptAllConstant = createDescriptorForAllConstant();
  /*package*/ final ConceptDescriptor myConceptAllOperation = createDescriptorForAllOperation();
  /*package*/ final ConceptDescriptor myConceptAlsoSortOperation = createDescriptorForAlsoSortOperation();
  /*package*/ final ConceptDescriptor myConceptAnyOperation = createDescriptorForAnyOperation();
  /*package*/ final ConceptDescriptor myConceptAsSequenceOperation = createDescriptorForAsSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptAsSynchronizedOperation = createDescriptorForAsSynchronizedOperation();
  /*package*/ final ConceptDescriptor myConceptAsUnmodifiableOperation = createDescriptorForAsUnmodifiableOperation();
  /*package*/ final ConceptDescriptor myConceptBinaryOperation = createDescriptorForBinaryOperation();
  /*package*/ final ConceptDescriptor myConceptChunkOperation = createDescriptorForChunkOperation();
  /*package*/ final ConceptDescriptor myConceptClearAllElementsOperation = createDescriptorForClearAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptClearSetOperation = createDescriptorForClearSetOperation();
  /*package*/ final ConceptDescriptor myConceptCollectionType = createDescriptorForCollectionType();
  /*package*/ final ConceptDescriptor myConceptComparatorSortOperation = createDescriptorForComparatorSortOperation();
  /*package*/ final ConceptDescriptor myConceptConcatOperation = createDescriptorForConcatOperation();
  /*package*/ final ConceptDescriptor myConceptContainerIteratorType = createDescriptorForContainerIteratorType();
  /*package*/ final ConceptDescriptor myConceptContainsAllOperation = createDescriptorForContainsAllOperation();
  /*package*/ final ConceptDescriptor myConceptContainsKeyOperation = createDescriptorForContainsKeyOperation();
  /*package*/ final ConceptDescriptor myConceptContainsOperation = createDescriptorForContainsOperation();
  /*package*/ final ConceptDescriptor myConceptContainsValueOperation = createDescriptorForContainsValueOperation();
  /*package*/ final ConceptDescriptor myConceptCustomContainerCreator = createDescriptorForCustomContainerCreator();
  /*package*/ final ConceptDescriptor myConceptCustomContainerDeclaration = createDescriptorForCustomContainerDeclaration();
  /*package*/ final ConceptDescriptor myConceptCustomContainers = createDescriptorForCustomContainers();
  /*package*/ final ConceptDescriptor myConceptCustomMapCreator = createDescriptorForCustomMapCreator();
  /*package*/ final ConceptDescriptor myConceptCutOperation = createDescriptorForCutOperation();
  /*package*/ final ConceptDescriptor myConceptDequeType = createDescriptorForDequeType();
  /*package*/ final ConceptDescriptor myConceptDisjunctOperation = createDescriptorForDisjunctOperation();
  /*package*/ final ConceptDescriptor myConceptDistinctOperation = createDescriptorForDistinctOperation();
  /*package*/ final ConceptDescriptor myConceptDowncastExpression = createDescriptorForDowncastExpression();
  /*package*/ final ConceptDescriptor myConceptEnumeratorType = createDescriptorForEnumeratorType();
  /*package*/ final ConceptDescriptor myConceptExcludeOperation = createDescriptorForExcludeOperation();
  /*package*/ final ConceptDescriptor myConceptFindFirstOperation = createDescriptorForFindFirstOperation();
  /*package*/ final ConceptDescriptor myConceptFindLastOperation = createDescriptorForFindLastOperation();
  /*package*/ final ConceptDescriptor myConceptFoldLeftOperation = createDescriptorForFoldLeftOperation();
  /*package*/ final ConceptDescriptor myConceptFoldRightOperation = createDescriptorForFoldRightOperation();
  /*package*/ final ConceptDescriptor myConceptForEachStatement = createDescriptorForForEachStatement();
  /*package*/ final ConceptDescriptor myConceptForEachVariable = createDescriptorForForEachVariable();
  /*package*/ final ConceptDescriptor myConceptForEachVariableReference = createDescriptorForForEachVariableReference();
  /*package*/ final ConceptDescriptor myConceptGetCurrentOperation = createDescriptorForGetCurrentOperation();
  /*package*/ final ConceptDescriptor myConceptGetElementOperation = createDescriptorForGetElementOperation();
  /*package*/ final ConceptDescriptor myConceptGetEnumeratorOperation = createDescriptorForGetEnumeratorOperation();
  /*package*/ final ConceptDescriptor myConceptGetFirstOperation = createDescriptorForGetFirstOperation();
  /*package*/ final ConceptDescriptor myConceptGetIndexOfOperation = createDescriptorForGetIndexOfOperation();
  /*package*/ final ConceptDescriptor myConceptGetIteratorOperation = createDescriptorForGetIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptGetKeysOperation = createDescriptorForGetKeysOperation();
  /*package*/ final ConceptDescriptor myConceptGetLastIndexOfOperation = createDescriptorForGetLastIndexOfOperation();
  /*package*/ final ConceptDescriptor myConceptGetLastOperation = createDescriptorForGetLastOperation();
  /*package*/ final ConceptDescriptor myConceptGetNextOperation = createDescriptorForGetNextOperation();
  /*package*/ final ConceptDescriptor myConceptGetSizeOperation = createDescriptorForGetSizeOperation();
  /*package*/ final ConceptDescriptor myConceptGetValuesOperation = createDescriptorForGetValuesOperation();
  /*package*/ final ConceptDescriptor myConceptHasNextOperation = createDescriptorForHasNextOperation();
  /*package*/ final ConceptDescriptor myConceptHashMapCreator = createDescriptorForHashMapCreator();
  /*package*/ final ConceptDescriptor myConceptHashSetCreator = createDescriptorForHashSetCreator();
  /*package*/ final ConceptDescriptor myConceptHeadListOperation = createDescriptorForHeadListOperation();
  /*package*/ final ConceptDescriptor myConceptHeadMapOperation = createDescriptorForHeadMapOperation();
  /*package*/ final ConceptDescriptor myConceptHeadSetOperation = createDescriptorForHeadSetOperation();
  /*package*/ final ConceptDescriptor myConceptIApplicableToCollection = createDescriptorForIApplicableToCollection();
  /*package*/ final ConceptDescriptor myConceptIApplicableToDeque = createDescriptorForIApplicableToDeque();
  /*package*/ final ConceptDescriptor myConceptIApplicableToList = createDescriptorForIApplicableToList();
  /*package*/ final ConceptDescriptor myConceptIApplicableToNothing = createDescriptorForIApplicableToNothing();
  /*package*/ final ConceptDescriptor myConceptIApplicableToQueue = createDescriptorForIApplicableToQueue();
  /*package*/ final ConceptDescriptor myConceptIApplicableToStack = createDescriptorForIApplicableToStack();
  /*package*/ final ConceptDescriptor myConceptICollectionOperation = createDescriptorForICollectionOperation();
  /*package*/ final ConceptDescriptor myConceptIContainerOperation = createDescriptorForIContainerOperation();
  /*package*/ final ConceptDescriptor myConceptIDequeOperation = createDescriptorForIDequeOperation();
  /*package*/ final ConceptDescriptor myConceptIListOperation = createDescriptorForIListOperation();
  /*package*/ final ConceptDescriptor myConceptIQueueOperation = createDescriptorForIQueueOperation();
  /*package*/ final ConceptDescriptor myConceptIStackOperation = createDescriptorForIStackOperation();
  /*package*/ final ConceptDescriptor myConceptInsertElementOperation = createDescriptorForInsertElementOperation();
  /*package*/ final ConceptDescriptor myConceptInternalSequenceOperation = createDescriptorForInternalSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptIntersectOperation = createDescriptorForIntersectOperation();
  /*package*/ final ConceptDescriptor myConceptIsEmptyOperation = createDescriptorForIsEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptIsNotEmptyOperation = createDescriptorForIsNotEmptyOperation();
  /*package*/ final ConceptDescriptor myConceptIteratorType = createDescriptorForIteratorType();
  /*package*/ final ConceptDescriptor myConceptJoinOperation = createDescriptorForJoinOperation();
  /*package*/ final ConceptDescriptor myConceptKeyAccessOperation = createDescriptorForKeyAccessOperation();
  /*package*/ final ConceptDescriptor myConceptLinkedHashMapCreator = createDescriptorForLinkedHashMapCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedHashSetCreator = createDescriptorForLinkedHashSetCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedListCreator = createDescriptorForLinkedListCreator();
  /*package*/ final ConceptDescriptor myConceptLinkedListType = createDescriptorForLinkedListType();
  /*package*/ final ConceptDescriptor myConceptListCreatorWithInit = createDescriptorForListCreatorWithInit();
  /*package*/ final ConceptDescriptor myConceptListElementAccessExpression = createDescriptorForListElementAccessExpression();
  /*package*/ final ConceptDescriptor myConceptListType = createDescriptorForListType();
  /*package*/ final ConceptDescriptor myConceptMapAsSequenceVarRef = createDescriptorForMapAsSequenceVarRef();
  /*package*/ final ConceptDescriptor myConceptMapClearOperation = createDescriptorForMapClearOperation();
  /*package*/ final ConceptDescriptor myConceptMapElement = createDescriptorForMapElement();
  /*package*/ final ConceptDescriptor myConceptMapEntry = createDescriptorForMapEntry();
  /*package*/ final ConceptDescriptor myConceptMapInitializer = createDescriptorForMapInitializer();
  /*package*/ final ConceptDescriptor myConceptMapOperation = createDescriptorForMapOperation();
  /*package*/ final ConceptDescriptor myConceptMapOperationExpression = createDescriptorForMapOperationExpression();
  /*package*/ final ConceptDescriptor myConceptMapRemoveOperation = createDescriptorForMapRemoveOperation();
  /*package*/ final ConceptDescriptor myConceptMapType = createDescriptorForMapType();
  /*package*/ final ConceptDescriptor myConceptMappingType = createDescriptorForMappingType();
  /*package*/ final ConceptDescriptor myConceptMappingsSetOperation = createDescriptorForMappingsSetOperation();
  /*package*/ final ConceptDescriptor myConceptMoveNextOperation = createDescriptorForMoveNextOperation();
  /*package*/ final ConceptDescriptor myConceptMultiForEachPair = createDescriptorForMultiForEachPair();
  /*package*/ final ConceptDescriptor myConceptMultiForEachStatement = createDescriptorForMultiForEachStatement();
  /*package*/ final ConceptDescriptor myConceptMultiForEachVariable = createDescriptorForMultiForEachVariable();
  /*package*/ final ConceptDescriptor myConceptMultiForEachVariableReference = createDescriptorForMultiForEachVariableReference();
  /*package*/ final ConceptDescriptor myConceptNoArgumentsSequenceOperation = createDescriptorForNoArgumentsSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptOfTypeOperation = createDescriptorForOfTypeOperation();
  /*package*/ final ConceptDescriptor myConceptPageOperation = createDescriptorForPageOperation();
  /*package*/ final ConceptDescriptor myConceptPeekOperation = createDescriptorForPeekOperation();
  /*package*/ final ConceptDescriptor myConceptPopOperation = createDescriptorForPopOperation();
  /*package*/ final ConceptDescriptor myConceptPriorityQueueCreator = createDescriptorForPriorityQueueCreator();
  /*package*/ final ConceptDescriptor myConceptPushOperation = createDescriptorForPushOperation();
  /*package*/ final ConceptDescriptor myConceptPutAllOperation = createDescriptorForPutAllOperation();
  /*package*/ final ConceptDescriptor myConceptQueueType = createDescriptorForQueueType();
  /*package*/ final ConceptDescriptor myConceptReduceLeftOperation = createDescriptorForReduceLeftOperation();
  /*package*/ final ConceptDescriptor myConceptReduceRightOperation = createDescriptorForReduceRightOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAllElementsOperation = createDescriptorForRemoveAllElementsOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAllSetElementsOperation = createDescriptorForRemoveAllSetElementsOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveAtElementOperation = createDescriptorForRemoveAtElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveElementOperation = createDescriptorForRemoveElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveFirstElementOperation = createDescriptorForRemoveFirstElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveLastElementOperation = createDescriptorForRemoveLastElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveOperation = createDescriptorForRemoveOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveSetElementOperation = createDescriptorForRemoveSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptRemoveWhereOperation = createDescriptorForRemoveWhereOperation();
  /*package*/ final ConceptDescriptor myConceptReverseOperation = createDescriptorForReverseOperation();
  /*package*/ final ConceptDescriptor myConceptSelectNotNullOperation = createDescriptorForSelectNotNullOperation();
  /*package*/ final ConceptDescriptor myConceptSelectOperation = createDescriptorForSelectOperation();
  /*package*/ final ConceptDescriptor myConceptSequenceCreator = createDescriptorForSequenceCreator();
  /*package*/ final ConceptDescriptor myConceptSequenceOperation = createDescriptorForSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptSequenceType = createDescriptorForSequenceType();
  /*package*/ final ConceptDescriptor myConceptSetElementOperation = createDescriptorForSetElementOperation();
  /*package*/ final ConceptDescriptor myConceptSetType = createDescriptorForSetType();
  /*package*/ final ConceptDescriptor myConceptSingleArgumentSequenceOperation = createDescriptorForSingleArgumentSequenceOperation();
  /*package*/ final ConceptDescriptor myConceptSingletonSequenceCreator = createDescriptorForSingletonSequenceCreator();
  /*package*/ final ConceptDescriptor myConceptSkipOperation = createDescriptorForSkipOperation();
  /*package*/ final ConceptDescriptor myConceptSkipStatement = createDescriptorForSkipStatement();
  /*package*/ final ConceptDescriptor myConceptSmartClosureParameterDeclaration = createDescriptorForSmartClosureParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptSortDirection = createDescriptorForSortDirection();
  /*package*/ final ConceptDescriptor myConceptSortOperation = createDescriptorForSortOperation();
  /*package*/ final ConceptDescriptor myConceptSortedMapOperation = createDescriptorForSortedMapOperation();
  /*package*/ final ConceptDescriptor myConceptSortedMapType = createDescriptorForSortedMapType();
  /*package*/ final ConceptDescriptor myConceptSortedSetOperation = createDescriptorForSortedSetOperation();
  /*package*/ final ConceptDescriptor myConceptSortedSetType = createDescriptorForSortedSetType();
  /*package*/ final ConceptDescriptor myConceptStackType = createDescriptorForStackType();
  /*package*/ final ConceptDescriptor myConceptStopStatement = createDescriptorForStopStatement();
  /*package*/ final ConceptDescriptor myConceptSubListOperation = createDescriptorForSubListOperation();
  /*package*/ final ConceptDescriptor myConceptSubMapOperation = createDescriptorForSubMapOperation();
  /*package*/ final ConceptDescriptor myConceptSubSetOperation = createDescriptorForSubSetOperation();
  /*package*/ final ConceptDescriptor myConceptTailListOperation = createDescriptorForTailListOperation();
  /*package*/ final ConceptDescriptor myConceptTailMapOperation = createDescriptorForTailMapOperation();
  /*package*/ final ConceptDescriptor myConceptTailOperation = createDescriptorForTailOperation();
  /*package*/ final ConceptDescriptor myConceptTailSetOperation = createDescriptorForTailSetOperation();
  /*package*/ final ConceptDescriptor myConceptTakeOperation = createDescriptorForTakeOperation();
  /*package*/ final ConceptDescriptor myConceptTestAddElementOperation = createDescriptorForTestAddElementOperation();
  /*package*/ final ConceptDescriptor myConceptTestRemoveElementOperation = createDescriptorForTestRemoveElementOperation();
  /*package*/ final ConceptDescriptor myConceptToArrayOperation = createDescriptorForToArrayOperation();
  /*package*/ final ConceptDescriptor myConceptToIteratorOperation = createDescriptorForToIteratorOperation();
  /*package*/ final ConceptDescriptor myConceptToListOperation = createDescriptorForToListOperation();
  /*package*/ final ConceptDescriptor myConceptTranslateOperation = createDescriptorForTranslateOperation();
  /*package*/ final ConceptDescriptor myConceptTreeMapCreator = createDescriptorForTreeMapCreator();
  /*package*/ final ConceptDescriptor myConceptTreeSetCreator = createDescriptorForTreeSetCreator();
  /*package*/ final ConceptDescriptor myConceptUnionOperation = createDescriptorForUnionOperation();
  /*package*/ final ConceptDescriptor myConceptValueAccessOperation = createDescriptorForValueAccessOperation();
  /*package*/ final ConceptDescriptor myConceptVisitAllOperation = createDescriptorForVisitAllOperation();
  /*package*/ final ConceptDescriptor myConceptWhereOperation = createDescriptorForWhereOperation();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractContainerCreator, myConceptAbstractContainerType, myConceptAbstractEnumeratorOperation, myConceptAbstractIteratorOperation, myConceptAbstractMappingOperation, myConceptAbstractSetOperation, myConceptAddAllElementsOperation, myConceptAddAllSetElementsOperation, myConceptAddElementOperation, myConceptAddFirstElementOperation, myConceptAddLastElementOperation, myConceptAddSetElementOperation, myConceptAllConstant, myConceptAllOperation, myConceptAlsoSortOperation, myConceptAnyOperation, myConceptAsSequenceOperation, myConceptAsSynchronizedOperation, myConceptAsUnmodifiableOperation, myConceptBinaryOperation, myConceptChunkOperation, myConceptClearAllElementsOperation, myConceptClearSetOperation, myConceptCollectionType, myConceptComparatorSortOperation, myConceptConcatOperation, myConceptContainerIteratorType, myConceptContainsAllOperation, myConceptContainsKeyOperation, myConceptContainsOperation, myConceptContainsValueOperation, myConceptCustomContainerCreator, myConceptCustomContainerDeclaration, myConceptCustomContainers, myConceptCustomMapCreator, myConceptCutOperation, myConceptDequeType, myConceptDisjunctOperation, myConceptDistinctOperation, myConceptDowncastExpression, myConceptEnumeratorType, myConceptExcludeOperation, myConceptFindFirstOperation, myConceptFindLastOperation, myConceptFoldLeftOperation, myConceptFoldRightOperation, myConceptForEachStatement, myConceptForEachVariable, myConceptForEachVariableReference, myConceptGetCurrentOperation, myConceptGetElementOperation, myConceptGetEnumeratorOperation, myConceptGetFirstOperation, myConceptGetIndexOfOperation, myConceptGetIteratorOperation, myConceptGetKeysOperation, myConceptGetLastIndexOfOperation, myConceptGetLastOperation, myConceptGetNextOperation, myConceptGetSizeOperation, myConceptGetValuesOperation, myConceptHasNextOperation, myConceptHashMapCreator, myConceptHashSetCreator, myConceptHeadListOperation, myConceptHeadMapOperation, myConceptHeadSetOperation, myConceptIApplicableToCollection, myConceptIApplicableToDeque, myConceptIApplicableToList, myConceptIApplicableToNothing, myConceptIApplicableToQueue, myConceptIApplicableToStack, myConceptICollectionOperation, myConceptIContainerOperation, myConceptIDequeOperation, myConceptIListOperation, myConceptIQueueOperation, myConceptIStackOperation, myConceptInsertElementOperation, myConceptInternalSequenceOperation, myConceptIntersectOperation, myConceptIsEmptyOperation, myConceptIsNotEmptyOperation, myConceptIteratorType, myConceptJoinOperation, myConceptKeyAccessOperation, myConceptLinkedHashMapCreator, myConceptLinkedHashSetCreator, myConceptLinkedListCreator, myConceptLinkedListType, myConceptListCreatorWithInit, myConceptListElementAccessExpression, myConceptListType, myConceptMapAsSequenceVarRef, myConceptMapClearOperation, myConceptMapElement, myConceptMapEntry, myConceptMapInitializer, myConceptMapOperation, myConceptMapOperationExpression, myConceptMapRemoveOperation, myConceptMapType, myConceptMappingType, myConceptMappingsSetOperation, myConceptMoveNextOperation, myConceptMultiForEachPair, myConceptMultiForEachStatement, myConceptMultiForEachVariable, myConceptMultiForEachVariableReference, myConceptNoArgumentsSequenceOperation, myConceptOfTypeOperation, myConceptPageOperation, myConceptPeekOperation, myConceptPopOperation, myConceptPriorityQueueCreator, myConceptPushOperation, myConceptPutAllOperation, myConceptQueueType, myConceptReduceLeftOperation, myConceptReduceRightOperation, myConceptRemoveAllElementsOperation, myConceptRemoveAllSetElementsOperation, myConceptRemoveAtElementOperation, myConceptRemoveElementOperation, myConceptRemoveFirstElementOperation, myConceptRemoveLastElementOperation, myConceptRemoveOperation, myConceptRemoveSetElementOperation, myConceptRemoveWhereOperation, myConceptReverseOperation, myConceptSelectNotNullOperation, myConceptSelectOperation, myConceptSequenceCreator, myConceptSequenceOperation, myConceptSequenceType, myConceptSetElementOperation, myConceptSetType, myConceptSingleArgumentSequenceOperation, myConceptSingletonSequenceCreator, myConceptSkipOperation, myConceptSkipStatement, myConceptSmartClosureParameterDeclaration, myConceptSortDirection, myConceptSortOperation, myConceptSortedMapOperation, myConceptSortedMapType, myConceptSortedSetOperation, myConceptSortedSetType, myConceptStackType, myConceptStopStatement, myConceptSubListOperation, myConceptSubMapOperation, myConceptSubSetOperation, myConceptTailListOperation, myConceptTailMapOperation, myConceptTailOperation, myConceptTailSetOperation, myConceptTakeOperation, myConceptTestAddElementOperation, myConceptTestRemoveElementOperation, myConceptToArrayOperation, myConceptToIteratorOperation, myConceptToListOperation, myConceptTranslateOperation, myConceptTreeMapCreator, myConceptTreeSetCreator, myConceptUnionOperation, myConceptValueAccessOperation, myConceptVisitAllOperation, myConceptWhereOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractContainerCreator:
        return myConceptAbstractContainerCreator;
      case LanguageConceptSwitch.AbstractContainerType:
        return myConceptAbstractContainerType;
      case LanguageConceptSwitch.AbstractEnumeratorOperation:
        return myConceptAbstractEnumeratorOperation;
      case LanguageConceptSwitch.AbstractIteratorOperation:
        return myConceptAbstractIteratorOperation;
      case LanguageConceptSwitch.AbstractMappingOperation:
        return myConceptAbstractMappingOperation;
      case LanguageConceptSwitch.AbstractSetOperation:
        return myConceptAbstractSetOperation;
      case LanguageConceptSwitch.AddAllElementsOperation:
        return myConceptAddAllElementsOperation;
      case LanguageConceptSwitch.AddAllSetElementsOperation:
        return myConceptAddAllSetElementsOperation;
      case LanguageConceptSwitch.AddElementOperation:
        return myConceptAddElementOperation;
      case LanguageConceptSwitch.AddFirstElementOperation:
        return myConceptAddFirstElementOperation;
      case LanguageConceptSwitch.AddLastElementOperation:
        return myConceptAddLastElementOperation;
      case LanguageConceptSwitch.AddSetElementOperation:
        return myConceptAddSetElementOperation;
      case LanguageConceptSwitch.AllConstant:
        return myConceptAllConstant;
      case LanguageConceptSwitch.AllOperation:
        return myConceptAllOperation;
      case LanguageConceptSwitch.AlsoSortOperation:
        return myConceptAlsoSortOperation;
      case LanguageConceptSwitch.AnyOperation:
        return myConceptAnyOperation;
      case LanguageConceptSwitch.AsSequenceOperation:
        return myConceptAsSequenceOperation;
      case LanguageConceptSwitch.AsSynchronizedOperation:
        return myConceptAsSynchronizedOperation;
      case LanguageConceptSwitch.AsUnmodifiableOperation:
        return myConceptAsUnmodifiableOperation;
      case LanguageConceptSwitch.BinaryOperation:
        return myConceptBinaryOperation;
      case LanguageConceptSwitch.ChunkOperation:
        return myConceptChunkOperation;
      case LanguageConceptSwitch.ClearAllElementsOperation:
        return myConceptClearAllElementsOperation;
      case LanguageConceptSwitch.ClearSetOperation:
        return myConceptClearSetOperation;
      case LanguageConceptSwitch.CollectionType:
        return myConceptCollectionType;
      case LanguageConceptSwitch.ComparatorSortOperation:
        return myConceptComparatorSortOperation;
      case LanguageConceptSwitch.ConcatOperation:
        return myConceptConcatOperation;
      case LanguageConceptSwitch.ContainerIteratorType:
        return myConceptContainerIteratorType;
      case LanguageConceptSwitch.ContainsAllOperation:
        return myConceptContainsAllOperation;
      case LanguageConceptSwitch.ContainsKeyOperation:
        return myConceptContainsKeyOperation;
      case LanguageConceptSwitch.ContainsOperation:
        return myConceptContainsOperation;
      case LanguageConceptSwitch.ContainsValueOperation:
        return myConceptContainsValueOperation;
      case LanguageConceptSwitch.CustomContainerCreator:
        return myConceptCustomContainerCreator;
      case LanguageConceptSwitch.CustomContainerDeclaration:
        return myConceptCustomContainerDeclaration;
      case LanguageConceptSwitch.CustomContainers:
        return myConceptCustomContainers;
      case LanguageConceptSwitch.CustomMapCreator:
        return myConceptCustomMapCreator;
      case LanguageConceptSwitch.CutOperation:
        return myConceptCutOperation;
      case LanguageConceptSwitch.DequeType:
        return myConceptDequeType;
      case LanguageConceptSwitch.DisjunctOperation:
        return myConceptDisjunctOperation;
      case LanguageConceptSwitch.DistinctOperation:
        return myConceptDistinctOperation;
      case LanguageConceptSwitch.DowncastExpression:
        return myConceptDowncastExpression;
      case LanguageConceptSwitch.EnumeratorType:
        return myConceptEnumeratorType;
      case LanguageConceptSwitch.ExcludeOperation:
        return myConceptExcludeOperation;
      case LanguageConceptSwitch.FindFirstOperation:
        return myConceptFindFirstOperation;
      case LanguageConceptSwitch.FindLastOperation:
        return myConceptFindLastOperation;
      case LanguageConceptSwitch.FoldLeftOperation:
        return myConceptFoldLeftOperation;
      case LanguageConceptSwitch.FoldRightOperation:
        return myConceptFoldRightOperation;
      case LanguageConceptSwitch.ForEachStatement:
        return myConceptForEachStatement;
      case LanguageConceptSwitch.ForEachVariable:
        return myConceptForEachVariable;
      case LanguageConceptSwitch.ForEachVariableReference:
        return myConceptForEachVariableReference;
      case LanguageConceptSwitch.GetCurrentOperation:
        return myConceptGetCurrentOperation;
      case LanguageConceptSwitch.GetElementOperation:
        return myConceptGetElementOperation;
      case LanguageConceptSwitch.GetEnumeratorOperation:
        return myConceptGetEnumeratorOperation;
      case LanguageConceptSwitch.GetFirstOperation:
        return myConceptGetFirstOperation;
      case LanguageConceptSwitch.GetIndexOfOperation:
        return myConceptGetIndexOfOperation;
      case LanguageConceptSwitch.GetIteratorOperation:
        return myConceptGetIteratorOperation;
      case LanguageConceptSwitch.GetKeysOperation:
        return myConceptGetKeysOperation;
      case LanguageConceptSwitch.GetLastIndexOfOperation:
        return myConceptGetLastIndexOfOperation;
      case LanguageConceptSwitch.GetLastOperation:
        return myConceptGetLastOperation;
      case LanguageConceptSwitch.GetNextOperation:
        return myConceptGetNextOperation;
      case LanguageConceptSwitch.GetSizeOperation:
        return myConceptGetSizeOperation;
      case LanguageConceptSwitch.GetValuesOperation:
        return myConceptGetValuesOperation;
      case LanguageConceptSwitch.HasNextOperation:
        return myConceptHasNextOperation;
      case LanguageConceptSwitch.HashMapCreator:
        return myConceptHashMapCreator;
      case LanguageConceptSwitch.HashSetCreator:
        return myConceptHashSetCreator;
      case LanguageConceptSwitch.HeadListOperation:
        return myConceptHeadListOperation;
      case LanguageConceptSwitch.HeadMapOperation:
        return myConceptHeadMapOperation;
      case LanguageConceptSwitch.HeadSetOperation:
        return myConceptHeadSetOperation;
      case LanguageConceptSwitch.IApplicableToCollection:
        return myConceptIApplicableToCollection;
      case LanguageConceptSwitch.IApplicableToDeque:
        return myConceptIApplicableToDeque;
      case LanguageConceptSwitch.IApplicableToList:
        return myConceptIApplicableToList;
      case LanguageConceptSwitch.IApplicableToNothing:
        return myConceptIApplicableToNothing;
      case LanguageConceptSwitch.IApplicableToQueue:
        return myConceptIApplicableToQueue;
      case LanguageConceptSwitch.IApplicableToStack:
        return myConceptIApplicableToStack;
      case LanguageConceptSwitch.ICollectionOperation:
        return myConceptICollectionOperation;
      case LanguageConceptSwitch.IContainerOperation:
        return myConceptIContainerOperation;
      case LanguageConceptSwitch.IDequeOperation:
        return myConceptIDequeOperation;
      case LanguageConceptSwitch.IListOperation:
        return myConceptIListOperation;
      case LanguageConceptSwitch.IQueueOperation:
        return myConceptIQueueOperation;
      case LanguageConceptSwitch.IStackOperation:
        return myConceptIStackOperation;
      case LanguageConceptSwitch.InsertElementOperation:
        return myConceptInsertElementOperation;
      case LanguageConceptSwitch.InternalSequenceOperation:
        return myConceptInternalSequenceOperation;
      case LanguageConceptSwitch.IntersectOperation:
        return myConceptIntersectOperation;
      case LanguageConceptSwitch.IsEmptyOperation:
        return myConceptIsEmptyOperation;
      case LanguageConceptSwitch.IsNotEmptyOperation:
        return myConceptIsNotEmptyOperation;
      case LanguageConceptSwitch.IteratorType:
        return myConceptIteratorType;
      case LanguageConceptSwitch.JoinOperation:
        return myConceptJoinOperation;
      case LanguageConceptSwitch.KeyAccessOperation:
        return myConceptKeyAccessOperation;
      case LanguageConceptSwitch.LinkedHashMapCreator:
        return myConceptLinkedHashMapCreator;
      case LanguageConceptSwitch.LinkedHashSetCreator:
        return myConceptLinkedHashSetCreator;
      case LanguageConceptSwitch.LinkedListCreator:
        return myConceptLinkedListCreator;
      case LanguageConceptSwitch.LinkedListType:
        return myConceptLinkedListType;
      case LanguageConceptSwitch.ListCreatorWithInit:
        return myConceptListCreatorWithInit;
      case LanguageConceptSwitch.ListElementAccessExpression:
        return myConceptListElementAccessExpression;
      case LanguageConceptSwitch.ListType:
        return myConceptListType;
      case LanguageConceptSwitch.MapAsSequenceVarRef:
        return myConceptMapAsSequenceVarRef;
      case LanguageConceptSwitch.MapClearOperation:
        return myConceptMapClearOperation;
      case LanguageConceptSwitch.MapElement:
        return myConceptMapElement;
      case LanguageConceptSwitch.MapEntry:
        return myConceptMapEntry;
      case LanguageConceptSwitch.MapInitializer:
        return myConceptMapInitializer;
      case LanguageConceptSwitch.MapOperation:
        return myConceptMapOperation;
      case LanguageConceptSwitch.MapOperationExpression:
        return myConceptMapOperationExpression;
      case LanguageConceptSwitch.MapRemoveOperation:
        return myConceptMapRemoveOperation;
      case LanguageConceptSwitch.MapType:
        return myConceptMapType;
      case LanguageConceptSwitch.MappingType:
        return myConceptMappingType;
      case LanguageConceptSwitch.MappingsSetOperation:
        return myConceptMappingsSetOperation;
      case LanguageConceptSwitch.MoveNextOperation:
        return myConceptMoveNextOperation;
      case LanguageConceptSwitch.MultiForEachPair:
        return myConceptMultiForEachPair;
      case LanguageConceptSwitch.MultiForEachStatement:
        return myConceptMultiForEachStatement;
      case LanguageConceptSwitch.MultiForEachVariable:
        return myConceptMultiForEachVariable;
      case LanguageConceptSwitch.MultiForEachVariableReference:
        return myConceptMultiForEachVariableReference;
      case LanguageConceptSwitch.NoArgumentsSequenceOperation:
        return myConceptNoArgumentsSequenceOperation;
      case LanguageConceptSwitch.OfTypeOperation:
        return myConceptOfTypeOperation;
      case LanguageConceptSwitch.PageOperation:
        return myConceptPageOperation;
      case LanguageConceptSwitch.PeekOperation:
        return myConceptPeekOperation;
      case LanguageConceptSwitch.PopOperation:
        return myConceptPopOperation;
      case LanguageConceptSwitch.PriorityQueueCreator:
        return myConceptPriorityQueueCreator;
      case LanguageConceptSwitch.PushOperation:
        return myConceptPushOperation;
      case LanguageConceptSwitch.PutAllOperation:
        return myConceptPutAllOperation;
      case LanguageConceptSwitch.QueueType:
        return myConceptQueueType;
      case LanguageConceptSwitch.ReduceLeftOperation:
        return myConceptReduceLeftOperation;
      case LanguageConceptSwitch.ReduceRightOperation:
        return myConceptReduceRightOperation;
      case LanguageConceptSwitch.RemoveAllElementsOperation:
        return myConceptRemoveAllElementsOperation;
      case LanguageConceptSwitch.RemoveAllSetElementsOperation:
        return myConceptRemoveAllSetElementsOperation;
      case LanguageConceptSwitch.RemoveAtElementOperation:
        return myConceptRemoveAtElementOperation;
      case LanguageConceptSwitch.RemoveElementOperation:
        return myConceptRemoveElementOperation;
      case LanguageConceptSwitch.RemoveFirstElementOperation:
        return myConceptRemoveFirstElementOperation;
      case LanguageConceptSwitch.RemoveLastElementOperation:
        return myConceptRemoveLastElementOperation;
      case LanguageConceptSwitch.RemoveOperation:
        return myConceptRemoveOperation;
      case LanguageConceptSwitch.RemoveSetElementOperation:
        return myConceptRemoveSetElementOperation;
      case LanguageConceptSwitch.RemoveWhereOperation:
        return myConceptRemoveWhereOperation;
      case LanguageConceptSwitch.ReverseOperation:
        return myConceptReverseOperation;
      case LanguageConceptSwitch.SelectNotNullOperation:
        return myConceptSelectNotNullOperation;
      case LanguageConceptSwitch.SelectOperation:
        return myConceptSelectOperation;
      case LanguageConceptSwitch.SequenceCreator:
        return myConceptSequenceCreator;
      case LanguageConceptSwitch.SequenceOperation:
        return myConceptSequenceOperation;
      case LanguageConceptSwitch.SequenceType:
        return myConceptSequenceType;
      case LanguageConceptSwitch.SetElementOperation:
        return myConceptSetElementOperation;
      case LanguageConceptSwitch.SetType:
        return myConceptSetType;
      case LanguageConceptSwitch.SingleArgumentSequenceOperation:
        return myConceptSingleArgumentSequenceOperation;
      case LanguageConceptSwitch.SingletonSequenceCreator:
        return myConceptSingletonSequenceCreator;
      case LanguageConceptSwitch.SkipOperation:
        return myConceptSkipOperation;
      case LanguageConceptSwitch.SkipStatement:
        return myConceptSkipStatement;
      case LanguageConceptSwitch.SmartClosureParameterDeclaration:
        return myConceptSmartClosureParameterDeclaration;
      case LanguageConceptSwitch.SortDirection:
        return myConceptSortDirection;
      case LanguageConceptSwitch.SortOperation:
        return myConceptSortOperation;
      case LanguageConceptSwitch.SortedMapOperation:
        return myConceptSortedMapOperation;
      case LanguageConceptSwitch.SortedMapType:
        return myConceptSortedMapType;
      case LanguageConceptSwitch.SortedSetOperation:
        return myConceptSortedSetOperation;
      case LanguageConceptSwitch.SortedSetType:
        return myConceptSortedSetType;
      case LanguageConceptSwitch.StackType:
        return myConceptStackType;
      case LanguageConceptSwitch.StopStatement:
        return myConceptStopStatement;
      case LanguageConceptSwitch.SubListOperation:
        return myConceptSubListOperation;
      case LanguageConceptSwitch.SubMapOperation:
        return myConceptSubMapOperation;
      case LanguageConceptSwitch.SubSetOperation:
        return myConceptSubSetOperation;
      case LanguageConceptSwitch.TailListOperation:
        return myConceptTailListOperation;
      case LanguageConceptSwitch.TailMapOperation:
        return myConceptTailMapOperation;
      case LanguageConceptSwitch.TailOperation:
        return myConceptTailOperation;
      case LanguageConceptSwitch.TailSetOperation:
        return myConceptTailSetOperation;
      case LanguageConceptSwitch.TakeOperation:
        return myConceptTakeOperation;
      case LanguageConceptSwitch.TestAddElementOperation:
        return myConceptTestAddElementOperation;
      case LanguageConceptSwitch.TestRemoveElementOperation:
        return myConceptTestRemoveElementOperation;
      case LanguageConceptSwitch.ToArrayOperation:
        return myConceptToArrayOperation;
      case LanguageConceptSwitch.ToIteratorOperation:
        return myConceptToIteratorOperation;
      case LanguageConceptSwitch.ToListOperation:
        return myConceptToListOperation;
      case LanguageConceptSwitch.TranslateOperation:
        return myConceptTranslateOperation;
      case LanguageConceptSwitch.TreeMapCreator:
        return myConceptTreeMapCreator;
      case LanguageConceptSwitch.TreeSetCreator:
        return myConceptTreeSetCreator;
      case LanguageConceptSwitch.UnionOperation:
        return myConceptUnionOperation;
      case LanguageConceptSwitch.ValueAccessOperation:
        return myConceptValueAccessOperation;
      case LanguageConceptSwitch.VisitAllOperation:
        return myConceptVisitAllOperation;
      case LanguageConceptSwitch.WhereOperation:
        return myConceptWhereOperation;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractContainerCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237721394592");
    b.version(2);
    b.aggregate("elementType", 0x1202df24e9fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1237721435807").done();
    b.aggregate("initValue", 0x1202df24ea0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("1237721435808").done();
    b.aggregate("copyFrom", 0x1202e9082e6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1237731803878").done();
    b.aggregate("initSize", 0x15ae66cec05cb2eaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1562299158920737514").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractContainerType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractContainerType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5686963296372573083");
    b.version(2);
    b.aggregate("elementType", 0x4eec26fcbaf8c39cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("5686963296372573084").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractEnumeratorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractEnumeratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237497044713");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractIteratorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237470736245");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractMappingOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractMappingOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240824716764");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226566831166");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddAllElementsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddAllElementsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e3d20dbefL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1160666733551");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("addAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddAllSetElementsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddAllSetElementsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d969dca87L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226592602759");
    b.version(2);
    b.aggregate("argument", 0x11d969e1c69L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1226592623721").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("addAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e39e3ff80L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1160612413312");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("add");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddFirstElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddFirstElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0384e32L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227022159410");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("addFirst");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddLastElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddLastElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0389d32L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227022179634");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("addLast");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddSetElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AddSetElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9514ebd8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226566855640");
    b.version(2);
    b.aggregate("argument", 0x11d951a651bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1226567214363").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("add");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAllConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AllConstant", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12031a066ecL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.IntegerLiteral", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237783176940");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("ALL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAllOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AllOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fad85a8f5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1235566831861");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("all");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAlsoSortOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AlsoSortOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x85158df752ff560L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b81cc8f6L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/599357942184015200");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("alsoSortBy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AnyOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fad816cd8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1235566554328");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("any");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAsSequenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c92e6703L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractOperation", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1196792d150L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240325842691");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("asSequence");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAsSynchronizedOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AsSynchronizedOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3fffa24b059bcd85L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/4611582986551020933");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("asSynchronized");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAsUnmodifiableOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "AsUnmodifiableOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x230f7a18a5abce80L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/2526372162255441536");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("asUnmodifiable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1176906603202");
    b.version(2);
    b.aggregate("rightExpression", 0x112051c6c86L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1176906787974").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChunkOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ChunkOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1205753243362");
    b.version(2);
    b.aggregate("length", 0x118bc7eaf3fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1205753261887").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClearAllElementsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ClearAllElementsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db03915deL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227022210526");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("clear");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClearSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ClearSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11daafd2413L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226934395923");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("clear");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CollectionType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x62e1df06bd2172b2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/7125221305512719026");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("collection");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComparatorSortOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ComparatorSortOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x119a966b94dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1209727891789");
    b.version(2);
    b.aggregate("ascending", 0x119a96853fdL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1209727996925").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("sort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConcatOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ConcatOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x112f6f0e9beL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1180964022718");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("concat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainerIteratorType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ContainerIteratorType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120bec64a7eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.IteratorType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ed2b158L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240151247486");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("modifying_iterator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainsAllOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ContainsAllOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5507720272481451L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6126991172893676625");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("containsAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainsKeyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ContainsKeyOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117b3740258L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1201306600024");
    b.version(2);
    b.aggregate("key", 0x117c8321b8fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1201654602639").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("containsKey");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ContainsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x110efd61311L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1172254888721");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("contains");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainsValueOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ContainsValueOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1203903c318L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237907129112");
    b.version(2);
    b.aggregate("value", 0x12039041567L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1237907150183").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("containsValue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainerCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CustomContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x127be81db92655b3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1331913329176106419");
    b.version(2);
    b.associate("containerDeclaration", 0x127be81db92655b4L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L).optional(false).origin("1331913329176106420").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainerDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CustomContainerDeclaration", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6099516049394485216");
    b.version(2);
    b.aggregate("containerType", 0x54a5d587c1f3c83fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("6099516049394485311").done();
    b.aggregate("runtimeType", 0x54a5d587c1f3c840L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL).optional(false).ordered(true).multiple(false).origin("6099516049394485312").done();
    b.aggregate("factory", 0x11c2034ca3135818L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1279588871814993944").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomContainers() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CustomContainers", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c84cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6099516049394485324");
    b.version(2);
    b.aggregate("containerDeclaration", 0x54a5d587c1f3c84eL).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L).optional(true).ordered(true).multiple(true).origin("6099516049394485326").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCustomMapCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CustomMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x15e2150d4bff8a67L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1576845966386891367");
    b.version(2);
    b.associate("containerDeclaration", 0x15e2150d4bff8a6aL).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x54a5d587c1f3c7e0L).optional(false).origin("1576845966386891370").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCutOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "CutOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc83b40eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1205753590798");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("cut");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDequeType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "DequeType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e99e9ab97de7711L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.QueueType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf74491L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3357971920378033937");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("deque");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDisjunctOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "DisjunctOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b342c640L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1205598340672");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("disjunction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDistinctOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "DistinctOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1127b99dbbcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1178894719932");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("distinct");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDowncastExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "DowncastExpression", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11df825e596L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1228228912534");
    b.version(2);
    b.aggregate("expression", 0x11df8269ecfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1228228959951").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("downcast");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumeratorType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "EnumeratorType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020864111L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237496250641");
    b.version(2);
    b.aggregate("elementType", 0x12020864112L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1237496250642").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("enumerator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExcludeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ExcludeOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x112061bbddcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1176923520476");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("except");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFindFirstOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "FindFirstOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6310c940L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1225727723840");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("findFirst");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFindLastOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "FindLastOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6339caa8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1225730411176");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("findLast");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFoldLeftOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "FoldLeftOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1520010667848262L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1522217801069396578");
    b.version(2);
    b.aggregate("seed", 0x152001066784e4e4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1522217801069421796").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("foldLeft");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFoldRightOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "FoldRightOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x152001066784e507L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1522217801069421831");
    b.version(2);
    b.aggregate("seed", 0x152001066784e509L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1522217801069421833").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("foldRight");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForEachStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ForEachStatement", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac65f399L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1153943597977");
    b.version(2);
    b.aggregate("variable", 0x10cac7231f1L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L).optional(false).ordered(true).multiple(false).origin("1153944400369").done();
    b.aggregate("inputSequence", 0x10cac72911aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1153944424730").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("foreach");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForEachVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ForEachVariable", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1153944193378");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.ROOT);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForEachVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ForEachVariableReference", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6fa5c3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xe34de34746464f2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1153944233411");
    b.version(2);
    b.associate("variable", 0x10cac7007baL).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10cac6f0962L).optional(false).origin("1153944258490").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetCurrentOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetCurrentOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f063174L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237471080820");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("current");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec44fd67eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1162934736510");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("get");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetEnumeratorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetEnumeratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12023af43bdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237549269949");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("enumerator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetFirstOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetFirstOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f5eb70c62L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1165525191778");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("first");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetIndexOfOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetIndexOfOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x110bc593e18L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1171391069720");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("indexOf");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetIteratorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ecef58aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237467461002");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("iterator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetKeysOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetKeysOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117d52db67cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1201872418428");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("keys");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetLastIndexOfOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetLastIndexOfOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x37cbb2bef55da8aeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/4020503625588385966");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("lastIndexOf");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetLastOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetLastOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f62ee22c8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1165595910856");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("last");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetNextOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetNextOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f05703dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237471031357");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("next");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetSizeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetSizeOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10ec4627e6fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1162935959151");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("size");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGetValuesOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "GetValuesOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12039220e97L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237909114519");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("values");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHasNextOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HasNextOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f035df4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237470895604");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("hasNext");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHashMapCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HashMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1197686869805");
    b.version(2);
    b.aggregate("keyType", 0x116dbb5b4d0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1197687026896").done();
    b.aggregate("valueType", 0x116dbb5d76dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1197687035757").done();
    b.aggregate("initializer", 0x118f24c9eb0L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f2481867L).optional(true).ordered(true).multiple(false).origin("1206655950512").done();
    b.aggregate("initSize", 0x15ae66cec0613b7fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1562299158921034623").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("hashmap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHashSetCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HashSetCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226516258405");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("hashset");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHeadListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HeadListOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x489c7f2006b05842L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5232196642625574978");
    b.version(2);
    b.aggregate("upToIndex", 0x489c7f2006b05844L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5232196642625574980").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("headList");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHeadMapOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HeadMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4071445L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240239379525");
    b.version(2);
    b.aggregate("toKey", 0x120c40fad39L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240239942969").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("headMap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHeadSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "HeadSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4bdd40dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240251356173");
    b.version(2);
    b.aggregate("toElement", 0x120c4be03acL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240251368364").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("headSet");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToCollection", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936692983");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToDeque() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToDeque", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936692987");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToList", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936692984");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToNothing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToNothing", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eaf6L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936691958");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToQueue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToQueue", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936692988");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIApplicableToStack() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IApplicableToStack", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5994574781936692989");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForICollectionOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ICollectionOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/4327124999333572296");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIContainerOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IContainerOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L);
    b.interface_();
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/2141797557972817928");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDequeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IDequeOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6801639034384909353");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IListOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3c0d0942c3fd6ec8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/2141797557973018607");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIQueueOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IQueueOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/497032923610827734");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStackOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IStackOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.interface_();
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc4d808L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6801639034384909355");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInsertElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "InsertElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d5cc25c8fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1225621920911");
    b.version(2);
    b.aggregate("index", 0x11d5cc2f695L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225621960341").done();
    b.aggregate("element", 0x11d5cc2b50dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225621943565").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("insert");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInternalSequenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1204796164442");
    b.version(2);
    b.aggregate("closure", 0x11883748452L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1204796294226").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntersectOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IntersectOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1120602b2e4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1176921879268");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("intersect");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsEmptyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IsEmptyOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10f5f053dc7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1165530316231");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("isEmpty");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsNotEmptyOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IsNotEmptyOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111ecf423b7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1176501494711");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("isNotEmpty");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIteratorType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "IteratorType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201ed2b158L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237467705688");
    b.version(2);
    b.aggregate("elementType", 0x1201ed311a7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1237467730343").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("iterator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForJoinOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "JoinOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120debe16c6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240687580870");
    b.version(2);
    b.aggregate("delimiter", 0x120debf4541L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("1240687658305").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("join");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKeyAccessOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "KeyAccessOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6f85873L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240825616499");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("key");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinkedHashMapCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "LinkedHashMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c2ad6432L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240216724530");
    b.version(2);
    b.prop("order", 0x120c2de2559L, "1240219919705");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("linked_hashmap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinkedHashSetCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "LinkedHashSetCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c2b5bbfdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240217271293");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("linked_hashset");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinkedListCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "LinkedListCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11daf69a138L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227008614712");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("linkedlist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinkedListType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "LinkedListType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a890137e9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.ListType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3358009230509553641");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("linkedlist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListCreatorWithInit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ListCreatorWithInit", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10e39306c2eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1160600644654");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("arraylist");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListElementAccessExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ListElementAccessExpression", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d6213c318L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1225711141656");
    b.version(2);
    b.aggregate("list", 0x11d621460b5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225711182005").done();
    b.aggregate("index", 0x11d621484e5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225711191269").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ListType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1151688443754");
    b.version(2);
    b.aggregate("elementType", 0x10c25fe95c5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1151688676805").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("list");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapAsSequenceVarRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapAsSequenceVarRef", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x59f2b8b299d62ef0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6481445890964205296");
    b.version(2);
    b.aggregate("original", 0x59f2b8b299d6e72bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L).optional(false).ordered(true).multiple(false).origin("6481445890964252459").done();
    b.kind(ConceptKind.NORMAL, StaticScope.ROOT);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapClearOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapClearOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11962b7f964L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1208542034276");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("clear");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapElement", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116ea555a25L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1197932370469");
    b.version(2);
    b.aggregate("map", 0x116ea576ac7L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1197932505799").done();
    b.aggregate("key", 0x116ea57b648L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1197932525128").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapEntry() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapEntry", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f249550fL);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1206655735055");
    b.version(2);
    b.aggregate("key", 0x118f24b00ccL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1206655844556").done();
    b.aggregate("value", 0x118f24b224fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1206655853135").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapInitializer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapInitializer", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f2481867L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1206655653991");
    b.version(2);
    b.aggregate("entries", 0x118f24be244L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118f249550fL).optional(true).ordered(true).multiple(true).origin("1206655902276").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1201225890326");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapOperationExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapOperationExpression", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117ae10e4d9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1201216218329");
    b.version(2);
    b.aggregate("expression", 0x117ae11d026L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1201216278566").done();
    b.aggregate("mapOperation", 0x117aea4e016L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L).optional(false).ordered(true).multiple(false).origin("1201225916438").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapRemoveOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapRemoveOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11914b836a4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1207233427108");
    b.version(2);
    b.aggregate("key", 0x11914b92bc5L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1207233489861").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeKey");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMapType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MapType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116db7e6bcbL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1197683403723");
    b.version(2);
    b.aggregate("keyType", 0x116db7f62a8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1197683466920").done();
    b.aggregate("valueType", 0x116db7f8516L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1197683475734").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("map");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMappingType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MappingType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120cf0ddd15L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240424373525");
    b.version(2);
    b.aggregate("keyType", 0x120cf0e3925L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1240424397093").done();
    b.aggregate("valueType", 0x120cf0e4f44L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1240424402756").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("mapping");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMappingsSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MappingsSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e8af3ac1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240854379201");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("mappings");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMoveNextOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MoveNextOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f0773d2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x12020925ee9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1237471163346");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("moveNext");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachPair() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MultiForEachPair", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea15L);
    b.class_(false, false, false);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/9042586985346099733");
    b.version(2);
    b.aggregate("variable", 0x7d7db8f4181fea42L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L).optional(false).ordered(true).multiple(false).origin("9042586985346099778").done();
    b.aggregate("input", 0x7d7db8f4181fea17L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("9042586985346099735").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MultiForEachStatement", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fe9f2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/9042586985346099698");
    b.version(2);
    b.aggregate("forEach", 0x7d7db8f4181fea16L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea15L).optional(false).ordered(true).multiple(true).origin("9042586985346099734").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("foreach");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MultiForEachVariable", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4b64b50fb2fc7720L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/9042586985346099736");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultiForEachVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "MultiForEachVariableReference", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x731a0dad81895f16L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/8293956702609956630");
    b.version(2);
    b.associate("variable", 0x731a0dad818984f5L).target(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7d7db8f4181fea18L).optional(false).origin("8293956702609966325").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNoArgumentsSequenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/540871147943782829");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOfTypeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "OfTypeOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3fffa24b05a04797L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/4611582986551314327");
    b.version(2);
    b.aggregate("requestedType", 0x3fffa24b05a047a8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("4611582986551314344").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("ofType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPageOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PageOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11108717200L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1172667724288");
    b.version(2);
    b.aggregate("fromElement", 0x1110871a70cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1172667737868").done();
    b.aggregate("toElement", 0x1110871d001L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1172667748353").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("page");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPeekOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PeekOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x50486375c8941225L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5784983078884872741");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("peek");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPopOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PopOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a88f42ff5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3358009230508699637");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("pop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPriorityQueueCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PriorityQueueCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a89009f6cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1202df1ada0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3358009230509514604");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("priority_queue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPushOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PushOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2e9a0b9a88f4311cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3358009230508699932");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("push");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPutAllOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "PutAllOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120ebcea0f9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240906768633");
    b.version(2);
    b.aggregate("map", 0x120ebd0f530L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240906921264").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("putAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueueType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "QueueType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf74491L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5686963296372475025");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("queue");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReduceLeftOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ReduceLeftOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x152001066783f27aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1522217801069359738");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("reduceLeft");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReduceRightOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ReduceRightOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x15200106678481b3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1522217801069396403");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("reduceRight");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAllElementsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveAllElementsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11154a8aed3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1173946412755");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAllSetElementsOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveAllSetElementsOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d96b14ae4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226593880804");
    b.version(2);
    b.aggregate("argument", 0x11d96b1a226L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1226593903142").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeAll");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveAtElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveAtElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db038dd8cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227022196108");
    b.version(2);
    b.aggregate("index", 0x11db03a0e95L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1227022274197").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeAt");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10fcd477695L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1167380149909");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("remove");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveFirstElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveFirstElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db0742a49L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227026082377");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeFirst");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveLastElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveLastElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11db074584bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefbL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1227026094155");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeLast");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120becad360L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1201f00ef75L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240151544672");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("remove");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveSetElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveSetElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d968cae32L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226591481394");
    b.version(2);
    b.aggregate("argument", 0x11d968cfea4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1226591501988").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("remove");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveWhereOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "RemoveWhereOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x2a691766608266ccL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f1842bL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6e5d0cf857f4bd6L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46f18429L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefdL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eefcL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/3055999550620853964");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("removeWhere");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReverseOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ReverseOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111c5da033eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1175845471038");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("reverse");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectNotNullOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SelectNotNullOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x6f7b007030d23aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/31378964227347002");
    b.version(2);
    b.alias("withoutNull");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SelectOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117e4785fdeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1202128969694");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("select");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSequenceCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SequenceCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d14c97b16L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1224414427926");
    b.version(2);
    b.aggregate("elementType", 0x11d14c9ea5eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1224414456414").done();
    b.aggregate("initializer", 0x11d14ca1317L).target(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L).optional(true).ordered(true).multiple(false).origin("1224414466839").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("sequence");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSequenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1151701983961");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSequenceType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SequenceType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c260e9444L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1151689724996");
    b.version(2);
    b.aggregate("elementType", 0x10c260ee40eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(true).ordered(true).multiple(false).origin("1151689745422").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("sequence");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SetElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d5e2fc7c1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1225645868993");
    b.version(2);
    b.aggregate("index", 0x11d5e302908L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225645893896").done();
    b.aggregate("element", 0x11d5e30290aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1225645893898").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("set");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SetType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1226511727824");
    b.version(2);
    b.aggregate("elementType", 0x11d91cc51e3L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1226511765987").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("set");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingleArgumentSequenceOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/540871147943773365");
    b.version(2);
    b.aggregate("argument", 0x7818f71827244b6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("540871147943773366").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingletonSequenceCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SingletonSequenceCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11fade5d82aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.AbstractCreator", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1235573135402");
    b.version(2);
    b.aggregate("elementType", 0x11fade6759fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("1235573175711").done();
    b.aggregate("singletonValue", 0x11fade6a3c0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1235573187520").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("singleton");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSkipOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SkipOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111076c0538L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1172650591544");
    b.version(2);
    b.aggregate("elementsToSkip", 0x11107e408a4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1172658456740").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("skip");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSkipStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SkipStatement", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d16b423daL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1224446583770");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("skip");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSmartClosureParameterDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SmartClosureParameterDeclaration", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118374464e4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration", 0xfd3920347849419dL, 0x907112563d152375L, 0x118276b7086L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1203518072036");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("~ <name>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortDirection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortDirection", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11257567b07L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.BooleanConstant", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1178286324487");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118b81cc8f6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1205679737078");
    b.version(2);
    b.aggregate("ascending", 0x118b81e3c02L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1205679832066").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("sortBy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortedMapOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortedMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117aea47a16L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240239309184");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortedMapType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortedMapType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4067207L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.MapType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116db7e6bcbL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240239337991");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("sorted_map");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortedSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortedSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d95148c3eL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240251169236");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSortedSetType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SortedSetType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c482dd1aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SetType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240247491866");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("sorted_set");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStackType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "StackType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x5e6446aa46ee5eecL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/6801639034384703212");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("stack");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStopStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "StopStatement", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d17046bf4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1224451845108");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("stop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SubListOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4e2f4f8785270237L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5633809102336885303");
    b.version(2);
    b.aggregate("fromIndex", 0x4e2f4f8785270248L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5633809102336885320").done();
    b.aggregate("upToIndex", 0x4e2f4f8785270249L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5633809102336885321").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("subList");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubMapOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SubMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4139de2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240240201186");
    b.version(2);
    b.aggregate("fromKey", 0x120c414e7c9L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240240285641").done();
    b.aggregate("toKey", 0x120c414ffdaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240240291802").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("subMap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "SubSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4c28b15L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240251665173");
    b.version(2);
    b.aggregate("fromElement", 0x120c4c2a92aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240251672874").done();
    b.aggregate("toElement", 0x120c4c2c53bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240251680059").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("subSet");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTailListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TailListOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x489c7f2006b0588eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef8L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5232196642625575054");
    b.version(2);
    b.aggregate("fromIndex", 0x489c7f2006b05890L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5232196642625575056").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("tailList");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTailMapOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TailMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4127c90L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4060180L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240240127120");
    b.version(2);
    b.aggregate("fromKey", 0x120c412c56bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240240145771").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("tailMap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTailOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TailOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc844e46L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x118bc7e66e2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1205753630278");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("tail");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTailSetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TailSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4c1050eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4baf9d4L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240251565326");
    b.version(2);
    b.aggregate("fromElement", 0x120c4c1332bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1240251577131").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("tailSet");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTakeOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TakeOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x111083dd9b7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1172664342967");
    b.version(2);
    b.aggregate("elementsToTake", 0x111083e4b4eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1172664372046").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("take");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestAddElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TestAddElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4f19baa8d7926e59L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/5699792037748043353");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("testAdd");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestRemoveElementOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TestRemoveElementOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x3888a033868c4fa5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827244b5L);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1db93187ffc7e7efL);
    b.parent(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x53310200e8d9eef7L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/4073682006117732261");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("testRemove");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToArrayOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ToArrayOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x113e55393bdL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1184963466173");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("toArray");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToIteratorOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ToIteratorOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11914e10330L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1207236100912");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("iterator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ToListOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26cea325L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x7818f71827269adL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1151702311717");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("toList");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTranslateOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TranslateOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117d06362dcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1201792049884");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("selectMany");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTreeMapCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TreeMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c408d37aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x116dbb34f2dL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240239494010");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("treemap");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTreeSetCreator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "TreeSetCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120c4838d33L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d9210de65L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240247536947");
    b.version(2);
    b.aggregate("comparator", 0x1f622b3701eae8beL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("2261417478148778174").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("treeset");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnionOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "UnionOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11204e5336dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11205199ac2L);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1176903168877");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("union");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueAccessOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "ValueAccessOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ec6b83L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x120e6ea9ddcL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1240824834947");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("value");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisitAllOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "VisitAllOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188e700c31L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1204980550705");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("forEach");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhereOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.collections", "WhereOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x117e3fd45c4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x1188372895aL);
    b.origin("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)/1202120902084");
    b.version(2);
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("where");
    return b.create();
  }
}
