package jetbrains.mps.baseLanguage.collections.actions;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.typesystem.inference.TypeChecker;

public class CollectionTypeCreationUtil {
  public static void extractSequenceElementType(SNode newNode, SNode sampleNode) {
    SNode maybeElementType = extractElementType(sampleNode);
    if ((maybeElementType != null)) {
      SLinkOperations.setTarget(newNode, MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c260e9444L, 0x10c260ee40eL, "elementType"), SNodeOperations.deleteNode(maybeElementType));
    }
  }
  public static void extractAbstractContainerElementType(SNode newNode, SNode sampleNode) {
    SNode maybeElementType = extractElementType(sampleNode);
    if ((maybeElementType != null)) {
      SLinkOperations.setTarget(newNode, MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL, 0x4eec26fcbaf8c39cL, "elementType"), SNodeOperations.deleteNode(maybeElementType));
    }
  }
  public static void extractListElementType(SNode newNode, SNode sampleNode) {
    SNode maybeElementType = extractElementType(sampleNode);
    if ((maybeElementType != null)) {
      SLinkOperations.setTarget(newNode, MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL, 0x10c25fe95c5L, "elementType"), SNodeOperations.deleteNode(maybeElementType));
    }
  }
  public static void extractSetElementType(SNode newNode, SNode sampleNode) {
    SNode maybeElementType = extractElementType(sampleNode);
    if ((maybeElementType != null)) {
      SLinkOperations.setTarget(newNode, MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L, 0x11d91cc51e3L, "elementType"), SNodeOperations.deleteNode(maybeElementType));
    }
  }
  private static SNode extractElementType(SNode sampleNode) {
    SNode classifier = SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.as(sampleNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, "jetbrains.mps.baseLanguage.structure.ExpressionStatement")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, 0xf8cc56b214L, "expression")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6c91efa5ec8cd7L, "jetbrains.mps.baseLanguage.structure.AbstractClassifierReference")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6c91efa5ec8cd7L, 0x6c6c91efa5ecbbb2L, "classifier"));
    if ((classifier != null)) {
      SNode t = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType"));
      SLinkOperations.setTarget(t, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), classifier);
      return t;
    } else {
      SNode sampleType = ListSequence.fromList(SNodeOperations.getNodeDescendants(sampleNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"), true, new SAbstractConcept[]{})).first();
      if (ListSequence.fromList(SNodeOperations.getChildren(sampleType)).count() == 1 && SNodeOperations.isInstanceOf(ListSequence.fromList(SNodeOperations.getChildren(sampleType)).first(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"))) {
        {
          IMatchingPattern pattern_ddgnrw_a0b0a1a4 = HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c260e9444L, "jetbrains.mps.baseLanguage.collections.structure.SequenceType"));
          SNode coercedNode_ddgnrw_a0b0a1a4 = TypeChecker.getInstance().getRuntimeSupport().coerce_(sampleType, pattern_ddgnrw_a0b0a1a4);
          if (coercedNode_ddgnrw_a0b0a1a4 != null) {
            return SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getChildren(sampleType)).first(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"));
          } else {
          }
        }
        {
          IMatchingPattern pattern_ddgnrw_b0b0a1a4 = HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c25fb076aL, "jetbrains.mps.baseLanguage.collections.structure.ListType"));
          SNode coercedNode_ddgnrw_b0b0a1a4 = TypeChecker.getInstance().getRuntimeSupport().coerce_(sampleType, pattern_ddgnrw_b0b0a1a4);
          if (coercedNode_ddgnrw_b0b0a1a4 != null) {
            return SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getChildren(sampleType)).first(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"));
          } else {
          }
        }
        {
          IMatchingPattern pattern_ddgnrw_c0b0a1a4 = HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x11d91cbbcd0L, "jetbrains.mps.baseLanguage.collections.structure.SetType"));
          SNode coercedNode_ddgnrw_c0b0a1a4 = TypeChecker.getInstance().getRuntimeSupport().coerce_(sampleType, pattern_ddgnrw_c0b0a1a4);
          if (coercedNode_ddgnrw_c0b0a1a4 != null) {
            return SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getChildren(sampleType)).first(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"));
          } else {
          }
        }
        {
          IMatchingPattern pattern_ddgnrw_d0b0a1a4 = HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x4eec26fcbaf8c39bL, "jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType"));
          SNode coercedNode_ddgnrw_d0b0a1a4 = TypeChecker.getInstance().getRuntimeSupport().coerce_(sampleType, pattern_ddgnrw_d0b0a1a4);
          if (coercedNode_ddgnrw_d0b0a1a4 != null) {
            return SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getChildren(sampleType)).first(), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL, "jetbrains.mps.baseLanguage.structure.Type"));
          } else {
          }
        }
      }
      return sampleType;
    }
  }
}
