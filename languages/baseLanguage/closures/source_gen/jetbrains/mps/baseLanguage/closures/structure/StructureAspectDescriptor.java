package jetbrains.mps.baseLanguage.closures.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(21);
  /*package*/ final ConceptDescriptor myConceptAbstractFunctionType = createDescriptorForAbstractFunctionType();
  /*package*/ final ConceptDescriptor myConceptClosureArgReference = createDescriptorForClosureArgReference();
  /*package*/ final ConceptDescriptor myConceptClosureControlStatement = createDescriptorForClosureControlStatement();
  /*package*/ final ConceptDescriptor myConceptClosureLiteral = createDescriptorForClosureLiteral();
  /*package*/ final ConceptDescriptor myConceptClosureLiteralType = createDescriptorForClosureLiteralType();
  /*package*/ final ConceptDescriptor myConceptCompactInvokeFunctionExpression = createDescriptorForCompactInvokeFunctionExpression();
  /*package*/ final ConceptDescriptor myConceptControlAbstractionContainer = createDescriptorForControlAbstractionContainer();
  /*package*/ final ConceptDescriptor myConceptControlAbstractionDeclaration = createDescriptorForControlAbstractionDeclaration();
  /*package*/ final ConceptDescriptor myConceptControlClosureLiteral = createDescriptorForControlClosureLiteral();
  /*package*/ final ConceptDescriptor myConceptFunctionMethodDeclaration = createDescriptorForFunctionMethodDeclaration();
  /*package*/ final ConceptDescriptor myConceptFunctionType = createDescriptorForFunctionType();
  /*package*/ final ConceptDescriptor myConceptInvokeExpression = createDescriptorForInvokeExpression();
  /*package*/ final ConceptDescriptor myConceptInvokeFunctionExpression = createDescriptorForInvokeFunctionExpression();
  /*package*/ final ConceptDescriptor myConceptInvokeFunctionOperation = createDescriptorForInvokeFunctionOperation();
  /*package*/ final ConceptDescriptor myConceptPairOfInts = createDescriptorForPairOfInts();
  /*package*/ final ConceptDescriptor myConceptStringPropertyHolder = createDescriptorForStringPropertyHolder();
  /*package*/ final ConceptDescriptor myConceptUnboundClosureParameterDeclaration = createDescriptorForUnboundClosureParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptUnrestrictedClosureLiteral = createDescriptorForUnrestrictedClosureLiteral();
  /*package*/ final ConceptDescriptor myConceptUnrestrictedFunctionType = createDescriptorForUnrestrictedFunctionType();
  /*package*/ final ConceptDescriptor myConceptYieldAllStatement = createDescriptorForYieldAllStatement();
  /*package*/ final ConceptDescriptor myConceptYieldStatement = createDescriptorForYieldStatement();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractFunctionType.getId(), 0);
    myIndexMap.put(myConceptClosureArgReference.getId(), 1);
    myIndexMap.put(myConceptClosureControlStatement.getId(), 2);
    myIndexMap.put(myConceptClosureLiteral.getId(), 3);
    myIndexMap.put(myConceptClosureLiteralType.getId(), 4);
    myIndexMap.put(myConceptCompactInvokeFunctionExpression.getId(), 5);
    myIndexMap.put(myConceptControlAbstractionContainer.getId(), 6);
    myIndexMap.put(myConceptControlAbstractionDeclaration.getId(), 7);
    myIndexMap.put(myConceptControlClosureLiteral.getId(), 8);
    myIndexMap.put(myConceptFunctionMethodDeclaration.getId(), 9);
    myIndexMap.put(myConceptFunctionType.getId(), 10);
    myIndexMap.put(myConceptInvokeExpression.getId(), 11);
    myIndexMap.put(myConceptInvokeFunctionExpression.getId(), 12);
    myIndexMap.put(myConceptInvokeFunctionOperation.getId(), 13);
    myIndexMap.put(myConceptPairOfInts.getId(), 14);
    myIndexMap.put(myConceptStringPropertyHolder.getId(), 15);
    myIndexMap.put(myConceptUnboundClosureParameterDeclaration.getId(), 16);
    myIndexMap.put(myConceptUnrestrictedClosureLiteral.getId(), 17);
    myIndexMap.put(myConceptUnrestrictedFunctionType.getId(), 18);
    myIndexMap.put(myConceptYieldAllStatement.getId(), 19);
    myIndexMap.put(myConceptYieldStatement.getId(), 20);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractFunctionType, myConceptClosureArgReference, myConceptClosureControlStatement, myConceptClosureLiteral, myConceptClosureLiteralType, myConceptCompactInvokeFunctionExpression, myConceptControlAbstractionContainer, myConceptControlAbstractionDeclaration, myConceptControlClosureLiteral, myConceptFunctionMethodDeclaration, myConceptFunctionType, myConceptInvokeExpression, myConceptInvokeFunctionExpression, myConceptInvokeFunctionOperation, myConceptPairOfInts, myConceptStringPropertyHolder, myConceptUnboundClosureParameterDeclaration, myConceptUnrestrictedClosureLiteral, myConceptUnrestrictedFunctionType, myConceptYieldAllStatement, myConceptYieldStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractFunctionType;
      case 1:
        return myConceptClosureArgReference;
      case 2:
        return myConceptClosureControlStatement;
      case 3:
        return myConceptClosureLiteral;
      case 4:
        return myConceptClosureLiteralType;
      case 5:
        return myConceptCompactInvokeFunctionExpression;
      case 6:
        return myConceptControlAbstractionContainer;
      case 7:
        return myConceptControlAbstractionDeclaration;
      case 8:
        return myConceptControlClosureLiteral;
      case 9:
        return myConceptFunctionMethodDeclaration;
      case 10:
        return myConceptFunctionType;
      case 11:
        return myConceptInvokeExpression;
      case 12:
        return myConceptInvokeFunctionExpression;
      case 13:
        return myConceptInvokeFunctionOperation;
      case 14:
        return myConceptPairOfInts;
      case 15:
        return myConceptStringPropertyHolder;
      case 16:
        return myConceptUnboundClosureParameterDeclaration;
      case 17:
        return myConceptUnrestrictedClosureLiteral;
      case 18:
        return myConceptUnrestrictedFunctionType;
      case 19:
        return myConceptYieldAllStatement;
      case 20:
        return myConceptYieldStatement;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForAbstractFunctionType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.AbstractFunctionType", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x4de23a15f719357dL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4de23a15f719357eL, "parameterType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, true, false), new ConceptDescriptorBuilder.Link(0x4de23a15f719357fL, "resultType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"parameterType", "resultType"}, new boolean[]{true, false}).alias("{ ~~> }", "abstract function type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "5612111951671407997")).create();
  }
  private static ConceptDescriptor createDescriptorForClosureArgReference() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ClosureArgReference", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x5620d42a452422c7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5620d42a45242312L, "original", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L), false, false, false)).children(new String[]{"original"}, new boolean[]{false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "6206193564530254535")).create();
  }
  private static ConceptDescriptor createDescriptorForClosureControlStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ClosureControlStatement", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49cfed99L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x11e4ba658c8L, "controlMethod", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbbebabf0aL), false)).references("controlMethod").childDescriptors(new ConceptDescriptorBuilder.Link(0x11ef552e307L, "controlClosure", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49d1841dL), false, false, false), new ConceptDescriptorBuilder.Link(0x11e4ba7ffe1L, "actualParameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"controlClosure", "actualParameter"}, new boolean[]{false, true}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229599010201")).create();
  }
  private static ConceptDescriptor createDescriptorForClosureLiteral() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.IStatementListContainer", "jetbrains.mps.baseLanguage.structure.IContainsStatementList", "jetbrains.mps.baseLanguage.structure.IMethodLike", "jetbrains.mps.baseLanguage.structure.IFinalWrapper", "jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x120237c2cebL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4dfebb23d6d75dcaL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x7c8556154508e980L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xc5cbfc0eeac457bL, "forceMultiLine")).properties("forceMultiLine").childDescriptors(new ConceptDescriptorBuilder.Link(0x1174bf02c34L, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L), true, true, false), new ConceptDescriptorBuilder.Link(0x1174bf0522fL, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"parameter", "body"}, new boolean[]{true, false}).alias("{ => <body> }", "closure literal").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1199569711397")).create();
  }
  private static ConceptDescriptor createDescriptorForClosureLiteralType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteralType", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0xe8770ba07b68051L)).super_("jetbrains.mps.baseLanguage.closures.structure.FunctionType").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL)).parents("jetbrains.mps.baseLanguage.closures.structure.FunctionType", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault", "jetbrains.mps.baseLanguage.structure.IInternalType").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x118cd59904dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1046929382682558545")).create();
  }
  private static ConceptDescriptor createDescriptorForCompactInvokeFunctionExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.CompactInvokeFunctionExpression", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11fb8425aa8L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11fb842c1adL, "function", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(0x11fb842da3eL, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"function", "parameter"}, new boolean[]{false, true}).alias("", "invoke function").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1235746970280")).create();
  }
  private static ConceptDescriptor createDescriptorForControlAbstractionContainer() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionContainer", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49db3870L)).super_("jetbrains.mps.baseLanguage.structure.Classifier").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L)).parents("jetbrains.mps.baseLanguage.structure.Classifier", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11e49eb4129L, "controlAbstraction", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49dc8097L), true, true, false)).children(new String[]{"controlAbstraction"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229599750256")).create();
  }
  private static ConceptDescriptor createDescriptorForControlAbstractionDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionDeclaration", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49dc8097L)).super_("jetbrains.mps.baseLanguage.structure.GenericDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL)).parents("jetbrains.mps.baseLanguage.structure.GenericDeclaration", "jetbrains.mps.baseLanguage.structure.ClassifierMember", "jetbrains.mps.lang.core.structure.IResolveInfo", "jetbrains.mps.baseLanguage.structure.HasAnnotation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x116b17c6e46L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11e49e00275L, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L), true, true, false), new ConceptDescriptorBuilder.Link(0x11e49dfc8a3L, "body", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"parameter", "body"}, new boolean[]{true, false}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229599834263")).create();
  }
  private static ConceptDescriptor createDescriptorForControlClosureLiteral() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49d1841dL)).super_("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49cdf7cbL)).parents("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49cdf7cbL)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229599114269")).create();
  }
  private static ConceptDescriptor createDescriptorForFunctionMethodDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.FunctionMethodDeclaration", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x42d79e63a78a7784L)).super_("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL)).parents("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL)).alias("function", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "4816492477345855364")).create();
  }
  private static ConceptDescriptor createDescriptorForFunctionType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.FunctionType", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.baseLanguage.structure.IGenericType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x38ff5220e0ac710dL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x16630bea72d45e9L, "runtimeIface", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L), true)).references("runtimeIface").childDescriptors(new ConceptDescriptorBuilder.Link(0x1174a4e013cL, "parameterType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, true, false), new ConceptDescriptorBuilder.Link(0x1174a4d5371L, "resultType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false), new ConceptDescriptorBuilder.Link(0x11ad99d9c36L, "throwsType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), true, true, false)).children(new String[]{"parameterType", "resultType", "throwsType"}, new boolean[]{true, false, true}).alias("{ => }", "function type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1199542442495")).create();
  }
  private static ConceptDescriptor createDescriptorForInvokeExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.InvokeExpression", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x117545d385aL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x117545e58d8L, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"parameter"}, new boolean[]{true}).alias("invoke", "this function invocation expression").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1199711271002")).create();
  }
  private static ConceptDescriptor createDescriptorForInvokeFunctionExpression() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionExpression", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a964795L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDeprecatable", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11d205fe38dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1174a96b8d9L, "function", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(0x1174aa207d4L, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"function", "parameter"}, new boolean[]{false, true}).alias("invoke", "function invocation expression").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1199547238293")).create();
  }
  private static ConceptDescriptor createDescriptorForInvokeFunctionOperation() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11d67349093L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11d67375fccL, "parameter", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"parameter"}, new boolean[]{true}).alias("invoke", "invoke function").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1225797177491")).create();
  }
  private static ConceptDescriptor createDescriptorForPairOfInts() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.PairOfInts", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11ae0cda05aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11ae0ce97c7L, "first"), new ConceptDescriptorBuilder.Prop(0x11ae0cea6c7L, "second")).properties("first", "second").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1214952349786")).create();
  }
  private static ConceptDescriptor createDescriptorForStringPropertyHolder() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.StringPropertyHolder", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11ae0d18e07L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11ae0d1eac1L, "value")).properties("value").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1214952607239")).create();
  }
  private static ConceptDescriptor createDescriptorForUnboundClosureParameterDeclaration() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x118276b7086L)).super_("jetbrains.mps.baseLanguage.structure.ParameterDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L)).parents("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).abstract_().alias("? <name>", "unbound closure parameter declaration").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1203252195462")).create();
  }
  private static ConceptDescriptor createDescriptorForUnrestrictedClosureLiteral() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e49cdf7cbL)).super_("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).parents("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174bed3125L)).alias("{ ==> <body> }", "unrestricted closure literal").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229598881739")).create();
  }
  private static ConceptDescriptor createDescriptorForUnrestrictedFunctionType() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e505b9d83L)).super_("jetbrains.mps.baseLanguage.closures.structure.FunctionType").version(1).super_(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL)).parents("jetbrains.mps.baseLanguage.closures.structure.FunctionType").parentIds(MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11eda2b270fL, "terminateType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"terminateType"}, new boolean[]{false}).alias("{ ==> }", "unrestricted function type").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1229708828035")).create();
  }
  private static ConceptDescriptor createDescriptorForYieldAllStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.YieldAllStatement", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11e25fc6c63L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11e25fc9ed1L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("yieldAll", "yield all elements in a sequence").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1228997946467")).create();
  }
  private static ConceptDescriptor createDescriptorForYieldStatement() {
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.closures.structure.YieldStatement", MetaIdFactory.conceptId(0xfd3920347849419dL, 0x907112563d152375L, 0x11797183e82L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1179719d515L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("yield", "yield next element").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590338(jetbrains.mps.baseLanguage.closures.structure)", "1200830824066")).create();
  }
}
