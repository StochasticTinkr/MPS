package jetbrains.mps.baseLanguage.closures.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.List;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class ClosureLiteralType_DELETE {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new ClosureLiteralType_DELETE.ClosureLiteralType_DELETE_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new ClosureLiteralType_DELETE.ClosureLiteralType_DELETE_BACKSPACE(node));
  }
  public static class ClosureLiteralType_DELETE_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public ClosureLiteralType_DELETE_DELETE(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "make a function type";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode clt = node;
      SNodeOperations.replaceWithAnother(node, _quotation_createNode_4pw826_a0a1a0a(SLinkOperations.getChildren(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4e013cL, "parameterType")), SLinkOperations.getTarget(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4d5371L, "resultType")), SLinkOperations.getChildren(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x11ad99d9c36L, "throwsType"))));
    }
    private static SNode _quotation_createNode_4pw826_a0a1a0a(Object parameter_1, Object parameter_2, Object parameter_3) {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xfd3920347849419dL, 0x907112563d152375L, "jetbrains.mps.baseLanguage.closures"), 0x1174a4d19ffL, "FunctionType"), null, null, false);
      {
        List<SNode> nodes = (List<SNode>) parameter_1;
        for (SNode child : nodes) {
          quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4e013cL, "parameterType"), HUtil.copyIfNecessary(child));
        }
      }
      quotedNode_6 = (SNode) parameter_2;
      if (quotedNode_6 != null) {
        quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4d5371L, "resultType"), HUtil.copyIfNecessary(quotedNode_6));
      }
      {
        List<SNode> nodes = (List<SNode>) parameter_3;
        for (SNode child : nodes) {
          quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x11ad99d9c36L, "throwsType"), HUtil.copyIfNecessary(child));
        }
      }
      return quotedNode_4;
    }
  }
  public static class ClosureLiteralType_DELETE_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public ClosureLiteralType_DELETE_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "make a function type";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode clt = node;
      SNodeOperations.replaceWithAnother(node, _quotation_createNode_4pw826_a0a1a0a(SLinkOperations.getChildren(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4e013cL, "parameterType")), SLinkOperations.getTarget(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4d5371L, "resultType")), SLinkOperations.getChildren(clt, MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x11ad99d9c36L, "throwsType"))));
    }
    private static SNode _quotation_createNode_4pw826_a0a1a0a(Object parameter_1, Object parameter_2, Object parameter_3) {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xfd3920347849419dL, 0x907112563d152375L, "jetbrains.mps.baseLanguage.closures"), 0x1174a4d19ffL, "FunctionType"), null, null, false);
      {
        List<SNode> nodes = (List<SNode>) parameter_1;
        for (SNode child : nodes) {
          quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4e013cL, "parameterType"), HUtil.copyIfNecessary(child));
        }
      }
      quotedNode_6 = (SNode) parameter_2;
      if (quotedNode_6 != null) {
        quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x1174a4d5371L, "resultType"), HUtil.copyIfNecessary(quotedNode_6));
      }
      {
        List<SNode> nodes = (List<SNode>) parameter_3;
        for (SNode child : nodes) {
          quotedNode_4.addChild(MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL, 0x907112563d152375L, 0x1174a4d19ffL, 0x11ad99d9c36L, "throwsType"), HUtil.copyIfNecessary(child));
        }
      }
      return quotedNode_4;
    }
  }
}
