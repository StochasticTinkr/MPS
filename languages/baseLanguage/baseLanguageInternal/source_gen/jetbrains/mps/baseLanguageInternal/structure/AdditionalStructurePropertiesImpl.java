package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AdditionalStructurePropertiesImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ConstantValue = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStatementListExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStatementListInnerExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStaticInnerClassConcept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStaticInnerClassCreator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStaticInnerClassExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStaticMethodExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractStaticMethod_CallExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractToConstantExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExtractToConstantRefExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalAnonymousClass = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalAnonymousClassCreator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalClassCreator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalClassExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalClassifierType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalNewExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalPartialFieldReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalPartialInstanceMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalStaticFieldReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalStaticMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalSuperMethodCallOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalThisExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalTypedStaticFieldReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalVariableReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TypeHintExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_WeakClassReference = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0bb.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_ConstantValue;
          }
          break;
        case 1:
          if (true) {
            return props_ExtractStatementListExpression;
          }
          break;
        case 2:
          if (true) {
            return props_ExtractStatementListInnerExpression;
          }
          break;
        case 3:
          if (true) {
            return props_ExtractStaticInnerClassConcept;
          }
          break;
        case 4:
          if (true) {
            return props_ExtractStaticInnerClassCreator;
          }
          break;
        case 5:
          if (true) {
            return props_ExtractStaticInnerClassExpression;
          }
          break;
        case 6:
          if (true) {
            return props_ExtractStaticMethodExpression;
          }
          break;
        case 7:
          if (true) {
            return props_ExtractStaticMethod_CallExpression;
          }
          break;
        case 8:
          if (true) {
            return props_ExtractToConstantExpression;
          }
          break;
        case 9:
          if (true) {
            return props_ExtractToConstantRefExpression;
          }
          break;
        case 10:
          if (true) {
            return props_InternalAnonymousClass;
          }
          break;
        case 11:
          if (true) {
            return props_InternalAnonymousClassCreator;
          }
          break;
        case 12:
          if (true) {
            return props_InternalClassCreator;
          }
          break;
        case 13:
          if (true) {
            return props_InternalClassExpression;
          }
          break;
        case 14:
          if (true) {
            return props_InternalClassifierType;
          }
          break;
        case 15:
          if (true) {
            return props_InternalNewExpression;
          }
          break;
        case 16:
          if (true) {
            return props_InternalPartialFieldReference;
          }
          break;
        case 17:
          if (true) {
            return props_InternalPartialInstanceMethodCall;
          }
          break;
        case 18:
          if (true) {
            return props_InternalStaticFieldReference;
          }
          break;
        case 19:
          if (true) {
            return props_InternalStaticMethodCall;
          }
          break;
        case 20:
          if (true) {
            return props_InternalSuperMethodCallOperation;
          }
          break;
        case 21:
          if (true) {
            return props_InternalThisExpression;
          }
          break;
        case 22:
          if (true) {
            return props_InternalTypedStaticFieldReference;
          }
          break;
        case 23:
          if (true) {
            return props_InternalVariableReference;
          }
          break;
        case 24:
          if (true) {
            return props_TypeHintExpression;
          }
          break;
        case 25:
          if (true) {
            return props_WeakClassReference;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0bb = buildConceptIndices(MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x16007da97856bd8aL, "ConstantValue"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2c5dbc7b762fd2a7L, "ExtractStatementListExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2c5dbc7b763512c9L, "ExtractStatementListInnerExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0xd01bb6e8b1cd97aL, "ExtractStaticInnerClassConcept"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x50cc34ef144c9181L, "ExtractStaticInnerClassCreator"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x6b63d4344723dac8L, "ExtractStaticInnerClassExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x31c3f88088ea0ac4L, "ExtractStaticMethodExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x31c3f88088ed999aL, "ExtractStaticMethod_CallExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1204d897032L, "ExtractToConstantExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x162724dabcdc671L, "ExtractToConstantRefExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, "InternalAnonymousClass"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746808L, "InternalAnonymousClassCreator"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0xf46f1c42ee50930L, "InternalClassCreator"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1117461827dL, "InternalClassExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1118e558c6dL, "InternalClassifierType"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157a3736dL, "InternalNewExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1122dd58737L, "InternalPartialFieldReference"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1116962fa68L, "InternalPartialInstanceMethodCall"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157912ec1L, "InternalStaticFieldReference"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1115749abe3L, "InternalStaticMethodCall"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x33c9311d003a97d3L, "InternalSuperMethodCallOperation"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1180ebdd5b4L, "InternalThisExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x7232370459dfc310L, "InternalTypedStaticFieldReference"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x111fb5bb1f2L, "InternalVariableReference"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11763791866L, "TypeHintExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x7a00a2a7a8b080daL, "WeakClassReference"));
}
