package jetbrains.mps.baseLanguageInternal.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myInternalStaticMethodCall__BehaviorDescriptor = new InternalStaticMethodCall__BehaviorDescriptor();
  private final BHDescriptor myInternalNewExpression__BehaviorDescriptor = new InternalNewExpression__BehaviorDescriptor();
  private final BHDescriptor myInternalPartialInstanceMethodCall__BehaviorDescriptor = new InternalPartialInstanceMethodCall__BehaviorDescriptor();
  private final BHDescriptor myInternalVariableReference__BehaviorDescriptor = new InternalVariableReference__BehaviorDescriptor();
  private final BHDescriptor myInternalPartialFieldReference__BehaviorDescriptor = new InternalPartialFieldReference__BehaviorDescriptor();
  private final BHDescriptor myInternalClassCreator__BehaviorDescriptor = new InternalClassCreator__BehaviorDescriptor();
  private final BHDescriptor myExtractStatementListExpression__BehaviorDescriptor = new ExtractStatementListExpression__BehaviorDescriptor();
  private final BHDescriptor myInternalAnonymousClass__BehaviorDescriptor = new InternalAnonymousClass__BehaviorDescriptor();
  private final BHDescriptor myExtractStaticMethodExpression__BehaviorDescriptor = new ExtractStaticMethodExpression__BehaviorDescriptor();
  private final BHDescriptor myExtractStaticMethod_CallExpression__BehaviorDescriptor = new ExtractStaticMethod_CallExpression__BehaviorDescriptor();
  private final BHDescriptor myInternalSuperMethodCallOperation__BehaviorDescriptor = new InternalSuperMethodCallOperation__BehaviorDescriptor();
  private final BHDescriptor myExtractStaticInnerClassExpression__BehaviorDescriptor = new ExtractStaticInnerClassExpression__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0p.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          return myExtractStatementListExpression__BehaviorDescriptor;
        case 1:
          return myExtractStaticInnerClassExpression__BehaviorDescriptor;
        case 2:
          return myExtractStaticMethodExpression__BehaviorDescriptor;
        case 3:
          return myExtractStaticMethod_CallExpression__BehaviorDescriptor;
        case 4:
          return myInternalAnonymousClass__BehaviorDescriptor;
        case 5:
          return myInternalClassCreator__BehaviorDescriptor;
        case 6:
          return myInternalNewExpression__BehaviorDescriptor;
        case 7:
          return myInternalPartialFieldReference__BehaviorDescriptor;
        case 8:
          return myInternalPartialInstanceMethodCall__BehaviorDescriptor;
        case 9:
          return myInternalStaticMethodCall__BehaviorDescriptor;
        case 10:
          return myInternalSuperMethodCallOperation__BehaviorDescriptor;
        case 11:
          return myInternalVariableReference__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0p = buildConceptIndices(MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2c5dbc7b762fd2a7L, "jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x6b63d4344723dac8L, "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x31c3f88088ea0ac4L, "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticMethodExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x31c3f88088ed999aL, "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticMethod_CallExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, "jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClass"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0xf46f1c42ee50930L, "jetbrains.mps.baseLanguageInternal.structure.InternalClassCreator"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157a3736dL, "jetbrains.mps.baseLanguageInternal.structure.InternalNewExpression"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1122dd58737L, "jetbrains.mps.baseLanguageInternal.structure.InternalPartialFieldReference"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1116962fa68L, "jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x1115749abe3L, "jetbrains.mps.baseLanguageInternal.structure.InternalStaticMethodCall"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x33c9311d003a97d3L, "jetbrains.mps.baseLanguageInternal.structure.InternalSuperMethodCallOperation"), MetaAdapterFactory.getConcept(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x111fb5bb1f2L, "jetbrains.mps.baseLanguageInternal.structure.InternalVariableReference"));
}
