package jetbrains.mps.baseLanguage.classifiers.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BaseClassifierType = 0;
  public static final int DefaultClassifier = 1;
  public static final int DefaultClassifierFieldAccessOperation = 2;
  public static final int DefaultClassifierFieldDeclaration = 3;
  public static final int DefaultClassifierMethodCallOperation = 4;
  public static final int DefaultClassifierMethodDeclaration = 5;
  public static final int DefaultClassifierType = 6;
  public static final int IClassifier = 7;
  public static final int IClassifierPart = 8;
  public static final int IMember = 9;
  public static final int IMemberOperation = 10;
  public static final int SuperClassifierExpresson = 11;
  public static final int ThisClassifierExpression = 12;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL);
    builder.put(0x118bc77d845L, BaseClassifierType);
    builder.put(0xe48d14bf726e967L, DefaultClassifier);
    builder.put(0x11aa7fc7570L, DefaultClassifierFieldAccessOperation);
    builder.put(0x11aa7fc0293L, DefaultClassifierFieldDeclaration);
    builder.put(0x118bd711e29L, DefaultClassifierMethodCallOperation);
    builder.put(0x118bd6ee3c3L, DefaultClassifierMethodDeclaration);
    builder.put(0x118bc7942feL, DefaultClassifierType);
    builder.put(0x118bc6b2af5L, IClassifier);
    builder.put(0x118bc6e188eL, IClassifierPart);
    builder.put(0x118bc6becc0L, IMember);
    builder.put(0x118bca97396L, IMemberOperation);
    builder.put(0x11b74b0357cL, SuperClassifierExpresson);
    builder.put(0x118bc751a81L, ThisClassifierExpression);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
