package jetbrains.mps.baseLanguage.classifiers.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(13);
  /*package*/ final ConceptDescriptor myConceptBaseClassifierType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc77d845L)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205752813637")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifier = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0xe48d14bf726e967L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xe48d14bf726f30cL, "field", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11aa7fc0293L), true, true, false), new ConceptDescriptorBuilder.Link(0xe48d14bf726f30dL, "method", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd6ee3c3L), true, true, false)).children(new String[]{"field", "method"}, new boolean[]{true, true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1029302639053433191")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifierFieldAccessOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldAccessOperation", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11aa7fc7570L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bca97396L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1213999117680")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifierFieldDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11aa7fc0293L)).super_("jetbrains.mps.baseLanguage.structure.FieldDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L)).parents("jetbrains.mps.baseLanguage.structure.FieldDeclaration", "jetbrains.mps.baseLanguage.classifiers.structure.IMember").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6becc0L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1213999088275")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifierMethodCallOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd711e29L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bca97396L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x118bd877799L, "actualArgument", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"actualArgument"}, new boolean[]{true}).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205769149993")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifierMethodDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd6ee3c3L)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", "jetbrains.mps.baseLanguage.classifiers.structure.IMember", "jetbrains.mps.baseLanguage.structure.IVisible").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6becc0L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205769003971")).create();
  /*package*/ final ConceptDescriptor myConceptDefaultClassifierType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierType", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc7942feL)).super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").super_(MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc77d845L)).parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parentIds(MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc77d845L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x118bc796c90L, "classifier", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L), false)).references("classifier").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205752906494")).create();
  /*package*/ final ConceptDescriptor myConceptIClassifier = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.IClassifier", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L)).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.structure.IExtractMethodAvailable").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11c60bb0a14L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205751982837")).create();
  /*package*/ final ConceptDescriptor myConceptIClassifierPart = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.IClassifierPart", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6e188eL)).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205752174734")).create();
  /*package*/ final ConceptDescriptor myConceptIMember = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.IMember", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6becc0L)).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205752032448")).create();
  /*package*/ final ConceptDescriptor myConceptIMemberOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bca97396L)).interface_().parents("jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x118bcb657ecL, "member", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6becc0L), false)).references("member").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205756064662")).create();
  /*package*/ final ConceptDescriptor myConceptSuperClassifierExpresson = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.SuperClassifierExpresson", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x11b74b0357cL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("super", "super classifier").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1217433449852")).create();
  /*package*/ final ConceptDescriptor myConceptThisClassifierExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc751a81L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.IThisExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d206f8d91L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x11bc25d4bc3L, "classifier", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L), true)).references("classifier").alias("this", "this classifier").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590373(jetbrains.mps.baseLanguage.classifiers.structure)", "1205752633985")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptBaseClassifierType.getId(), 0);
    myIndexMap.put(myConceptDefaultClassifier.getId(), 1);
    myIndexMap.put(myConceptDefaultClassifierFieldAccessOperation.getId(), 2);
    myIndexMap.put(myConceptDefaultClassifierFieldDeclaration.getId(), 3);
    myIndexMap.put(myConceptDefaultClassifierMethodCallOperation.getId(), 4);
    myIndexMap.put(myConceptDefaultClassifierMethodDeclaration.getId(), 5);
    myIndexMap.put(myConceptDefaultClassifierType.getId(), 6);
    myIndexMap.put(myConceptIClassifier.getId(), 7);
    myIndexMap.put(myConceptIClassifierPart.getId(), 8);
    myIndexMap.put(myConceptIMember.getId(), 9);
    myIndexMap.put(myConceptIMemberOperation.getId(), 10);
    myIndexMap.put(myConceptSuperClassifierExpresson.getId(), 11);
    myIndexMap.put(myConceptThisClassifierExpression.getId(), 12);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseClassifierType, myConceptDefaultClassifier, myConceptDefaultClassifierFieldAccessOperation, myConceptDefaultClassifierFieldDeclaration, myConceptDefaultClassifierMethodCallOperation, myConceptDefaultClassifierMethodDeclaration, myConceptDefaultClassifierType, myConceptIClassifier, myConceptIClassifierPart, myConceptIMember, myConceptIMemberOperation, myConceptSuperClassifierExpresson, myConceptThisClassifierExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptBaseClassifierType;
      case 1:
        return myConceptDefaultClassifier;
      case 2:
        return myConceptDefaultClassifierFieldAccessOperation;
      case 3:
        return myConceptDefaultClassifierFieldDeclaration;
      case 4:
        return myConceptDefaultClassifierMethodCallOperation;
      case 5:
        return myConceptDefaultClassifierMethodDeclaration;
      case 6:
        return myConceptDefaultClassifierType;
      case 7:
        return myConceptIClassifier;
      case 8:
        return myConceptIClassifierPart;
      case 9:
        return myConceptIMember;
      case 10:
        return myConceptIMemberOperation;
      case 11:
        return myConceptSuperClassifierExpresson;
      case 12:
        return myConceptThisClassifierExpression;
      default:
        throw new IllegalStateException();
    }
  }
}
