package jetbrains.mps.baseLanguage.tuples.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIndexedTupleType__BehaviorDescriptor = new IndexedTupleType__BehaviorDescriptor();
  private final BHDescriptor myIndexedTupleLiteral__BehaviorDescriptor = new IndexedTupleLiteral__BehaviorDescriptor();
  private final BHDescriptor myIndexedTupleMemberAccessExpression__BehaviorDescriptor = new IndexedTupleMemberAccessExpression__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleDeclaration__BehaviorDescriptor = new NamedTupleDeclaration__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleComponentDeclaration__BehaviorDescriptor = new NamedTupleComponentDeclaration__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleType__BehaviorDescriptor = new NamedTupleType__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleLiteral__BehaviorDescriptor = new NamedTupleLiteral__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleComponentAccessOperation__BehaviorDescriptor = new NamedTupleComponentAccessOperation__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0l.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myIndexedTupleLiteral__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myIndexedTupleMemberAccessExpression__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myIndexedTupleType__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myNamedTupleComponentAccessOperation__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myNamedTupleComponentDeclaration__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myNamedTupleDeclaration__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myNamedTupleLiteral__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myNamedTupleType__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0l = buildConceptIndices(MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x12071708c13L, "jetbrains.mps.baseLanguage.tuples.structure.IndexedTupleLiteral"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x12071acfb50L, "jetbrains.mps.baseLanguage.tuples.structure.IndexedTupleMemberAccessExpression"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1207157a8dcL, "jetbrains.mps.baseLanguage.tuples.structure.IndexedTupleType"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1209c84a4eaL, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleComponentAccessOperation"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x12095b3e54fL, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleComponentDeclaration"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1208fa48aa5L, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleDeclaration"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1209b88731cL, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleLiteral"), MetaAdapterFactory.getConcept(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x12099dc1365L, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType"));
}
