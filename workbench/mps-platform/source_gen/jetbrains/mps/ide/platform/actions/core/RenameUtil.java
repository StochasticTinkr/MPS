package jetbrains.mps.ide.platform.actions.core;

/*Generated by MPS */

import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import org.apache.log4j.Level;

public class RenameUtil {
  protected static Logger LOG = LogManager.getLogger(RenameUtil.class);
  public static boolean canBeRenamed(SNode node) {
    // we won't rename nodes, for which there are registered name constrints 
    // if there are constrints, but they are not compiled, we can rename it 
    String nameProperty = "name";
    ConstraintsDescriptor cd = ConceptRegistry.getInstance().getConstraintsDescriptor(node.getConcept());
    PropertyConstraintsDescriptor property = cd.getProperty(nameProperty);
    if (property == null) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error("RenameUtil.canBeRenamed() called for property " + nameProperty + " with no constrints descriptor. Node:" + node.getPresentation());
      }
      return false;
    }
    return !((property.isReadOnly()));
  }
}
