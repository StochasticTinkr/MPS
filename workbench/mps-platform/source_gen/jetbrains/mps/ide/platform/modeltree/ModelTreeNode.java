package jetbrains.mps.ide.platform.modeltree;

/*Generated by MPS */

import javax.swing.tree.DefaultMutableTreeNode;
import jetbrains.mps.references.Reference;
import javax.swing.Icon;

public class ModelTreeNode extends DefaultMutableTreeNode {
  private String myText;
  public String getText() {
    return this.myText;
  }
  private void _setText(String value) {
    this.myText = value;
  }
  private String setText(String value) {
    _setText(value);
    return value;
  }
  private void refToText() {
    new Reference<String>() {
      public String get() {
        return getText();
      }
      public void set(String value) {
        _setText(value);
      }
    };
  }
  private boolean myLeafPosition;
  public boolean isLeafPosition() {
    return this.myLeafPosition;
  }
  private void _setLeafPosition(boolean value) {
    this.myLeafPosition = value;
  }
  public boolean setLeafPosition(boolean value) {
    _setLeafPosition(value);
    return value;
  }
  public void refToLeafPosition() {
    new Reference<Boolean>() {
      public Boolean get() {
        return isLeafPosition();
      }
      public void set(Boolean value) {
        _setLeafPosition(value);
      }
    };
  }
  private boolean myInitialized;
  public boolean isInitialized() {
    return this.myInitialized;
  }
  private void _setInitialized(boolean value) {
    this.myInitialized = value;
  }
  public boolean setInitialized(boolean value) {
    _setInitialized(value);
    return value;
  }
  public void refToInitialized() {
    new Reference<Boolean>() {
      public Boolean get() {
        return isInitialized();
      }
      public void set(Boolean value) {
        _setInitialized(value);
      }
    };
  }
  private Icon myCollapsedIcon;
  private Icon myExpandedIcon;
  public ModelTreeNode(String label) {
    this(label, null, label);
  }
  public ModelTreeNode(String label, Icon icon, Icon expandedIcon) {
    this(label, icon, label);
    myExpandedIcon = expandedIcon;
  }
  public ModelTreeNode(String label, Icon icon, Object data) {
    super(data);
    setText(label);
    myCollapsedIcon = icon;
    setLeafPosition(false);
    setInitialized(true);
  }
  @Override
  public boolean isLeaf() {
    if (!(isLeafPosition()) && getChildCount() == 0) {
      return false;
    }
    return super.isLeaf();
  }
  @Override
  public String toString() {
    return getText();
  }
  public Icon getIcon(boolean expanded) {
    return (expanded && myExpandedIcon != null ? myExpandedIcon : myCollapsedIcon);
  }
}
