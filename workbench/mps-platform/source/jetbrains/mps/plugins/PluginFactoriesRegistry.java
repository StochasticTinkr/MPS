/*
 * Copyright 2003-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.plugins;

import jetbrains.mps.util.annotation.ToRemove;
import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * Dangerous code; must not be used.
 * Use {@link PluginLoaderRegistry#loadContributors} and {@link PluginLoaderRegistry#unloadContributors} instead
 * @deprecated this regisry is left for compatibility with code generated by MPS 2017.2, and could be removed once 2017.3 is out.
 *             These days, contributors are registered through {@linkplain ComponentContributorExtension extension point}.
 */
@ToRemove(version = 3.3)
@Deprecated
public class PluginFactoriesRegistry {
  private static Collection<AbstractPluginFactory> ourPluginFactories = new ArrayList<AbstractPluginFactory>();

  // must NOT be called from reloadable code. Notice that these contributors are never unregistered. Potential memory leak!
  public synchronized static void registerPluginFactory(@NotNull AbstractPluginFactory contributor) {
    ourPluginFactories.add(contributor);
  }

  public synchronized static Collection<AbstractPluginFactory> flush() {
    List<AbstractPluginFactory> factories = new ArrayList<AbstractPluginFactory>(ourPluginFactories);
    ourPluginFactories.clear();
    return factories;
  }
}
