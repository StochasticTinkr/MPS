package jetbrains.mps.ide.newModuleDialogs;

/*Generated by MPS */

import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.project.MPSProject;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.ide.newSolutionDialog.CloneModuleUtil;
import jetbrains.mps.project.StandaloneMPSProject;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.project.MPSExtentions;
import jetbrains.mps.project.Solution;
import jetbrains.mps.ide.ui.dialogs.modules.CloneModuleSettings;
import org.jetbrains.annotations.NonNls;

public class CloneModuleDialog extends AbstractModuleCreationDialog {

  private final AbstractModule myModuleOriginal;

  public CloneModuleDialog(MPSProject project, @Nullable String virtualFolder, AbstractModule moduleOrginal) {
    super(project, virtualFolder);
    setTitle("Clone Module " + moduleOrginal.getModuleName());

    myModuleOriginal = moduleOrginal;
    init();
  }

  @Override
  protected void runCreation() {
    myResult = CloneModuleUtil.cloneModule(mySettings.getModuleName(), mySettings.getModuleLocation(), myProject, myModuleOriginal, getExtension());
    ((StandaloneMPSProject) myProject).setFolderFor(myResult, myVirtualFolder);
  }

  @Override
  protected String getExtension() {
    if (myModuleOriginal instanceof Language) {
      return MPSExtentions.DOT_LANGUAGE;
    }
    if (myModuleOriginal instanceof Solution) {
      return MPSExtentions.DOT_SOLUTION;
    }
    return null;
  }

  @Override
  protected CloneModuleSettings createSettingsInstance() {
    return new CloneModuleSettings(getProjectPath(), myModuleOriginal);
  }


  @Nullable
  @NonNls
  @Override
  protected String getDimensionServiceKey() {
    return CloneModuleDialog.class.getName();
  }
}
