package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import com.intellij.openapi.extensions.PluginId;
import java.util.List;
import jetbrains.mps.plugins.actions.BaseKeymapChanges;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Ide_ApplicationPlugin extends BaseApplicationPlugin {
  private PluginId myId = PluginId.getId("jetbrains.mps.ide");
  public Ide_ApplicationPlugin() {
  }
  public PluginId getId() {
    return myId;
  }
  public void createGroups() {
    // actions w/o parameters 
    addAction(new AddModuleToProject_Action());
    addAction(new AddToNewFavoritesList_Action());
    addAction(new AnalyzeModuleDependencies_Action());
    addAction(new AnalyzeStacktrace_Action());
    addAction(new CalcClassifiersInRootsStatistic_Action());
    addAction(new CalcSNodeStatistic_Action());
    addAction(new CloneModel_Action());
    addAction(new CloneRoot_Action());
    addAction(new ConvertToBinaryPersistence_Action());
    addAction(new ConvertToFilePerRootPersistence_Action());
    addAction(new CopyModelName_Action());
    addAction(new CopyModuleName_Action());
    addAction(new CopyNodeName_Action());
    addAction(new CopyNodeReference_Action());
    addAction(new CopyNode_Action());
    addAction(new CutNode_Action());
    addAction(new DeleteFavoritesList_Action());
    addAction(new DeleteModels_Action());
    addAction(new DeleteModules_Action());
    addAction(new DeleteNode_Action());
    addAction(new DeletePropertyAction_Action());
    addAction(new DeleteReferenceAction_Action());
    addAction(new ExpandNode_Action());
    addAction(new FastFindNodeUsages_Action());
    addAction(new FindConceptInstances_Action());
    addAction(new FindModelUsages_Action());
    addAction(new FindRootableConceptsWithoutIcons_Action());
    addAction(new FindSpecificNodeUsages_Action());
    addAction(new FindUnusedAndDeprecatedConcepts_Action());
    addAction(new FixModuleImportsInProject_Action());
    addAction(new FixModuleImports_Action());
    addAction(new ForcedSaveAll_Action());
    addAction(new GoByCurrentReferenceToIDEA_Action());
    addAction(new GoToModel_Action());
    addAction(new GoToModule_Action());
    addAction(new GoToNode_Action());
    addAction(new GoToRule_Action());
    addAction(new HighlightInstances_Action());
    addAction(new HighlightUsages_Action());
    addAction(new MPSProjectPaths_Action());
    addAction(new ModelProperties_Action());
    addAction(new ModuleProperties_Action());
    addAction(new MoveFileOrDirectory_Action());
    addAction(new MoveModel_Action());
    addAction(new NewDirectory_Action());
    addAction(new NewElement_Action());
    addAction(new NewFile_Action());
    addAction(new NewModel_Action());
    addAction(new NewRuntimeModule_Action());
    addAction(new NewSolution_Action());
    addAction(new NewSubModel_Action());
    addAction(new NewSubTestModel_Action());
    addAction(new OptimizeModelImports_Action());
    addAction(new OptimizeModuleImports_Action());
    addAction(new OptimizeProjectImports_Action());
    addAction(new PasteNode_Action());
    addAction(new PrintNodePosition_Action());
    addAction(new RemoveAllBookmarks_Action());
    addAction(new RemoveFromFavorites_Action());
    addAction(new RemoveModuleFromProject_Action());
    addAction(new RemoveTransientModels_Action());
    addAction(new RenameFavoritesList_Action());
    addAction(new RenameFileOrDirectory_Action());
    addAction(new RenameModel_Action());
    addAction(new RenameModule_Action());
    addAction(new RenameNamespace_Action());
    addAction(new RenamePackage_Action());
    addAction(new RevertMemoryChanges_Action());
    addAction(new SafeDeleteModuleDependency_Action());
    addAction(new SafeDelete_Action());
    addAction(new SetBookmarkNoNumber_Action());
    addAction(new SetModuleFolder_Action());
    addAction(new SetNodePackage_Action());
    addAction(new SetPluginIdToCompileInIdeaModules_Action());
    addAction(new ShowBookmarksDialog_Action());
    addAction(new ShowBookmarks_Action());
    addAction(new ShowClassInHierarchy_Action());
    addAction(new ShowConceptInHierarchy_Action());
    addAction(new ShowDependenciesInViewer_Action());
    addAction(new ShowErrorMessage_Action());
    addAction(new ShowImplementations_Action());
    addAction(new ShowInDependenciesViewer_Action());
    addAction(new ShowInLogicalView_Action());
    addAction(new ShowNodeInInspector_Action());
    addAction(new ShowNodeInfo_Action());
    addAction(new ShowParameters_Action());
    addAction(new ShowTodoViewer_Action());
    addAction(new SubmitToTracker_Action());
    // groups 
    addGroup(new AbstractFileActions_ActionGroup());
    addGroup(new AddToFavoritesGroup_ActionGroup());
    addGroup(new AnalyzeModule_ActionGroup());
    addGroup(new Analyze_ActionGroup());
    addGroup(new Bookmarks_ActionGroup());
    addGroup(new Build_ActionGroup());
    addGroup(new CommonModuleActions_ActionGroup());
    addGroup(new CreateRootNodeAdapter_ActionGroup());
    addGroup(new CreateRootNode_ActionGroup());
    addGroup(new DebugActions_ActionGroup());
    addGroup(new DevkitActions_ActionGroup());
    addGroup(new Edit_ActionGroup());
    addGroup(new EditorActionsAddition_ActionGroup());
    addGroup(new EditorInternal_ActionGroup());
    addGroup(new EditorPopupEx_ActionGroup());
    addGroup(new EditorPopupEx_Goto_ActionGroup());
    addGroup(new EditorPopup_Show_ActionGroup());
    addGroup(new FavoritesPopupWrapper_ActionGroup());
    addGroup(new FavoritesPopup_ActionGroup());
    addGroup(new Favorites_ActionGroup());
    addGroup(new FileActions_ActionGroup());
    addGroup(new FileSystemNewActions_ActionGroup());
    addGroup(new FindModelUsages_ActionGroup());
    addGroup(new FindUsages_ActionGroup());
    addGroup(new FlyingActions_ActionGroup());
    addGroup(new FolderActions_ActionGroup());
    addGroup(new GeneratorActions_ActionGroup());
    addGroup(new GeneratorNewActions_ActionGroup());
    addGroup(new GoByReference_ActionGroup());
    addGroup(new Goto_ActionGroup());
    addGroup(new JUnitTestCaseActions_ActionGroup());
    addGroup(new JUnitTestMethodActions_ActionGroup());
    addGroup(new LanguageActions_ActionGroup());
    addGroup(new LanguageNewActions_ActionGroup());
    addGroup(new MessagesViewActions_ActionGroup());
    addGroup(new ModelActions_ActionGroup());
    addGroup(new ModelNewActions_ActionGroup());
    addGroup(new ModelRefactoring_ActionGroup());
    addGroup(new ModuleActions_ActionGroup());
    addGroup(new NamespaceActions_ActionGroup());
    addGroup(new NamespaceInternalActions_ActionGroup());
    addGroup(new NamespaceMakeActions_ActionGroup());
    addGroup(new NamespaceNewActions_ActionGroup());
    addGroup(new NodeActions_ActionGroup());
    addGroup(new PackageActions_ActionGroup());
    addGroup(new PackageNewActions_ActionGroup());
    addGroup(new PrintNodePosition_Addition_ActionGroup());
    addGroup(new ProjectActions_ActionGroup());
    addGroup(new ProjectNewActions_ActionGroup());
    addGroup(new PropertyNodeActions_ActionGroup());
    addGroup(new ReferenceNodeActions_ActionGroup());
    addGroup(new RuntimeFolderActions_ActionGroup());
    addGroup(new Search_ActionGroup());
    addGroup(new SolutionActions_ActionGroup());
    addGroup(new SolutionNewActions_ActionGroup());
    addGroup(new SolutionRefactoring_ActionGroup());
    addGroup(new ToolsInternal_ActionGroup());
    addGroup(new Tools_ActionGroup());
    addGroup(new TransientModulesActions_ActionGroup());
    addGroup(new View_ActionGroup());
  }
  public void adjustInterfaceGroups() {
    insertInterfaceGroupIntoAnother("VcsGroup", AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_vcs);
    insertInterfaceGroupIntoAnother("VcsGroup", CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_ideavcs);
    insertInterfaceGroupIntoAnother("VcsGroup", ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_ideavcs);
    insertInterfaceGroupIntoAnother("VcsGroup", "EditorPopup_ActionGroupvcs", null);
    insertInterfaceGroupIntoAnother("LocalHistory", AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_idealocalhistory);
    insertInterfaceGroupIntoAnother("LocalHistory", CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_idealocalhistory);
    insertInterfaceGroupIntoAnother("LocalHistory", ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_idealocalhistory);
    insertInterfaceGroupIntoAnother("NavbarPopupMenu", AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_ideaActions);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.actions.SolutionActionsEx_ActionGroup", SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_contents);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.workbench.actions.ModelNewActions_ActionGroup", GeneratorNewActions_ActionGroup.ID, GeneratorNewActions_ActionGroup.LABEL_ID_newModel);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.workbench.actions.ModelNewActions_ActionGroup", LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newModel);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.workbench.actions.ModelNewActions_ActionGroup", SolutionNewActions_ActionGroup.ID, SolutionNewActions_ActionGroup.LABEL_ID_newModel);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.actions.ModelActions_ActionGroup", ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_paste);
    insertInterfaceGroupIntoAnother("RunContextGroup", CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_run);
    insertInterfaceGroupIntoAnother("RunContextGroup", JUnitTestCaseActions_ActionGroup.ID, null);
    insertInterfaceGroupIntoAnother("RunContextGroup", JUnitTestMethodActions_ActionGroup.ID, null);
    insertInterfaceGroupIntoAnother("RunContextGroup", ModelActions_ActionGroup.ID, null);
    insertInterfaceGroupIntoAnother("RunContextGroup", NodeActions_ActionGroup.ID, null);
    insertInterfaceGroupIntoAnother("RunContextGroup", ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_runConfig);
    insertInterfaceGroupIntoAnother("RunContextGroup", "jetbrains.mps.ide.editor.actions.EditorPopup_ActionGroup", null);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.workbench.actions.AnalyzeJavaActions_ActionGroup", AnalyzeModule_ActionGroup.ID, AnalyzeModule_ActionGroup.LABEL_ID_analyze);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.java.workbench.actions.AnalyzeJavaActions_ActionGroup", DevkitActions_ActionGroup.ID, DevkitActions_ActionGroup.LABEL_ID_analyze);
    insertInterfaceGroupIntoAnother("jetbrains.mps.ide.platform.actions.NodeRefactoring_ActionGroup", NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_refactoring);
  }
  public void adjustRegularGroups() {
    insertGroupIntoAnother(FavoritesPopup_ActionGroup.ID, FavoritesPopupWrapper_ActionGroup.ID, null);
    insertGroupIntoAnother(AnalyzeModule_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_analyze);
    insertGroupIntoAnother(Bookmarks_ActionGroup.ID, "EditMenu", null);
    insertGroupIntoAnother(Build_ActionGroup.ID, "BuildMenu", null);
    insertGroupIntoAnother(Edit_ActionGroup.ID, "IDE_Edit_ActionGrouptoplevel", null);
    insertGroupIntoAnother(Goto_ActionGroup.ID, "GoToMenu", null);
    insertGroupIntoAnother(GoByReference_ActionGroup.ID, "GoToEditorPopupAddition_ActionGrouprefs", null);
    insertGroupIntoAnother(EditorInternal_ActionGroup.ID, "jetbrains.mps.ide.editor.actions.EditorPopup_ActionGroup", null);
    insertGroupIntoAnother(ToolsInternal_ActionGroup.ID, "Internal", null);
    insertGroupIntoAnother(DebugActions_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_debug);
    insertGroupIntoAnother(DebugActions_ActionGroup.ID, "EditorPopup_ActionGroupdebug", null);
    insertGroupIntoAnother(ProjectNewActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_projectNew);
    insertGroupIntoAnother(SolutionNewActions_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_solutionNew);
    insertGroupIntoAnother(GeneratorNewActions_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_generatorNew);
    insertGroupIntoAnother(LanguageNewActions_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_newGroup);
    insertGroupIntoAnother(ModelNewActions_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_newActions);
    insertGroupIntoAnother(FileSystemNewActions_ActionGroup.ID, AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_new);
    insertGroupIntoAnother(NamespaceNewActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(PackageNewActions_ActionGroup.ID, PackageActions_ActionGroup.ID, PackageActions_ActionGroup.LABEL_ID_newActions);
    insertGroupIntoAnother(ModelRefactoring_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_refactoring);
    insertGroupIntoAnother(SolutionRefactoring_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_refactoring);
    insertGroupIntoAnother(CreateRootNodeAdapter_ActionGroup.ID, CreateRootNode_ActionGroup.ID, CreateRootNode_ActionGroup.LABEL_ID_newRoot);
    insertGroupIntoAnother(Tools_ActionGroup.ID, "ToolsMenu", null);
    insertGroupIntoAnother(NodeActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(ModelActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(ProjectActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(LanguageActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(SolutionActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(DevkitActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(GeneratorActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(TransientModulesActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FileActions_ActionGroup.ID, FileActions_ActionGroup.LABEL_ID_abstractFileActions);
    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FolderActions_ActionGroup.ID, FolderActions_ActionGroup.LABEL_ID_abstractFileActions);
    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, ModuleActions_ActionGroup.ID, ModuleActions_ActionGroup.LABEL_ID_abstractFileActions);
    insertGroupIntoAnother(FileActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(FolderActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(ModuleActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(PackageActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(NamespaceActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(NamespaceInternalActions_ActionGroup.ID, NamespaceActions_ActionGroup.ID, NamespaceActions_ActionGroup.LABEL_ID_namespaceInternal);
    insertGroupIntoAnother(ReferenceNodeActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(PropertyNodeActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(JUnitTestCaseActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(JUnitTestMethodActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(FindUsages_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_find);
    insertGroupIntoAnother(FindUsages_ActionGroup.ID, "EditorPopup_ActionGroupfind", null);
    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, ModelNewActions_ActionGroup.ID, ModelNewActions_ActionGroup.LABEL_ID_newRoot);
    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, PackageNewActions_ActionGroup.ID, null);
    insertGroupIntoAnother(EditorPopup_Show_ActionGroup.ID, "EditorPopup_ActionGroupshowIn", null);
    insertGroupIntoAnother(EditorPopupEx_ActionGroup.ID, "EditorPopup_ActionGroupnew", null);
    insertGroupIntoAnother(EditorPopupEx_Goto_ActionGroup.ID, "GoToEditorPopupAddition_ActionGroupother", null);
    insertGroupIntoAnother(FindModelUsages_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_modelUsages);
    insertGroupIntoAnother(AddToFavoritesGroup_ActionGroup.ID, FavoritesPopup_ActionGroup.ID, FavoritesPopup_ActionGroup.LABEL_ID_addToFavorites);
    insertGroupIntoAnother(Analyze_ActionGroup.ID, "AnalyzePlatform_ActionGroupother", null);
    insertGroupIntoAnother(CommonModuleActions_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_commonModule);
    insertGroupIntoAnother(CommonModuleActions_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_commonModule);
    insertGroupIntoAnother(CommonModuleActions_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_commonModule);
    insertGroupIntoAnother(MessagesViewActions_ActionGroup.ID, "MPS.MessagesView", null);
    insertGroupIntoAnother(RuntimeFolderActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(NamespaceMakeActions_ActionGroup.ID, FlyingActions_ActionGroup.ID, null);
    insertGroupIntoAnother(PrintNodePosition_Addition_ActionGroup.ID, EditorInternal_ActionGroup.ID, null);
    insertGroupIntoAnother(Search_ActionGroup.ID, "FindMenuGroup", null);
    insertGroupIntoAnother(FavoritesPopupWrapper_ActionGroup.ID, Favorites_ActionGroup.ID, Favorites_ActionGroup.LABEL_ID_popup);
    insertGroupIntoAnother(Favorites_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_favorites);
    insertGroupIntoAnother(Favorites_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_favorites);
    insertGroupIntoAnother(Favorites_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_favorites);
    insertGroupIntoAnother(View_ActionGroup.ID, "ViewMenu", null);
    insertGroupIntoAnother(EditorActionsAddition_ActionGroup.ID, "jetbrains.mps.ide.editor.actions.EditorActions_ActionGroup", null);
  }
  public List<BaseKeymapChanges> initKeymaps() {
    List<BaseKeymapChanges> res = ListSequence.fromList(new ArrayList<BaseKeymapChanges>());
    ListSequence.fromList(res).addElement(new Default_KeymapChanges());
    ListSequence.fromList(res).addElement(new DependenciesKeyMap_KeymapChanges());
    ListSequence.fromList(res).addElement(new GnomeActionsKeymap_KeymapChanges());
    ListSequence.fromList(res).addElement(new Mac_10_5_KeymapChanges());
    ListSequence.fromList(res).addElement(new Mac_KeymapChanges());
    ListSequence.fromList(res).addElement(new TraceActions_KeymapChanges());
    return res;
  }
}
