package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import jetbrains.mps.nodeEditor.reflectiveEditor.ReflectiveHintsForModelComponent;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SModel;
import com.intellij.openapi.project.Project;

public class ShowRegularEditorByDefault_Action extends BaseAction {
  private static final Icon ICON = null;

  public ShowRegularEditorByDefault_Action() {
    super("Show Regular Editor by Default", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(false);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {
    return ReflectiveHintsForModelComponent.getInstance(event.getData(CommonDataKeys.PROJECT)).shouldShowReflectiveEditor(event.getData(MPSCommonDataKeys.CONTEXT_MODEL).getReference());
  }
  @Override
  public void doUpdate(@NotNull AnActionEvent event, final Map<String, Object> _params) {
    this.setEnabledState(event.getPresentation(), this.isApplicable(event, _params));
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      SModel p = event.getData(MPSCommonDataKeys.CONTEXT_MODEL);
      if (p == null) {
        return false;
      }
    }
    {
      Project p = event.getData(CommonDataKeys.PROJECT);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    ReflectiveHintsForModelComponent.getInstance(event.getData(CommonDataKeys.PROJECT)).showRegularEditorByDefault(event.getData(MPSCommonDataKeys.CONTEXT_MODEL).getReference());
  }
}
