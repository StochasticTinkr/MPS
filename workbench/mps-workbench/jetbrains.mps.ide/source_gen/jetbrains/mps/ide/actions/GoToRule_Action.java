package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import jetbrains.mps.icons.MPSIcons;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import jetbrains.mps.util.Pair;
import jetbrains.mps.workbench.MPSDataKeys;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.openapi.navigation.EditorNavigator;
import jetbrains.mps.smodel.SNodePointer;

public class GoToRule_Action extends BaseAction {
  private static final Icon ICON = MPSIcons.Nodes.Rule;
  public GoToRule_Action() {
    super("Go to Rule", "go to rule action", ICON);
    this.setIsAlwaysVisible(true);
    this.setExecuteOutsideCommand(false);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);
      MapSequence.fromMap(_params).put("project", p);
      if (p == null) {
        return false;
      }
    }
    {
      Pair<String, String> p = event.getData(MPSDataKeys.RULE_MODEL_AND_ID);
      MapSequence.fromMap(_params).put("ruleModelAndId", p);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    PersistenceFacade pf = PersistenceFacade.getInstance();
    new EditorNavigator(((MPSProject) MapSequence.fromMap(_params).get("project"))).shallSelect(true).open(new SNodePointer(pf.createModelReference(((Pair<String, String>) MapSequence.fromMap(_params).get("ruleModelAndId")).o1), pf.createNodeId(((Pair<String, String>) MapSequence.fromMap(_params).get("ruleModelAndId")).o2)));
  }
}
