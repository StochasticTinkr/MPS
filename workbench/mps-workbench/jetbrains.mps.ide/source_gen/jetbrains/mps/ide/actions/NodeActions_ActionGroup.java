package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.GeneratedActionGroup;
import jetbrains.mps.plugins.actions.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;

public class NodeActions_ActionGroup extends GeneratedActionGroup {
  public static final String ID = "jetbrains.mps.ide.actions.NodeActions_ActionGroup";
  public static final String LABEL_ID_showGeneratedText = ID + "showGeneratedText";
  public static final String LABEL_ID_gotoConceptAspects = ID + "gotoConceptAspects";
  public static final String LABEL_ID_showIn = ID + "showIn";
  public static final String LABEL_ID_debug = ID + "debug";
  public static final String LABEL_ID_find = ID + "find";
  public static final String LABEL_ID_refactoring = ID + "refactoring";
  public static final String LABEL_ID_structure = ID + "structure";
  public static final String LABEL_ID_diff = ID + "diff";
  public static final String LABEL_ID_favorites = ID + "favorites";
  public NodeActions_ActionGroup() {
    super("NodeActions", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_showGeneratedText);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.SetNodePackage_Action");
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.ExpandNode_Action");
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CopyNode_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.PasteNode_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CutNode_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CopyNodeReference_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CopyNodeName_Action");
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.DeleteNode_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.SafeDelete_Action");
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CloneRoot_Action");
    NodeActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_gotoConceptAspects);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_showIn);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_debug);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_find);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_refactoring);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.ShowConceptInHierarchy_Action");
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_structure);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.ShowClassInHierarchy_Action");
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_diff);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
    NodeActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.ShowErrorMessage_Action");
    NodeActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(NodeActions_ActionGroup.LABEL_ID_favorites);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      NodeActions_ActionGroup.this.addAction(action);
    }
    NodeActions_ActionGroup.this.addSeparator();
  }
}
