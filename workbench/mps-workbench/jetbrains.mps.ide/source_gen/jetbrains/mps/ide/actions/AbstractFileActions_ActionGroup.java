package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.GeneratedActionGroup;
import jetbrains.mps.plugins.actions.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;
import jetbrains.mps.ide.projectPane.fileSystem.actions.FileDeleteActionFixed;

public class AbstractFileActions_ActionGroup extends GeneratedActionGroup {
  public static final String ID = "jetbrains.mps.ide.actions.AbstractFileActions_ActionGroup";
  public static final String LABEL_ID_new = ID + "new";
  public static final String LABEL_ID_ideaActions = ID + "ideaActions";
  public static final String LABEL_ID_idealocalhistory = ID + "idealocalhistory";
  public static final String LABEL_ID_vcs = ID + "vcs";
  public AbstractFileActions_ActionGroup() {
    super("AbstractFileActions", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    {
      LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_new);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      AbstractFileActions_ActionGroup.this.addAction(action);
    }
    AbstractFileActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_ideaActions);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      AbstractFileActions_ActionGroup.this.addAction(action);
    }
    AbstractFileActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.RenameFileOrDirectory_Action");
    AbstractFileActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.MoveFileOrDirectory_Action");
    AbstractFileActions_ActionGroup.this.addParameterizedAction(new FileDelete_Action(new FileDeleteActionFixed()), PluginId.getId("jetbrains.mps.ide"), new FileDeleteActionFixed());
    AbstractFileActions_ActionGroup.this.addSeparator();
    {
      LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_idealocalhistory);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      AbstractFileActions_ActionGroup.this.addAction(action);
    }
    {
      LabelledAnchor action = new LabelledAnchor(AbstractFileActions_ActionGroup.LABEL_ID_vcs);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
      AbstractFileActions_ActionGroup.this.addAction(action);
    }
  }
}
