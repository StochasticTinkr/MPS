package jetbrains.mps.ide.hierarchy;

/*Generated by MPS */

import jetbrains.mps.ide.ui.tree.MPSTreeNode;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.icons.IconManager;

public class HierarchyTreeNode extends MPSTreeNode {
  private SNode myNode;
  private final SNodeReference myNodeRef;
  protected AbstractHierarchyTree myHierarchyTree;
  public HierarchyTreeNode(@NotNull SNode declaration, AbstractHierarchyTree tree) {
    super(declaration);
    // FIXME drop myNode in favor of myNodeRef 
    myNode = declaration;
    myNodeRef = declaration.getReference();
    myHierarchyTree = tree;
    setNodeIdentifier(calculateNodeIdentifier());
    setToggleClickCount(-1);
    setAutoExpandable(false);
    setAdditionalText(SModelOperations.getModelName(SNodeOperations.getModel(declaration)));
    setIcon(IconManager.getIconFor(declaration));
  }
  public SNode getNode() {
    return myNode;
  }
  @NotNull
  public SNodeReference getNodeReference() {
    return myNodeRef;
  }
  @NotNull
  public String calculateNodeIdentifier() {
    if (getNode() == null) {
      return "null";
    }
    String name;
    // FIXME Oh, no. To fix MPS-638, instead of proper use of MPSTreeNode.setText, here comes an odd delegation...God help me! 
    if (myHierarchyTree.overridesNodeIdentifierCalculation()) {
      name = myHierarchyTree.calculateNodeIdentifier(this);
    } else {
      name = getNode().getName();
    }
    return (name == null ? "no name" : name);
  }
}
