package jetbrains.mps.ide.hierarchy;

/*Generated by MPS */

import jetbrains.mps.ide.ui.tree.MPSTreeNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.icons.IconManager;

public class HierarchyTreeNode extends MPSTreeNode {
  private final SNodeReference myNodeRef;
  protected AbstractHierarchyTree myHierarchyTree;

  public HierarchyTreeNode(@NotNull SNode declaration, AbstractHierarchyTree tree) {
    super(declaration);
    myNodeRef = declaration.getReference();
    myHierarchyTree = tree;
    String name = declaration.getName();
    setText((name == null ? "no name" : name));
    setNodeIdentifier(myNodeRef.getNodeId().toString());
    setToggleClickCount(-1);
    setAutoExpandable(false);
    setAdditionalText(SModelOperations.getModelName(SNodeOperations.getModel(declaration)));
    setIcon(IconManager.getIconFor(declaration));
  }

  @NotNull
  public SNodeReference getNodeReference() {
    return myNodeRef;
  }
}
