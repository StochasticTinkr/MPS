<!--
  ~ Copyright 2003-2012 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project name="IDEA-plugin-compile" default="build" basedir=".">

  <!--
     1. To pass IDEA locations to the script run it with the following Java system properties:
        ant -Dhome.idea_ce={IDEA_HOME_DIR} -Dhome.idea_ce.plugins={IDEA_PLUGINS_FOLDER} <task>

        e.g. for MacOs it will be:
        ant -Dhome.idea_ce=/Applications/IntelliJ\ IDEA\ CE\ 2019.1.app/Contents/ -Dhome.idea_ce.plugins=~/Library/Application Support/IdeaIC2019.1 <task>

     2. To run tests locally, it's sufficient to set home.idea_ce and home.jdk:
        ant -Dhome.idea_ce=/IDEAXX/ -Dhome.jdk=/Library/Java/Home/ -f IdeaPlugin/build.xml clean zip runTests

     To connect to running tests and debug with Idea, uncomment/modify 'junit.debug.arg' property below
  -->

  <property name="base_dir" value="${basedir}/.."/>
  <property name="build.home" value="${base_dir}/IdeaPlugin/build"/>
  <property name="log.config" value="file://${base_dir}/IdeaPlugin/logging/log4j.xml"/>
  <property name="sandbox.dir" value="${base_dir}/IdeaPlugin/sandbox"/>
  <property name="test.platform.sandbox.dir" value="${sandbox.dir}/tests.ant"/>
  <property name="test.platform.sandbox.jps" value="${sandbox.dir}/jps"/>
  <!--<property name="junit.debug.arg" value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5071"/>-->
  <property name="junit.debug.arg"
            value="-D"/> <!--Value for JUnit test JVM launcher. Use -D as empty jvmarg value is treated as classname to run-->
  <property name="mps.plugin.dependencies.target" value="install"
            description="Allows to modify getDependencies.xml target to download only 3rd party libraries without IDEA platform on Team City build"/>

  <property environment="env"/>


  <target name="loadIdeaPathVar">
    <fail message="I need a system property: home.idea_ce = path to your Idea installation" unless="home.idea_ce"/>
    <property name="ideaPath" value="${home.idea_ce}"/>
    <echo message="IDEA: ${ideaPath}"/>
  </target>

  <target name="loadIdeaPluginsPathVar">
    <fail message="I need a system property: home.idea_ce.plugins = path to your Idea's plugins dir"
          unless="home.idea_ce.plugins"/>
    <property name="ideaPlugins" value="${home.idea_ce.plugins}"/>
    <echo message="Plugins: ${ideaPlugins}"/>
  </target>


  <target name="loadJavaHomeEnv" unless="home.jdk" if="env.JAVA_HOME">
    <property name="jdkPath" value="${env.JAVA_HOME}"/>
  </target>

  <target name="loadJavaHomeProperty" if="home.jdk">
    <property name="jdkPath" value="${home.jdk}"/>
  </target>

  <target name="loadJdkPath" depends="loadJavaHomeProperty, loadJavaHomeEnv">
    <!-- needed for RebuildIdeaPluginTest to set up jdk -->
    <fail message="I need either JAVA_HOME environment variable or home.jdk system property" unless="jdkPath"/>
    <echo message="JDK: ${jdkPath}"/>
  </target>


  <target name="checkLibs">
    <available file="${base_dir}/IdeaPlugin/idea_home/build.txt" property="core.libs.found"/>
  </target>

  <target name="buildLibs" depends="checkLibs" unless="core.libs.found">
    <antcall target="copyLibsFromLocalBuild"/>
  </target>

  <target name="copyLibsFromLocalBuild" depends="buildCore, buildTests, loadIdeaPathVar">
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/lib">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsBootstrapCore/lib"/>
    </copy>
    <!-- messages, which are packaged by mpsWorkbench build script, which we don't invoke when building plugin -->
    <!-- it seems, they should end-up in mps-platform.jar, will be no need to copy -->
    <copy todir="${base_dir}/IdeaPlugin/mps-core/resources">
      <fileset dir="${base_dir}/workbench/resources_en/source/">
        <exclude name="tips/**"/>
      </fileset>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/languages"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/languages">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsBootstrapCore/languages"/>
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsCore/mps-core/languages"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-java/META-INF">
      <file file="${base_dir}/IdeaPlugin/build/artifacts/mpsJavaPlatform/META-INF/JavaPlatform.xml"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-java/META-INF/platform">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsJavaPlatform/META-INF/platform">
        <include name="**/*.xml"/>
      </fileset>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-java/lib">
      <file file="${base_dir}/IdeaPlugin/build/artifacts/mpsJavaPlatform/lib/mps-java-platform.jar"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-vcs/META-INF">
      <file file="${base_dir}/IdeaPlugin/build/artifacts/mpsIdeaVcs/mps-vcs/META-INF/MPSVcs.xml"/>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-vcs/languages"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-vcs/languages">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsIdeaVcs/mps-vcs/languages"/>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-vcs/lib"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-vcs/lib">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsIdeaVcs/mps-vcs/lib"/>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-migration/lib"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-migration/lib">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsMigrationCore/migration-platform/lib"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-migration/META-INF">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsMigrationCore/migration-platform/META-INF"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-testing">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsTesting/mps-testing"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps.editor.tests">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/mpsEditorTestsPlugin/mps.editor.tests"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/idea_home" failonerror="false" overwrite="true">
      <file file="${ideaPath}/build.txt"/>
      <file file="${ideaPath}/Resources/build.txt"/>
    </copy>
  </target>

  <target name="copyLibsFromDist" depends="loadIdeaPluginsPathVar">
    <copy todir="${base_dir}/IdeaPlugin/mps-core/lib">
      <fileset dir="${ideaPlugins}/mps-core/lib"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/languages">
      <fileset dir="${ideaPlugins}/mps-core/languages"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-testing">
      <fileset dir="${ideaPlugins}/mps-testing"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-java/lib">
      <fileset dir="${ideaPlugins}/mps-java/lib"/>
    </copy>
    <copy todir="${base_dir}/IdeaPlugin/mps-vcs/lib">
      <fileset dir="${ideaPlugins}/mps-vcs/lib"/>
    </copy>
  </target>

  <target name="clean" depends="cleanLibs, cleanSendbox">
    <delete dir="${build.home}"/>
  </target>

  <target name="cleanSendbox">
    <delete dir="${sandbox.dir}"/>
  </target>

  <target name="cleanLibs">
    <delete>
      <!-- TODO: remove jps-build-test-139.1117.1.jar file & this exclusion -->
      <fileset dir="${base_dir}/IdeaPlugin/mps-core/lib">
        <exclude name="jps/**"/>
      </fileset>
    </delete>
    <!-- TODO: create separate root for resources copied from the 'main' MPS -->
    <delete dir="${base_dir}/IdeaPlugin/mps-core/resources/messages"/>
    <delete dir="${base_dir}/IdeaPlugin/mps-core/languages"/>
    <delete file="${base_dir}/IdeaPlugin/mps-java/META-INF/JavaPlatform.xml"/>
    <delete dir="${base_dir}/IdeaPlugin/mps-java/META-INF/platform"/>
    <delete dir="${base_dir}/IdeaPlugin/mps-java/lib"/>
    <delete file="${base_dir}/IdeaPlugin/mps-vcs/META-INF/MPSVcs.xml"/>
    <delete dir="${base_dir}/IdeaPlugin/mps-vcs/languages"/>
    <delete dir="${base_dir}/IdeaPlugin/mps-vcs/lib"/>
    <delete includeemptydirs="true">
      <fileset dir="${base_dir}/IdeaPlugin/mps-testing">
        <include name="**/*"/>
        <exclude name="**/*.iml"/>
        <exclude name="src/**/*"/>
      </fileset>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${base_dir}/IdeaPlugin/mps.editor.tests">
        <include name="**/*"/>
        <exclude name="**/*.iml"/>
      </fileset>
    </delete>
    <delete file="${base_dir}/IdeaPlugin/idea_home/build.txt"/>
  </target>

  <target name="buildCore" depends="loadIdeaPathVar" unless="buildCoreProcessed">
    <property name="buildCoreProcessed" value="true"/>
    <ant antfile="${base_dir}/build/getDependencies.xml" target="${mps.plugin.dependencies.target}" inheritAll="true"
         useNativeBasedir="true"/>
    <ant antfile="mpsPlugin.xml" inheritAll="false" useNativeBasedir="true" target="buildDependents">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
    </ant>
  </target>

  <target name="build" depends="loadIdeaPathVar, buildCore">
    <ant antfile="mpsPlugin.xml" inheritAll="false" useNativeBasedir="true" target="assemble">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
    </ant>
  </target>

  <target name="buildTests" depends="loadIdeaPathVar, buildCore">
    <!--
          manually building dependencies instead of calling buildDependents because it's impossible
          to specify custom location of pre-build (mpsCore/mpsBootstrapCore)

          Alternative solution would be: remove default locations for these artifacts from mpsEditorTestsPlugin.xml
          script & specify it to be $mps_home while running mpsEditorTestsPlugin on the build server
      -->
    <ant antfile="${base_dir}/build/tests/mpsEditor.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
      <property name="artifacts.mpsCore" value="${build.home}/artifacts/mpsCore"/>
      <property name="artifacts.mpsBootstrapCore" value="${build.home}/artifacts/mpsBootstrapCore"/>
      <property name="artifacts.mpsTesting" value="${build.home}/artifacts/mpsTesting"/>
    </ant>

    <ant antfile="mpsEditorTestsPlugin.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
    </ant>

    <ant antfile="mpsPlugin.xml" inheritAll="false" useNativeBasedir="true" target="layout.tests">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
      <property name="build.layout.tests" location="${build.home}/artifacts/mpsPlugin.tests"/>
    </ant>
  </target>

  <target name="prepareJPSClasspath">
    <!--IMPORTANT: it's deliberately an explicit enumeration of jars to be exactly the same as in plugin.xml-->
    <!--
         Pre-processing compileServer.plugin section from the plugin.xml of mps-core plugin. Idea is to use the
         same classpath as it is specified for jps process inside this plugin.xml

         Path variable will be stored inside jps.classpath property in the output file
      -->
    <delete dir="${test.platform.sandbox.jps}"/>
    <mkdir dir="${test.platform.sandbox.jps}"/>

    <!-- jps addon from msp-core plugin -->
    <xslt in="${base_dir}/IdeaPlugin/mps-core/META-INF/plugin.xml"
          out="${test.platform.sandbox.jps}/jps.core.properties"
          style="${base_dir}/IdeaPlugin/jpsClasspath.xslt">
      <param name="lib.folder" expression="${test.platform.sandbox.dir}/plugins/mps-core/lib/"/>
      <param name="property.name" expression="jps.core.classpath"/>
    </xslt>
    <property file="${test.platform.sandbox.jps}/jps.core.properties"/>

    <!-- jps addon from msp-java plugin -->
    <xslt in="${base_dir}/IdeaPlugin/mps-java/META-INF/plugin.xml"
          out="${test.platform.sandbox.jps}/jps.java.properties"
          style="${base_dir}/IdeaPlugin/jpsClasspath.xslt">
      <param name="lib.folder" expression="${test.platform.sandbox.dir}/plugins/mps-idea-java/lib/"/>
      <param name="property.name" expression="jps.java.classpath"/>
    </xslt>
    <property file="${test.platform.sandbox.jps}/jps.java.properties"/>

    <!-- combined jps classpath property -->
    <property name="jps.classpath" value="${jps.core.classpath}:${jps.java.classpath}"/>
  </target>

  <target name="runTests" depends="loadJdkPath, loadIdeaPathVar, build, buildTests, buildLibs, prepareJPSClasspath">
    <delete dir="${test.platform.sandbox.dir}"/>
    <mkdir dir="${test.platform.sandbox.dir}/plugins"/>
    <copy todir="${test.platform.sandbox.dir}/plugins">
      <fileset dir="${build.home}/artifacts/mpsPlugin"/>
      <fileset dir="${build.home}/artifacts/mpsPlugin.tests"/>
      <fileset dir="${build.home}/artifacts/mpsEditorTestsPlugin"/>
    </copy>
    <copy todir="${test.platform.sandbox.dir}/plugins/tests/projectView">
      <fileset dir="${base_dir}/IdeaPlugin/tests/projectView"/>
    </copy>
    <copy todir="${test.platform.sandbox.dir}/plugins/tests/blProject">
      <fileset dir="${base_dir}/IdeaPlugin/tests/blProject"/>
    </copy>

    <mkdir dir="${ideaPath}/java/mockJDK-1.7/jre/lib"/>

    <junit fork="true"
           dir="."
           haltonfailure="false"
           showoutput="true"
           enableTestListenerEvents="false">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="${junit.debug.arg}"/>
      <formatter type="xml"/>
      <sysproperty key="idea.platform.prefix" value="Idea"/>
      <sysproperty key="idea.config.path" value="${test.platform.sandbox.dir}/config"/>
      <sysproperty key="idea.system.path" value="${test.platform.sandbox.dir}/system"/>
      <sysproperty key="idea.plugins.path" value="${test.platform.sandbox.dir}/plugins"/>
      <sysproperty key="idea.log.path" value="${test.platform.sandbox.dir}/log"/>
      <sysproperty key="idea.home.path" value="${base_dir}/IdeaPlugin/idea_home"/>
      <sysproperty key="idea.load.plugins.id" value="jetbrains.mps.core,jetbrains.mps.testing,jetbrains.mps.idea.java"/>
      <sysproperty key="idea.launcher.bin.path" value="${ideaPath}/bin"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-core/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-idea-java/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-migration/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.idea.java.tests.JavaTestSuite"/>
    </junit>

    <junit fork="true"
           dir="."
           haltonfailure="false"
           showoutput="true"
           enableTestListenerEvents="false">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="-XX:MaxPermSize=128m"/>
      <jvmarg value="${junit.debug.arg}"/>
      <formatter type="xml"/>
      <sysproperty key="idea.platform.prefix" value="Idea"/>
      <sysproperty key="idea.config.path" value="${test.platform.sandbox.dir}/config"/>
      <sysproperty key="idea.system.path" value="${test.platform.sandbox.dir}/system"/>
      <sysproperty key="idea.plugins.path" value="${test.platform.sandbox.dir}/plugins"/>
      <sysproperty key="idea.log.path" value="${test.platform.sandbox.dir}/log"/>
      <sysproperty key="idea.home.path" value="${base_dir}/IdeaPlugin/idea_home"/>
      <sysproperty key="idea.load.plugins.id" value="jetbrains.mps.core"/>
      <sysproperty key="idea.launcher.bin.path" value="${ideaPath}/bin"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <!-- TODO: remove property after investigation and fix MPS-25217 -->
      <!-- See com.intellij.openapi.project.impl.ProjectManagerImpl#newProject and ProjectManagerImpl#LOG_PROJECT_LEAKAGE_IN_TESTS-->
      <sysproperty key="idea.log.leaked.projects.in.tests" value="false"/>
      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-core/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.idea.core.tests.MiscTestSuite"/>
    </junit>

    <junit fork="true"
           dir="."
           haltonfailure="false"
           showoutput="true"
           enableTestListenerEvents="true">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="${junit.debug.arg}"/>
      <formatter type="xml"/>
      <sysproperty key="jdk.home.path" value="${jdkPath}"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <sysproperty key="idea.system.path" value="${test.platform.sandbox.jps}/system"/>
      <sysproperty key="idea.log.path" value="${test.platform.sandbox.jps}/log"/>
      <sysproperty key="idea.home.path" value="${base_dir}/IdeaPlugin/idea_home"/>

      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
          <exclude name="rt/jps-plugin-system.jar"/>
        </fileset>
        <fileset dir="${ideaPath}/plugins/devkit/lib">
          <include name="devkit-jps-plugin.jar"/>
        </fileset>
        <!-- all JPS jars as specified in plugin.xmlS -->
        <pathelement path="${jps.classpath}"/>
        <!-- enumerating additional jard for testing -->
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-core/lib/jps">
          <include name="jps-build-test-139.1117.1.jar"/>
          <include name="mps-jps-plugin-tests.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.jps.make.tests.JpsMakeTestSuite"/>
    </junit>

    <junit fork="true"
           dir="."
           haltonfailure="false"
           showoutput="true"
           enableTestListenerEvents="false">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="-XX:MaxPermSize=128m"/>
      <jvmarg value="${junit.debug.arg}"/>
      <formatter type="xml"/>
      <sysproperty key="idea.platform.prefix" value="Idea"/>
      <sysproperty key="idea.config.path" value="${test.platform.sandbox.dir}/config"/>
      <sysproperty key="idea.system.path" value="${test.platform.sandbox.dir}/system"/>
      <sysproperty key="idea.plugins.path" value="${test.platform.sandbox.dir}/plugins"/>
      <sysproperty key="idea.log.path" value="${test.platform.sandbox.dir}/log"/>
      <sysproperty key="idea.home.path" value="${base_dir}/IdeaPlugin/idea_home"/>
      <sysproperty key="idea.load.plugins.id"
                   value="jetbrains.mps.core,jetbrains.mps.testing,jetbrains.mps.lang.editor.tests"/>
      <sysproperty key="idea.launcher.bin.path" value="${ideaPath}/bin"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <!-- TODO: remove property after investigation and fix MPS-25217 -->
      <!-- See com.intellij.openapi.project.impl.ProjectManagerImpl#newProject and ProjectManagerImpl#LOG_PROJECT_LEAKAGE_IN_TESTS-->
      <sysproperty key="idea.log.leaked.projects.in.tests" value="false"/>
      <sysproperty key="mps.test.module.names"
                   value="jetbrains.mps.lang.editor.tests,jetbrains.mps.lang.editor.multiple.tests,jetbrains.mps.console.test,jetbrains.mps.lang.actions.test,jetbrains.mps.lang.editor.table.tests,jetbrains.mps.baseLanguage.test"/>
      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-core/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${test.platform.sandbox.dir}/plugins/mps-testing/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.idea.core.tests.PluginsTestSuite"/>
    </junit>
  </target>

  <target name="zip" depends="loadIdeaPathVar, build">
    <ant antfile="mpsPluginDist.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${ideaPath}"/>
      <property name="plugin.version" value="${plugin.version}"/>
    </ant>
  </target>

  <target name="install-plugin" depends="loadIdeaPluginsPathVar, build, uninstall-plugin">
    <property name="pluginPath" value="${ideaPlugins}"/>
    <copy todir="${pluginPath}">
      <fileset dir="${build.home}/artifacts/mpsPlugin"/>
    </copy>
  </target>

  <target name="uninstall-plugin" depends="loadIdeaPluginsPathVar">
    <property name="pluginPath" value="${ideaPlugins}"/>
    <delete dir="${pluginPath}/mps-build"/>
    <delete dir="${pluginPath}/mps-core"/>
    <delete dir="${pluginPath}/mps-idea-java"/>
    <delete dir="${pluginPath}/mps-testing"/>
    <delete dir="${pluginPath}/mps-vcs"/>
    <delete dir="${pluginPath}/mps-migration"/>
  </target>
</project>
