package jetbrains.mps.samples.languagePatterns.Basic.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import java.util.Collections;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;

public class TruckProperties implements ConceptEditorComponent {
  @NotNull
  public Collection<String> getContextHints() {
    return Collections.emptyList();
  }
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_it0415_a(editorContext, node);
  }
  private EditorCell createCollection_it0415_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_it0415_a");
    editorCell.addEditorCell(this.createConstant_it0415_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_it0415_b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_it0415_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_it0415_d0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_it0415_e0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_it0415_f0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_it0415_g0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_it0415_h0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_it0415_i0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_it0415_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(truck)");
    editorCell.setCellId("Constant_it0415_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_it0415_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "make:");
    editorCell.setCellId("Constant_it0415_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_it0415_c0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("make");
    provider.setNoTargetText("<no make>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("TP_property_make");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_it0415_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "power:");
    editorCell.setCellId("Constant_it0415_d0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_it0415_e0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("power");
    provider.setNoTargetText("<no power>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("TP_property_power");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_it0415_f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "weight:");
    editorCell.setCellId("Constant_it0415_f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_it0415_g0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("weight");
    provider.setNoTargetText("<no weight>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("TP_property_weight");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_it0415_h0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "age");
    editorCell.setCellId("Constant_it0415_h0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_it0415_i0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("age");
    provider.setNoTargetText("<no age>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("TP_property_age");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
}
