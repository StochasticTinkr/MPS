package jetbrains.mps.samples.languagePatterns.Basic.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum OrangeTaste {
  Sweet("Sweet", null),
  Sour("Sour", null),
  Bitter("Bitter", null);

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private OrangeTaste(String name, String value) {
    myName = name;
    myValue = value;

  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<OrangeTaste> getConstants() {
    List<OrangeTaste> list = ListSequence.fromList(new LinkedList<OrangeTaste>());
    ListSequence.fromList(list).addElement(OrangeTaste.Sweet);
    ListSequence.fromList(list).addElement(OrangeTaste.Sour);
    ListSequence.fromList(list).addElement(OrangeTaste.Bitter);
    return list;
  }
  public static OrangeTaste getDefault() {
    return OrangeTaste.Sweet;
  }
  public static OrangeTaste parseValue(String value) {
    if (value == null) {
      return OrangeTaste.getDefault();
    }
    if (value.equals(OrangeTaste.Sweet.getValueAsString())) {
      return OrangeTaste.Sweet;
    }
    if (value.equals(OrangeTaste.Sour.getValueAsString())) {
      return OrangeTaste.Sour;
    }
    if (value.equals(OrangeTaste.Bitter.getValueAsString())) {
      return OrangeTaste.Bitter;
    }
    return OrangeTaste.getDefault();
  }
}
