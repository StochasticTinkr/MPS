package jetbrains.mps.samples.languagePatterns.Basic.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(39);
  /*package*/ final ConceptDescriptor myConceptAbstractRequestDescription = createDescriptorForAbstractRequestDescription();
  /*package*/ final ConceptDescriptor myConceptAddress = createDescriptorForAddress();
  /*package*/ final ConceptDescriptor myConceptAddressReference = createDescriptorForAddressReference();
  /*package*/ final ConceptDescriptor myConceptAgendaItem = createDescriptorForAgendaItem();
  /*package*/ final ConceptDescriptor myConceptApple = createDescriptorForApple();
  /*package*/ final ConceptDescriptor myConceptCar = createDescriptorForCar();
  /*package*/ final ConceptDescriptor myConceptCombinedPerformance = createDescriptorForCombinedPerformance();
  /*package*/ final ConceptDescriptor myConceptComponent = createDescriptorForComponent();
  /*package*/ final ConceptDescriptor myConceptComponentUsage = createDescriptorForComponentUsage();
  /*package*/ final ConceptDescriptor myConceptConcert = createDescriptorForConcert();
  /*package*/ final ConceptDescriptor myConceptContainer = createDescriptorForContainer();
  /*package*/ final ConceptDescriptor myConceptDottedLine = createDescriptorForDottedLine();
  /*package*/ final ConceptDescriptor myConceptDrawCommand = createDescriptorForDrawCommand();
  /*package*/ final ConceptDescriptor myConceptDrawLine = createDescriptorForDrawLine();
  /*package*/ final ConceptDescriptor myConceptDrawRect = createDescriptorForDrawRect();
  /*package*/ final ConceptDescriptor myConceptEmptyLine = createDescriptorForEmptyLine();
  /*package*/ final ConceptDescriptor myConceptFormDescription = createDescriptorForFormDescription();
  /*package*/ final ConceptDescriptor myConceptFruit = createDescriptorForFruit();
  /*package*/ final ConceptDescriptor myConceptFruitPlate = createDescriptorForFruitPlate();
  /*package*/ final ConceptDescriptor myConceptIncompleteCommand = createDescriptorForIncompleteCommand();
  /*package*/ final ConceptDescriptor myConceptItem = createDescriptorForItem();
  /*package*/ final ConceptDescriptor myConceptItemReference = createDescriptorForItemReference();
  /*package*/ final ConceptDescriptor myConceptLineStyle = createDescriptorForLineStyle();
  /*package*/ final ConceptDescriptor myConceptListOfDrawCommands = createDescriptorForListOfDrawCommands();
  /*package*/ final ConceptDescriptor myConceptOperationOnAddress = createDescriptorForOperationOnAddress();
  /*package*/ final ConceptDescriptor myConceptOrange = createDescriptorForOrange();
  /*package*/ final ConceptDescriptor myConceptParticipant = createDescriptorForParticipant();
  /*package*/ final ConceptDescriptor myConceptPerformance = createDescriptorForPerformance();
  /*package*/ final ConceptDescriptor myConceptPerformanceWithTitle = createDescriptorForPerformanceWithTitle();
  /*package*/ final ConceptDescriptor myConceptRaceParticipant = createDescriptorForRaceParticipant();
  /*package*/ final ConceptDescriptor myConceptRequest = createDescriptorForRequest();
  /*package*/ final ConceptDescriptor myConceptSimplifiedFormDescription = createDescriptorForSimplifiedFormDescription();
  /*package*/ final ConceptDescriptor myConceptSinger = createDescriptorForSinger();
  /*package*/ final ConceptDescriptor myConceptSolidLine = createDescriptorForSolidLine();
  /*package*/ final ConceptDescriptor myConceptSomeForm = createDescriptorForSomeForm();
  /*package*/ final ConceptDescriptor myConceptStreetOperation = createDescriptorForStreetOperation();
  /*package*/ final ConceptDescriptor myConceptStringDescription = createDescriptorForStringDescription();
  /*package*/ final ConceptDescriptor myConceptTruck = createDescriptorForTruck();
  /*package*/ final ConceptDescriptor myConceptZipOperation = createDescriptorForZipOperation();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractRequestDescription.getId(), 0);
    myIndexMap.put(myConceptAddress.getId(), 1);
    myIndexMap.put(myConceptAddressReference.getId(), 2);
    myIndexMap.put(myConceptAgendaItem.getId(), 3);
    myIndexMap.put(myConceptApple.getId(), 4);
    myIndexMap.put(myConceptCar.getId(), 5);
    myIndexMap.put(myConceptCombinedPerformance.getId(), 6);
    myIndexMap.put(myConceptComponent.getId(), 7);
    myIndexMap.put(myConceptComponentUsage.getId(), 8);
    myIndexMap.put(myConceptConcert.getId(), 9);
    myIndexMap.put(myConceptContainer.getId(), 10);
    myIndexMap.put(myConceptDottedLine.getId(), 11);
    myIndexMap.put(myConceptDrawCommand.getId(), 12);
    myIndexMap.put(myConceptDrawLine.getId(), 13);
    myIndexMap.put(myConceptDrawRect.getId(), 14);
    myIndexMap.put(myConceptEmptyLine.getId(), 15);
    myIndexMap.put(myConceptFormDescription.getId(), 16);
    myIndexMap.put(myConceptFruit.getId(), 17);
    myIndexMap.put(myConceptFruitPlate.getId(), 18);
    myIndexMap.put(myConceptIncompleteCommand.getId(), 19);
    myIndexMap.put(myConceptItem.getId(), 20);
    myIndexMap.put(myConceptItemReference.getId(), 21);
    myIndexMap.put(myConceptLineStyle.getId(), 22);
    myIndexMap.put(myConceptListOfDrawCommands.getId(), 23);
    myIndexMap.put(myConceptOperationOnAddress.getId(), 24);
    myIndexMap.put(myConceptOrange.getId(), 25);
    myIndexMap.put(myConceptParticipant.getId(), 26);
    myIndexMap.put(myConceptPerformance.getId(), 27);
    myIndexMap.put(myConceptPerformanceWithTitle.getId(), 28);
    myIndexMap.put(myConceptRaceParticipant.getId(), 29);
    myIndexMap.put(myConceptRequest.getId(), 30);
    myIndexMap.put(myConceptSimplifiedFormDescription.getId(), 31);
    myIndexMap.put(myConceptSinger.getId(), 32);
    myIndexMap.put(myConceptSolidLine.getId(), 33);
    myIndexMap.put(myConceptSomeForm.getId(), 34);
    myIndexMap.put(myConceptStreetOperation.getId(), 35);
    myIndexMap.put(myConceptStringDescription.getId(), 36);
    myIndexMap.put(myConceptTruck.getId(), 37);
    myIndexMap.put(myConceptZipOperation.getId(), 38);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractRequestDescription, myConceptAddress, myConceptAddressReference, myConceptAgendaItem, myConceptApple, myConceptCar, myConceptCombinedPerformance, myConceptComponent, myConceptComponentUsage, myConceptConcert, myConceptContainer, myConceptDottedLine, myConceptDrawCommand, myConceptDrawLine, myConceptDrawRect, myConceptEmptyLine, myConceptFormDescription, myConceptFruit, myConceptFruitPlate, myConceptIncompleteCommand, myConceptItem, myConceptItemReference, myConceptLineStyle, myConceptListOfDrawCommands, myConceptOperationOnAddress, myConceptOrange, myConceptParticipant, myConceptPerformance, myConceptPerformanceWithTitle, myConceptRaceParticipant, myConceptRequest, myConceptSimplifiedFormDescription, myConceptSinger, myConceptSolidLine, myConceptSomeForm, myConceptStreetOperation, myConceptStringDescription, myConceptTruck, myConceptZipOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractRequestDescription;
      case 1:
        return myConceptAddress;
      case 2:
        return myConceptAddressReference;
      case 3:
        return myConceptAgendaItem;
      case 4:
        return myConceptApple;
      case 5:
        return myConceptCar;
      case 6:
        return myConceptCombinedPerformance;
      case 7:
        return myConceptComponent;
      case 8:
        return myConceptComponentUsage;
      case 9:
        return myConceptConcert;
      case 10:
        return myConceptContainer;
      case 11:
        return myConceptDottedLine;
      case 12:
        return myConceptDrawCommand;
      case 13:
        return myConceptDrawLine;
      case 14:
        return myConceptDrawRect;
      case 15:
        return myConceptEmptyLine;
      case 16:
        return myConceptFormDescription;
      case 17:
        return myConceptFruit;
      case 18:
        return myConceptFruitPlate;
      case 19:
        return myConceptIncompleteCommand;
      case 20:
        return myConceptItem;
      case 21:
        return myConceptItemReference;
      case 22:
        return myConceptLineStyle;
      case 23:
        return myConceptListOfDrawCommands;
      case 24:
        return myConceptOperationOnAddress;
      case 25:
        return myConceptOrange;
      case 26:
        return myConceptParticipant;
      case 27:
        return myConceptPerformance;
      case 28:
        return myConceptPerformanceWithTitle;
      case 29:
        return myConceptRaceParticipant;
      case 30:
        return myConceptRequest;
      case 31:
        return myConceptSimplifiedFormDescription;
      case 32:
        return myConceptSinger;
      case 33:
        return myConceptSolidLine;
      case 34:
        return myConceptSomeForm;
      case 35:
        return myConceptStreetOperation;
      case 36:
        return myConceptStringDescription;
      case 37:
        return myConceptTruck;
      case 38:
        return myConceptZipOperation;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractRequestDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "AbstractRequestDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2238aL);
    b.class_(false, true, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/1885452693916492682");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddress() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Address", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b3f40bL);
    b.class_(false, false, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235297879051");
    b.prop("kind", 0x48a6ab8c26b4f474L, "5235060235297944692");
    b.prop("street", 0x48a6ab8c26b3f40cL, "5235060235297879052");
    b.prop("zip", 0x48a6ab8c26b3f40eL, "5235060235297879054");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAddressReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "AddressReference", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b53535L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235297961269");
    b.associate("target", 0x48a6ab8c26b53536L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b3f40bL).optional(false).origin("5235060235297961270").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAgendaItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "AgendaItem", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78db30bL);
    b.interface_();
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353804555");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Apple", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786badaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.Fruit", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786b2fbL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353347802");
    b.prop("kind", 0x34c8853ae786bb24L, "3803436373353347876");
    b.alias("apple");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Car", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae79f4defL);
    b.class_(false, false, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373354958319");
    b.prop("make", 0x34c8853ae79f4df0L, "3803436373354958320");
    b.prop("age", 0x34c8853ae79f4df2L, "3803436373354958322");
    b.prop("power", 0x34c8853ae79f4df5L, "3803436373354958325");
    b.alias("car");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCombinedPerformance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "CombinedPerformance", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78de950L);
    b.class_(false, false, false);
    b.parent(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78db30bL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353818448");
    b.prop("performanceTitle", 0x34c8853ae78de98dL, "3803436373353818509");
    b.aggregate("participants", 0x34c8853ae78de9acL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78e59fbL).optional(false).ordered(true).multiple(true).origin("3803436373353818540").done();
    b.alias("combined performance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Component", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x4ed97160b0a7fa2aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5681697064999189034");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponentUsage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "ComponentUsage", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x4ed97160b0a7fb71L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5681697064999189361");
    b.associate("usedComponent", 0x4ed97160b0a7fba5L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x4ed97160b0a7fa2aL).optional(false).origin("5681697064999189413").done();
    b.alias("componentUsage");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConcert() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Concert", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895c45L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353520197");
    b.aggregate("performers", 0x34c8853ae7895c8bL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895c8dL).optional(true).ordered(true).multiple(true).origin("3803436373353520267").done();
    b.aggregate("performances", 0x34c8853ae7895d09L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78db30bL).optional(true).ordered(true).multiple(true).origin("3803436373353520393").done();
    b.alias("concert");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Container", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x4ed97160b0a7f9fbL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5681697064999188987");
    b.aggregate("components", 0x4ed97160b0a7fa7bL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x4ed97160b0a7fa2aL).optional(true).ordered(true).multiple(true).origin("5681697064999189115").done();
    b.alias("container");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDottedLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "DottedLine", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666ff96L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.LineStyle", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666fc54L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301613031318");
    b.alias("dotted");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrawCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "DrawCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L);
    b.class_(false, true, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301612380194");
    b.aggregate("lineStyle", 0x313e78bb26670129L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666fc54L).optional(true).ordered(true).multiple(false).origin("3548406301613031721").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrawLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "DrawLine", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265dade0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.DrawCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301612420576");
    b.prop("x1", 0x313e78bb265dade1L, "3548406301612420577");
    b.prop("y1", 0x313e78bb265dade3L, "3548406301612420579");
    b.prop("x2", 0x313e78bb265dade6L, "3548406301612420582");
    b.prop("y2", 0x313e78bb265dadeaL, "3548406301612420586");
    b.alias("line");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrawRect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "DrawRect", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb26647490L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.DrawCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301612864656");
    b.prop("upperLeftX", 0x313e78bb26647507L, "3548406301612864775");
    b.prop("upperLeftY", 0x313e78bb26647509L, "3548406301612864777");
    b.prop("lowerRightX", 0x313e78bb2664750cL, "3548406301612864780");
    b.prop("lowerRightY", 0x313e78bb26647510L, "3548406301612864784");
    b.alias("rectangle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "EmptyLine", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1a2bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.DrawCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301612382763");
    b.alias("<empty line>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFormDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "FormDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2245eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.AbstractRequestDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2238aL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/1885452693916492894");
    b.prop("requestor", 0x1a2a793c4db2245fL, "1885452693916492895");
    b.prop("age", 0x1a2a793c4db22461L, "1885452693916492897");
    b.prop("firstTimeApplicant", 0x1a2a793c4db22464L, "1885452693916492900");
    b.prop("purpose", 0x1a2a793c4db22468L, "1885452693916492904");
    b.prop("detail", 0x1a2a793c4db2246dL, "1885452693916492909");
    b.alias("form description");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFruit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Fruit", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786b2fbL);
    b.class_(false, true, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353345787");
    b.prop("weight", 0x34c8853ae786b2feL, "3803436373353345790");
    b.prop("color", 0x34c8853ae786badbL, "3803436373353347803");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFruitPlate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "FruitPlate", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786b02dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353345069");
    b.aggregate("fruit", 0x34c8853ae786b2f9L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786b2fbL).optional(true).ordered(true).multiple(true).origin("3803436373353345785").done();
    b.alias("fruit plate");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIncompleteCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "IncompleteCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x7d09f66a13005410L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.DrawCommand", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/9010003464977142800");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Item", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x7e8fc6224ac7e021L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/9119725621034344481");
    b.alias("item");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForItemReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "ItemReference", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x7e8fc6224ac7e053L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/9119725621034344531");
    b.associate("item", 0x7e8fc6224ac7e054L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x7e8fc6224ac7e021L).optional(false).origin("9119725621034344532").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLineStyle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "LineStyle", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666fc54L);
    b.class_(false, true, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301613030484");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListOfDrawCommands() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "ListOfDrawCommands", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d07e6L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301612378086");
    b.aggregate("commands", 0x313e78bb265d1023L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb265d1022L).optional(true).ordered(true).multiple(true).origin("3548406301612380195").done();
    b.alias("paint commands");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperationOnAddress() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "OperationOnAddress", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26bb7860L);
    b.class_(false, true, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235298371680");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrange() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Orange", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786bb3aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.Fruit", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae786b2fbL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353347898");
    b.prop("taste", 0x34c8853ae786bbbaL, "3803436373353348026");
    b.alias("orange");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParticipant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Participant", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78e59fbL);
    b.class_(false, false, false);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353847291");
    b.associate("singer", 0x34c8853ae78e59fcL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895c8dL).optional(false).origin("3803436373353847292").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerformance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Performance", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895ce1L);
    b.class_(false, false, false);
    b.parent(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78db30bL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353520353");
    b.associate("singer", 0x34c8853ae7895ce2L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895c8dL).optional(false).origin("3803436373353520354").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerformanceWithTitle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "PerformanceWithTitle", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae795648bL);
    b.class_(false, false, false);
    b.parent(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae78db30bL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373354308747");
    b.prop("title", 0x34c8853ae795648eL, "3803436373354308750");
    b.aggregate("singer", 0x34c8853ae7956854L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895ce1L).optional(false).ordered(true).multiple(false).origin("3803436373354309716").done();
    b.alias("titled performance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRaceParticipant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "RaceParticipant", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae79f4cedL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373354958061");
    b.aggregate("car", 0x34c8853ae79f4e7cL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae79f4defL).optional(true).ordered(true).multiple(false).origin("3803436373354958460").done();
    b.alias("race participant");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Request", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db22351L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/1885452693916492625");
    b.aggregate("description", 0x1a2a793c4db2238bL).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2238aL).optional(false).ordered(true).multiple(false).origin("1885452693916492683").done();
    b.alias("request");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimplifiedFormDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "SimplifiedFormDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db223f4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.AbstractRequestDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2238aL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/1885452693916492788");
    b.prop("requestor", 0x1a2a793c4db223f5L, "1885452693916492789");
    b.prop("firstTimeApplicant", 0x1a2a793c4db223f7L, "1885452693916492791");
    b.prop("detail", 0x1a2a793c4db223faL, "1885452693916492794");
    b.alias("simplified form description");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSinger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Singer", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae7895c8dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373353520269");
    b.alias("singer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSolidLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "SolidLine", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666fc55L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.LineStyle", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x313e78bb2666fc54L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3548406301613030485");
    b.alias("solid");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSomeForm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "SomeForm", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b3f406L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235297879046");
    b.aggregate("addresses", 0x48a6ab8c26b3f409L).target(0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b3f40bL).optional(true).ordered(true).multiple(true).origin("5235060235297879049").done();
    b.aggregate("validation", 0x48a6ab8c26b3f44fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5235060235297879119").done();
    b.alias("some form");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStreetOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "StreetOperation", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b9b2e7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.OperationOnAddress", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26bb7860L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235298255591");
    b.alias("street");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "StringDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db223d5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.AbstractRequestDescription", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x1a2a793c4db2238aL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/1885452693916492757");
    b.prop("value", 0x1a2a793c4db223d6L, "1885452693916492758");
    b.alias("string description");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTruck() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "Truck", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae79f4fc1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.Car", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x34c8853ae79f4defL);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/3803436373354958785");
    b.prop("weight", 0x34c8853ae79f4fc2L, "3803436373354958786");
    b.alias("truck");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForZipOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.languagePatterns.Basic", "ZipOperation", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26b8b81dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.languagePatterns.Basic.structure.OperationOnAddress", 0x7a6f7ef73988464bL, 0x8cc51182671c136eL, 0x48a6ab8c26bb7860L);
    b.origin("r:150e80ad-a158-4a95-9515-f61f51743da4(jetbrains.mps.samples.languagePatterns.Basic.structure)/5235060235298191389");
    b.alias("zip");
    return b.create();
  }
}
