package jetbrains.mps.samples.languagePatterns.Basic.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Arrays;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "jetbrains.mps.samples.languagePatterns.Basic";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (Arrays.binarySearch(stringSwitchCases_tpto26_a0a0a0c, concept.getName())) {
        case 0:
          return Collections.<NodeFactory>singletonList(new ConvertLinesToRectAndBack.NodeFactory_3548406301613038524());
        case 1:
          return Collections.<NodeFactory>singletonList(new ConvertLinesToRectAndBack.NodeFactory_3548406301613072220());
        case 2:
          return Collections.<NodeFactory>singletonList(new Converters.NodeFactory_6918512748467409696());
        case 3:
          return Collections.<NodeFactory>singletonList(new Converters.NodeFactory_6918512748467367934());
        case 4:
          return Collections.<NodeFactory>singletonList(new Converters.NodeFactory_6918512748467539647());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

  private static String[] stringSwitchCases_tpto26_a0a0a0c = new String[]{"DrawLine", "DrawRect", "FormDescription", "SimplifiedFormDescription", "StringDescription"};
}
