package jetbrains.mps.samples.workflowDefinition.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateChart = createDescriptorForStateChart();
  /*package*/ final ConceptDescriptor myConceptStateful = createDescriptorForStateful();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEvent, myConceptState, myConceptStateChart, myConceptStateful, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Event:
        return myConceptEvent;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.StateChart:
        return myConceptStateChart;
      case LanguageConceptSwitch.Stateful:
        return myConceptStateful;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.workflowDefinition", "Event", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a5L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d00cf6f5-2159-45d5-8be8-0f6c2c86af14(jetbrains.mps.samples.workflowDefinition.structure)/6216326891663378341");
    b.alias("event");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.workflowDefinition", "State", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594df419L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.workflowDefinition.structure.Stateful", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a8L);
    b.origin("r:d00cf6f5-2159-45d5-8be8-0f6c2c86af14(jetbrains.mps.samples.workflowDefinition.structure)/6216326891663389721");
    b.aggregate("transitions", 0x5644d45f594dc7b3L).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7abL).optional(true).ordered(true).multiple(true).origin("6216326891663378355").done();
    b.alias("state");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateChart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.workflowDefinition", "StateChart", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a2L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.samples.workflowDefinition.structure.Stateful", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a8L);
    b.origin("r:d00cf6f5-2159-45d5-8be8-0f6c2c86af14(jetbrains.mps.samples.workflowDefinition.structure)/6216326891663378338");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateful() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.workflowDefinition", "Stateful", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a8L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d00cf6f5-2159-45d5-8be8-0f6c2c86af14(jetbrains.mps.samples.workflowDefinition.structure)/6216326891663378344");
    b.associate("initial", 0x5644d45f5950783dL).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594df419L).optional(true).origin("6216326891663554621").done();
    b.aggregate("availableTriggers", 0x5644d45f594dc7b1L).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a5L).optional(true).ordered(true).multiple(true).origin("6216326891663378353").done();
    b.aggregate("states", 0x5644d45f594df3f5L).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594df419L).optional(true).ordered(true).multiple(true).origin("6216326891663389685").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.workflowDefinition", "Transition", 0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7abL);
    b.class_(false, false, false);
    b.origin("r:d00cf6f5-2159-45d5-8be8-0f6c2c86af14(jetbrains.mps.samples.workflowDefinition.structure)/6216326891663378347");
    b.associate("trigger", 0x5644d45f594dc7e4L).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594dc7a5L).optional(false).origin("6216326891663378404").done();
    b.associate("target", 0x5644d45f594dc7e6L).target(0x96c081ab0e0743cbL, 0x984296a96536026eL, 0x5644d45f594df419L).optional(false).origin("6216326891663378406").done();
    b.alias("transition");
    return b.create();
  }
}
