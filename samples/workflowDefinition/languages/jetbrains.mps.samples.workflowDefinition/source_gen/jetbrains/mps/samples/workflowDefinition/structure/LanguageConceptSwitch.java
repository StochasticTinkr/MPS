package jetbrains.mps.samples.workflowDefinition.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Event = 0;
  public static final int State = 1;
  public static final int StateChart = 2;
  public static final int Stateful = 3;
  public static final int Transition = 4;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x96c081ab0e0743cbL, 0x984296a96536026eL);
    builder.put(0x5644d45f594dc7a5L, Event);
    builder.put(0x5644d45f594df419L, State);
    builder.put(0x5644d45f594dc7a2L, StateChart);
    builder.put(0x5644d45f594dc7a8L, Stateful);
    builder.put(0x5644d45f594dc7abL, Transition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
