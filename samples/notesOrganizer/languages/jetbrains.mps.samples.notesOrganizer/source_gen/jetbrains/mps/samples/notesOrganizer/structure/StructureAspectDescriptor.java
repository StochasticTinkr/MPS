package jetbrains.mps.samples.notesOrganizer.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(10);
  /*package*/ final ConceptDescriptor myConceptCategory = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.Category", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d1748L)).super_("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo").super_(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L)).parents("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).alias("category", "").create();
  /*package*/ final ConceptDescriptor myConceptCategoryReference = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.CategoryReference", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df334L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7ba12f0b163df335L, "target", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d1748L), false)).references("target").create();
  /*package*/ final ConceptDescriptor myConceptNote = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.Note", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df32dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7ba12f0b163df32eL, "priority", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d174bL), true), new ConceptDescriptorBuilder.Ref(0x7ba12f0b163df384L, "status", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df360L), true)).references("priority", "status").childDescriptors(new ConceptDescriptorBuilder.Link(0x7ba12f0b163df3ffL, "parts", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df3feL), false, true, false), new ConceptDescriptorBuilder.Link(0x7ba12f0b163df35dL, "category", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df334L), true, true, false)).children(new String[]{"parts", "category"}, new boolean[]{true, true}).alias("note", "").create();
  /*package*/ final ConceptDescriptor myConceptNoteMetaInfo = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x36042ea354974c9dL, "color", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL), true)).references("color").abstract_().create();
  /*package*/ final ConceptDescriptor myConceptNotePart = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.NotePart", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df3feL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptNotes = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.Notes", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d1742L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7ba12f0b1640efd3L, "presentation"), new ConceptDescriptorBuilder.Prop(0x36042ea3549ce25fL, "showActive"), new ConceptDescriptorBuilder.Prop(0x36042ea354a85565L, "selectedCategory")).properties("presentation", "showActive", "selectedCategory").childDescriptors(new ConceptDescriptorBuilder.Link(0x7ba12f0b163e1e47L, "notes", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df32dL), true, true, false)).children(new String[]{"notes"}, new boolean[]{true}).alias("notes", "Notes list").create();
  /*package*/ final ConceptDescriptor myConceptNotesConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.NotesConfiguration", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d1745L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7ba12f0b163d1791L, "categories", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d1748L), true, true, false), new ConceptDescriptorBuilder.Link(0x7ba12f0b163d1793L, "priorities", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d174bL), true, true, false), new ConceptDescriptorBuilder.Link(0x7ba12f0b163df380L, "statuses", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df360L), true, true, false)).children(new String[]{"categories", "priorities", "statuses"}, new boolean[]{true, true, true}).alias("notes configuraion", "").create();
  /*package*/ final ConceptDescriptor myConceptPriority = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.Priority", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163d174bL)).super_("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo").super_(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L)).parents("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).alias("priority", "").create();
  /*package*/ final ConceptDescriptor myConceptStatus = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.Status", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df360L)).super_("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo").super_(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L)).parents("jetbrains.mps.samples.notesOrganizer.structure.NoteMetaInfo", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x36042ea354974c99L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x36042ea3549551c8L, "active")).properties("active").alias("status", "").create();
  /*package*/ final ConceptDescriptor myConceptTextNotePart = new ConceptDescriptorBuilder("jetbrains.mps.samples.notesOrganizer.structure.TextNotePart", MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df404L)).super_("jetbrains.mps.samples.notesOrganizer.structure.NotePart").super_(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df3feL)).parents("jetbrains.mps.samples.notesOrganizer.structure.NotePart").parentIds(MetaIdFactory.conceptId(0x4b0f115a88684d72L, 0x8d6197071eaaa5f1L, 0x7ba12f0b163df3feL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7ba12f0b163df405L, "text")).properties("text").create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCategory.getId(), 0);
    myIndexMap.put(myConceptCategoryReference.getId(), 1);
    myIndexMap.put(myConceptNote.getId(), 2);
    myIndexMap.put(myConceptNoteMetaInfo.getId(), 3);
    myIndexMap.put(myConceptNotePart.getId(), 4);
    myIndexMap.put(myConceptNotes.getId(), 5);
    myIndexMap.put(myConceptNotesConfiguration.getId(), 6);
    myIndexMap.put(myConceptPriority.getId(), 7);
    myIndexMap.put(myConceptStatus.getId(), 8);
    myIndexMap.put(myConceptTextNotePart.getId(), 9);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCategory, myConceptCategoryReference, myConceptNote, myConceptNoteMetaInfo, myConceptNotePart, myConceptNotes, myConceptNotesConfiguration, myConceptPriority, myConceptStatus, myConceptTextNotePart);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCategory;
      case 1:
        return myConceptCategoryReference;
      case 2:
        return myConceptNote;
      case 3:
        return myConceptNoteMetaInfo;
      case 4:
        return myConceptNotePart;
      case 5:
        return myConceptNotes;
      case 6:
        return myConceptNotesConfiguration;
      case 7:
        return myConceptPriority;
      case 8:
        return myConceptStatus;
      case 9:
        return myConceptTextNotePart;
      default:
        throw new IllegalStateException();
    }
  }
}
