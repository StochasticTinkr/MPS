package jetbrains.mps.samples.notesOrganizer.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum NotesPresentation {
  default_jpthrh_a("default", "default"),
  compact("compact", "compact"),
  inspected("inspected", "inspected");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private NotesPresentation(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<NotesPresentation> getConstants() {
    List<NotesPresentation> list = ListSequence.fromList(new LinkedList<NotesPresentation>());
    ListSequence.fromList(list).addElement(NotesPresentation.default_jpthrh_a);
    ListSequence.fromList(list).addElement(NotesPresentation.compact);
    ListSequence.fromList(list).addElement(NotesPresentation.inspected);
    return list;
  }
  public static NotesPresentation getDefault() {
    return NotesPresentation.default_jpthrh_a;
  }
  public static NotesPresentation parseValue(String value) {
    if (value == null) {
      return NotesPresentation.getDefault();
    }
    if (value.equals(NotesPresentation.default_jpthrh_a.getValueAsString())) {
      return NotesPresentation.default_jpthrh_a;
    }
    if (value.equals(NotesPresentation.compact.getValueAsString())) {
      return NotesPresentation.compact;
    }
    if (value.equals(NotesPresentation.inspected.getValueAsString())) {
      return NotesPresentation.inspected;
    }
    return NotesPresentation.getDefault();
  }
}
