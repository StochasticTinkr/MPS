package jetbrains.mps.samples.lambdaCalculus.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myLambdaExpression__BehaviorDescriptor = new LambdaExpression__BehaviorDescriptor();
  private final BHDescriptor myLambdaAbstraction__BehaviorDescriptor = new LambdaAbstraction__BehaviorDescriptor();
  private final BHDescriptor myLambdaApplication__BehaviorDescriptor = new LambdaApplication__BehaviorDescriptor();
  private final BHDescriptor myAbstractionVarRef__BehaviorDescriptor = new AbstractionVarRef__BehaviorDescriptor();
  private final BHDescriptor myFunctionType__BehaviorDescriptor = new FunctionType__BehaviorDescriptor();
  private final BHDescriptor myLetExpression__BehaviorDescriptor = new LetExpression__BehaviorDescriptor();
  private final BHDescriptor myLetRef__BehaviorDescriptor = new LetRef__BehaviorDescriptor();
  private final BHDescriptor myVariableOwner__BehaviorDescriptor = new VariableOwner__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0l = concept;
    switch (index_846f5o_a0l.index(cncpt_a0l)) {
      case 0:
        return myAbstractionVarRef__BehaviorDescriptor;
      case 1:
        return myFunctionType__BehaviorDescriptor;
      case 2:
        return myLambdaAbstraction__BehaviorDescriptor;
      case 3:
        return myLambdaApplication__BehaviorDescriptor;
      case 4:
        return myLambdaExpression__BehaviorDescriptor;
      case 5:
        return myLetExpression__BehaviorDescriptor;
      case 6:
        return myLetRef__BehaviorDescriptor;
      case 7:
        return myVariableOwner__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0l = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7fe548fL), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afae8L), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf80L), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dddL), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edbfc79fL), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edc7216cL), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496a4fL)).seal();
}
