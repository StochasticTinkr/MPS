package jetbrains.mps.samples.lambdaCalculus.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAbstractionVarRef = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVarRef", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7fe548fL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L)).create();
  /*package*/ final ConceptDescriptor myConceptAbstractionVariable = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVariable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf81L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.Variable").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.Variable", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).create();
  /*package*/ final ConceptDescriptor myConceptAddOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.AddOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a0969L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).alias("+", "").create();
  /*package*/ final ConceptDescriptor myConceptBinaryNumericOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptBinaryOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).childDescriptors(new ConceptDescriptorBuilder.Link(1934341835352312156L, "left", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false), new ConceptDescriptorBuilder.Link(1934341835352312157L, "right", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false)).children(new String[]{"left", "right"}, new boolean[]{false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptBinaryStringOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb6L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptConcatenateOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.ConcatenateOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb8L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb6L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb6L)).alias("+", "").create();
  /*package*/ final ConceptDescriptor myConceptDivideOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.DivideOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eeeL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).alias("/", "").create();
  /*package*/ final ConceptDescriptor myConceptFunctionType = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.FunctionType", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afae8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(4530871765544139497L, "domain", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L), false, false, false), new ConceptDescriptorBuilder.Link(4530871765544139498L, "range", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L), false, false, false)).children(new String[]{"domain", "range"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptLambdaAbstraction = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LambdaAbstraction", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf80L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression", "jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496a4fL)).childDescriptors(new ConceptDescriptorBuilder.Link(4022026349914762681L, "variable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf81L), false, true, false), new ConceptDescriptorBuilder.Link(4022026349914762693L, "body", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false)).children(new String[]{"variable", "body"}, new boolean[]{true, false}).alias("\\", "").create();
  /*package*/ final ConceptDescriptor myConceptLambdaApplication = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dddL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).childDescriptors(new ConceptDescriptorBuilder.Link(4022026349914762720L, "function", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false), new ConceptDescriptorBuilder.Link(4022026349914762721L, "argument", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, true, false)).children(new String[]{"function", "argument"}, new boolean[]{false, true}).create();
  /*package*/ final ConceptDescriptor myConceptLambdaExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptLambdaType = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptLetExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LetExpression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edbfc79fL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression", "jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496a4fL)).childDescriptors(new ConceptDescriptorBuilder.Link(4939219901991602080L, "value", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false), new ConceptDescriptorBuilder.Link(4939219901991602081L, "expression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false), new ConceptDescriptorBuilder.Link(8360767178776358704L, "variable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x74076973acb52e68L), false, false, false)).children(new String[]{"value", "expression", "variable"}, new boolean[]{false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptLetRef = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LetRef", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edc7216cL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L)).create();
  /*package*/ final ConceptDescriptor myConceptLetVariable = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.LetVariable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x74076973acb52e68L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.Variable").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.Variable", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).create();
  /*package*/ final ConceptDescriptor myConceptMultipleExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x15b75b54f176d1a3L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).childDescriptors(new ConceptDescriptorBuilder.Link(1564819815921013156L, "expressions", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, true, false)).children(new String[]{"expressions"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptMultiplyOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.MultiplyOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eeaL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).alias("*", "").create();
  /*package*/ final ConceptDescriptor myConceptNumberType = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.NumberType", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afadaL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L)).alias("number", "").create();
  /*package*/ final ConceptDescriptor myConceptNumericConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.NumericConstant", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dd5L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4022026349914762710L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptParenthesisExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3735fdad52687b59L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).childDescriptors(new ConceptDescriptorBuilder.Link(3978364766705449818L, "expression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptProgram = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.Program", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7fc0389L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L)).childDescriptors(new ConceptDescriptorBuilder.Link(4022026349915669386L, "expression", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptStringConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.StringConstant", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dc8L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4022026349914762697L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptStringType = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.StringType", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afae1L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L)).alias("string", "").create();
  /*package*/ final ConceptDescriptor myConceptSubtractOperation = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.SubtractOperation", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eecL)).super_("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L)).alias("-", "").create();
  /*package*/ final ConceptDescriptor myConceptVariable = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.Variable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).create();
  /*package*/ final ConceptDescriptor myConceptVariableOwner = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496a4fL)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L)).super_("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").super_(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).parents("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression").parentIds(MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(5249919352014732020L, "variable", MetaIdFactory.conceptId(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L), false)).references("variable").abstract_().create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractionVarRef, myConceptAbstractionVariable, myConceptAddOperation, myConceptBinaryNumericOperation, myConceptBinaryOperation, myConceptBinaryStringOperation, myConceptConcatenateOperation, myConceptDivideOperation, myConceptFunctionType, myConceptLambdaAbstraction, myConceptLambdaApplication, myConceptLambdaExpression, myConceptLambdaType, myConceptLetExpression, myConceptLetRef, myConceptLetVariable, myConceptMultipleExpression, myConceptMultiplyOperation, myConceptNumberType, myConceptNumericConstant, myConceptParenthesisExpression, myConceptProgram, myConceptStringConstant, myConceptStringType, myConceptSubtractOperation, myConceptVariable, myConceptVariableOwner, myConceptVariableReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0gb.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptAbstractionVarRef;
          }
          break;
        case 1:
          if (true) {
            return myConceptAbstractionVariable;
          }
          break;
        case 2:
          if (true) {
            return myConceptAddOperation;
          }
          break;
        case 3:
          if (true) {
            return myConceptBinaryNumericOperation;
          }
          break;
        case 4:
          if (true) {
            return myConceptBinaryOperation;
          }
          break;
        case 5:
          if (true) {
            return myConceptBinaryStringOperation;
          }
          break;
        case 6:
          if (true) {
            return myConceptConcatenateOperation;
          }
          break;
        case 7:
          if (true) {
            return myConceptDivideOperation;
          }
          break;
        case 8:
          if (true) {
            return myConceptFunctionType;
          }
          break;
        case 9:
          if (true) {
            return myConceptLambdaAbstraction;
          }
          break;
        case 10:
          if (true) {
            return myConceptLambdaApplication;
          }
          break;
        case 11:
          if (true) {
            return myConceptLambdaExpression;
          }
          break;
        case 12:
          if (true) {
            return myConceptLambdaType;
          }
          break;
        case 13:
          if (true) {
            return myConceptLetExpression;
          }
          break;
        case 14:
          if (true) {
            return myConceptLetRef;
          }
          break;
        case 15:
          if (true) {
            return myConceptLetVariable;
          }
          break;
        case 16:
          if (true) {
            return myConceptMultipleExpression;
          }
          break;
        case 17:
          if (true) {
            return myConceptMultiplyOperation;
          }
          break;
        case 18:
          if (true) {
            return myConceptNumberType;
          }
          break;
        case 19:
          if (true) {
            return myConceptNumericConstant;
          }
          break;
        case 20:
          if (true) {
            return myConceptParenthesisExpression;
          }
          break;
        case 21:
          if (true) {
            return myConceptProgram;
          }
          break;
        case 22:
          if (true) {
            return myConceptStringConstant;
          }
          break;
        case 23:
          if (true) {
            return myConceptStringType;
          }
          break;
        case 24:
          if (true) {
            return myConceptSubtractOperation;
          }
          break;
        case 25:
          if (true) {
            return myConceptVariable;
          }
          break;
        case 26:
          if (true) {
            return myConceptVariableOwner;
          }
          break;
        case 27:
          if (true) {
            return myConceptVariableReference;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0gb = buildConceptIndices(MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7fe548fL, "jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVarRef"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf81L, "jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVariable"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a0969L, "jetbrains.mps.samples.lambdaCalculus.structure.AddOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb4L, "jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1ad829a6925a095bL, "jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb6L, "jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x1a34313bb1413cb8L, "jetbrains.mps.samples.lambdaCalculus.structure.ConcatenateOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eeeL, "jetbrains.mps.samples.lambdaCalculus.structure.DivideOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afae8L, "jetbrains.mps.samples.lambdaCalculus.structure.FunctionType"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7eccf80L, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaAbstraction"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dddL, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ec98e9L, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afad8L, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaType"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edbfc79fL, "jetbrains.mps.samples.lambdaCalculus.structure.LetExpression"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x448ba254edc7216cL, "jetbrains.mps.samples.lambdaCalculus.structure.LetRef"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x74076973acb52e68L, "jetbrains.mps.samples.lambdaCalculus.structure.LetVariable"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x15b75b54f176d1a3L, "jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eeaL, "jetbrains.mps.samples.lambdaCalculus.structure.MultiplyOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afadaL, "jetbrains.mps.samples.lambdaCalculus.structure.NumberType"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dd5L, "jetbrains.mps.samples.lambdaCalculus.structure.NumericConstant"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3735fdad52687b59L, "jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7fc0389L, "jetbrains.mps.samples.lambdaCalculus.structure.Program"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x37d11ba7d7ee2dc8L, "jetbrains.mps.samples.lambdaCalculus.structure.StringConstant"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x3ee0e3dd7c1afae1L, "jetbrains.mps.samples.lambdaCalculus.structure.StringType"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x5c3aaf5269584eecL, "jetbrains.mps.samples.lambdaCalculus.structure.SubtractOperation"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b12L, "jetbrains.mps.samples.lambdaCalculus.structure.Variable"), MetaAdapterFactory.getInterfaceConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496a4fL, "jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"), MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL, 0xadf0aaee45eb2895L, 0x48db75d5dc496b08L, "jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"));
}
