package jetbrains.mps.samples.componentDependencies.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(5);
  /*package*/ final ConceptDescriptor myConceptComponent = new ConceptDescriptorBuilder("jetbrains.mps.samples.componentDependencies.structure.Component", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e19763814f144L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x565e1976381bdb4dL, "x"), new ConceptDescriptorBuilder.Prop(0x565e1976381bdb4fL, "y"), new ConceptDescriptorBuilder.Prop(0x7128192564721b88L, "width"), new ConceptDescriptorBuilder.Prop(0x7128192564721b8fL, "heigh"), new ConceptDescriptorBuilder.Prop(0x7128192564721babL, "subsystem")).properties("x", "y", "width", "heigh", "subsystem").childDescriptors(new ConceptDescriptorBuilder.Link(0x565e19763814f147L, "dep", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381b71a0L), true, true, false), new ConceptDescriptorBuilder.Link(0x565e1976381be142L, "in", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381be166L), true, true, false), new ConceptDescriptorBuilder.Link(0x565e1976381be146L, "out", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381be145L), true, true, false)).children(new String[]{"dep", "in", "out"}, new boolean[]{true, true, true}).sourceNode(new SNodePointer("r:afaf73eb-94a1-4aae-902b-ed4d28124667(jetbrains.mps.samples.componentDependencies.structure)", "6223439730610336068")).create();
  /*package*/ final ConceptDescriptor myConceptComponentSet = new ConceptDescriptorBuilder("jetbrains.mps.samples.componentDependencies.structure.ComponentSet", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e19763814242bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x67281f6f60dc969eL, "query")).properties("query").childDescriptors(new ConceptDescriptorBuilder.Link(0x565e197638146fa8L, "component", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e19763814f144L), false, true, false)).children(new String[]{"component"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:afaf73eb-94a1-4aae-902b-ed4d28124667(jetbrains.mps.samples.componentDependencies.structure)", "6223439730610283563")).create();
  /*package*/ final ConceptDescriptor myConceptDependency = new ConceptDescriptorBuilder("jetbrains.mps.samples.componentDependencies.structure.Dependency", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381b71a0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x565e1976381b7654L, "to", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e19763814f144L), false)).references("to").alias("depends on", "").sourceNode(new SNodePointer("r:afaf73eb-94a1-4aae-902b-ed4d28124667(jetbrains.mps.samples.componentDependencies.structure)", "6223439730610762144")).create();
  /*package*/ final ConceptDescriptor myConceptInPort = new ConceptDescriptorBuilder("jetbrains.mps.samples.componentDependencies.structure.InPort", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381be166L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:afaf73eb-94a1-4aae-902b-ed4d28124667(jetbrains.mps.samples.componentDependencies.structure)", "6223439730610790758")).create();
  /*package*/ final ConceptDescriptor myConceptOutPort = new ConceptDescriptorBuilder("jetbrains.mps.samples.componentDependencies.structure.OutPort", MetaIdFactory.conceptId(0x3066bc0924384300L, 0xa9365bd59917ae9bL, 0x565e1976381be145L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:afaf73eb-94a1-4aae-902b-ed4d28124667(jetbrains.mps.samples.componentDependencies.structure)", "6223439730610790725")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptComponent.getId(), 0);
    myIndexMap.put(myConceptComponentSet.getId(), 1);
    myIndexMap.put(myConceptDependency.getId(), 2);
    myIndexMap.put(myConceptInPort.getId(), 3);
    myIndexMap.put(myConceptOutPort.getId(), 4);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptComponent, myConceptComponentSet, myConceptDependency, myConceptInPort, myConceptOutPort);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptComponent;
      case 1:
        return myConceptComponentSet;
      case 2:
        return myConceptDependency;
      case 3:
        return myConceptInPort;
      case 4:
        return myConceptOutPort;
      default:
        throw new IllegalStateException();
    }
  }
}
