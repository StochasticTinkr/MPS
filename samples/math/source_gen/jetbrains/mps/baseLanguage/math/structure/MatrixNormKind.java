package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum MatrixNormKind {
  norm1("1", 0),
  normInfty("âˆž", 1),
  norm2F("F", 2),
  normMax("max", 3);

  private final String myName;
  public String getName() {
    return myName;
  }
  private final int myValue;
  MatrixNormKind(String name, int value) {
    myName = name;
    myValue = value;
  }
  public int getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return Integer.toString(myValue);
  }
  public static List<MatrixNormKind> getConstants() {
    List<MatrixNormKind> list = ListSequence.fromList(new LinkedList<MatrixNormKind>());
    ListSequence.fromList(list).addElement(MatrixNormKind.norm1);
    ListSequence.fromList(list).addElement(MatrixNormKind.normInfty);
    ListSequence.fromList(list).addElement(MatrixNormKind.norm2F);
    ListSequence.fromList(list).addElement(MatrixNormKind.normMax);
    return list;
  }
  public static MatrixNormKind getDefault() {
    return MatrixNormKind.normInfty;
  }
  public static MatrixNormKind parseValue(String value) {
    if (value == null) {
      return MatrixNormKind.getDefault();
    }
    if (value.equals(MatrixNormKind.norm1.getValueAsString())) {
      return MatrixNormKind.norm1;
    }
    if (value.equals(MatrixNormKind.normInfty.getValueAsString())) {
      return MatrixNormKind.normInfty;
    }
    if (value.equals(MatrixNormKind.norm2F.getValueAsString())) {
      return MatrixNormKind.norm2F;
    }
    if (value.equals(MatrixNormKind.normMax.getValueAsString())) {
      return MatrixNormKind.normMax;
    }
    return MatrixNormKind.getDefault();
  }
}
