package jetbrains.mps.baseLanguage.money.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_MoneyCreator = new ConceptPresentationBuilder().shortDesc("money type constructor").create();
  private final ConceptPresentation props_MoneyGetAmountMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MoneyGetCurrencyMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MoneyIsZeroMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MoneyLiteral = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MoneyMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MoneyType = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.MoneyCreator:
        return props_MoneyCreator;
      case LanguageConceptSwitch.MoneyGetAmountMethodCall:
        return props_MoneyGetAmountMethodCall;
      case LanguageConceptSwitch.MoneyGetCurrencyMethodCall:
        return props_MoneyGetCurrencyMethodCall;
      case LanguageConceptSwitch.MoneyIsZeroMethodCall:
        return props_MoneyIsZeroMethodCall;
      case LanguageConceptSwitch.MoneyLiteral:
        return props_MoneyLiteral;
      case LanguageConceptSwitch.MoneyMethodCall:
        return props_MoneyMethodCall;
      case LanguageConceptSwitch.MoneyType:
        return props_MoneyType;
    }
    return null;
  }
}
