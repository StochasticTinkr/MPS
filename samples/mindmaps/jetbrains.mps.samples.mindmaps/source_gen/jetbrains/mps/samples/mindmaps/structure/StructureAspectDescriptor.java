package jetbrains.mps.samples.mindmaps.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(6);
  /*package*/ final ConceptDescriptor myConceptCoreThrought = createDescriptorForCoreThrought();
  /*package*/ final ConceptDescriptor myConceptMindMap = createDescriptorForMindMap();
  /*package*/ final ConceptDescriptor myConceptRelationship = createDescriptorForRelationship();
  /*package*/ final ConceptDescriptor myConceptSpecializes = createDescriptorForSpecializes();
  /*package*/ final ConceptDescriptor myConceptThought = createDescriptorForThought();
  /*package*/ final ConceptDescriptor myConceptVisualBox = createDescriptorForVisualBox();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCoreThrought.getId(), 0);
    myIndexMap.put(myConceptMindMap.getId(), 1);
    myIndexMap.put(myConceptRelationship.getId(), 2);
    myIndexMap.put(myConceptSpecializes.getId(), 3);
    myIndexMap.put(myConceptThought.getId(), 4);
    myIndexMap.put(myConceptVisualBox.getId(), 5);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCoreThrought, myConceptMindMap, myConceptRelationship, myConceptSpecializes, myConceptThought, myConceptVisualBox);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCoreThrought;
      case 1:
        return myConceptMindMap;
      case 2:
        return myConceptRelationship;
      case 3:
        return myConceptSpecializes;
      case 4:
        return myConceptThought;
      case 5:
        return myConceptVisualBox;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForCoreThrought() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "CoreThrought", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x46337bb59bbce054L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.mindmaps.structure.Thought", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bac8L);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/5058522826399342676");
    b.alias("core thought");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMindMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "MindMap", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14758fL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/79242395703866767");
    b.aggregate("thoughts", 0x1198689ff14c5d6L).target(0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bac8L).optional(true).ordered(true).multiple(true).origin("79242395703887318").done();
    b.aggregate("relationships", 0x1198689ff14c5dbL).target(0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bad3L).optional(true).ordered(true).multiple(true).origin("79242395703887323").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelationship() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "Relationship", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bad3L);
    b.class_(false, false, false);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/79242395703884499");
    b.associate("source", 0x517b79625769ba9eL).target(0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bac8L).optional(false).origin("5871420002487876254").done();
    b.associate("target", 0x1198689ff14c5dfL).target(0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bac8L).optional(false).origin("79242395703887327").done();
    b.alias("relationship");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecializes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "Specializes", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x46337bb59bbba841L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.mindmaps.structure.Relationship", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bad3L);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/5058522826399262785");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThought() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "Thought", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff14bac8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.mindmaps.structure.VisualBox", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff15ca26L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/79242395703884488");
    b.alias("thought");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisualBox() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.mindmaps", "VisualBox", 0x33f294fd370a4a40L, 0x999b43f382910018L, 0x1198689ff15ca26L);
    b.class_(false, true, false);
    b.origin("r:c21673e4-6a17-4077-8632-3ea58685019b(jetbrains.mps.samples.mindmaps.structure)/79242395703953958");
    b.prop("x", 0x1198689ff15ca27L, "79242395703953959");
    b.prop("y", 0x1198689ff15ca29L, "79242395703953961");
    b.prop("myIsClicked", 0x517b79625760f822L, "5871420002487302178");
    return b.create();
  }
}
