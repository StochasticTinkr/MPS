package jetbrains.mps.samples.SwingBuilder.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(16);
  /*package*/ final ConceptDescriptor myConceptButton = createDescriptorForButton();
  /*package*/ final ConceptDescriptor myConceptComponent = createDescriptorForComponent();
  /*package*/ final ConceptDescriptor myConceptConverter = createDescriptorForConverter();
  /*package*/ final ConceptDescriptor myConceptElementReference = createDescriptorForElementReference();
  /*package*/ final ConceptDescriptor myConceptEmptyComponent = createDescriptorForEmptyComponent();
  /*package*/ final ConceptDescriptor myConceptFilter = createDescriptorForFilter();
  /*package*/ final ConceptDescriptor myConceptFrame = createDescriptorForFrame();
  /*package*/ final ConceptDescriptor myConceptLabel = createDescriptorForLabel();
  /*package*/ final ConceptDescriptor myConceptMap = createDescriptorForMap();
  /*package*/ final ConceptDescriptor myConceptPanel = createDescriptorForPanel();
  /*package*/ final ConceptDescriptor myConceptPipeline = createDescriptorForPipeline();
  /*package*/ final ConceptDescriptor myConceptSourceDataType = createDescriptorForSourceDataType();
  /*package*/ final ConceptDescriptor myConceptSwingBuilderMember = createDescriptorForSwingBuilderMember();
  /*package*/ final ConceptDescriptor myConceptTargetDataType = createDescriptorForTargetDataType();
  /*package*/ final ConceptDescriptor myConceptTextField = createDescriptorForTextField();
  /*package*/ final ConceptDescriptor myConceptTransformers = createDescriptorForTransformers();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptButton.getId(), 0);
    myIndexMap.put(myConceptComponent.getId(), 1);
    myIndexMap.put(myConceptConverter.getId(), 2);
    myIndexMap.put(myConceptElementReference.getId(), 3);
    myIndexMap.put(myConceptEmptyComponent.getId(), 4);
    myIndexMap.put(myConceptFilter.getId(), 5);
    myIndexMap.put(myConceptFrame.getId(), 6);
    myIndexMap.put(myConceptLabel.getId(), 7);
    myIndexMap.put(myConceptMap.getId(), 8);
    myIndexMap.put(myConceptPanel.getId(), 9);
    myIndexMap.put(myConceptPipeline.getId(), 10);
    myIndexMap.put(myConceptSourceDataType.getId(), 11);
    myIndexMap.put(myConceptSwingBuilderMember.getId(), 12);
    myIndexMap.put(myConceptTargetDataType.getId(), 13);
    myIndexMap.put(myConceptTextField.getId(), 14);
    myIndexMap.put(myConceptTransformers.getId(), 15);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptButton, myConceptComponent, myConceptConverter, myConceptElementReference, myConceptEmptyComponent, myConceptFilter, myConceptFrame, myConceptLabel, myConceptMap, myConceptPanel, myConceptPipeline, myConceptSourceDataType, myConceptSwingBuilderMember, myConceptTargetDataType, myConceptTextField, myConceptTransformers);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptButton;
      case 1:
        return myConceptComponent;
      case 2:
        return myConceptConverter;
      case 3:
        return myConceptElementReference;
      case 4:
        return myConceptEmptyComponent;
      case 5:
        return myConceptFilter;
      case 6:
        return myConceptFrame;
      case 7:
        return myConceptLabel;
      case 8:
        return myConceptMap;
      case 9:
        return myConceptPanel;
      case 10:
        return myConceptPipeline;
      case 11:
        return myConceptSourceDataType;
      case 12:
        return myConceptSwingBuilderMember;
      case 13:
        return myConceptTargetDataType;
      case 14:
        return myConceptTextField;
      case 15:
        return myConceptTransformers;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForButton() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Button", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543043L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.SwingBuilder.structure.Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451500611");
    b.prop("text", 0x4a1cc65caa543050L, "5340361359451500624");
    b.aggregate("action", 0x4a1cc65caa548641L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9404L).optional(false).ordered(true).multiple(false).origin("5340361359451522625").done();
    b.alias("button");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.class_(false, true, false);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451500566");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConverter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Converter", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4d5f82383b28563fL);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5575318041730242111");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("Converter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElementReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "ElementReference", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1e8aL);
    b.class_(false, false, false);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/941086956890758794");
    b.associate("element", 0xd0f6999e83a1e8bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L).optional(false).origin("941086956890758795").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "EmptyComponent", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa545621L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.SwingBuilder.structure.Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451510305");
    b.alias("<empty>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFilter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Filter", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1c61L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/941086956890758241");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("Filter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFrame() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Frame", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543006L);
    b.class_(false, false, false);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451500550");
    b.aggregate("title", 0x4a1cc65caa547a6fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5340361359451519599").done();
    b.aggregate("components", 0x4a1cc65caa543113L).target(0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L).optional(true).ordered(true).multiple(true).origin("5340361359451500819").done();
    b.alias("frame");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLabel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Label", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543023L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.SwingBuilder.structure.Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451500579");
    b.prop("text", 0x4a1cc65caa543030L, "5340361359451500592");
    b.alias("label");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Map", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1d95L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/941086956890758549");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("Map");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPanel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Panel", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543033L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.SwingBuilder.structure.Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451500595");
    b.prop("vertical", 0x3752e6616e34d13dL, "3986501926311481661");
    b.aggregate("components", 0x4a1cc65caa543040L).target(0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L).optional(true).ordered(true).multiple(true).origin("5340361359451500608").done();
    b.alias("panel");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPipeline() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Pipeline", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1e59L);
    b.class_(false, false, true);
    b.super_("jetbrains.mps.baseLanguage.structure.ClassConcept", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0xea740fb893a13edL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/941086956890758745");
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("Pipeline");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSourceDataType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "SourceDataType", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4d5f82383b276c5aL);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9179L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5575318041730182234");
    b.aggregate("type", 0x4d5f82383b276c5bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("5575318041730182235").done();
    b.alias("source data type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSwingBuilderMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "SwingBuilderMember", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa5245c9L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9179L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451375049");
    b.aggregate("frame", 0x4a1cc65caa52753fL).target(0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543006L).optional(false).ordered(true).multiple(false).origin("5340361359451387199").done();
    b.alias("UI Builder");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTargetDataType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "TargetDataType", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4d5f82383b277405L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9179L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5575318041730184197");
    b.aggregate("type", 0x4d5f82383b277406L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL).optional(false).ordered(true).multiple(false).origin("5575318041730184198").done();
    b.alias("target data type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "TextField", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa54931bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.samples.SwingBuilder.structure.Component", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0x4a1cc65caa543016L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/5340361359451525915");
    b.aggregate("field", 0x4a1cc65caa549328L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L).optional(false).ordered(true).multiple(false).origin("5340361359451525928").done();
    b.alias("text field");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransformers() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.samples.SwingBuilder", "Transformers", 0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1e78L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112574373bdL);
    b.parent(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9179L);
    b.origin("r:f03fbd24-52ae-4ae3-8913-228f5120a390(jetbrains.mps.samples.SwingBuilder.structure)/941086956890758776");
    b.aggregate("elements", 0xd0f6999e83a1e88L).target(0xb4dbff0c8c314a79L, 0xa45a98e5fd0530e7L, 0xd0f6999e83a1e8aL).optional(true).ordered(true).multiple(true).origin("941086956890758792").done();
    b.alias("transformers");
    return b.create();
  }
}
