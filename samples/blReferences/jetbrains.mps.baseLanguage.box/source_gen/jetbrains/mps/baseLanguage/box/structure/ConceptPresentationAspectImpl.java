package jetbrains.mps.baseLanguage.box.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_BoxCreator;
  private ConceptPresentation props_BoxType;
  private ConceptPresentation props_Box_ValueOperation;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BoxCreator:
        if (props_BoxCreator == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("box");
          props_BoxCreator = cpb.create();
        }
        return props_BoxCreator;
      case LanguageConceptSwitch.BoxType:
        if (props_BoxType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("box");
          props_BoxType = cpb.create();
        }
        return props_BoxType;
      case LanguageConceptSwitch.Box_ValueOperation:
        if (props_Box_ValueOperation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("value");
          props_Box_ValueOperation = cpb.create();
        }
        return props_Box_ValueOperation;
    }
    return null;
  }
}
