package jetbrains.mps.samples.highlevel.simpleEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_EditorAspectDeclaration;
  private ConceptPresentation props_SimpleEditorDeclaration;
  private ConceptPresentation props_SimplePropertyReference;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.EditorAspectDeclaration:
        if (props_EditorAspectDeclaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EditorAspectDeclaration");
          props_EditorAspectDeclaration = cpb.create();
        }
        return props_EditorAspectDeclaration;
      case LanguageConceptSwitch.SimpleEditorDeclaration:
        if (props_SimpleEditorDeclaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimpleEditorDeclaration");
          props_SimpleEditorDeclaration = cpb.create();
        }
        return props_SimpleEditorDeclaration;
      case LanguageConceptSwitch.SimplePropertyReference:
        if (props_SimplePropertyReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimplePropertyReference");
          props_SimplePropertyReference = cpb.create();
        }
        return props_SimplePropertyReference;
    }
    return null;
  }
}
