package jetbrains.mps.samples.heating.tabular.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.editor.runtime.deletionApprover.DeletionApproverUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class DeleteCustomizeInTabular {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new DeleteCustomizeInTabular.DeleteCustomizeInTabular_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new DeleteCustomizeInTabular.DeleteCustomizeInTabular_BACKSPACE(node));
  }
  public static class DeleteCustomizeInTabular_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public DeleteCustomizeInTabular_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (DeletionApproverUtil.approve(editorContext, node, "customizingCollection")) {
        return;
      }
      SLinkOperations.setTarget(node, MetaAdapterFactory.getContainmentLink(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL, 0xcfa085c9af881f8L, "customizes"), null);
    }
  }
  public static class DeleteCustomizeInTabular_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public DeleteCustomizeInTabular_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (DeletionApproverUtil.approve(editorContext, node, "customizingCollection")) {
        return;
      }
      SLinkOperations.setTarget(node, MetaAdapterFactory.getContainmentLink(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL, 0xcfa085c9af881f8L, "customizes"), null);
    }
  }
}
