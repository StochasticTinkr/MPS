package jetbrains.mps.samples.heating.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myWeekendDay__BehaviorDescriptor = new WeekendDay__BehaviorDescriptor();
  private final BHDescriptor myWeekDays__BehaviorDescriptor = new WeekDays__BehaviorDescriptor();
  private final BHDescriptor mySpecificDay__BehaviorDescriptor = new SpecificDay__BehaviorDescriptor();
  private final BHDescriptor myDayRange__BehaviorDescriptor = new DayRange__BehaviorDescriptor();
  private final BHDescriptor myHeatingPlan__BehaviorDescriptor = new HeatingPlan__BehaviorDescriptor();
  private final BHDescriptor myDailyPlan__BehaviorDescriptor = new DailyPlan__BehaviorDescriptor();
  private final BHDescriptor mySlot__BehaviorDescriptor = new Slot__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      switch (index_846f5o_a0k.index(cncpt)) {
        case 0:
          return myDailyPlan__BehaviorDescriptor;
        case 1:
          return myDayRange__BehaviorDescriptor;
        case 2:
          return myHeatingPlan__BehaviorDescriptor;
        case 3:
          return mySlot__BehaviorDescriptor;
        case 4:
          return mySpecificDay__BehaviorDescriptor;
        case 5:
          return myWeekDays__BehaviorDescriptor;
        case 6:
          return myWeekendDay__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0k = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6bc56bL), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aa3f2L), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4f786d85fe288176L), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6b4ea6L), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6b4ea5L), MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68b8faL)).seal();
}
