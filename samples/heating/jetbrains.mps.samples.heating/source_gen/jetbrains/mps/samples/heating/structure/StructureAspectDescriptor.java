package jetbrains.mps.samples.heating.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(11);
  /*package*/ final ConceptDescriptor myConceptApplicability = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.Applicability", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170414652")).create();
  /*package*/ final ConceptDescriptor myConceptChangeEvent = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.ChangeEvent", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec62L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x4644aa4ce08aec70L, "temperature")).properties("temperature").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "5063359128232717410")).create();
  /*package*/ final ConceptDescriptor myConceptDailyPlan = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.DailyPlan", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x1dfff86fbfd92c74L, "displayName")).properties("displayName").childDescriptors(new ConceptDescriptorBuilder.Link(0x4644aa4ce08aec57L, "items", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4f786d85fe288176L), true, true, false), new ConceptDescriptorBuilder.Link(0x40bcae6c0e686ffeL, "applicability", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL), false, false, false), new ConceptDescriptorBuilder.Link(0xcfa085c9af881f8L, "customizes", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0xcfa085c9af5e830L), true, false, false)).children(new String[]{"items", "applicability", "customizes"}, new boolean[]{true, false, false}).sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "5063359128232717391")).create();
  /*package*/ final ConceptDescriptor myConceptDailyPlanReference = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.DailyPlanReference", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0xcfa085c9af5e830L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xcfa085c9af5e831L, "target", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL), false)).references("target").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "935069066462619696")).create();
  /*package*/ final ConceptDescriptor myConceptDayRange = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.DayRange", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6bc56bL)).super_("jetbrains.mps.samples.heating.structure.Applicability").super_(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).parents("jetbrains.mps.samples.heating.structure.Applicability").parentIds(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x40bcae6c0e6bc59fL, "start"), new ConceptDescriptorBuilder.Prop(0x40bcae6c0e6bc5a1L, "end")).properties("start", "end").alias("range", "").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170636139")).create();
  /*package*/ final ConceptDescriptor myConceptHeatingPlan = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.HeatingPlan", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aa3f2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4644aa4ce08aec4dL, "dailyPlans", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec4fL), true, true, false)).children(new String[]{"dailyPlans"}, new boolean[]{true}).sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "5063359128232698866")).create();
  /*package*/ final ConceptDescriptor myConceptNotSpecified = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.NotSpecified", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68b8b8L)).super_("jetbrains.mps.samples.heating.structure.Applicability").super_(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).parents("jetbrains.mps.samples.heating.structure.Applicability").parentIds(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).alias("not specified", "").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170436280")).create();
  /*package*/ final ConceptDescriptor myConceptSlot = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.Slot", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4f786d85fe288176L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x4f786d85fe28827cL, "start")).properties("start").childDescriptors(new ConceptDescriptorBuilder.Link(0x4f786d85fe289dd1L, "event", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x4644aa4ce08aec62L), false, false, false)).children(new String[]{"event"}, new boolean[]{false}).sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "5726447348463731062")).create();
  /*package*/ final ConceptDescriptor myConceptSpecificDay = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.SpecificDay", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6b4ea6L)).super_("jetbrains.mps.samples.heating.structure.Applicability").super_(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).parents("jetbrains.mps.samples.heating.structure.Applicability").parentIds(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x40bcae6c0e6b4ea7L, "day")).properties("day").alias("specific day", "").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170605734")).create();
  /*package*/ final ConceptDescriptor myConceptWeekDays = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.WeekDays", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e6b4ea5L)).super_("jetbrains.mps.samples.heating.structure.Applicability").super_(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).parents("jetbrains.mps.samples.heating.structure.Applicability").parentIds(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).alias("week days", "").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170605733")).create();
  /*package*/ final ConceptDescriptor myConceptWeekendDay = new ConceptDescriptorBuilder("jetbrains.mps.samples.heating.structure.WeekendDay", MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68b8faL)).super_("jetbrains.mps.samples.heating.structure.Applicability").super_(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).parents("jetbrains.mps.samples.heating.structure.Applicability").parentIds(MetaIdFactory.conceptId(0xa7d67633e8d9473bL, 0x98ce995a7aa66941L, 0x40bcae6c0e68643cL)).alias("weekend day", "").sourceNode(new SNodePointer("r:3b810168-3010-426e-9275-12b4e509a27b(jetbrains.mps.samples.heating.structure)", "4664795093170436346")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptApplicability.getId(), 0);
    myIndexMap.put(myConceptChangeEvent.getId(), 1);
    myIndexMap.put(myConceptDailyPlan.getId(), 2);
    myIndexMap.put(myConceptDailyPlanReference.getId(), 3);
    myIndexMap.put(myConceptDayRange.getId(), 4);
    myIndexMap.put(myConceptHeatingPlan.getId(), 5);
    myIndexMap.put(myConceptNotSpecified.getId(), 6);
    myIndexMap.put(myConceptSlot.getId(), 7);
    myIndexMap.put(myConceptSpecificDay.getId(), 8);
    myIndexMap.put(myConceptWeekDays.getId(), 9);
    myIndexMap.put(myConceptWeekendDay.getId(), 10);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplicability, myConceptChangeEvent, myConceptDailyPlan, myConceptDailyPlanReference, myConceptDayRange, myConceptHeatingPlan, myConceptNotSpecified, myConceptSlot, myConceptSpecificDay, myConceptWeekDays, myConceptWeekendDay);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptApplicability;
      case 1:
        return myConceptChangeEvent;
      case 2:
        return myConceptDailyPlan;
      case 3:
        return myConceptDailyPlanReference;
      case 4:
        return myConceptDayRange;
      case 5:
        return myConceptHeatingPlan;
      case 6:
        return myConceptNotSpecified;
      case 7:
        return myConceptSlot;
      case 8:
        return myConceptSpecificDay;
      case 9:
        return myConceptWeekDays;
      case 10:
        return myConceptWeekendDay;
      default:
        throw new IllegalStateException();
    }
  }
}
