package jetbrains.mps.samples.heating.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum DayDataType {
  monday("Monday", "monday"),
  tuesday("Tuesday", "tuesday"),
  wednesday("Wednesday", "wednesday"),
  thursday("Thursday", "thursday"),
  friday("Friday", "friday"),
  saturday("Saturday", "saturday"),
  sunday("Sunday", "sunday");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private DayDataType(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<DayDataType> getConstants() {
    List<DayDataType> list = ListSequence.fromList(new LinkedList<DayDataType>());
    ListSequence.fromList(list).addElement(DayDataType.monday);
    ListSequence.fromList(list).addElement(DayDataType.tuesday);
    ListSequence.fromList(list).addElement(DayDataType.wednesday);
    ListSequence.fromList(list).addElement(DayDataType.thursday);
    ListSequence.fromList(list).addElement(DayDataType.friday);
    ListSequence.fromList(list).addElement(DayDataType.saturday);
    ListSequence.fromList(list).addElement(DayDataType.sunday);
    return list;
  }
  public static DayDataType getDefault() {
    return DayDataType.monday;
  }
  public static DayDataType parseValue(String value) {
    if (value == null) {
      return DayDataType.getDefault();
    }
    if (value.equals(DayDataType.monday.getValueAsString())) {
      return DayDataType.monday;
    }
    if (value.equals(DayDataType.tuesday.getValueAsString())) {
      return DayDataType.tuesday;
    }
    if (value.equals(DayDataType.wednesday.getValueAsString())) {
      return DayDataType.wednesday;
    }
    if (value.equals(DayDataType.thursday.getValueAsString())) {
      return DayDataType.thursday;
    }
    if (value.equals(DayDataType.friday.getValueAsString())) {
      return DayDataType.friday;
    }
    if (value.equals(DayDataType.saturday.getValueAsString())) {
      return DayDataType.saturday;
    }
    if (value.equals(DayDataType.sunday.getValueAsString())) {
      return DayDataType.sunday;
    }
    return DayDataType.getDefault();
  }
}
