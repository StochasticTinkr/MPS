package jetbrains.mps.samples.Kaja.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.transformationMenus.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.transformationMenus.MenuPart;
import java.util.Arrays;
import jetbrains.mps.lang.editor.transformationMenus.ActionItemMenuPart;
import jetbrains.mps.openapi.editor.transformationMenus.TransformationMenuContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.editor.transformationMenus.ConditionalMenuPart;
import org.jetbrains.mps.openapi.model.SNode;

public class OtherCommands extends TransformationMenuBase {
  @Override
  protected List<MenuPart> getParts() {
    return Arrays.<MenuPart>asList(new ActionItemMenuPart() {
      @Override
      protected String getText(TransformationMenuContext _context) {
        return "Drop";
      }

      @Override
      protected void execute(TransformationMenuContext _context) {
        SNodeOperations.insertPrevSiblingChild(_context.getNode(), SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x58e59ea713f79f27L, "jetbrains.mps.samples.Kaja.structure.Drop")), null));
      }
    }, new ActionItemMenuPart() {
      @Override
      protected String getText(TransformationMenuContext _context) {
        return "Pick";
      }

      @Override
      protected void execute(TransformationMenuContext _context) {
        SNodeOperations.insertPrevSiblingChild(_context.getNode(), SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x58e59ea713f85f1dL, "jetbrains.mps.samples.Kaja.structure.Pick")), null));
      }
    }, new ConditionalMenuPart() {
      @Override
      protected boolean isApplicable(TransformationMenuContext _context) {
        return eq_uewb7w_a0a0a0a2a0a0(SNodeOperations.getParent(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785f06a3fL, "jetbrains.mps.samples.Kaja.structure.CommandList"), false, false)), SNodeOperations.getContainingRoot(_context.getNode()));
      }

      @Override
      protected List<MenuPart> getParts() {
        return Arrays.<MenuPart>asList(new ActionItemMenuPart() {
          @Override
          protected String getText(TransformationMenuContext _context) {
            return "Require";
          }

          @Override
          protected void execute(TransformationMenuContext _context) {
            SNode inserted = SNodeOperations.insertPrevSiblingChild(_context.getNode(), SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f1a1049L, "jetbrains.mps.samples.Kaja.structure.Require")), null));
            _context.getEditorContext().selectWRTFocusPolicy(inserted);
          }
        });
      }
    });
  }
  private static boolean eq_uewb7w_a0a0a0a2a0a0(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
