package ref.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptNewComponentRef = createDescriptorForNewComponentRef();
  /*package*/ final ConceptDescriptor myConceptOldComponentRef = createDescriptorForOldComponentRef();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptNewComponentRef, myConceptOldComponentRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.NewComponentRef:
        return myConceptNewComponentRef;
      case LanguageConceptSwitch.OldComponentRef:
        return myConceptOldComponentRef;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForNewComponentRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ref", "NewComponentRef", 0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104932a6c9L);
    b.class_(false, false, false);
    b.parent(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104932a602L);
    b.origin("r:df5dd9b9-2235-4ecc-b54b-358db13f3f15(ref.structure)/7709929535540733641");
    b.version(2);
    b.associate("target", 0x6aff2c104932a6caL).target(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c1049329d71L).optional(false).origin("7709929535540733642").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOldComponentRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ref", "OldComponentRef", 0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104931574dL);
    b.class_(false, false, false);
    b.parent(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104931bb26L);
    b.origin("r:df5dd9b9-2235-4ecc-b54b-358db13f3f15(ref.structure)/7709929535540647757");
    b.version(2);
    b.associate("target", 0x6aff2c104932a69aL).target(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c1049316cdaL).optional(false).origin("7709929535540733594").done();
    return b.create();
  }
}
