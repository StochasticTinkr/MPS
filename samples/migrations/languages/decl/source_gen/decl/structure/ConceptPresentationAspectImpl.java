package decl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_DeclMigrationData_Component = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DeclMigrationData_WholeModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NewComponent = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NewComponentMember = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_OldComponent = new ConceptPresentationBuilder().deprecated(true).create();
  private final ConceptPresentation props_OldComponentMember = new ConceptPresentationBuilder().deprecated(true).create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DeclMigrationData_Component:
        return props_DeclMigrationData_Component;
      case LanguageConceptSwitch.DeclMigrationData_WholeModule:
        return props_DeclMigrationData_WholeModule;
      case LanguageConceptSwitch.NewComponent:
        return props_NewComponent;
      case LanguageConceptSwitch.NewComponentMember:
        return props_NewComponentMember;
      case LanguageConceptSwitch.OldComponent:
        return props_OldComponent;
      case LanguageConceptSwitch.OldComponentMember:
        return props_OldComponentMember;
    }
    return null;
  }
}
