package decl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDeclMigrationData = createDescriptorForDeclMigrationData();
  /*package*/ final ConceptDescriptor myConceptNewComponent = createDescriptorForNewComponent();
  /*package*/ final ConceptDescriptor myConceptNewComponentMember = createDescriptorForNewComponentMember();
  /*package*/ final ConceptDescriptor myConceptOldComponent = createDescriptorForOldComponent();
  /*package*/ final ConceptDescriptor myConceptOldComponentMember = createDescriptorForOldComponentMember();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDeclMigrationData, myConceptNewComponent, myConceptNewComponentMember, myConceptOldComponent, myConceptOldComponentMember);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.DeclMigrationData:
        return myConceptDeclMigrationData;
      case LanguageConceptSwitch.NewComponent:
        return myConceptNewComponent;
      case LanguageConceptSwitch.NewComponentMember:
        return myConceptNewComponentMember;
      case LanguageConceptSwitch.OldComponent:
        return myConceptOldComponent;
      case LanguageConceptSwitch.OldComponentMember:
        return myConceptOldComponentMember;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDeclMigrationData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("decl", "DeclMigrationData", 0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x2274019e61e234c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.MigrationDataAnnotation", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x78c7e79625990591L);
    b.origin("r:56f66470-c4a8-46fa-8473-a0079c000cbf(decl.structure)/2482611074346661065");
    b.version(2);
    b.prop("oldId", 0x3abe707a89857bdeL, "4232944371370392542");
    b.prop("newId", 0x3abe707a89857bdfL, "4232944371370392543");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("decl", "NewComponent", 0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c1049329d71L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:56f66470-c4a8-46fa-8473-a0079c000cbf(decl.structure)/7709929535540731249");
    b.version(2);
    b.aggregate("member", 0x6aff2c1049329d74L).target(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104932a602L).optional(true).ordered(true).multiple(true).origin("7709929535540731252").done();
    b.alias("new component");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewComponentMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("decl", "NewComponentMember", 0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104932a602L);
    b.interface_();
    b.origin("r:56f66470-c4a8-46fa-8473-a0079c000cbf(decl.structure)/7709929535540733442");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOldComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("decl", "OldComponent", 0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c1049316cdaL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:56f66470-c4a8-46fa-8473-a0079c000cbf(decl.structure)/7709929535540653274");
    b.version(2);
    b.aggregate("member", 0x6aff2c104931bb27L).target(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104931bb26L).optional(true).ordered(true).multiple(true).origin("7709929535540673319").done();
    b.alias("old component");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOldComponentMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("decl", "OldComponentMember", 0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, 0x6aff2c104931bb26L);
    b.interface_();
    b.origin("r:56f66470-c4a8-46fa-8473-a0079c000cbf(decl.structure)/7709929535540673318");
    b.version(2);
    return b.create();
  }
}
