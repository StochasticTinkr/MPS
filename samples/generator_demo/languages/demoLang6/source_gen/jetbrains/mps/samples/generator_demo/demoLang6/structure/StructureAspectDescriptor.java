package jetbrains.mps.samples.generator_demo.demoLang6.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(2);
  /*package*/ final ConceptDescriptor myConceptButton = new ConceptDescriptorBuilder("jetbrains.mps.samples.generator_demo.demoLang6.structure.Button", MetaIdFactory.conceptId(0x82fb751df7fb4b58L, 0xa16e303356f8e0afL, 0x37350ebbae8d1283L)).super_("jetbrains.mps.sampleXML.structure.ElementPart").super_(MetaIdFactory.conceptId(0x772f6dcd8c0d48f7L, 0x869c908e036f7c8eL, 0x11d45f8a8beL)).parents("jetbrains.mps.sampleXML.structure.ElementPart").parentIds(MetaIdFactory.conceptId(0x772f6dcd8c0d48f7L, 0x869c908e036f7c8eL, 0x11d45f8a8beL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x37350ebbae8d12f3L, "text")).properties("text").alias("button", "").sourceNode(new SNodePointer("r:5a5bef13-c898-42e0-9736-2063b8209071(jetbrains.mps.samples.generator_demo.demoLang6.structure)", "3978102045101855363")).create();
  /*package*/ final ConceptDescriptor myConceptLabel = new ConceptDescriptorBuilder("jetbrains.mps.samples.generator_demo.demoLang6.structure.Label", MetaIdFactory.conceptId(0x82fb751df7fb4b58L, 0xa16e303356f8e0afL, 0x37350ebbae8d186cL)).super_("jetbrains.mps.sampleXML.structure.ElementPart").super_(MetaIdFactory.conceptId(0x772f6dcd8c0d48f7L, 0x869c908e036f7c8eL, 0x11d45f8a8beL)).parents("jetbrains.mps.sampleXML.structure.ElementPart").parentIds(MetaIdFactory.conceptId(0x772f6dcd8c0d48f7L, 0x869c908e036f7c8eL, 0x11d45f8a8beL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x37350ebbae8d1876L, "text")).properties("text").alias("label", "").sourceNode(new SNodePointer("r:5a5bef13-c898-42e0-9736-2063b8209071(jetbrains.mps.samples.generator_demo.demoLang6.structure)", "3978102045101856876")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptButton.getId(), 0);
    myIndexMap.put(myConceptLabel.getId(), 1);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptButton, myConceptLabel);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptButton;
      case 1:
        return myConceptLabel;
      default:
        throw new IllegalStateException();
    }
  }
}
