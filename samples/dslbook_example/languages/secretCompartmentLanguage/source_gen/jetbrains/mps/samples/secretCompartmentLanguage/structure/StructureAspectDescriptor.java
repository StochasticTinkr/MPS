package jetbrains.mps.samples.secretCompartmentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(7);
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptHandleEvent = createDescriptorForHandleEvent();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateMachine = createDescriptorForStateMachine();
  /*package*/ final ConceptDescriptor myConceptStateMachineTest = createDescriptorForStateMachineTest();
  /*package*/ final ConceptDescriptor myConceptStateMachineTestMethod = createDescriptorForStateMachineTestMethod();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptEvent.getId(), 0);
    myIndexMap.put(myConceptHandleEvent.getId(), 1);
    myIndexMap.put(myConceptState.getId(), 2);
    myIndexMap.put(myConceptStateMachine.getId(), 3);
    myIndexMap.put(myConceptStateMachineTest.getId(), 4);
    myIndexMap.put(myConceptStateMachineTestMethod.getId(), 5);
    myIndexMap.put(myConceptTransition.getId(), 6);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEvent, myConceptHandleEvent, myConceptState, myConceptStateMachine, myConceptStateMachineTest, myConceptStateMachineTestMethod, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptEvent;
      case 1:
        return myConceptHandleEvent;
      case 2:
        return myConceptState;
      case 3:
        return myConceptStateMachine;
      case 4:
        return myConceptStateMachineTest;
      case 5:
        return myConceptStateMachineTestMethod;
      case 6:
        return myConceptTransition;
      default:
        throw new IllegalStateException();
    }
  }

  private static ConceptDescriptor createDescriptorForEvent() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.Event", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bcdac91eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116bcdb2f2cL, "eventName"), new ConceptDescriptorBuilder.Prop(0x116bcdb4499L, "code")).properties("eventName", "code").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197169363230")).create();
  }
  private static ConceptDescriptor createDescriptorForHandleEvent() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.HandleEvent", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c2015933L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x116c2017288L, "event", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bcdac91eL), false)).references("event").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197255776563")).create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.State", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bced8217L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116bcee23ceL, "stateName")).properties("stateName").childDescriptors(new ConceptDescriptorBuilder.Link(0x116c117829bL, "transition", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c112fe2aL), true, true, false)).children(new String[]{"transition"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197170590231")).create();
  }
  private static ConceptDescriptor createDescriptorForStateMachine() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.StateMachine", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bbacae3cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116bcaff7e0L, "stateMachineName")).properties("stateMachineName").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x116c1078061L, "startState", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bced8217L), false)).references("startState").childDescriptors(new ConceptDescriptorBuilder.Link(0x116bcddb306L, "event", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bcdac91eL), true, true, false), new ConceptDescriptorBuilder.Link(0x116c00eaeafL, "state", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bced8217L), false, true, false)).children(new String[]{"event", "state"}, new boolean[]{true, true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197149564476")).create();
  }
  private static ConceptDescriptor createDescriptorForStateMachineTest() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.StateMachineTest", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c17a1865L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x116c1878903L, "stateMachine", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bbacae3cL), false)).references("stateMachine").childDescriptors(new ConceptDescriptorBuilder.Link(0x116c1d641ddL, "testMethod", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c1d2af8aL), true, true, false)).children(new String[]{"testMethod"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197246912613")).create();
  }
  private static ConceptDescriptor createDescriptorForStateMachineTestMethod() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.StateMachineTestMethod", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c1d2af8aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x116c1d35305L, "methodName")).properties("methodName").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x116c1f8ec2bL, "finalState", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bced8217L), false)).references("finalState").childDescriptors(new ConceptDescriptorBuilder.Link(0x116c201fd3fL, "handleEvent", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c2015933L), true, true, false)).children(new String[]{"handleEvent"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197252718474")).create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.secretCompartmentLanguage.structure.Transition", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116c112fe2aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x116c113663cL, "trigger", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bcdac91eL), false), new ConceptDescriptorBuilder.Ref(0x116c113802dL, "target", MetaIdFactory.conceptId(0x6986543d82184ebfL, 0xa2e9565e5049c1ceL, 0x116bced8217L), false)).references("trigger", "target").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959042e(jetbrains.mps.samples.secretCompartmentLanguage.structure)", "1197240155690")).create();
  }
}
