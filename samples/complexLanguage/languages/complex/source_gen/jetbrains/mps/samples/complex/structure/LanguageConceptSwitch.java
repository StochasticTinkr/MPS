package jetbrains.mps.samples.complex.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbsExpression = 0;
  public static final int ArgExpression = 1;
  public static final int ComplexType = 2;
  public static final int ConjugateComplexExpression = 3;
  public static final int DegreeComplexExpression = 4;
  public static final int ImExpression = 5;
  public static final int ImaginaryUnit = 6;
  public static final int ReExpression = 7;
  public static final int SingleComplexExpression = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xff24ab03965e4d15L, 0x9aed52dc276658f4L);
    builder.put(0x11686e48f9fL, AbsExpression);
    builder.put(0x11686e1a51cL, ArgExpression);
    builder.put(0x11686a0422aL, ComplexType);
    builder.put(0x116901f57f4L, ConjugateComplexExpression);
    builder.put(0x116904e45f4L, DegreeComplexExpression);
    builder.put(0x11686c35f98L, ImExpression);
    builder.put(0x11691060ce1L, ImaginaryUnit);
    builder.put(0x11686b25791L, ReExpression);
    builder.put(0x11686b3b49dL, SingleComplexExpression);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
