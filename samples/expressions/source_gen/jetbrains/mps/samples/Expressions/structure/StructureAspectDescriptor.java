package jetbrains.mps.samples.Expressions.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAndSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.AndSimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b825cc49L)).super_("jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L)).parents("jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L)).alias("and", "").create();
  /*package*/ final ConceptDescriptor myConceptArithmeticSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.ArithmeticSimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8289497L)).super_("jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL)).parents("jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2073504467208672490L, "operator")).properties("operator").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBinarySimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).childDescriptors(new ConceptDescriptorBuilder.Link(2073504467207935094L, "left", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), false, false, false), new ConceptDescriptorBuilder.Link(2073504467207935096L, "right", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), false, false, false)).children(new String[]{"left", "right"}, new boolean[]{false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptLogicalSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L)).super_("jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL)).parents("jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptNotSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.NotSimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d5484L)).super_("jetbrains.mps.samples.Expressions.structure.UnarySimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d547bL)).parents("jetbrains.mps.samples.Expressions.structure.UnarySimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d547bL)).alias("not", "").create();
  /*package*/ final ConceptDescriptor myConceptOrSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.OrSimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b825cc4aL)).super_("jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L)).parents("jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L)).alias("or", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathAssignment = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathAssignment", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0xce8a4f56651064cL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).childDescriptors(new ConceptDescriptorBuilder.Link(930174696942541360L, "variable", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832e4e1L), false, false, false), new ConceptDescriptorBuilder.Link(930174696942541362L, "expression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), false, false, false)).children(new String[]{"variable", "expression"}, new boolean[]{false, false}).alias(":=", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathBooleanConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanConstant", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b826823eL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2073504467208536639L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathBooleanType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f68L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Bool", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathElementType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathElementType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b835454eL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Element", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathFloatConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathFloatConstant", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b84b40a4L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2073504467210944677L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathFloatType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathFloatType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b84b3e3eL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Float", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathIntegerConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerConstant", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b826940aL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2073504467208541195L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathIntegerType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b82698e0L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Int", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathLongConstant = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathLongConstant", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b83bf7eaL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2073504467209943070L, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathLongType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathLongType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b837a88aL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Long", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathNumberType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathNumberType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8354763L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathType").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathType").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).alias("Number", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathType = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathType", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathTypedVarDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathTypedVarDeclaration", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x77a1220187231476L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathVarDeclaration").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832ccbfL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathVarDeclaration").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832ccbfL)).childDescriptors(new ConceptDescriptorBuilder.Link(8620208551721379933L, "type", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L), false, false, false)).children(new String[]{"type"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathVarDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathVarDeclaration", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832ccbfL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(2073504467209342228L, "initializer", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), false, false, false)).children(new String[]{"initializer"}, new boolean[]{false}).alias("var", "").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathVarReference = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathVarReference", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832e4e1L)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(2073504467209348322L, "declaration", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832ccbfL), false)).references("declaration").create();
  /*package*/ final ConceptDescriptor myConceptSimpleMathWrapper = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.SimpleMathWrapper", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8237002L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(2073504467208335735L, "expressions", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), true, true, false)).children(new String[]{"expressions"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptUnarySimpleMathExpression = new ConceptDescriptorBuilder("jetbrains.mps.samples.Expressions.structure.UnarySimpleMathExpression", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d547bL)).super_("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").super_(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).parents("jetbrains.mps.samples.Expressions.structure.SimpleMathExpression").parentIds(MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL)).childDescriptors(new ConceptDescriptorBuilder.Link(2073504467207935100L, "original", MetaIdFactory.conceptId(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL), false, false, false)).children(new String[]{"original"}, new boolean[]{false}).abstract_().create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAndSimpleMathExpression, myConceptArithmeticSimpleMathExpression, myConceptBinarySimpleMathExpression, myConceptLogicalSimpleMathExpression, myConceptNotSimpleMathExpression, myConceptOrSimpleMathExpression, myConceptSimpleMathAssignment, myConceptSimpleMathBooleanConstant, myConceptSimpleMathBooleanType, myConceptSimpleMathElementType, myConceptSimpleMathExpression, myConceptSimpleMathFloatConstant, myConceptSimpleMathFloatType, myConceptSimpleMathIntegerConstant, myConceptSimpleMathIntegerType, myConceptSimpleMathLongConstant, myConceptSimpleMathLongType, myConceptSimpleMathNumberType, myConceptSimpleMathType, myConceptSimpleMathTypedVarDeclaration, myConceptSimpleMathVarDeclaration, myConceptSimpleMathVarReference, myConceptSimpleMathWrapper, myConceptUnarySimpleMathExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0cb.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptAndSimpleMathExpression;
          }
          break;
        case 1:
          if (true) {
            return myConceptArithmeticSimpleMathExpression;
          }
          break;
        case 2:
          if (true) {
            return myConceptBinarySimpleMathExpression;
          }
          break;
        case 3:
          if (true) {
            return myConceptLogicalSimpleMathExpression;
          }
          break;
        case 4:
          if (true) {
            return myConceptNotSimpleMathExpression;
          }
          break;
        case 5:
          if (true) {
            return myConceptOrSimpleMathExpression;
          }
          break;
        case 6:
          if (true) {
            return myConceptSimpleMathAssignment;
          }
          break;
        case 7:
          if (true) {
            return myConceptSimpleMathBooleanConstant;
          }
          break;
        case 8:
          if (true) {
            return myConceptSimpleMathBooleanType;
          }
          break;
        case 9:
          if (true) {
            return myConceptSimpleMathElementType;
          }
          break;
        case 10:
          if (true) {
            return myConceptSimpleMathExpression;
          }
          break;
        case 11:
          if (true) {
            return myConceptSimpleMathFloatConstant;
          }
          break;
        case 12:
          if (true) {
            return myConceptSimpleMathFloatType;
          }
          break;
        case 13:
          if (true) {
            return myConceptSimpleMathIntegerConstant;
          }
          break;
        case 14:
          if (true) {
            return myConceptSimpleMathIntegerType;
          }
          break;
        case 15:
          if (true) {
            return myConceptSimpleMathLongConstant;
          }
          break;
        case 16:
          if (true) {
            return myConceptSimpleMathLongType;
          }
          break;
        case 17:
          if (true) {
            return myConceptSimpleMathNumberType;
          }
          break;
        case 18:
          if (true) {
            return myConceptSimpleMathType;
          }
          break;
        case 19:
          if (true) {
            return myConceptSimpleMathTypedVarDeclaration;
          }
          break;
        case 20:
          if (true) {
            return myConceptSimpleMathVarDeclaration;
          }
          break;
        case 21:
          if (true) {
            return myConceptSimpleMathVarReference;
          }
          break;
        case 22:
          if (true) {
            return myConceptSimpleMathWrapper;
          }
          break;
        case 23:
          if (true) {
            return myConceptUnarySimpleMathExpression;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0cb = buildConceptIndices(MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b825cc49L, "jetbrains.mps.samples.Expressions.structure.AndSimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8289497L, "jetbrains.mps.samples.Expressions.structure.ArithmeticSimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c52ccL, "jetbrains.mps.samples.Expressions.structure.BinarySimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81dcba5L, "jetbrains.mps.samples.Expressions.structure.LogicalSimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d5484L, "jetbrains.mps.samples.Expressions.structure.NotSimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b825cc4aL, "jetbrains.mps.samples.Expressions.structure.OrSimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0xce8a4f56651064cL, "jetbrains.mps.samples.Expressions.structure.SimpleMathAssignment"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b826823eL, "jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanConstant"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f68L, "jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b835454eL, "jetbrains.mps.samples.Expressions.structure.SimpleMathElementType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81c4c0bL, "jetbrains.mps.samples.Expressions.structure.SimpleMathExpression"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b84b40a4L, "jetbrains.mps.samples.Expressions.structure.SimpleMathFloatConstant"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b84b3e3eL, "jetbrains.mps.samples.Expressions.structure.SimpleMathFloatType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b826940aL, "jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerConstant"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b82698e0L, "jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b83bf7eaL, "jetbrains.mps.samples.Expressions.structure.SimpleMathLongConstant"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b837a88aL, "jetbrains.mps.samples.Expressions.structure.SimpleMathLongType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8354763L, "jetbrains.mps.samples.Expressions.structure.SimpleMathNumberType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81f9f67L, "jetbrains.mps.samples.Expressions.structure.SimpleMathType"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x77a1220187231476L, "jetbrains.mps.samples.Expressions.structure.SimpleMathTypedVarDeclaration"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832ccbfL, "jetbrains.mps.samples.Expressions.structure.SimpleMathVarDeclaration"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b832e4e1L, "jetbrains.mps.samples.Expressions.structure.SimpleMathVarReference"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b8237002L, "jetbrains.mps.samples.Expressions.structure.SimpleMathWrapper"), MetaAdapterFactory.getConcept(0x7e282943fc6b4900L, 0xada534c0024cc4f4L, 0x1cc69153b81d547bL, "jetbrains.mps.samples.Expressions.structure.UnarySimpleMathExpression"));
}
