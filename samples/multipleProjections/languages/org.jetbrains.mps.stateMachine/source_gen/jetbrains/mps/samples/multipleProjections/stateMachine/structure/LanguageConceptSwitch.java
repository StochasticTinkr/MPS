package jetbrains.mps.samples.multipleProjections.stateMachine.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractStateMachineElement = 0;
  public static final int Event = 1;
  public static final int EventReference = 2;
  public static final int State = 3;
  public static final int StateMachine = 4;
  public static final int StateReference = 5;
  public static final int Transition = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x530533eef7894c1eL, 0xba56de1bbf3afda7L);
    builder.put(0x6e3eaf7a54e76eeaL, AbstractStateMachineElement);
    builder.put(0xa99ffe1c845743bL, Event);
    builder.put(0xa99ffe1c8457446L, EventReference);
    builder.put(0xa99ffe1c8457442L, State);
    builder.put(0xa99ffe1c8456ba1L, StateMachine);
    builder.put(0xa99ffe1c8457444L, StateReference);
    builder.put(0xa99ffe1c845743dL, Transition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
