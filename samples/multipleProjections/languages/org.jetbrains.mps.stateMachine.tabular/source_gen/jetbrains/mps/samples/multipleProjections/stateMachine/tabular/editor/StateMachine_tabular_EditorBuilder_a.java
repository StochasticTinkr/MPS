package jetbrains.mps.samples.multipleProjections.stateMachine.tabular.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.lang.editor.table.runtime.TableModelFactory;
import jetbrains.mps.lang.editor.table.runtime.TableModel;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.table.runtime.EditorCell_Table;

/*package*/ class StateMachine_tabular_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public StateMachine_tabular_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createTable_0();
  }

  private EditorCell createTable_0() {
    TableModelFactory creator = new TableModelFactory() {
      public TableModel createTableModel() {
        return new StateMachineTableModel(myNode, getEditorContext());
      }
    };
    EditorCell_Collection editorCell = EditorCell_Table.createTable(getEditorContext(), myNode, creator.createTableModel(), "Table_9yuogs_a");
    editorCell.setCellId("Table_9yuogs_a_0");
    editorCell.setBig(true);
    setCellContext(editorCell);
    return editorCell;
  }
}
