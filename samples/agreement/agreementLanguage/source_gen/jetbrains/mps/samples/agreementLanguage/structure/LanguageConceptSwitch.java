package jetbrains.mps.samples.agreementLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AccountType = 0;
  public static final int AgreementDeclarations = 1;
  public static final int Date = 2;
  public static final int Date_Future = 3;
  public static final int Date_Past = 4;
  public static final int Event = 5;
  public static final int EventType = 6;
  public static final int EventVariable = 7;
  public static final int EventVariableReference = 8;
  public static final int Plan = 9;
  public static final int PostingRule = 10;
  public static final int PostingRuleTemporalProperty = 11;
  public static final int Quantity = 12;
  public static final int QuantityTemporalProperty = 13;
  public static final int TemporalProperty = 14;
  public static final int Value = 15;
  public static final int ValueReference = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x144f7012c2d543beL, 0xbe2b4bfb7dff6503L);
    builder.put(0x102dc29baa2L, AccountType);
    builder.put(0x102fae6140bL, AgreementDeclarations);
    builder.put(0x102dbfd8dcdL, Date);
    builder.put(0x103f15b1a76L, Date_Future);
    builder.put(0x103f1595f54L, Date_Past);
    builder.put(0x102dbe8f094L, Event);
    builder.put(0x102dc1185c3L, EventType);
    builder.put(0x102dc12643eL, EventVariable);
    builder.put(0x102ea8a3c37L, EventVariableReference);
    builder.put(0x102dbe79bfeL, Plan);
    builder.put(0x102dc23b0daL, PostingRule);
    builder.put(0x102dc2154d7L, PostingRuleTemporalProperty);
    builder.put(0x102dbf92b68L, Quantity);
    builder.put(0x102dbff8d6dL, QuantityTemporalProperty);
    builder.put(0x102dbfd085fL, TemporalProperty);
    builder.put(0x102dbe8ab0eL, Value);
    builder.put(0x102eaa8102cL, ValueReference);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
