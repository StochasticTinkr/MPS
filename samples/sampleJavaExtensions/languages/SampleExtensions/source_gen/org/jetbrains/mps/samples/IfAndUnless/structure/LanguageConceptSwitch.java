package org.jetbrains.mps.samples.IfAndUnless.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int FalseFlow = 0;
  public static final int Flow = 1;
  public static final int MyIfStatement = 2;
  public static final int TrueFlow = 3;
  public static final int UnlessStatement = 4;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x67b828fd8fbc4496L, 0xb7f78b64ac097c62L);
    builder.put(0xd403d58ad45dd24L, FalseFlow);
    builder.put(0xd403d58ad448ccfL, Flow);
    builder.put(0xd403d58ad448ccaL, MyIfStatement);
    builder.put(0xd403d58ad45dd1fL, TrueFlow);
    builder.put(0x57547b70f36dc0dL, UnlessStatement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
