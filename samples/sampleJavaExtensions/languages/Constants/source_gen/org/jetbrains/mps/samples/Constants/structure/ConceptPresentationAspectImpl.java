package org.jetbrains.mps.samples.Constants.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_Constant = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConstantReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConstantReferenceKeeper = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Constants = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DistantConstantReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GeneratedClassKeeper = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Constant:
        return props_Constant;
      case LanguageConceptSwitch.ConstantReference:
        return props_ConstantReference;
      case LanguageConceptSwitch.ConstantReferenceKeeper:
        return props_ConstantReferenceKeeper;
      case LanguageConceptSwitch.Constants:
        return props_Constants;
      case LanguageConceptSwitch.DistantConstantReference:
        return props_DistantConstantReference;
      case LanguageConceptSwitch.GeneratedClassKeeper:
        return props_GeneratedClassKeeper;
    }
    return null;
  }
}
