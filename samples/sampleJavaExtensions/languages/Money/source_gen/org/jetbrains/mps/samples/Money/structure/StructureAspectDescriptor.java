package org.jetbrains.mps.samples.Money.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(10);
  /*package*/ final ConceptDescriptor myConceptConvertTo = createDescriptorForConvertTo();
  /*package*/ final ConceptDescriptor myConceptCurrencyDefTable = createDescriptorForCurrencyDefTable();
  /*package*/ final ConceptDescriptor myConceptCurrencyUnit = createDescriptorForCurrencyUnit();
  /*package*/ final ConceptDescriptor myConceptCurrentStockPrice = createDescriptorForCurrentStockPrice();
  /*package*/ final ConceptDescriptor myConceptGetAmount = createDescriptorForGetAmount();
  /*package*/ final ConceptDescriptor myConceptGetCurrency = createDescriptorForGetCurrency();
  /*package*/ final ConceptDescriptor myConceptMoneyLiteral = createDescriptorForMoneyLiteral();
  /*package*/ final ConceptDescriptor myConceptMoneyType = createDescriptorForMoneyType();
  /*package*/ final ConceptDescriptor myConceptMovingAverage = createDescriptorForMovingAverage();
  /*package*/ final ConceptDescriptor myConceptStockSymbol = createDescriptorForStockSymbol();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptConvertTo.getId(), 0);
    myIndexMap.put(myConceptCurrencyDefTable.getId(), 1);
    myIndexMap.put(myConceptCurrencyUnit.getId(), 2);
    myIndexMap.put(myConceptCurrentStockPrice.getId(), 3);
    myIndexMap.put(myConceptGetAmount.getId(), 4);
    myIndexMap.put(myConceptGetCurrency.getId(), 5);
    myIndexMap.put(myConceptMoneyLiteral.getId(), 6);
    myIndexMap.put(myConceptMoneyType.getId(), 7);
    myIndexMap.put(myConceptMovingAverage.getId(), 8);
    myIndexMap.put(myConceptStockSymbol.getId(), 9);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConvertTo, myConceptCurrencyDefTable, myConceptCurrencyUnit, myConceptCurrentStockPrice, myConceptGetAmount, myConceptGetCurrency, myConceptMoneyLiteral, myConceptMoneyType, myConceptMovingAverage, myConceptStockSymbol);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptConvertTo;
      case 1:
        return myConceptCurrencyDefTable;
      case 2:
        return myConceptCurrencyUnit;
      case 3:
        return myConceptCurrentStockPrice;
      case 4:
        return myConceptGetAmount;
      case 5:
        return myConceptGetCurrency;
      case 6:
        return myConceptMoneyLiteral;
      case 7:
        return myConceptMoneyType;
      case 8:
        return myConceptMovingAverage;
      case 9:
        return myConceptStockSymbol;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForConvertTo() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.ConvertTo", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x18d8e0833b34209aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x18d8e0833b34345fL, "targetCurrency", new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "1790427706118386783"))).properties("targetCurrency").alias("convert to", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "1790427706118381722")).create();
  }
  private static ConceptDescriptor createDescriptorForCurrencyDefTable() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrencyDefTable", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3210b276d1443596L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3210b276d144359cL, "units", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3210b276d1443597L), true, true, false, new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "3607579524910560668"))).children(new String[]{"units"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "3607579524910560662")).create();
  }
  private static ConceptDescriptor createDescriptorForCurrencyUnit() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrencyUnit", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3210b276d1443597L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "3607579524910560663")).create();
  }
  private static ConceptDescriptor createDescriptorForCurrentStockPrice() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrentStockPrice", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3786e3f4808999c3L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3786e3f480b0926aL, "symbol", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3786e3f480a9b18aL), false, false, false, new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235845226"))).children(new String[]{"symbol"}, new boolean[]{false}).alias("current stock price", "").sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958233291203")).create();
  }
  private static ConceptDescriptor createDescriptorForGetAmount() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.GetAmount", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x4b9a2fe55913c339L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("amount", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "5447719361346519865")).create();
  }
  private static ConceptDescriptor createDescriptorForGetCurrency() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.GetCurrency", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x18d8e0833b32f1b1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("currency", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "1790427706118304177")).create();
  }
  private static ConceptDescriptor createDescriptorForMoneyLiteral() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MoneyLiteral", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x4b9a2fe559135132L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x4b9a2fe559135183L, "amount", new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "5447719361346490755"))).properties("amount").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3210b276d14435a8L, "unit", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3210b276d1443597L), false, new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "3607579524910560680"))).references("unit").alias("money", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "5447719361346490674")).create();
  }
  private static ConceptDescriptor createDescriptorForMoneyType() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MoneyType", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x4b9a2fe55913516aL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("Money", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "5447719361346490730")).create();
  }
  private static ConceptDescriptor createDescriptorForMovingAverage() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MovingAverage", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3786e3f480b1c19aL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3786e3f480b1c19bL, "period", new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235922843"))).properties("period").childDescriptors(new ConceptDescriptorBuilder.Link(0x3786e3f480b1c6d0L, "symbol", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3786e3f480a9b18aL), false, false, false, new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235924176"))).children(new String[]{"symbol"}, new boolean[]{false}).alias("moving average", "").sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235922842")).create();
  }
  private static ConceptDescriptor createDescriptorForStockSymbol() {
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.StockSymbol", MetaIdFactory.conceptId(0x662a9f2b58024d16L, 0x955872c65c7a681eL, 0x3786e3f480a9b18aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3786e3f480afac5bL, "symbol", new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235786331"))).properties("symbol").alias("symbol", "").sourceNode(new SNodePointer("r:cd29712f-cf1b-4f19-90a2-4ce86af0d5f6(org.jetbrains.mps.samples.Money.structure)", "4001135958235394442")).create();
  }
}
