package jetbrains.mps.execution.commands.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBuilderBlockStatement = createDescriptorForBuilderBlockStatement();
  /*package*/ final ConceptDescriptor myConceptBuilderParameter = createDescriptorForBuilderParameter();
  /*package*/ final ConceptDescriptor myConceptCommandBuilderExpression = createDescriptorForCommandBuilderExpression();
  /*package*/ final ConceptDescriptor myConceptCommandDebuggerOperation = createDescriptorForCommandDebuggerOperation();
  /*package*/ final ConceptDescriptor myConceptCommandDeclaration = createDescriptorForCommandDeclaration();
  /*package*/ final ConceptDescriptor myConceptCommandMethod = createDescriptorForCommandMethod();
  /*package*/ final ConceptDescriptor myConceptCommandParameterAssignment = createDescriptorForCommandParameterAssignment();
  /*package*/ final ConceptDescriptor myConceptCommandParameterDeclaration = createDescriptorForCommandParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptCommandParameterReference = createDescriptorForCommandParameterReference();
  /*package*/ final ConceptDescriptor myConceptCommandPartLengthOperation = createDescriptorForCommandPartLengthOperation();
  /*package*/ final ConceptDescriptor myConceptCommandPartToListOperation = createDescriptorForCommandPartToListOperation();
  /*package*/ final ConceptDescriptor myConceptCommandProcessType = createDescriptorForCommandProcessType();
  /*package*/ final ConceptDescriptor myConceptCommandReferenceExpression = createDescriptorForCommandReferenceExpression();
  /*package*/ final ConceptDescriptor myConceptCommandType = createDescriptorForCommandType();
  /*package*/ final ConceptDescriptor myConceptDebuggerSettingsCommandParameterDeclaration = createDescriptorForDebuggerSettingsCommandParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandPart = createDescriptorForExecuteCommandPart();
  /*package*/ final ConceptDescriptor myConceptExplicitCommandParameterDeclaration = createDescriptorForExplicitCommandParameterDeclaration();
  /*package*/ final ConceptDescriptor myConceptKeyValueCommandPart = createDescriptorForKeyValueCommandPart();
  /*package*/ final ConceptDescriptor myConceptListCommandPart = createDescriptorForListCommandPart();
  /*package*/ final ConceptDescriptor myConceptNewProcessBuilderExpression = createDescriptorForNewProcessBuilderExpression();
  /*package*/ final ConceptDescriptor myConceptProcessBuilderCommandPart = createDescriptorForProcessBuilderCommandPart();
  /*package*/ final ConceptDescriptor myConceptProcessBuilderCommandPartType = createDescriptorForProcessBuilderCommandPartType();
  /*package*/ final ConceptDescriptor myConceptProcessType = createDescriptorForProcessType();
  /*package*/ final ConceptDescriptor myConceptPropertyCommandPart = createDescriptorForPropertyCommandPart();
  /*package*/ final ConceptDescriptor myConceptRedirectOutputExpression = createDescriptorForRedirectOutputExpression();
  /*package*/ final ConceptDescriptor myConceptReportErrorStatement = createDescriptorForReportErrorStatement();
  /*package*/ final ConceptDescriptor myConceptReportExecutionError = createDescriptorForReportExecutionError();
  /*package*/ final ConceptDescriptor myConceptStartAndWaitOperation = createDescriptorForStartAndWaitOperation();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBuilderBlockStatement, myConceptBuilderParameter, myConceptCommandBuilderExpression, myConceptCommandDebuggerOperation, myConceptCommandDeclaration, myConceptCommandMethod, myConceptCommandParameterAssignment, myConceptCommandParameterDeclaration, myConceptCommandParameterReference, myConceptCommandPartLengthOperation, myConceptCommandPartToListOperation, myConceptCommandProcessType, myConceptCommandReferenceExpression, myConceptCommandType, myConceptDebuggerSettingsCommandParameterDeclaration, myConceptExecuteCommandPart, myConceptExplicitCommandParameterDeclaration, myConceptKeyValueCommandPart, myConceptListCommandPart, myConceptNewProcessBuilderExpression, myConceptProcessBuilderCommandPart, myConceptProcessBuilderCommandPartType, myConceptProcessType, myConceptPropertyCommandPart, myConceptRedirectOutputExpression, myConceptReportErrorStatement, myConceptReportExecutionError, myConceptStartAndWaitOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.BuilderBlockStatement:
        return myConceptBuilderBlockStatement;
      case LanguageConceptSwitch.BuilderParameter:
        return myConceptBuilderParameter;
      case LanguageConceptSwitch.CommandBuilderExpression:
        return myConceptCommandBuilderExpression;
      case LanguageConceptSwitch.CommandDebuggerOperation:
        return myConceptCommandDebuggerOperation;
      case LanguageConceptSwitch.CommandDeclaration:
        return myConceptCommandDeclaration;
      case LanguageConceptSwitch.CommandMethod:
        return myConceptCommandMethod;
      case LanguageConceptSwitch.CommandParameterAssignment:
        return myConceptCommandParameterAssignment;
      case LanguageConceptSwitch.CommandParameterDeclaration:
        return myConceptCommandParameterDeclaration;
      case LanguageConceptSwitch.CommandParameterReference:
        return myConceptCommandParameterReference;
      case LanguageConceptSwitch.CommandPartLengthOperation:
        return myConceptCommandPartLengthOperation;
      case LanguageConceptSwitch.CommandPartToListOperation:
        return myConceptCommandPartToListOperation;
      case LanguageConceptSwitch.CommandProcessType:
        return myConceptCommandProcessType;
      case LanguageConceptSwitch.CommandReferenceExpression:
        return myConceptCommandReferenceExpression;
      case LanguageConceptSwitch.CommandType:
        return myConceptCommandType;
      case LanguageConceptSwitch.DebuggerSettingsCommandParameterDeclaration:
        return myConceptDebuggerSettingsCommandParameterDeclaration;
      case LanguageConceptSwitch.ExecuteCommandPart:
        return myConceptExecuteCommandPart;
      case LanguageConceptSwitch.ExplicitCommandParameterDeclaration:
        return myConceptExplicitCommandParameterDeclaration;
      case LanguageConceptSwitch.KeyValueCommandPart:
        return myConceptKeyValueCommandPart;
      case LanguageConceptSwitch.ListCommandPart:
        return myConceptListCommandPart;
      case LanguageConceptSwitch.NewProcessBuilderExpression:
        return myConceptNewProcessBuilderExpression;
      case LanguageConceptSwitch.ProcessBuilderCommandPart:
        return myConceptProcessBuilderCommandPart;
      case LanguageConceptSwitch.ProcessBuilderCommandPartType:
        return myConceptProcessBuilderCommandPartType;
      case LanguageConceptSwitch.ProcessType:
        return myConceptProcessType;
      case LanguageConceptSwitch.PropertyCommandPart:
        return myConceptPropertyCommandPart;
      case LanguageConceptSwitch.RedirectOutputExpression:
        return myConceptRedirectOutputExpression;
      case LanguageConceptSwitch.ReportErrorStatement:
        return myConceptReportErrorStatement;
      case LanguageConceptSwitch.ReportExecutionError:
        return myConceptReportExecutionError;
      case LanguageConceptSwitch.StartAndWaitOperation:
        return myConceptStartAndWaitOperation;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForBuilderBlockStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "BuilderBlockStatement", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bf8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281784");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBuilderParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "BuilderParameter", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bfbL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281787");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandBuilderExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandBuilderExpression", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bf4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281780");
    b.associate("commandPart", 0x550ea9458ea1ac11L).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x550ea9458ea107acL).optional(false).origin("6129022259108621329").done();
    b.aggregate("argument", 0xbe3a0d5ba1a2bf5L).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be4L).optional(true).ordered(true).multiple(true).origin("856705193941281781").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("build command");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandDebuggerOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandDebuggerOperation", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bf1L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281777");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("debugger");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be8L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L);
    b.parent(0x73c1a49099fa4d0dL, 0x8292b8985697c74bL, 0xd244b712f9dcdabL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281768");
    b.aggregate("debuggerConfiguration", 0x5b66ff7a6627d632L).target(0xfbc142795e2a4c87L, 0xa5d15f7061e6c456L, 0x5d457621242d16f5L).optional(true).ordered(true).multiple(false).origin("6586232406240908850").done();
    b.aggregate("debuggerParameter", 0x75aadb0d4e6223baL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x75aadb0d4e61a576L).optional(false).ordered(true).multiple(false).origin("8478830098674492346").done();
    b.aggregate("method", 0xbe3a0d5ba1a2beeL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be7L).optional(true).ordered(true).multiple(true).origin("856705193941281774").done();
    b.aggregate("executePart", 0x550ea9458ea107beL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x550ea9458ea107acL).optional(true).ordered(true).multiple(true).origin("6129022259108579262").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandMethod", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration", 0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd6ee3c3L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281767");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandParameterAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandParameterAssignment", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be4L);
    b.class_(false, false, false);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281764");
    b.associate("parameterDeclaration", 0xbe3a0d5ba1a2be5L).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x65afee7b2c712158L).optional(false).origin("856705193941281765").done();
    b.aggregate("value", 0xbe3a0d5ba1a2be6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("856705193941281766").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandParameterDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandParameterDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x65afee7b2c712158L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/7327337331549086040");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandParameterReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandParameterReference", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bdcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xe34de34746464f2L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281756");
    b.prop("resolveInfo", 0xbe3a0d5ba1a2bddL, "856705193941281757");
    b.associate("parameter", 0xbe3a0d5ba1a2bdeL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x65afee7b2c712158L).optional(false).origin("856705193941281758").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandPartLengthOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandPartLengthOperation", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x166dfef127134569L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/1616228152992023913");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("length");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandPartToListOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandPartToListOperation", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x72450cdacb885c78L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/8234001627573935224");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("toList");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandProcessType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandProcessType", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x87f99370d7e1ea3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.ProcessType", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2c12L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/612376536074296995");
    b.associate("commandDeclaration", 0x87f99370d7e1ea4L).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be8L).optional(true).origin("612376536074296996").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("command process");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandReferenceExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandReferenceExpression", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bd9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281753");
    b.associate("command", 0xbe3a0d5ba1a2bdbL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be8L).optional(false).origin("856705193941281755").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("command reference");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommandType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "CommandType", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bd6L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierType", 0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc7942feL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281750");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("command");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDebuggerSettingsCommandParameterDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "DebuggerSettingsCommandParameterDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x75aadb0d4e61a576L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.CommandParameterDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x65afee7b2c712158L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/8478830098674460022");
    b.alias("debuggerSettings");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExecuteCommandPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ExecuteCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x550ea9458ea107acL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L);
    b.parent(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d2ea63881L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/6129022259108579244");
    b.aggregate("parameterDeclaration", 0x550ea9458ea107adL).target(0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be2L).optional(true).ordered(true).multiple(true).origin("6129022259108579245").done();
    b.aggregate("execute", 0x550ea9458ea107aeL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L).optional(false).ordered(true).multiple(false).origin("6129022259108579246").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExplicitCommandParameterDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ExplicitCommandParameterDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2be2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.CommandParameterDeclaration", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x65afee7b2c712158L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281762");
    b.prop("isRequired", 0xbe3a0d5ba1a2be3L, "856705193941281763");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKeyValueCommandPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "KeyValueCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818a1f7fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.ProcessBuilderCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818a1f80L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/889694274152177535");
    b.prop("dash", 0x166dfef12711aa49L, "1616228152991918665");
    b.aggregate("key", 0xc58d43a818a1f83L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("889694274152177539").done();
    b.aggregate("value", 0xc58d43a818a1f84L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("889694274152177540").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("[key value]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListCommandPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ListCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x5f50ed14026999c9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.ProcessBuilderCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818a1f80L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/6868250101935610313");
    b.aggregate("list", 0x5f50ed14026999cbL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("6868250101935610315").done();
    b.aggregate("items", 0x1e16a75f45341377L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("2168104298250244983").done();
    b.aggregate("separator", 0x5f50ed14026999ccL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("6868250101935610316").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("list command part");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewProcessBuilderExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "NewProcessBuilderExpression", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x2085f2c5c8400c12L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/2343546112398330898");
    b.aggregate("commandPart", 0x2085f2c5c8400c15L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(true).origin("2343546112398330901").done();
    b.aggregate("workingDirectory", 0x2085f2c5c8400c16L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("2343546112398330902").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("process builder");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessBuilderCommandPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ProcessBuilderCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818a1f80L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/889694274152177536");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessBuilderCommandPartType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ProcessBuilderCommandPartType", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818ab5faL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/889694274152216058");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("process builder command part");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ProcessType", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2c12L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Type", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281810");
    b.kind(ConceptKind.INTERFACE, StaticScope.NONE);
    b.alias("process");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyCommandPart() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "PropertyCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x72450cdacb8a706eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.ProcessBuilderCommandPart", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xc58d43a818a1f80L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/8234001627574071406");
    b.aggregate("key", 0x72450cdacb8a706fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("8234001627574071407").done();
    b.aggregate("value", 0x72450cdacb8a7070L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("8234001627574071408").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("-Dkey=value");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRedirectOutputExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "RedirectOutputExpression", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2c14L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281812");
    b.aggregate("processHandler", 0xbe3a0d5ba1a2c15L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("856705193941281813").done();
    b.aggregate("listener", 0xbe3a0d5ba1a2c16L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("856705193941281814").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("output redirect");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReportErrorStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ReportErrorStatement", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2c00L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281792");
    b.aggregate("message", 0xbe3a0d5ba1a2c03L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("856705193941281795").done();
    b.aggregate("exception", 0xbe3a0d5ba1a2c04L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("856705193941281796").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("report");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReportExecutionError() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "ReportExecutionError", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2bfeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.execution.commands.structure.ReportErrorStatement", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0xbe3a0d5ba1a2c00L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/856705193941281790");
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("execution error");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStartAndWaitOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.execution.commands", "StartAndWaitOperation", 0xf3347d8a0e794f35L, 0x8ac91574f25c986fL, 0x2222cc72e62f7052L);
    b.class_(false, false, false);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L);
    b.origin("r:d78df0bb-be4f-4e0d-8142-c0b2df70a5a3(jetbrains.mps.execution.commands.structure)/2459753140357918802");
    b.aggregate("timeout", 0x64d30e7d188f680L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("454072909645280896").done();
    b.kind(ConceptKind.NORMAL, StaticScope.NONE);
    b.alias("startAndWait");
    return b.create();
  }
}
