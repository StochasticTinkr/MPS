package jetbrains.mps.execution.configurations.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myStartProcessHandlerStatement__BehaviorDescriptor = new StartProcessHandlerStatement__BehaviorDescriptor();
  private final BHDescriptor myConsoleType__BehaviorDescriptor = new ConsoleType__BehaviorDescriptor();
  private final BHDescriptor myRunConfiguration__BehaviorDescriptor = new RunConfiguration__BehaviorDescriptor();
  private final BHDescriptor myRunConfigurationKind__BehaviorDescriptor = new RunConfigurationKind__BehaviorDescriptor();
  private final BHDescriptor myAbstractRunConfigurationExecutor__BehaviorDescriptor = new AbstractRunConfigurationExecutor__BehaviorDescriptor();
  private final BHDescriptor myExecuteBeforeTask_ConceptFunction__BehaviorDescriptor = new ExecuteBeforeTask_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myRunConfigurationProducer__BehaviorDescriptor = new RunConfigurationProducer__BehaviorDescriptor();
  private final BHDescriptor myRunConfigurationProducerPart__BehaviorDescriptor = new RunConfigurationProducerPart__BehaviorDescriptor();
  private final BHDescriptor myCreate_ConceptFunction__BehaviorDescriptor = new Create_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myIsConfigurationFromContext_ConceptFunction__BehaviorDescriptor = new IsConfigurationFromContext_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myExecuteConfiguration_Function__BehaviorDescriptor = new ExecuteConfiguration_Function__BehaviorDescriptor();
  private final BHDescriptor myBeforeTaskParameter__BehaviorDescriptor = new BeforeTaskParameter__BehaviorDescriptor();
  private final BHDescriptor myBeforeTaskParameterReference__BehaviorDescriptor = new BeforeTaskParameterReference__BehaviorDescriptor();
  private final BHDescriptor myBeforeTask__BehaviorDescriptor = new BeforeTask__BehaviorDescriptor();
  private final BHDescriptor myRunConfigurationExecutor__BehaviorDescriptor = new RunConfigurationExecutor__BehaviorDescriptor();
  private final BHDescriptor myConfigurationFromExecutorReference__BehaviorDescriptor = new ConfigurationFromExecutorReference__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0t = concept;
    switch (index_846f5o_a0t.index(cncpt_a0t)) {
      case 0:
        return myAbstractRunConfigurationExecutor__BehaviorDescriptor;
      case 1:
        return myBeforeTask__BehaviorDescriptor;
      case 2:
        return myBeforeTaskParameter__BehaviorDescriptor;
      case 3:
        return myBeforeTaskParameterReference__BehaviorDescriptor;
      case 4:
        return myConfigurationFromExecutorReference__BehaviorDescriptor;
      case 5:
        return myConsoleType__BehaviorDescriptor;
      case 6:
        return myCreate_ConceptFunction__BehaviorDescriptor;
      case 7:
        return myExecuteBeforeTask_ConceptFunction__BehaviorDescriptor;
      case 8:
        return myExecuteConfiguration_Function__BehaviorDescriptor;
      case 9:
        return myIsConfigurationFromContext_ConceptFunction__BehaviorDescriptor;
      case 10:
        return myRunConfiguration__BehaviorDescriptor;
      case 11:
        return myRunConfigurationExecutor__BehaviorDescriptor;
      case 12:
        return myRunConfigurationKind__BehaviorDescriptor;
      case 13:
        return myRunConfigurationProducer__BehaviorDescriptor;
      case 14:
        return myRunConfigurationProducerPart__BehaviorDescriptor;
      case 15:
        return myStartProcessHandlerStatement__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0t = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x2153d8f1c1f52479L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x61a8be33d403b7bfL), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x5ae6ebde781f8014L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x5ae6ebde781fd3c0L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x6c55c13f5bcac62fL), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x161fc6929dd1ac93L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x3c97fcb79c84cdc3L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x220f4a2c4aff4248L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x5532ce3cbd91002cL), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x490c79b029c39076L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x2153d8f1c1f46e49L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x6c55c13f5bc8e1ecL), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x2153d8f1c1f46e4aL), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x3c97fcb79c842305L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0x3c97fcb79c84cda6L), MetaIdFactory.conceptId(0x22e72e4c0f6946ceL, 0x84036750153aa615L, 0xd244b712f9d44d1L)).seal();
}
