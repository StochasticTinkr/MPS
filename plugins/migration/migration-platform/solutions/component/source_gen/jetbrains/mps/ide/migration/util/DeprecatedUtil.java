package jetbrains.mps.ide.migration.util;

/*Generated by MPS */

import java.util.Map;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.smodel.query.runtime.CommandUtil;
import jetbrains.mps.lang.smodel.query.runtime.QueryExecutionContext;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.adapter.MetaAdapterByDeclaration;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.smodel.behaviour.BHReflection;
import jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId;

public class DeprecatedUtil {
  public static Map<SNode, DeprecatedNodeProperties> usagesOfDeprecated(SearchScope what, SearchScope where) {
    Map<SNode, DeprecatedNodeProperties> usagesOfDeprecated = MapSequence.fromMap(new HashMap<SNode, DeprecatedNodeProperties>());
    DeprecatedUtil.addUsagesOfDeprecatedMeta(usagesOfDeprecated, what, where);
    DeprecatedUtil.usagesOfDeprecatedNodes(usagesOfDeprecated, what, where);
    return usagesOfDeprecated;
  }

  public static Map<SNode, DeprecatedNodeProperties> deprecated(SearchScope s) {
    final Map<SNode, DeprecatedNodeProperties> result = MapSequence.fromMap(new HashMap<SNode, DeprecatedNodeProperties>());
    Sequence.fromIterable(depLinks(s)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties("Deprecated Links", getToRemoveVersion(it)));
      }
    });
    Sequence.fromIterable(depProps(s)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties("Deprecated Properties", getToRemoveVersion(it)));
      }
    });
    Sequence.fromIterable(depConcepts(s)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties("Deprecated Concepts", getToRemoveVersion(it)));
      }
    });
    Sequence.fromIterable(depNodes(s)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties("Deprecated Nodes", getToRemoveVersion(it)));
      }
    });
    return result;
  }

  private static void usagesOfDeprecatedNodes(final Map<SNode, DeprecatedNodeProperties> result, SearchScope what, SearchScope where) {
    Iterable<SNode> depNodes = DeprecatedUtil.depNodes(what);
    final String cat = "Reference to Deprecated Node";

    {
      SearchScope scope_i2l0ze_d0e = CommandUtil.createScope(where);
      final SearchScope scope_i2l0ze_d0e_0 = scope_i2l0ze_d0e;
      final QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_d0e_0;
        }
      };
      Sequence.fromIterable(depNodes).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          final String ver = getToRemoveVersion(it);
          CollectionSequence.fromCollection(CommandUtil.usages(CommandUtil.selectScope(null, context), it)).visitAll(new IVisitor<SReference>() {
            public void visit(SReference iit) {
              MapSequence.fromMap(result).put(iit.getSourceNode(), new DeprecatedNodeProperties(cat, ver));
            }
          });
        }
      });
    }
  }

  private static void addUsagesOfDeprecatedMeta(final Map<SNode, DeprecatedNodeProperties> result, SearchScope depScope, SearchScope s) {
    {
      SearchScope scope_i2l0ze_a0g = CommandUtil.createScope(s);
      final SearchScope scope_i2l0ze_a0g_0 = scope_i2l0ze_a0g;
      final QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_a0g_0;
        }
      };
      // --------concepts 
      Iterable<SNode> dc = DeprecatedUtil.depConcepts(depScope);

      final Wrappers._T<String> cat = new Wrappers._T<String>("Deprecated Concept Instance");
      Sequence.fromIterable(dc).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          final String ver = getToRemoveVersion(it);
          CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), SNodeOperations.asSConcept(SNodeOperations.asSConcept(it)), true)).visitAll(new IVisitor<SNode>() {
            public void visit(SNode it) {
              MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });

      cat.value = "Deprecated Concept Usages";
      Sequence.fromIterable(dc).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          final String ver = getToRemoveVersion(it);
          CollectionSequence.fromCollection(CommandUtil.usages(CommandUtil.selectScope(null, context), it)).visitAll(new IVisitor<SReference>() {
            public void visit(SReference iit) {
              MapSequence.fromMap(result).put(iit.getSourceNode(), new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });

      // --------properties 
      Iterable<SNode> dp = DeprecatedUtil.depProps(depScope);

      cat.value = "Deprecated Property Instances";
      Sequence.fromIterable(dp).visitAll(new IVisitor<SNode>() {
        public void visit(final SNode prop) {
          final String ver = getToRemoveVersion(prop);
          CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), SNodeOperations.asSConcept(SNodeOperations.asSConcept(SNodeOperations.getNodeAncestor(prop, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"), false, false))), false)).where(new IWhereFilter<SNode>() {
            public boolean accept(SNode ins) {
              return ins.getProperty(MetaAdapterByDeclaration.getProperty(prop)) != null;
            }
          }).visitAll(new IVisitor<SNode>() {
            public void visit(SNode it) {
              MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });

      cat.value = "Deprecated Property Usages";
      Sequence.fromIterable(dp).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          final String ver = getToRemoveVersion(it);
          CollectionSequence.fromCollection(CommandUtil.usages(CommandUtil.selectScope(null, context), it)).visitAll(new IVisitor<SReference>() {
            public void visit(SReference iit) {
              MapSequence.fromMap(result).put(iit.getSourceNode(), new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });

      // --------links 
      Iterable<SNode> dl = DeprecatedUtil.depLinks(depScope);

      cat.value = "Deprecated Link Instances";
      Sequence.fromIterable(dl).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SPropertyOperations.hasValue(it, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf980556927L, "metaClass"), "aggregation", "reference");
        }
      }).visitAll(new IVisitor<SNode>() {
        public void visit(final SNode link) {
          final String ver = getToRemoveVersion(link);
          CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), SNodeOperations.asSConcept(SNodeOperations.asSConcept(SNodeOperations.getNodeAncestor(link, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"), false, false))), false)).where(new IWhereFilter<SNode>() {
            public boolean accept(SNode ins) {
              return ins.getChildren(MetaAdapterByDeclaration.getContainmentLink(link)).iterator().hasNext();
            }
          }).visitAll(new IVisitor<SNode>() {
            public void visit(SNode it) {
              MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });
      Sequence.fromIterable(dl).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SPropertyOperations.hasValue(it, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf980556927L, "metaClass"), "reference", "reference");
        }
      }).visitAll(new IVisitor<SNode>() {
        public void visit(final SNode link) {
          final String ver = getToRemoveVersion(link);
          CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), SNodeOperations.asSConcept(SNodeOperations.asSConcept(SNodeOperations.getNodeAncestor(link, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"), false, false))), false)).where(new IWhereFilter<SNode>() {
            public boolean accept(SNode ins) {
              return ins.getReference(MetaAdapterByDeclaration.getReferenceLink(link)) != null;
            }
          }).visitAll(new IVisitor<SNode>() {
            public void visit(SNode it) {
              MapSequence.fromMap(result).put(it, new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });

      cat.value = "Deprecated Link Usages";
      Sequence.fromIterable(dl).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          final String ver = getToRemoveVersion(it);
          CollectionSequence.fromCollection(CommandUtil.usages(CommandUtil.selectScope(null, context), it)).visitAll(new IVisitor<SReference>() {
            public void visit(SReference iit) {
              MapSequence.fromMap(result).put(iit.getSourceNode(), new DeprecatedNodeProperties(cat.value, ver));
            }
          });
        }
      });
    }
  }

  private static String getToRemoveVersion(SNode n) {
    if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getInterfaceConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d2ea63881L, "jetbrains.mps.lang.structure.structure.IStructureDeprecatable"))) {
      SNode depAnnotation = AttributeOperations.getAttribute(SNodeOperations.cast(n, MetaAdapterFactory.getInterfaceConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d2ea63881L, "jetbrains.mps.lang.structure.structure.IStructureDeprecatable")), new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d0a70ae54L, "jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation")));
      if (depAnnotation != null) {
        return SPropertyOperations.getString(depAnnotation, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d0a70ae54L, 0x11d3ec75203L, "build"));
      }
    }
    if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, "jetbrains.mps.baseLanguage.structure.HasAnnotation"))) {
      SNode toRemoveAnnotation = ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(n, MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, "jetbrains.mps.baseLanguage.structure.HasAnnotation")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, "annotation"))).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SLinkOperations.hasPointer(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, "annotation"), new SNodePointer("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.util.annotation(MPS.Core/)", "~ToRemove"));
        }
      }).first();
      if ((toRemoveAnnotation != null)) {
        SNode value = ListSequence.fromList(SLinkOperations.getChildren(toRemoveAnnotation, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a71c697fL, "value"))).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SLinkOperations.hasPointer(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71b1af4L, 0x114a71b44e3L, "key"), new SNodePointer("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.util.annotation(MPS.Core/)", "~ToRemove.version()"));
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SLinkOperations.getTarget(it, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a71b1af4L, 0x114a71c0fc4L, "value"));
          }
        }).first();
        if (((boolean) (Boolean) BHReflection.invoke0(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, "jetbrains.mps.baseLanguage.structure.Expression"), SMethodTrimmedId.create("isCompileTimeConstant", null, "i1LOPRp")))) {
          return "" + ((Object) BHReflection.invoke0(value, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL, "jetbrains.mps.baseLanguage.structure.Expression"), SMethodTrimmedId.create("getCompileTimeConstantValue", null, "i1LP2xI"), null));
        }
      }
    }
    return null;
  }

  private static Iterable<SNode> depNodes(SearchScope depScope) {
    {
      SearchScope scope_i2l0ze_a0k = CommandUtil.createScope(depScope);
      final SearchScope scope_i2l0ze_a0k_0 = scope_i2l0ze_a0k;
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_a0k_0;
        }
      };
      return CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, "jetbrains.mps.baseLanguage.structure.AnnotationInstance"), false)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SLinkOperations.hasPointer(it, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6b4ccabL, 0x114a6b85d40L, "annotation"), new SNodePointer("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)", "~Deprecated"));
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SNodeOperations.getParent(it);
        }
      });
    }
  }

  private static Iterable<SNode> depLinks(SearchScope depScope) {
    {
      SearchScope scope_i2l0ze_a0m = CommandUtil.createScope(depScope);
      final SearchScope scope_i2l0ze_a0m_0 = scope_i2l0ze_a0m;
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_a0m_0;
        }
      };
      return CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, "jetbrains.mps.lang.structure.structure.LinkDeclaration"), false)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d0a70ae54L, "jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation"))) != null);
        }
      });
    }
  }

  private static Iterable<SNode> depProps(SearchScope depScope) {
    {
      SearchScope scope_i2l0ze_a0o = CommandUtil.createScope(depScope);
      final SearchScope scope_i2l0ze_a0o_0 = scope_i2l0ze_a0o;
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_a0o_0;
        }
      };
      return CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL, "jetbrains.mps.lang.structure.structure.PropertyDeclaration"), false)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d0a70ae54L, "jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation"))) != null);
        }
      });
    }
  }

  private static Iterable<SNode> depConcepts(SearchScope depScope) {
    {
      SearchScope scope_i2l0ze_a0q = CommandUtil.createScope(depScope);
      final SearchScope scope_i2l0ze_a0q_0 = scope_i2l0ze_a0q;
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_i2l0ze_a0q_0;
        }
      };
      return CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"), false)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x11d0a70ae54L, "jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation"))) != null);
        }
      });
    }
  }
}
