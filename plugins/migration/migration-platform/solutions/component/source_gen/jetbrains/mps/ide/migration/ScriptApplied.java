package jetbrains.mps.ide.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.BaseScriptReference;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.module.SModule;

public class ScriptApplied<T extends BaseScriptReference> {
  @NotNull
  private SModule myModule;
  @NotNull
  private T myScriptRef;

  public ScriptApplied(SModule module, T scriptRef) {
    myModule = module;
    myScriptRef = scriptRef;
  }

  public SModule getModule() {
    return myModule;
  }

  public T getScriptReference() {
    return myScriptRef;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }

    ScriptApplied that = (ScriptApplied) o;
    if (!(myModule.equals(that.myModule))) {
      return false;
    }
    if (!(myScriptRef.equals(that.myScriptRef))) {
      return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 31 * myModule.hashCode() + myScriptRef.hashCode();
  }
}
