package jetbrains.mps.console.ideCommands.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myShowBrokenReferences__BehaviorDescriptor = new ShowBrokenReferences__BehaviorDescriptor();
  private final BHDescriptor mySubtreeStatisticsTarget__BehaviorDescriptor = new SubtreeStatisticsTarget__BehaviorDescriptor();
  private final BHDescriptor myClean__BehaviorDescriptor = new Clean__BehaviorDescriptor();
  private final BHDescriptor myRemoveGenSources__BehaviorDescriptor = new RemoveGenSources__BehaviorDescriptor();
  private final BHDescriptor myAbsractMake__BehaviorDescriptor = new AbsractMake__BehaviorDescriptor();
  private final BHDescriptor myClickableGenerator__BehaviorDescriptor = new ClickableGenerator__BehaviorDescriptor();
  private final BHDescriptor myINodeSetReference__BehaviorDescriptor = new INodeSetReference__BehaviorDescriptor();
  private final BHDescriptor myActionCallDeclaredParameter__BehaviorDescriptor = new ActionCallDeclaredParameter__BehaviorDescriptor();
  private final BHDescriptor myActionCallGlobalParameter__BehaviorDescriptor = new ActionCallGlobalParameter__BehaviorDescriptor();
  private final BHDescriptor myActionCallParameter__BehaviorDescriptor = new ActionCallParameter__BehaviorDescriptor();
  private final BHDescriptor myCallActionExpression__BehaviorDescriptor = new CallActionExpression__BehaviorDescriptor();
  private final BHDescriptor myModelProperties__BehaviorDescriptor = new ModelProperties__BehaviorDescriptor();
  private final BHDescriptor myModuleProperties__BehaviorDescriptor = new ModuleProperties__BehaviorDescriptor();
  private final BHDescriptor myMake__BehaviorDescriptor = new Make__BehaviorDescriptor();
  private final BHDescriptor myOfAspectOperation__BehaviorDescriptor = new OfAspectOperation__BehaviorDescriptor();
  private final BHDescriptor myShowGenPlan__BehaviorDescriptor = new ShowGenPlan__BehaviorDescriptor();
  private final BHDescriptor myStatCommand__BehaviorDescriptor = new StatCommand__BehaviorDescriptor();
  private final BHDescriptor myIStatisticsTarget__BehaviorDescriptor = new IStatisticsTarget__BehaviorDescriptor();
  private final BHDescriptor myGlobalStatisticTarget__BehaviorDescriptor = new GlobalStatisticTarget__BehaviorDescriptor();
  private final BHDescriptor myProjectStatisticsTarget__BehaviorDescriptor = new ProjectStatisticsTarget__BehaviorDescriptor();
  private final BHDescriptor myModelStatisticsTarget__BehaviorDescriptor = new ModelStatisticsTarget__BehaviorDescriptor();
  private final BHDescriptor myModelReference__BehaviorDescriptor = new ModelReference__BehaviorDescriptor();
  private final BHDescriptor myShowExpression__BehaviorDescriptor = new ShowExpression__BehaviorDescriptor();
  private final BHDescriptor myUnloadModelsCommand__BehaviorDescriptor = new UnloadModelsCommand__BehaviorDescriptor();
  private final BHDescriptor myRebuildProjectCommand__BehaviorDescriptor = new RebuildProjectCommand__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0cb.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myAbsractMake__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myActionCallDeclaredParameter__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myActionCallGlobalParameter__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myActionCallParameter__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myCallActionExpression__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myClean__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myClickableGenerator__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myGlobalStatisticTarget__BehaviorDescriptor;
          }
          break;
        case 8:
          if (true) {
            return myINodeSetReference__BehaviorDescriptor;
          }
          break;
        case 9:
          if (true) {
            return myIStatisticsTarget__BehaviorDescriptor;
          }
          break;
        case 10:
          if (true) {
            return myMake__BehaviorDescriptor;
          }
          break;
        case 11:
          if (true) {
            return myModelProperties__BehaviorDescriptor;
          }
          break;
        case 12:
          if (true) {
            return myModelReference__BehaviorDescriptor;
          }
          break;
        case 13:
          if (true) {
            return myModelStatisticsTarget__BehaviorDescriptor;
          }
          break;
        case 14:
          if (true) {
            return myModuleProperties__BehaviorDescriptor;
          }
          break;
        case 15:
          if (true) {
            return myOfAspectOperation__BehaviorDescriptor;
          }
          break;
        case 16:
          if (true) {
            return myProjectStatisticsTarget__BehaviorDescriptor;
          }
          break;
        case 17:
          if (true) {
            return myRebuildProjectCommand__BehaviorDescriptor;
          }
          break;
        case 18:
          if (true) {
            return myRemoveGenSources__BehaviorDescriptor;
          }
          break;
        case 19:
          if (true) {
            return myShowBrokenReferences__BehaviorDescriptor;
          }
          break;
        case 20:
          if (true) {
            return myShowExpression__BehaviorDescriptor;
          }
          break;
        case 21:
          if (true) {
            return myShowGenPlan__BehaviorDescriptor;
          }
          break;
        case 22:
          if (true) {
            return myStatCommand__BehaviorDescriptor;
          }
          break;
        case 23:
          if (true) {
            return mySubtreeStatisticsTarget__BehaviorDescriptor;
          }
          break;
        case 24:
          if (true) {
            return myUnloadModelsCommand__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0cb = buildConceptIndices(MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a29aL, "jetbrains.mps.console.ideCommands.structure.AbsractMake"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587a7L, "jetbrains.mps.console.ideCommands.structure.ActionCallDeclaredParameter"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587a9L, "jetbrains.mps.console.ideCommands.structure.ActionCallGlobalParameter"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587abL, "jetbrains.mps.console.ideCommands.structure.ActionCallParameter"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587adL, "jetbrains.mps.console.ideCommands.structure.CallActionExpression"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e74f88509L, "jetbrains.mps.console.ideCommands.structure.Clean"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x360b134fc0467d73L, "jetbrains.mps.console.ideCommands.structure.ClickableGenerator"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb8L, "jetbrains.mps.console.ideCommands.structure.GlobalStatisticTarget"), MetaAdapterFactory.getInterfaceConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L, "jetbrains.mps.console.ideCommands.structure.INodeSetReference"), MetaAdapterFactory.getInterfaceConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L, "jetbrains.mps.console.ideCommands.structure.IStatisticsTarget"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afcebfef23L, "jetbrains.mps.console.ideCommands.structure.Make"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587b0L, "jetbrains.mps.console.ideCommands.structure.ModelProperties"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x6c8954f469900928L, "jetbrains.mps.console.ideCommands.structure.ModelReference"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a5cad96L, "jetbrains.mps.console.ideCommands.structure.ModelStatisticsTarget"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587b3L, "jetbrains.mps.console.ideCommands.structure.ModuleProperties"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x5252d9021b8b45a8L, "jetbrains.mps.console.ideCommands.structure.OfAspectOperation"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579e36L, "jetbrains.mps.console.ideCommands.structure.ProjectStatisticsTarget"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191df02L, "jetbrains.mps.console.ideCommands.structure.RebuildProjectCommand"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a11bL, "jetbrains.mps.console.ideCommands.structure.RemoveGenSources"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x1cf75b72b0ac828cL, "jetbrains.mps.console.ideCommands.structure.ShowBrokenReferences"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191d79fL, "jetbrains.mps.console.ideCommands.structure.ShowExpression"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x61f2dd6de47f85e4L, "jetbrains.mps.console.ideCommands.structure.ShowGenPlan"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a558c98L, "jetbrains.mps.console.ideCommands.structure.StatCommand"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x1cf75b72b0b3962bL, "jetbrains.mps.console.ideCommands.structure.SubtreeStatisticsTarget"), MetaAdapterFactory.getConcept(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191ddffL, "jetbrains.mps.console.ideCommands.structure.UnloadModelsCommand"));
}
