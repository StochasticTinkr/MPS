package jetbrains.mps.console.ideCommands.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbsractMake = createDescriptorForAbsractMake();
  /*package*/ final ConceptDescriptor myConceptActionCallDeclaredParameter = createDescriptorForActionCallDeclaredParameter();
  /*package*/ final ConceptDescriptor myConceptActionCallGlobalParameter = createDescriptorForActionCallGlobalParameter();
  /*package*/ final ConceptDescriptor myConceptActionCallParameter = createDescriptorForActionCallParameter();
  /*package*/ final ConceptDescriptor myConceptCallActionExpression = createDescriptorForCallActionExpression();
  /*package*/ final ConceptDescriptor myConceptClean = createDescriptorForClean();
  /*package*/ final ConceptDescriptor myConceptClickableGenerator = createDescriptorForClickableGenerator();
  /*package*/ final ConceptDescriptor myConceptGlobalScope = createDescriptorForGlobalScope();
  /*package*/ final ConceptDescriptor myConceptGlobalScope_old = createDescriptorForGlobalScope_old();
  /*package*/ final ConceptDescriptor myConceptGlobalStatisticTarget = createDescriptorForGlobalStatisticTarget();
  /*package*/ final ConceptDescriptor myConceptINodeSetReference = createDescriptorForINodeSetReference();
  /*package*/ final ConceptDescriptor myConceptIStatisticsTarget = createDescriptorForIStatisticsTarget();
  /*package*/ final ConceptDescriptor myConceptMake = createDescriptorForMake();
  /*package*/ final ConceptDescriptor myConceptModelProperties = createDescriptorForModelProperties();
  /*package*/ final ConceptDescriptor myConceptModelReference = createDescriptorForModelReference();
  /*package*/ final ConceptDescriptor myConceptModelStatisticsTarget = createDescriptorForModelStatisticsTarget();
  /*package*/ final ConceptDescriptor myConceptModuleProperties = createDescriptorForModuleProperties();
  /*package*/ final ConceptDescriptor myConceptNodeReference = createDescriptorForNodeReference();
  /*package*/ final ConceptDescriptor myConceptOfAspectOperation_old = createDescriptorForOfAspectOperation_old();
  /*package*/ final ConceptDescriptor myConceptProjectStatisticsTarget = createDescriptorForProjectStatisticsTarget();
  /*package*/ final ConceptDescriptor myConceptRebuildProjectCommand = createDescriptorForRebuildProjectCommand();
  /*package*/ final ConceptDescriptor myConceptRemoveGenSources = createDescriptorForRemoveGenSources();
  /*package*/ final ConceptDescriptor myConceptShowBrokenReferences = createDescriptorForShowBrokenReferences();
  /*package*/ final ConceptDescriptor myConceptShowExpression = createDescriptorForShowExpression();
  /*package*/ final ConceptDescriptor myConceptShowGenPlan = createDescriptorForShowGenPlan();
  /*package*/ final ConceptDescriptor myConceptStatCommand = createDescriptorForStatCommand();
  /*package*/ final ConceptDescriptor myConceptSubtreeStatisticsTarget = createDescriptorForSubtreeStatisticsTarget();
  /*package*/ final ConceptDescriptor myConceptUnloadModelsCommand = createDescriptorForUnloadModelsCommand();
  /*package*/ final ConceptDescriptor myConceptVisibleModulesScope = createDescriptorForVisibleModulesScope();
  /*package*/ final ConceptDescriptor myConceptWithDependencies = createDescriptorForWithDependencies();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbsractMake, myConceptActionCallDeclaredParameter, myConceptActionCallGlobalParameter, myConceptActionCallParameter, myConceptCallActionExpression, myConceptClean, myConceptClickableGenerator, myConceptGlobalScope, myConceptGlobalScope_old, myConceptGlobalStatisticTarget, myConceptINodeSetReference, myConceptIStatisticsTarget, myConceptMake, myConceptModelProperties, myConceptModelReference, myConceptModelStatisticsTarget, myConceptModuleProperties, myConceptNodeReference, myConceptOfAspectOperation_old, myConceptProjectStatisticsTarget, myConceptRebuildProjectCommand, myConceptRemoveGenSources, myConceptShowBrokenReferences, myConceptShowExpression, myConceptShowGenPlan, myConceptStatCommand, myConceptSubtreeStatisticsTarget, myConceptUnloadModelsCommand, myConceptVisibleModulesScope, myConceptWithDependencies);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.AbsractMake:
        return myConceptAbsractMake;
      case LanguageConceptSwitch.ActionCallDeclaredParameter:
        return myConceptActionCallDeclaredParameter;
      case LanguageConceptSwitch.ActionCallGlobalParameter:
        return myConceptActionCallGlobalParameter;
      case LanguageConceptSwitch.ActionCallParameter:
        return myConceptActionCallParameter;
      case LanguageConceptSwitch.CallActionExpression:
        return myConceptCallActionExpression;
      case LanguageConceptSwitch.Clean:
        return myConceptClean;
      case LanguageConceptSwitch.ClickableGenerator:
        return myConceptClickableGenerator;
      case LanguageConceptSwitch.GlobalScope:
        return myConceptGlobalScope;
      case LanguageConceptSwitch.GlobalScope_old:
        return myConceptGlobalScope_old;
      case LanguageConceptSwitch.GlobalStatisticTarget:
        return myConceptGlobalStatisticTarget;
      case LanguageConceptSwitch.INodeSetReference:
        return myConceptINodeSetReference;
      case LanguageConceptSwitch.IStatisticsTarget:
        return myConceptIStatisticsTarget;
      case LanguageConceptSwitch.Make:
        return myConceptMake;
      case LanguageConceptSwitch.ModelProperties:
        return myConceptModelProperties;
      case LanguageConceptSwitch.ModelReference:
        return myConceptModelReference;
      case LanguageConceptSwitch.ModelStatisticsTarget:
        return myConceptModelStatisticsTarget;
      case LanguageConceptSwitch.ModuleProperties:
        return myConceptModuleProperties;
      case LanguageConceptSwitch.NodeReference:
        return myConceptNodeReference;
      case LanguageConceptSwitch.OfAspectOperation_old:
        return myConceptOfAspectOperation_old;
      case LanguageConceptSwitch.ProjectStatisticsTarget:
        return myConceptProjectStatisticsTarget;
      case LanguageConceptSwitch.RebuildProjectCommand:
        return myConceptRebuildProjectCommand;
      case LanguageConceptSwitch.RemoveGenSources:
        return myConceptRemoveGenSources;
      case LanguageConceptSwitch.ShowBrokenReferences:
        return myConceptShowBrokenReferences;
      case LanguageConceptSwitch.ShowExpression:
        return myConceptShowExpression;
      case LanguageConceptSwitch.ShowGenPlan:
        return myConceptShowGenPlan;
      case LanguageConceptSwitch.StatCommand:
        return myConceptStatCommand;
      case LanguageConceptSwitch.SubtreeStatisticsTarget:
        return myConceptSubtreeStatisticsTarget;
      case LanguageConceptSwitch.UnloadModelsCommand:
        return myConceptUnloadModelsCommand;
      case LanguageConceptSwitch.VisibleModulesScope:
        return myConceptVisibleModulesScope;
      case LanguageConceptSwitch.WithDependencies:
        return myConceptWithDependencies;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbsractMake() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "AbsractMake", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a29aL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760bacfdL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2840424593984889498");
    b.aggregate("argument", 0x276b371e77c0a2f0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("2840424593984889584").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCallDeclaredParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ActionCallDeclaredParameter", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587a7L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.ideCommands.structure.ActionCallParameter", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587abL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074087");
    b.associate("declaration", 0x4d7759afce9587a8L).target(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x11b737a6b7cL).optional(false).origin("5582028874769074088").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCallGlobalParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ActionCallGlobalParameter", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587a9L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.ideCommands.structure.ActionCallParameter", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587abL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074089");
    b.associate("declaration", 0x4d7759afce9587aaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL).optional(false).origin("5582028874769074090").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCallParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ActionCallParameter", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587abL);
    b.class_(false, true, false);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074091");
    b.aggregate("value", 0x4d7759afce9587acL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5582028874769074092").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCallActionExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "CallActionExpression", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587adL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074093");
    b.associate("action", 0x4d7759afce9587aeL).target(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L).optional(false).origin("5582028874769074094").done();
    b.aggregate("parameter", 0x4d7759afce9587afL).target(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587abL).optional(true).ordered(true).multiple(true).origin("5582028874769074095").done();
    b.alias("#callAction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "Clean", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e74f88509L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.ideCommands.structure.AbsractMake", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a29aL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2840424593938220297");
    b.alias("#clean");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClickableGenerator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ClickableGenerator", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x360b134fc0467d73L);
    b.class_(false, false, false);
    b.parent(0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x2095ece53bb9f5b0L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/3894227536041114995");
    b.prop("moduleId", 0x360b134fc0525d7fL, "3894227536041893247");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGlobalScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "GlobalScope", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x20c897bb39d91633L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x20c897bb39bb07a2L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2362304834941031987");
    b.alias("global");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGlobalScope_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "GlobalScope_old", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x3bc64421763add42L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter_old", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421763add4bL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/4307205004134636866");
    b.alias("global");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGlobalStatisticTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "GlobalStatisticTarget", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb8L);
    b.class_(false, false, false);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7490254719522675896");
    b.alias("global");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForINodeSetReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "INodeSetReference", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L);
    b.interface_();
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5207260697411458113");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStatisticsTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "IStatisticsTarget", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L);
    b.interface_();
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7490254719522675890");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMake() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "Make", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afcebfef23L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.ideCommands.structure.AbsractMake", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a29aL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874771853091");
    b.alias("#make");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelProperties() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ModelProperties", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587b0L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074096");
    b.aggregate("targetModel", 0x4d7759afce9587b1L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5582028874769074097").done();
    b.alias("#modelProperties");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ModelReference", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x6c8954f469900928L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.structure.ModelReferenceExpression", 0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x7c3f2da20e92b62L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7820875636625377576");
    b.alias("model");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelStatisticsTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ModelStatisticsTarget", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a5cad96L);
    b.class_(false, false, false);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7490254719523007894");
    b.aggregate("target", 0x67f2bafb7a5cad99L).target(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x6c8954f469900928L).optional(false).ordered(true).multiple(false).origin("7490254719523007897").done();
    b.alias("model");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModuleProperties() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ModuleProperties", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4d7759afce9587b3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5582028874769074099");
    b.aggregate("targetModule", 0x4d7759afce9587b4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("5582028874769074100").done();
    b.alias("#moduleProperties");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNodeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "NodeReference", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x6c8954f4699443afL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.structure.NodeRefExpression", 0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x11be716563cL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7820875636625654703");
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOfAspectOperation_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "OfAspectOperation_old", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x5252d9021b8b45a8L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", 0x8388864671ce4f1cL, 0x9c53c54016f6ad4fL, 0x10c26c9a2d9L);
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x5252d9021b8b6c03L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/5932042262275638696");
    b.associate("requestedAspect_old", 0x7cd422dbfa7b06f8L).target(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x2fa4a8cdf0c9b076L).optional(true).origin("8994852683961272056").done();
    b.alias("ofAspect");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProjectStatisticsTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ProjectStatisticsTarget", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579e36L);
    b.class_(false, false, false);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7490254719522676278");
    b.alias("project");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRebuildProjectCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "RebuildProjectCommand", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191df02L);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.console.base.structure.InterpretedCommand", 0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x188f8efcef689c65L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/8483375838963818242");
    b.aggregate("model", 0x75bb0160f191df03L).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x7c3f2da20e92b62L).optional(false).ordered(true).multiple(false).origin("8483375838963818243").done();
    b.alias("#rebuild project");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveGenSources() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "RemoveGenSources", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a11bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.ideCommands.structure.AbsractMake", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x276b371e77c0a29aL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2840424593984889115");
    b.alias("#removeGenSources");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShowBrokenReferences() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ShowBrokenReferences", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x1cf75b72b0ac828cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.base.structure.InterpretedCommand", 0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x188f8efcef689c65L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2087237500458009228");
    b.aggregate("target", 0x1cf75b72b0ac828dL).target(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L).optional(false).ordered(true).multiple(false).origin("2087237500458009229").done();
    b.alias("#showBrokenRefs");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShowExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ShowExpression", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191d79fL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.parent(0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x613b3dd6aa6dac90L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/8483375838963816351");
    b.aggregate("object", 0x6979f0787b81e875L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("7600370246423275637").done();
    b.alias("#show");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShowGenPlan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "ShowGenPlan", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x61f2dd6de47f85e4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.base.structure.InterpretedCommand", 0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x188f8efcef689c65L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7057947030097724900");
    b.prop("ignoreExternalPlan", 0x2c510b378f8ce5ddL, "3193345944041874909");
    b.aggregate("targetModel", 0x61f2dd6de47f867aL).target(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x6c8954f469900928L).optional(false).ordered(true).multiple(false).origin("7057947030097725050").done();
    b.alias("#showGenPlan");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "StatCommand", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a558c98L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.console.base.structure.InterpretedCommand", 0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x188f8efcef689c65L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/7490254719522540696");
    b.aggregate("target", 0x67f2bafb7a579cb3L).target(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L).optional(false).ordered(true).multiple(false).origin("7490254719522675891").done();
    b.alias("#stat");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubtreeStatisticsTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "SubtreeStatisticsTarget", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x1cf75b72b0b3962bL);
    b.class_(false, false, false);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x67f2bafb7a579cb2L);
    b.parent(0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x4843e803da101441L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2087237500458473003");
    b.aggregate("target", 0x1cf75b72b0b396c6L).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x319fd776da5d8e3cL).optional(false).ordered(true).multiple(false).origin("2087237500458473158").done();
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnloadModelsCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "UnloadModelsCommand", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x75bb0160f191ddffL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.console.base.structure.InterpretedCommand", 0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x188f8efcef689c65L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/8483375838963817983");
    b.alias("#unload models");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisibleModulesScope() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "VisibleModulesScope", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x20c897bb39d93cd3L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.ScopeParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x20c897bb39bb07a2L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/2362304834941041875");
    b.alias("visible");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWithDependencies() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.console.ideCommands", "WithDependencies", 0xa5e4de5346a344daL, 0xaab368fdf1c34ed0L, 0x826e97ca237a1b1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.smodel.query.structure.QueryParameter", 0x1a8554c4eb8443baL, 0x8c346f0d90c6e75aL, 0x3bc64421760badf5L);
    b.origin("r:135a606f-0376-4c5c-9ab8-4030f051a062(jetbrains.mps.console.ideCommands.structure)/587413522925199793");
    b.alias("withDependencies");
    return b.create();
  }
}
