package jetbrains.mps.console.internalCommands.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ConsoleModelExpression = 0;
  public static final int InternalMode = 1;
  public static final int ReloadClassesCommand = 2;
  public static final int ShowRepositoryCommand = 3;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x995a73947f764b8bL, 0xa929c53448708106L);
    builder.put(0x4d7759afcea851bdL, ConsoleModelExpression);
    builder.put(0x7a89354654722219L, InternalMode);
    builder.put(0x75bb0160f191dd31L, ReloadClassesCommand);
    builder.put(0x75bb0160f191df0cL, ShowRepositoryCommand);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
