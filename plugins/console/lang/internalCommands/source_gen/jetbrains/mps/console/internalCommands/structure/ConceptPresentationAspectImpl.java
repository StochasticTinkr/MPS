package jetbrains.mps.console.internalCommands.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ConsoleModelExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InternalMode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ReloadClassesCommand = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ShowRepositoryCommand = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ConsoleModelExpression:
        return props_ConsoleModelExpression;
      case LanguageConceptSwitch.InternalMode:
        return props_InternalMode;
      case LanguageConceptSwitch.ReloadClassesCommand:
        return props_ReloadClassesCommand;
      case LanguageConceptSwitch.ShowRepositoryCommand:
        return props_ShowRepositoryCommand;
    }
    return null;
  }
}
