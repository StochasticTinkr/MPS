package jetbrains.mps.console.base.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.nodeEditor.selection.SelectUpUtil;
import java.util.function.BooleanSupplier;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class CommandHolder_Actions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.COMMENT, new CommandHolder_Actions.CommandHolder_Actions_COMMENT(node));
    editorCell.setAction(CellActionType.SELECT_ALL, new CommandHolder_Actions.CommandHolder_Actions_SELECT_ALL(node));
  }
  public static class CommandHolder_Actions_COMMENT extends AbstractCellAction {
    /*package*/ SNode myNode;
    public CommandHolder_Actions_COMMENT(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
    }
    @Override
    public boolean canExecute(EditorContext editorContext) {
      return this.canExecute_internal(editorContext, this.myNode);
    }
    public boolean canExecute_internal(EditorContext editorContext, SNode node) {
      return eq_5bkq2_a0a0f1(editorContext.getSelectedNode(), node);
    }
    private static boolean eq_5bkq2_a0a0f1(Object a, Object b) {
      return (a != null ? a.equals(b) : a == b);
    }
  }
  public static class CommandHolder_Actions_SELECT_ALL extends AbstractCellAction {
    /*package*/ SNode myNode;
    public CommandHolder_Actions_SELECT_ALL(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(final EditorContext editorContext, final SNode node) {

      SelectUpUtil.executeWhile(editorContext, new BooleanSupplier() {
        public boolean getAsBoolean() {
          return neq_5bkq2_a0a0a0a1a1a3c(editorContext.getSelectionManager().getSelection().getSelectedNodes().get(0), SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x4e27160acb4484bL, 0x4e27160acb44924L, "command")));
        }
      });
    }
    @Override
    public boolean canExecute(EditorContext editorContext) {
      return this.canExecute_internal(editorContext, this.myNode);
    }
    public boolean canExecute_internal(EditorContext editorContext, SNode node) {
      return SelectUpUtil.canExecute(editorContext) && (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xde1ad86d6e504a02L, 0xb306d4d17f64c375L, 0x4e27160acb4484bL, 0x4e27160acb44924L, "command")) != null);
    }
    private static boolean neq_5bkq2_a0a0a0a1a1a3c(Object a, Object b) {
      return !(((a != null ? a.equals(b) : a == b)));
    }
  }
}
