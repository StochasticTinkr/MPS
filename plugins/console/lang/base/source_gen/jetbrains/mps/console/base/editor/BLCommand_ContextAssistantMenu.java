package jetbrains.mps.console.base.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.transformationMenus.TransformationMenuBase;
import java.util.List;
import jetbrains.mps.lang.editor.transformationMenus.MenuPart;
import java.util.Arrays;
import jetbrains.mps.lang.editor.transformationMenus.ActionItemMenuPart;
import jetbrains.mps.openapi.editor.transformationMenus.TransformationMenuContext;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.console.tool.ConsoleTool;

public class BLCommand_ContextAssistantMenu extends TransformationMenuBase {
  @Override
  protected List<MenuPart> getParts() {
    return Arrays.<MenuPart>asList(new ActionItemMenuPart() {
      @Override
      protected String getText(TransformationMenuContext context) {
        final EditorContext editorContext = context.getEditorContext();
        final SNode node = context.getNode();
        return "Evaluate (Ctrl+Enter)";
      }

      @Override
      protected void execute(TransformationMenuContext context) {
        final EditorContext editorContext = context.getEditorContext();
        final SNode node = context.getNode();
        {
          ConsoleTool tool = editorContext.getOperationContext().getProject().getComponent(ConsoleTool.class);
          tool.getCurrentEditableTab().executeCurrentCommand();
        }
      }
    });
  }
}
