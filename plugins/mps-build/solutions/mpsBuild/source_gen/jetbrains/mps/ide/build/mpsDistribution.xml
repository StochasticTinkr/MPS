<project name="mpsDistribution" default="build" basedir="../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/mpsDistribution" />
  <property name="build.layout" location="${build.dir}/artifacts/mpsDistribution" />
  <property name="resources" location="" />
  <property name="artifacts.mps" location="${build.dir}/artifacts/mps" />
  <property name="artifacts.resources" location="${resources}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  
  <target name="assemble" depends="fetchDependencies">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps64.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
      <globmapper from="*" to="mps.exe.vmoptions" />
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps64.vmoptions" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
      <globmapper from="*" to="mps64.exe.vmoptions" />
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f755" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f755">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.sh" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7551" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7551">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.bat" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin/mac" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7552" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7552">
      <fileset file="${basedir}/bin/mac/printenv.py" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin/mac/Contents" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip/MPS ${mpsBootstrapCore.version}/bin/mac/Contents">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/Info.plist.xml" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\$version\$" replace="${mpsBootstrapCore.version}" flags="" />
        </tokenfilter>
        <tokenfilter>
          <replaceregex pattern="\$build\$" replace="${mps.build.number}" flags="" />
        </tokenfilter>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
      <globmapper from="*" to="Info.plist" />
    </copy>
    <zip destfile="${build.layout}/${mps.build.number}.zip">
      <zipfileset dir="${artifacts.mps}" prefix="MPS ${mpsBootstrapCore.version}" />
      <zipfileset dir="${basedir}/bin/win" prefix="MPS ${mpsBootstrapCore.version}/bin/win">
        <exclude name="**/*.exe" />
        <exclude name="**/*.bat" />
      </zipfileset>
      <zipfileset file="${basedir}/bin/win/fsnotifier.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/fsnotifier64.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/restarter.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/runnerw.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/vistalauncher.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/WinProcessListHelper.exe" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/win/append.bat" prefix="MPS ${mpsBootstrapCore.version}/bin/win" filemode="755" />
      <zipfileset file="${basedir}/bin/linux/fsnotifier" prefix="MPS ${mpsBootstrapCore.version}/bin/linux" filemode="755" />
      <zipfileset file="${basedir}/bin/linux/fsnotifier64" prefix="MPS ${mpsBootstrapCore.version}/bin/linux" filemode="755" />
      <zipfileset file="${basedir}/bin/linux/fsnotifier-arm" prefix="MPS ${mpsBootstrapCore.version}/bin/linux" filemode="755" />
      <zipfileset file="${basedir}/bin/linux/restart.py" prefix="MPS ${mpsBootstrapCore.version}/bin/linux" filemode="755" />
      <zipfileset file="${basedir}/bin/linux/printenv.py" prefix="MPS ${mpsBootstrapCore.version}/bin/linux" filemode="755" />
      <zipfileset file="${basedir}/bin/mac/libMacNativeKit64.dylib" prefix="MPS ${mpsBootstrapCore.version}/bin/mac" />
      <zipfileset file="${basedir}/bin/mac/restarter" prefix="MPS ${mpsBootstrapCore.version}/bin/mac" filemode="755" />
      <zipfileset file="${basedir}/bin/mac/fsnotifier" prefix="MPS ${mpsBootstrapCore.version}/bin/mac" filemode="755" />
      <zipfileset file="${basedir}/build/resources/mps.icns" prefix="MPS ${mpsBootstrapCore.version}/bin/mac/Contents/Resources" />
      <zipfileset file="${basedir}/build/resources/mps" prefix="MPS ${mpsBootstrapCore.version}/bin/mac/Contents/MacOS" filemode="755" />
      <zipfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f755" filemode="755" prefix="MPS ${mpsBootstrapCore.version}/bin" />
      <zipfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7551" filemode="755" prefix="MPS ${mpsBootstrapCore.version}/bin/win" />
      <zipfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip_f7552" filemode="755" prefix="MPS ${mpsBootstrapCore.version}/bin/mac" />
      <fileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_.zip" />
    </zip>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz/MPS ${mpsBootstrapCore.version}" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz/MPS ${mpsBootstrapCore.version}/bin" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps64.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz_f755" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz_f755">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.sh" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <tar destfile="${build.layout}/${mps.build.number}-linux.tar.gz" compression="gzip" longfile="gnu">
      <tarfileset dir="${artifacts.mps}" prefix="MPS ${mpsBootstrapCore.version}" />
      <tarfileset file="${basedir}/workbench/mps-icons/source/MPS_128.png" prefix="MPS ${mpsBootstrapCore.version}/bin" />
      <tarfileset file="${basedir}/bin/linux/fsnotifier" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <tarfileset file="${basedir}/bin/linux/fsnotifier64" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <tarfileset file="${basedir}/bin/linux/fsnotifier-arm" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <tarfileset file="${basedir}/bin/linux/restart.py" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <tarfileset file="${basedir}/bin/linux/printenv.py" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <tarfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz_f755" filemode="755" prefix="MPS ${mpsBootstrapCore.version}/bin" />
      <tarfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-linux.tar.gz" />
    </tar>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip/MPS ${mpsBootstrapCore.version}" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip/MPS ${mpsBootstrapCore.version}/bin" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
      <globmapper from="*" to="mps.exe.vmoptions" />
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip/MPS ${mpsBootstrapCore.version}/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps64.vmoptions" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
      <globmapper from="*" to="mps64.exe.vmoptions" />
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip_f755" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip_f755">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.bat" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
    </copy>
    <zip destfile="${build.layout}/${mps.build.number}-windows.zip">
      <zipfileset dir="${artifacts.mps}" prefix="MPS ${mpsBootstrapCore.version}" />
      <zipfileset dir="${basedir}/bin/win" prefix="MPS ${mpsBootstrapCore.version}/bin">
        <exclude name="**/*.exe" />
        <exclude name="**/*.bat" />
      </zipfileset>
      <zipfileset file="${basedir}/build/resources/mps.ico" prefix="MPS ${mpsBootstrapCore.version}/bin" />
      <zipfileset file="${basedir}/bin/win/fsnotifier.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/fsnotifier64.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/restarter.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/runnerw.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/vistalauncher.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/WinProcessListHelper.exe" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/win/append.bat" prefix="MPS ${mpsBootstrapCore.version}/bin" filemode="755" />
      <zipfileset dir="${build.tmp}/deps/jbsdk_windows_x64.tar.gz" prefix="MPS ${mpsBootstrapCore.version}/jre" />
      <zipfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip_f755" filemode="755" prefix="MPS ${mpsBootstrapCore.version}/bin" />
      <fileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-windows.zip" />
    </zip>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app/Contents" />
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app/Contents/bin" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app/Contents/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app/Contents/bin">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/mps64.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip_f755" />
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip_f755">
      <fileset file="${basedir}/bin/mac/printenv.py" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <copy todir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip/MPS ${mpsBootstrapCore.version}.app/Contents">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/Info.plist.xml" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\$version\$" replace="${mpsBootstrapCore.version}" flags="" />
        </tokenfilter>
        <tokenfilter>
          <replaceregex pattern="\$build\$" replace="${mps.build.number}" flags="" />
        </tokenfilter>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
      <globmapper from="*" to="Info.plist" />
    </copy>
    <zip destfile="${build.layout}/${mps.build.number}-macos.zip">
      <zipfileset dir="${artifacts.mps}" prefix="MPS ${mpsBootstrapCore.version}.app/Contents" />
      <zipfileset file="${basedir}/build/resources/mps.icns" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/Resources" />
      <zipfileset file="${basedir}/build/resources/mps" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/MacOS" filemode="755" />
      <zipfileset file="${basedir}/bin/mac/libMacNativeKit64.dylib" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/bin" />
      <zipfileset file="${basedir}/bin/mac/restarter" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/bin" filemode="755" />
      <zipfileset file="${basedir}/bin/mac/fsnotifier" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/bin" filemode="755" />
      <zipfileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip_f755" filemode="755" prefix="MPS ${mpsBootstrapCore.version}.app/Contents/bin" />
      <fileset dir="${build.tmp}/default/_dl__lbrace_build.number_rbrace_-macos.zip" />
    </zip>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/plugins/mps-build/solutions/mpsBuild/source_gen/jetbrains/mps/ide/build/Info.plist.xml" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\$version\$" replace="${mpsBootstrapCore.version}" flags="" />
        </tokenfilter>
        <tokenfilter>
          <replaceregex pattern="\$build\$" replace="${mps.build.number}" flags="" />
        </tokenfilter>
        <tokenfilter>
          <replaceregex pattern="NoJavaDistribution" replace="custom-jdk-bundled" flags="" />
        </tokenfilter>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
      <globmapper from="*" to="jdk-bundled-Info.plist" />
    </copy>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build/mpsBootstrapCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsBuild.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsTroveCollections.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsTesting.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsStandalone.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDevKit.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsJavaPlatform.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsJavaWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsMakePlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsPlugins.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsHttpSupportPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDebuggerPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsExecutionPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsBuildUI.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsVcsCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsVcs.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/jetpad.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDiagramEditor.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsContextActionsTool.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mps.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies">
    <mkdir dir="${build.tmp}/deps/jbsdk_windows_x64.tar.gz" />
    <untar src="${artifacts.resources}/openJDK/jbsdk_windows_x64.tar.gz" dest="${build.tmp}/deps/jbsdk_windows_x64.tar.gz" compression="gzip" />
  </target>
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="publishTCArtifacts">
    <echo message="##teamcity[publishArtifacts '${build.layout}/${build.number}.zip']" />
    <echo message="##teamcity[publishArtifacts '${build.layout}/${build.number}-linux.tar.gz']" />
  </target>
</project>