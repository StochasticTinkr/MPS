<project name="mps" default="build" basedir="../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/mps" />
  <property name="build.layout" location="${build.dir}/artifacts/mps" />
  <loadfile property="build.number" srcFile="${basedir}/build.txt" />
  <tstamp>
    <format property="date" pattern="yyyyMMdd" />
  </tstamp>
  <property name="build.vcs.number" value="HEAD" />
  <property name="teamcity.buildConfName" value="local" />
  <loadfile property="idea.platform.build.number" srcFile="${basedir}/lib/build.txt" />
  <property name="mps.build.counter" value="SNAPSHOT" />
  <property name="mps_home" location="${basedir}" />
  <property name="artifacts.mpsBuild" location="${build.dir}/artifacts/mpsBuild" />
  <property name="artifacts.mpsConsolePlugin" location="${build.dir}/artifacts/mpsConsolePlugin" />
  <property name="artifacts.mpsTroveCollections" location="${build.dir}/artifacts/mpsTroveCollections" />
  <property name="artifacts.mpsStandalone" location="${build.dir}/artifacts/mpsStandalone" />
  <property name="artifacts.mpsDevKit" location="${build.dir}/artifacts/mpsDevKit" />
  <property name="artifacts.mpsPlugins" location="${build.dir}/artifacts/mpsPlugins" />
  <property name="artifacts.mpsJavaPlatform" location="${build.dir}/artifacts/mpsJavaPlatform" />
  <property name="artifacts.mpsJavaWorkbench" location="${build.dir}/artifacts/mpsJavaWorkbench" />
  <property name="artifacts.mpsHttpSupportPlugin" location="${build.dir}/artifacts/mpsHttpSupportPlugin" />
  <property name="artifacts.mpsMakePlugin" location="${build.dir}/artifacts/mpsMakePlugin" />
  <property name="artifacts.mpsBuildUI" location="${build.dir}/artifacts/mpsBuildUI" />
  <property name="artifacts.mpsVcs" location="${build.dir}/artifacts/mpsVcs" />
  <property name="artifacts.mpsMigrationCore" location="${build.dir}/artifacts/mpsMigrationCore" />
  <property name="artifacts.mpsMigration" location="${build.dir}/artifacts/mpsMigration" />
  <property name="artifacts.mpsDebuggerPlugin" location="${build.dir}/artifacts/mpsDebuggerPlugin" />
  <property name="artifacts.mpsDiagramEditor" location="${build.dir}/artifacts/mpsDiagramEditor" />
  <property name="artifacts.jetpad" location="${build.dir}/artifacts/jetpad" />
  <property name="artifacts.mpsExecutionPlugin" location="${build.dir}/artifacts/mpsExecutionPlugin" />
  <property name="artifacts.mpsTesting" location="${build.dir}/artifacts/mpsTesting" />
  <property name="artifacts.mpsContextActionsTool" location="${build.dir}/artifacts/mpsContextActionsTool" />
  <property file="${artifacts.mpsBuild}/build.properties" prefix="import.mpsBuild" />
  <property name="mpsBootstrapCore.version" value="${import.mpsBuild.mpsBootstrapCore.version}" />
  
  <target name="assemble" depends="fetchDependencies">
    <mkdir dir="${build.layout}/bin" />
    <copy todir="${build.layout}/bin">
      <fileset dir="${mps_home}/bin">
        <exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/linux/" />
        <exclude name="**/mac/" />
        <exclude name="**/nix/" />
        <exclude name="**/win/" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/languages" />
    <copy todir="${build.layout}/languages">
      <fileset dir="${artifacts.mpsStandalone}/languages" />
    </copy>
    <mkdir dir="${build.layout}/lib" />
    <copy todir="${build.layout}/lib">
      <fileset dir="${artifacts.mpsStandalone}/lib" />
    </copy>
    <mkdir dir="${build.tmp}/default/branding.jar" />
    <mkdir dir="${build.tmp}/default/branding.jar/idea" />
    <echoxml file="${build.tmp}/default/branding.jar/idea/IdeaApplicationInfo.xml">
      <component>
        <version codename="MPS" major="2018" minor="1.5" eap="false" update-channel="MPS181" />
        <company name="JetBrains s.r.o." url="https://www.jetbrains.com/?fromIDE" copyrightStart="2009" />
        <build number="${build.number}" date="${date}" />
        <logo url="/splash.png" textcolor="FFFFFF" progressColor="FFFFFF" progressX="117" progressY="280" progressHeight="3" />
        <about url="/mpsAbout.png" foreground="FFFFFF" copyrightForeground="FFFFFF" />
        <icon size32="/MPS_32.png" size16="/MPS_16.png" size128="/MPS_128.png" ico="/MPS.ico" />
        <package code="code" />
        <names product="MPS" fullname="JetBrains MPS" />
        
        <welcome-screen logo-url="/MPS_welcomeScreen.png" />
        
        
        <plugins url="http://plugins.jetbrains.com/" />
        <update-urls check="http://www.jetbrains.com/mps/update.xml" patches="http://www.jetbrains.com/mps/download/" />
        
        <help root="mps" webhelp-url="http://www.jetbrains.com/mps/webhelp/" />
        <documentation url="https://www.jetbrains.com/mps/documentation" />
        <support url="https://www.jetbrains.com/support/mps/index.html" />
        <feedback release-url="https://www.jetbrains.com/feedback/feedback.jsp?product=mps" />
        <whatsnew url="https://www.jetbrains.com/mps/whatsnew/index.html" />
        <keymap win="https://confluence.jetbrains.com/display/MPSD20181/Default+Keymap+Reference" mac="https://confluence.jetbrains.com/display/MPSD20181/Default+Keymap+Reference" />
        <third-party url="http://www.jetbrains.org/" />
        <jetbrains-tv url="http://www.youtube.com/user/JetBrainsTV/search?query=MPS" />
        
      </component>
    </echoxml>
    <jar destfile="${build.layout}/lib/branding.jar" duplicate="preserve">
      <fileset file="${basedir}/workbench/mps-icons/source/MPS_16.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/MPS_32.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/MPS_128.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/MPS.ico" />
      <fileset file="${basedir}/workbench/mps-icons/source/MPS_welcomeScreen.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/splash.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/mpsAbout.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/splash@2x.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/mpsAbout@2x.png" />
      <fileset file="${basedir}/workbench/mps-icons/source/MPS_welcomeScreen@2x.png" />
      <fileset dir="${build.tmp}/default/branding.jar" />
    </jar>
    <mkdir dir="${build.tmp}/default/MPS-src.zip" />
    <copy todir="${build.tmp}/default/MPS-src.zip">
      <fileset dir="${mps_home}">
        <include name="MPSPlugin/**/*.java" />
        <include name="core/**/*.java" />
        <include name="plugins/**/*.java" />
        <include name="workbench/**/*.java" />
        <include name="testbench/**/*.java" />
        <exclude name="**/sandbox/**" />
        <exclude name="**/languages/**" />
      </fileset>
      <regexpmapper from="(.*)(/|\\)(src|sources|source|source_gen|source-api)(/|\\)(.*)" to="\5" />
    </copy>
    <zip destfile="${build.layout}/lib/MPS-src.zip">
      <fileset dir="${build.tmp}/default/MPS-src.zip" />
    </zip>
    <mkdir dir="${build.layout}/license" />
    <copy todir="${build.layout}/license">
      <fileset dir="${artifacts.mpsStandalone}/license" />
    </copy>
    <mkdir dir="${build.layout}/plugins" />
    <mkdir dir="${build.layout}/plugins/mps-build" />
    <copy todir="${build.layout}/plugins/mps-build">
      <fileset dir="${artifacts.mpsBuild}/mps-build" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsConsolePlugin}" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-trove" />
    <copy todir="${build.layout}/plugins/mps-trove">
      <fileset dir="${artifacts.mpsTroveCollections}/mps-trove" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-java-workbench" />
    <copy todir="${build.layout}/plugins/mps-java-workbench">
      <fileset dir="${artifacts.mpsJavaWorkbench}/mps-java-workbench" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsStandalone}/plugins" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-devkit" />
    <copy todir="${build.layout}/plugins/mps-devkit">
      <fileset dir="${artifacts.mpsDevKit}/mps-devkit" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsExecutionPlugin}" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsMakePlugin}" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsPlugins}" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-vcs" />
    <copy todir="${build.layout}/plugins/mps-vcs">
      <fileset dir="${artifacts.mpsVcs}/mps-vcs" />
    </copy>
    <mkdir dir="${build.layout}/plugins/git4idea" />
    <copy todir="${build.layout}/plugins/git4idea">
      <fileset dir="${artifacts.mpsVcs}/git4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/svn4idea" />
    <copy todir="${build.layout}/plugins/svn4idea">
      <fileset dir="${artifacts.mpsVcs}/svn4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/migration" />
    <copy todir="${build.layout}/plugins/migration">
      <fileset dir="${artifacts.mpsMigration}/migration" />
    </copy>
    <mkdir dir="${build.layout}/plugins/projectMigrations" />
    <copy todir="${build.layout}/plugins/projectMigrations">
      <fileset dir="${artifacts.mpsMigration}/projectMigrations" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-build" />
    <copy todir="${build.layout}/plugins/mps-build">
      <fileset dir="${artifacts.mpsBuildUI}/mps-build" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.jetpad}" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsDiagramEditor}" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsDebuggerPlugin}" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-testing" />
    <copy todir="${build.layout}/plugins/mps-testing">
      <fileset dir="${artifacts.mpsTesting}/mps-testing" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsHttpSupportPlugin}" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.mpsContextActionsTool}" />
    </copy>
    <zip destfile="${build.layout}/samples.zip">
      <zipfileset dir="${basedir}/samples" prefix="MPSSamples">
        <exclude name="**/vcs.xml" />
        <exclude name="**/*.history" />
      </zipfileset>
    </zip>
    <echo file="${build.layout}/build.number">build.number=${build.number}${line.separator}date=${date}${line.separator}revision.number=${build.vcs.number}${line.separator}configuration.name=${teamcity.buildConfName}${line.separator}version=${mpsBootstrapCore.version}${line.separator}idea.platform.build.number=${idea.platform.build.number}</echo>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/build.txt" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="SNAPSHOT" replace="${mps.build.counter}" flags="gi" />
        </tokenfilter>
      </filterchain>
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/about.txt" />
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/releaseNotes.txt" />
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/readme.txt" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\$version\$" replace="${mpsBootstrapCore.version}" flags="" />
        </tokenfilter>
      </filterchain>
    </copy>
    <echo file="${build.layout}/build.properties">mps.build.number=${build.number}${line.separator}mps.date=${date}${line.separator}mps.build.vcs.number=${build.vcs.number}${line.separator}mps.teamcity.buildConfName=${teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.build.counter}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build/mpsBootstrapCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsBuild.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsTesting.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDevKit.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsMakePlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsConsolePlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsTroveCollections.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsStandalone.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsJavaPlatform.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsJavaWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsPlugins.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsHttpSupportPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDebuggerPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsExecutionPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsBuildUI.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsVcsCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsVcs.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsMigrationCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsMigration.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/jetpad.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsDiagramEditor.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/mpsContextActionsTool.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
</project>