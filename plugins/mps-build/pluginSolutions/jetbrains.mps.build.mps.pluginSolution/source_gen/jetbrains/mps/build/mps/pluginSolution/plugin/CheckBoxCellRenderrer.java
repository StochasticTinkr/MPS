package jetbrains.mps.build.mps.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.util.annotation.ToRemove;
import com.intellij.ui.components.JBPanel;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import java.awt.BorderLayout;
import com.intellij.ui.components.JBCheckBox;
import com.intellij.util.ui.JBUI;
import com.intellij.ui.components.JBLabel;
import java.awt.Component;
import javax.swing.JTree;
import com.intellij.util.ui.UIUtil;

@Deprecated
@ToRemove(version = 2018.2)
public class CheckBoxCellRenderrer extends JBPanel implements TreeCellRenderer {
  private final JCheckBox myCheckBox;
  private final JLabel myLabel;
  @Deprecated
  public CheckBoxCellRenderrer() {
    // Use CheckboxTree.CheckboxTreeCellRenderer instead 
    super(new BorderLayout());

    myCheckBox = new JBCheckBox();
    myCheckBox.setBorder(JBUI.Borders.empty(0, 2, 0, 3));
    add(myCheckBox, BorderLayout.WEST);

    myLabel = new JBLabel();
    add(myLabel, BorderLayout.CENTER);
  }
  @Override
  public Component getTreeCellRendererComponent(JTree tree, Object value, boolean isSelected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
    invalidate();

    // We only expect instance of CheckBoxNode here 
    assert value instanceof CheckBoxNode;
    CheckBoxNode node = ((CheckBoxNode) value);

    myLabel.setText(node.getNodeText());
    myLabel.setIcon(node.getIconNonFinal(expanded));

    myCheckBox.setVisible(true);
    myCheckBox.setEnabled(true);
    myCheckBox.setSelected(node.isChecked());
    myCheckBox.setOpaque(false);
    myCheckBox.setBackground(null);
    setBackground(null);

    // Copy/Paste from com.intellij.ui.CheckboxTreeBase.CheckboxTreeCellRendererBase#getTreeCellRendererComponent 
    if (UIUtil.isUnderWin10LookAndFeel()) {
      Object hoverValue = getClientProperty(UIUtil.CHECKBOX_ROLLOVER_PROPERTY);
      myCheckBox.getModel().setRollover(hoverValue == value);
      Object pressedValue = getClientProperty(UIUtil.CHECKBOX_PRESSED_PROPERTY);
      myCheckBox.getModel().setPressed(pressedValue == value);
    }

    revalidate();

    return this;
  }
}
