package jetbrains.mps.build.mps.runner.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BuildSolutionRunnerAspect = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildSolutionRunnerPlugin = new ConceptPresentationBuilder().shortDesc("adds ability to run MPS code after build").create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BuildSolutionRunnerAspect:
        return props_BuildSolutionRunnerAspect;
      case LanguageConceptSwitch.BuildSolutionRunnerPlugin:
        return props_BuildSolutionRunnerPlugin;
    }
    return null;
  }
}
