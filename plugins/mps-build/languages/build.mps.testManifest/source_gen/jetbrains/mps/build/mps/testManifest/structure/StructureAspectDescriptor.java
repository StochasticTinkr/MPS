package jetbrains.mps.build.mps.testManifest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptTestModuleManifest = createDescriptorForTestModuleManifest();
  /*package*/ final ConceptDescriptor myConceptTestModuleManifestRef = createDescriptorForTestModuleManifestRef();
  /*package*/ final ConceptDescriptor myConceptTestProjectConfiguration = createDescriptorForTestProjectConfiguration();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptTestModuleManifest, myConceptTestModuleManifestRef, myConceptTestProjectConfiguration);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.TestModuleManifest:
        return myConceptTestModuleManifest;
      case LanguageConceptSwitch.TestModuleManifestRef:
        return myConceptTestModuleManifestRef;
      case LanguageConceptSwitch.TestProjectConfiguration:
        return myConceptTestProjectConfiguration;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForTestModuleManifest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.build.mps.testManifest", "TestModuleManifest", 0x9f846aef4e4a4a84L, 0x828e7e83fe2697f2L, 0x2dc6844997876882L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d58a0a69-0655-46ea-90b9-604f6da8b24f(jetbrains.mps.build.mps.testManifest.structure)/3298469228705179778");
    b.aggregate("language", 0x7d031e6cb9be480L).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x38130dc4e3dc174aL).optional(true).ordered(true).multiple(true).origin("563004820749542528").done();
    b.alias("Test Module");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestModuleManifestRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.build.mps.testManifest", "TestModuleManifestRef", 0x9f846aef4e4a4a84L, 0x828e7e83fe2697f2L, 0x2dc684499788c1c4L);
    b.class_(false, false, false);
    b.origin("r:d58a0a69-0655-46ea-90b9-604f6da8b24f(jetbrains.mps.build.mps.testManifest.structure)/3298469228705268164");
    b.associate("manifest", 0x2dc684499788c1c5L).target(0x9f846aef4e4a4a84L, 0x828e7e83fe2697f2L, 0x2dc6844997876882L).optional(false).origin("3298469228705268165").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestProjectConfiguration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.build.mps.testManifest", "TestProjectConfiguration", 0x9f846aef4e4a4a84L, 0x828e7e83fe2697f2L, 0x2dc6844997876885L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:d58a0a69-0655-46ea-90b9-604f6da8b24f(jetbrains.mps.build.mps.testManifest.structure)/3298469228705179781");
    b.aggregate("manifest", 0x2dc684499788dbc4L).target(0x9f846aef4e4a4a84L, 0x828e7e83fe2697f2L, 0x2dc684499788c1c4L).optional(true).ordered(true).multiple(true).origin("3298469228705274820").done();
    b.aggregate("target", 0x6a7c966ca6903a21L).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x7c3f2da20e92b62L).optional(true).ordered(true).multiple(false).origin("7673173258527586849").done();
    b.alias("Test Project Configuration");
    return b.create();
  }
}
