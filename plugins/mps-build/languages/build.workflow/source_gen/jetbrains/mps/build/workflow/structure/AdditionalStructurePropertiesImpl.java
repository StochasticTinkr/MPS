package jetbrains.mps.build.workflow.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseAdditionalStructureProperties;
import jetbrains.mps.smodel.runtime.AdditionalConceptProperties;
import jetbrains.mps.smodel.runtime.ConceptPropsBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AdditionalStructurePropertiesImpl extends BaseAdditionalStructureProperties {
  private final AdditionalConceptProperties props_BwfAntStatement = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfAntTaskBundleDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfAntTaskDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfCustomMacro = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfFileSet = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaClassPath = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaDescriptor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaLibrary = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaLibraryReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfJavaModuleReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfMacro = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfMacroListImport = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfPathDeclaration = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfPathReference = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfProject = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfProjectPart = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfProjectPartStatement = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfStatement = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfSubTask = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfSubTaskDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfTask = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfTaskDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfTaskLibrary = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfTaskLibraryDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BwfTaskPart = new ConceptPropsBuilder().create();

  @Override
  @Nullable
  public AdditionalConceptProperties getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0db.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_BwfAntStatement;
          }
          break;
        case 1:
          if (true) {
            return props_BwfAntTaskBundleDeclaration;
          }
          break;
        case 2:
          if (true) {
            return props_BwfAntTaskDeclaration;
          }
          break;
        case 3:
          if (true) {
            return props_BwfCustomMacro;
          }
          break;
        case 4:
          if (true) {
            return props_BwfDependency;
          }
          break;
        case 5:
          if (true) {
            return props_BwfFileSet;
          }
          break;
        case 6:
          if (true) {
            return props_BwfJavaClassPath;
          }
          break;
        case 7:
          if (true) {
            return props_BwfJavaDependency;
          }
          break;
        case 8:
          if (true) {
            return props_BwfJavaDescriptor;
          }
          break;
        case 9:
          if (true) {
            return props_BwfJavaLibrary;
          }
          break;
        case 10:
          if (true) {
            return props_BwfJavaLibraryReference;
          }
          break;
        case 11:
          if (true) {
            return props_BwfJavaModule;
          }
          break;
        case 12:
          if (true) {
            return props_BwfJavaModuleReference;
          }
          break;
        case 13:
          if (true) {
            return props_BwfMacro;
          }
          break;
        case 14:
          if (true) {
            return props_BwfMacroListImport;
          }
          break;
        case 15:
          if (true) {
            return props_BwfPathDeclaration;
          }
          break;
        case 16:
          if (true) {
            return props_BwfPathReference;
          }
          break;
        case 17:
          if (true) {
            return props_BwfProject;
          }
          break;
        case 18:
          if (true) {
            return props_BwfProjectPart;
          }
          break;
        case 19:
          if (true) {
            return props_BwfProjectPartStatement;
          }
          break;
        case 20:
          if (true) {
            return props_BwfStatement;
          }
          break;
        case 21:
          if (true) {
            return props_BwfSubTask;
          }
          break;
        case 22:
          if (true) {
            return props_BwfSubTaskDependency;
          }
          break;
        case 23:
          if (true) {
            return props_BwfTask;
          }
          break;
        case 24:
          if (true) {
            return props_BwfTaskDependency;
          }
          break;
        case 25:
          if (true) {
            return props_BwfTaskLibrary;
          }
          break;
        case 26:
          if (true) {
            return props_BwfTaskLibraryDependency;
          }
          break;
        case 27:
          if (true) {
            return props_BwfTaskPart;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0db = buildConceptIndices(MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5dc467L, "BwfAntStatement"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2318e5dbdfc1e415L, "BwfAntTaskBundleDeclaration"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x1c936d31d3127b3bL, "BwfAntTaskDeclaration"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x365f30e12d6048cL, "BwfCustomMacro"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x7313ce29aa27bafcL, "BwfDependency"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x6e014d63c07ebd1bL, "BwfFileSet"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5c3f3e2c1cede077L, "BwfJavaClassPath"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5c3f3e2c1cede06eL, "BwfJavaDependency"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x6565da114723a759L, "BwfJavaDescriptor"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2021cfb4db4e306L, "BwfJavaLibrary"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2021cfb4db759cbL, "BwfJavaLibraryReference"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x41fde5e4adce38bbL, "BwfJavaModule"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x41fde5e4adce38c4L, "BwfJavaModuleReference"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5fb388b43aa25d48L, "BwfMacro"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5a7e1dc16b0ca24fL, "BwfMacroListImport"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5c3f3e2c1cef4c10L, "BwfPathDeclaration"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x5c3f3e2c1cef4c1fL, "BwfPathReference"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6271L, "BwfProject"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6287L, "BwfProjectPart"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2318e5dbdfc153dbL, "BwfProjectPartStatement"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5b4a1bL, "BwfStatement"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6275L, "BwfSubTask"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5b49b8L, "BwfSubTaskDependency"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6273L, "BwfTask"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5ace56L, "BwfTaskDependency"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x6565da114724ce92L, "BwfTaskLibrary"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x6565da1147260537L, "BwfTaskLibraryDependency"), MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, "BwfTaskPart"));
}
