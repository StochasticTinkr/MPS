package jetbrains.mps.build.mps.tests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BuildModuleTestsPlugin = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_TestModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_TestModuleGroup = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_TestModules = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_TestModules_Content = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BuildModuleTestsPlugin:
        return props_BuildModuleTestsPlugin;
      case LanguageConceptSwitch.BuildMpsLayout_TestModule:
        return props_BuildMpsLayout_TestModule;
      case LanguageConceptSwitch.BuildMpsLayout_TestModuleGroup:
        return props_BuildMpsLayout_TestModuleGroup;
      case LanguageConceptSwitch.BuildMpsLayout_TestModules:
        return props_BuildMpsLayout_TestModules;
      case LanguageConceptSwitch.BuildMpsLayout_TestModules_Content:
        return props_BuildMpsLayout_TestModules_Content;
    }
    return null;
  }
}
