package jetbrains.mps.build.mps.tests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_BuildModuleTestsPlugin;
  private ConceptPresentation props_BuildMpsLayout_TestModule;
  private ConceptPresentation props_BuildMpsLayout_TestModuleGroup;
  private ConceptPresentation props_BuildMpsLayout_TestModules;
  private ConceptPresentation props_BuildMpsLayout_TestModules_Content;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BuildModuleTestsPlugin:
        if (props_BuildModuleTestsPlugin == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("adds ability to execute module tests to the project");
          cpb.rawPresentation("module-testing");
          props_BuildModuleTestsPlugin = cpb.create();
        }
        return props_BuildModuleTestsPlugin;
      case LanguageConceptSwitch.BuildMpsLayout_TestModule:
        if (props_BuildMpsLayout_TestModule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder(0x3600cb0a44dd4a5bL, 0x996822924406419eL, 0x3f496e80bd8ef372L);
          cpb.presentationByReference(0x3f496e80bd8ef373L, "module", "", "");
          props_BuildMpsLayout_TestModule = cpb.create();
        }
        return props_BuildMpsLayout_TestModule;
      case LanguageConceptSwitch.BuildMpsLayout_TestModuleGroup:
        if (props_BuildMpsLayout_TestModuleGroup == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder(0x3600cb0a44dd4a5bL, 0x996822924406419eL, 0x3f496e80bd8ef36bL);
          cpb.presentationByReference(0x3f496e80bd8ef36cL, "group", "", "");
          props_BuildMpsLayout_TestModuleGroup = cpb.create();
        }
        return props_BuildMpsLayout_TestModuleGroup;
      case LanguageConceptSwitch.BuildMpsLayout_TestModules:
        if (props_BuildMpsLayout_TestModules == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_BuildMpsLayout_TestModules = cpb.create();
        }
        return props_BuildMpsLayout_TestModules;
      case LanguageConceptSwitch.BuildMpsLayout_TestModules_Content:
        if (props_BuildMpsLayout_TestModules_Content == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_BuildMpsLayout_TestModules_Content = cpb.create();
        }
        return props_BuildMpsLayout_TestModules_Content;
    }
    return null;
  }
}
