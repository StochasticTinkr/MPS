<project name="buildY" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildY" />
  <property name="build.layout" location="${build.dir}/artifacts/buildY" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  
  <target name="assemble" depends="classes">
    <mkdir dir="${build.layout}" />
    <jar destfile="${build.layout}/Aa.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/module-A-in-Y" />
    </jar>
    <zip destfile="${build.layout}/AaLibs.zip">
      <fileset dir="${basedir}/buildA" />
    </zip>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.module-A-in-Y" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="java.compile.module-A-in-Y">
    <mkdir dir="${basedir}/buildA/src" />
    <mkdir dir="${build.tmp}/java/out/module-A-in-Y" />
    <javac destdir="${build.tmp}/java/out/module-A-in-Y" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/buildA/src" />
      </src>
      <classpath>
        <fileset file="${basedir}/buildA/abcde.jar" />
      </classpath>
    </javac>
  </target>
</project>