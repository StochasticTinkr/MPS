<project name="buildA" default="build" basedir="../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildA" />
  <property name="build.layout" location="${build.dir}/artifacts/buildA" />
  <property name="aver" value="12.10" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  
  <path id="path.java.library.abcde-lib">
    <fileset file="${basedir}/buildA/abcde.jar" />
  </path>
  
  <target name="assemble" depends="classes">
    <mkdir dir="${build.layout}/result" />
    <mkdir dir="${build.tmp}/default/A-_dl__lbrace_aver_rbrace_.zip" />
    <jar destfile="${build.tmp}/default/A-_dl__lbrace_aver_rbrace_.zip/module-A.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/module-A" />
    </jar>
    <mkdir dir="${build.tmp}/default/withX.zip" />
    <jar destfile="${build.tmp}/default/withX.zip/X.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/modX" />
    </jar>
    <zip destfile="${build.tmp}/default/A-_dl__lbrace_aver_rbrace_.zip/withX.zip">
      <fileset dir="${build.tmp}/default/withX.zip" />
    </zip>
    <mkdir dir="${build.tmp}/default/abcde.zip" />
    <copy todir="${build.tmp}/default/abcde.zip">
      <fileset file="${basedir}/buildA/abcde.jar" />
    </copy>
    <zip destfile="${build.tmp}/default/A-_dl__lbrace_aver_rbrace_.zip/abcde.zip">
      <fileset dir="${build.tmp}/default/abcde.zip" />
    </zip>
    <zip destfile="${build.layout}/result/A-${aver}.zip">
      <zipfileset file="${basedir}/testdata/a.txt" prefix="A" />
      <fileset dir="${build.tmp}/default/A-_dl__lbrace_aver_rbrace_.zip" />
    </zip>
    <echo file="${build.layout}/build.properties">buildA.aver=${aver}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.module-A, java.compile.modX" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="java.compile.module-A">
    <mkdir dir="${build.tmp}/java/out/module-A" />
    <javac destdir="${build.tmp}/java/out/module-A" fork="false" nowarn="true" includeantruntime="false" debug="true" source="1.6" target="1.6">
      <compilerarg value="-Xlint:none" />
      <src path="${basedir}/buildA/src" />
      <classpath refid="path.java.library.abcde-lib" />
    </javac>
    <copy todir="${build.tmp}/java/out/module-A">
      <fileset dir="${basedir}/buildA/src" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="java.compile.modX">
    <mkdir dir="${basedir}/buildA/src" />
    <mkdir dir="${build.tmp}/java/out/modX" />
    <javac destdir="${build.tmp}/java/out/modX" fork="false" nowarn="true" includeantruntime="false" debug="true" source="1.6" target="1.6">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/buildA/src" />
      </src>
      <classpath>
        <fileset file="${basedir}/buildA/abcde.jar" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/modX">
      <fileset dir="${basedir}/buildA/src" excludes="**/*.java" />
    </copy>
  </target>
</project>