<project name="buildD" default="build" basedir="../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildD" />
  <property name="build.layout" location="${build.dir}/artifacts/buildD" />
  <property name="artifacts.buildA" location="${build.dir}/artifacts/buildA" />
  <property file="${artifacts.buildA}/build.properties" prefix="import.buildA" />
  <property name="buildA.aver" value="${import.buildA.buildA.aver}" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  
  <target name="assemble" depends="classes">
    <mkdir dir="${build.layout}" />
    <jar destfile="${build.layout}/aaaa.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/AAA" />
    </jar>
    <echo file="${build.layout}/build.properties">buildA.aver=${buildA.aver}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="buildA/buildA.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies">
    <mkdir dir="${build.tmp}/deps/buildA/A-_dl__lbrace_aver_rbrace_.zip" />
    <unzip src="${artifacts.buildA}/result/A-${buildA.aver}.zip" dest="${build.tmp}/deps/buildA/A-_dl__lbrace_aver_rbrace_.zip" />
    <mkdir dir="${build.tmp}/deps/buildA/abcde.zip" />
    <unzip src="${build.tmp}/deps/buildA/A-_dl__lbrace_aver_rbrace_.zip/abcde.zip" dest="${build.tmp}/deps/buildA/abcde.zip" />
    <mkdir dir="${build.tmp}/deps/buildA/withX.zip" />
    <unzip src="${build.tmp}/deps/buildA/A-_dl__lbrace_aver_rbrace_.zip/withX.zip" dest="${build.tmp}/deps/buildA/withX.zip" />
  </target>
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.AAA" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="java.compile.AAA" depends="fetchDependencies">
    <mkdir dir="${basedir}/buildD/src" />
    <mkdir dir="${build.tmp}/java/out/AAA" />
    <javac destdir="${build.tmp}/java/out/AAA" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/buildD/src" />
      </src>
      <classpath>
        <fileset file="${build.tmp}/deps/buildA/withX.zip/X.jar" />
        <fileset file="${build.tmp}/deps/buildA/abcde.zip/abcde.jar" />
      </classpath>
    </javac>
  </target>
</project>