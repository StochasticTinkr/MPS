<project name="buildMpsD" default="build" basedir="../../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildMpsD" />
  <property name="build.layout" location="${build.dir}/artifacts/buildMpsD" />
  <property name="artifacts.buildMpsC" location="${build.dir}/artifacts/buildMpsC" />
  <property name="artifacts.JarFromA" location="${basedir}/jetbrains.mps.build.sandbox/samples" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  
  <target name="assemble" depends="classes">
    <mkdir dir="${build.layout}" />
  </target>
  
  <target name="buildDependents">
    <ant antfile="jetbrains.mps.build.sandbox/samples/buildMpsC.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.mps_D_using_lib_from_C" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="java.compile.mps_D_using_lib_from_C" depends="fetchDependencies">
    <mkdir dir="${basedir}/jetbrains.mps.build.sandbox/samples/buildA/src" />
    <mkdir dir="${build.tmp}/java/out/mps_D_using_lib_from_C" />
    <javac destdir="${build.tmp}/java/out/mps_D_using_lib_from_C" fork="true" encoding="utf8" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/jetbrains.mps.build.sandbox/samples/buildA/src" />
      </src>
      <classpath>
        <fileset file="${artifacts.JarFromA}/buildA/abcde.jar" />
      </classpath>
    </javac>
  </target>
</project>