package jetbrains.mps.build.startup.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(6);
  /*package*/ final ConceptDescriptor myConceptClassPathItem = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.ClassPathItem", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b3437509L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3885435385580582154L, "path")).properties("path").create();
  /*package*/ final ConceptDescriptor myConceptMpsStartupScript = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.MpsStartupScript", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b3437508L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3885435385580582155L, "startupFolder"), new ConceptDescriptorBuilder.Prop(3885435385580631186L, "startupClass")).properties("startupFolder", "startupClass").childDescriptors(new ConceptDescriptorBuilder.Link(3885435385580582696L, "bootClasspath", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b3437509L), true, true, false), new ConceptDescriptorBuilder.Link(3885435385580627556L, "vmOptions", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343750dL), true, true, false), new ConceptDescriptorBuilder.Link(2693344784283221851L, "vmOptions64", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343750dL), true, true, false)).children(new String[]{"bootClasspath", "vmOptions", "vmOptions64"}, new boolean[]{true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptSimpleVmOptions = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.SimpleVmOptions", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343774cL)).super_("jetbrains.mps.build.startup.structure.VmOptions").super_(MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343750dL)).parents("jetbrains.mps.build.startup.structure.VmOptions").parentIds(MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343750dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3885435385580582733L, "options"), new ConceptDescriptorBuilder.Prop(5842819808956906658L, "commented")).properties("options", "commented").create();
  /*package*/ final ConceptDescriptor myConceptTextFile = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.TextFile", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x180805c7b1d6687cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(1731640411964205233L, "lines", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x180805c7b1d668a2L), true, true, false)).children(new String[]{"lines"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptTextLine = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.TextLine", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x180805c7b1d668a2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1731640411964798937L, "text")).properties("text").create();
  /*package*/ final ConceptDescriptor myConceptVmOptions = new ConceptDescriptorBuilder("jetbrains.mps.build.startup.structure.VmOptions", MetaIdFactory.conceptId(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b343750dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptClassPathItem.getId(), 0);
    myIndexMap.put(myConceptMpsStartupScript.getId(), 1);
    myIndexMap.put(myConceptSimpleVmOptions.getId(), 2);
    myIndexMap.put(myConceptTextFile.getId(), 3);
    myIndexMap.put(myConceptTextLine.getId(), 4);
    myIndexMap.put(myConceptVmOptions.getId(), 5);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptClassPathItem, myConceptMpsStartupScript, myConceptSimpleVmOptions, myConceptTextFile, myConceptTextLine, myConceptVmOptions);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptClassPathItem;
      case 1:
        return myConceptMpsStartupScript;
      case 2:
        return myConceptSimpleVmOptions;
      case 3:
        return myConceptTextFile;
      case 4:
        return myConceptTextLine;
      case 5:
        return myConceptVmOptions;
      default:
        throw new IllegalStateException();
    }
  }
}
