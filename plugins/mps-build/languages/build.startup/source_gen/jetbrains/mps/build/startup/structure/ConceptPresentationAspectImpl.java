package jetbrains.mps.build.startup.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ClassPathItem = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MpsStartupScript = new ConceptPresentationBuilder(0xd5033ceef63244b6L, 0xb30889d4fbde34ffL, 0x35ebd6e5b3437508L).deprecateProperty(0x35ebd6e5b343750bL, "startupFolder").create();
  private final ConceptPresentation props_SimpleVmOptions = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TextFile = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TextLine = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_VmOptions = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ClassPathItem:
        return props_ClassPathItem;
      case LanguageConceptSwitch.MpsStartupScript:
        return props_MpsStartupScript;
      case LanguageConceptSwitch.SimpleVmOptions:
        return props_SimpleVmOptions;
      case LanguageConceptSwitch.TextFile:
        return props_TextFile;
      case LanguageConceptSwitch.TextLine:
        return props_TextLine;
      case LanguageConceptSwitch.VmOptions:
        return props_VmOptions;
    }
    return null;
  }
}
