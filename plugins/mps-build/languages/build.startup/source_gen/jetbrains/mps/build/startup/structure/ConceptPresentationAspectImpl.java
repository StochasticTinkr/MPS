package jetbrains.mps.build.startup.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ClassPathItem = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_MpsStartupScript = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_SimpleVmOptions = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TextFile = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TextLine = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_VmOptions = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("d5033cee-f632-44b6-b308-89d4fbde34ff"), "jetbrains.mps.build.startup")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case 0:
        return props_ClassPathItem;
      case 1:
        return props_MpsStartupScript;
      case 2:
        return props_SimpleVmOptions;
      case 3:
        return props_TextFile;
      case 4:
        return props_TextLine;
      case 5:
        return props_VmOptions;
    }
    throw new IllegalStateException();
  }
}
