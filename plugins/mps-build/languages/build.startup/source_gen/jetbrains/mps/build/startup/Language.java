package jetbrains.mps.build.startup;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.build.startup.editor.EditorAspectDescriptorImpl;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.AdditionalStructureProperties;
import jetbrains.mps.build.startup.structure.AdditionalStructurePropertiesImpl;
import jetbrains.mps.text.rt.TextGenAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "d5033cee-f632-44b6-b308-89d4fbde34ff(jetbrains.mps.build.startup)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "jetbrains.mps.build.startup";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("d5033cee-f632-44b6-b308-89d4fbde34ff"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{"jetbrains.mps.core.xml"};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "806e3b22-557f-4d5e-94a3-443cbb7dc456(jetbrains.mps.build.startup#3885435385580635037)"));
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == BehaviorAspectDescriptor.class) {
      return (T) new jetbrains.mps.build.startup.behavior.BehaviorAspectDescriptor();
    }
    if (aspectClass == EditorAspectDescriptor.class) {
      return (T) new EditorAspectDescriptorImpl();
    }
    if (aspectClass == StructureAspectDescriptor.class) {
      return (T) new jetbrains.mps.build.startup.structure.StructureAspectDescriptor();
    }
    if (aspectClass == AdditionalStructureProperties.class) {
      return (T) new AdditionalStructurePropertiesImpl();
    }
    if (aspectClass == TextGenAspectDescriptor.class) {
      return (T) new jetbrains.mps.build.startup.textGen.TextGenAspectDescriptor();
    }
    return super.createAspect(aspectClass);
  }
}
