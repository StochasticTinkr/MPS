package jetbrains.mps.build.mps.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BuildLayout_ToBinaryCopyProcessor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMPSPlugin = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsAspect = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_FolderWithSources = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_ModuleJarContent = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_ModuleJars = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_ModuleSources = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_ModuleXml = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_ModuleXml_CustomJarLocation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_Plugin = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMpsLayout_PluginDescriptor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_AbstractModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Branding = new ConceptPresentationBuilder().deprecated(MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e44L, "major"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e45L, "minor"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x3acf8ab06f017071L, "bugfixNr"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e46L, "eap")).create();
  private final ConceptPresentation props_BuildMps_BrandingCompany = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_BrandingHelp = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_BrandingKeymap = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_BrandingStats = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_BrandingUpdateSite = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_DevKit = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_DevKitExport = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_DevKitExportLanguage = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_DevKitExportSolution = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_DevKitRef = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ExtractedModuleDependency = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Generator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_GeneratorOptions = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Group = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPlugin = new ConceptPresentationBuilder().icon(IconContainer.RESOURCE_a0a0bb).create();
  private final ConceptPresentation props_BuildMps_IdeaPluginContent = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPluginDependency = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPluginGroup = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPluginGroupCustomModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPluginModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_IdeaPluginVendor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Language = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Module = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependency = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyExtendLanguage = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyJar = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyOnDevKit = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyOnJavaModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyOnModule = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleDependencyUseLanguage = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleJavaSource = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleModelRoot = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleRuntime = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleSolutionRuntime = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleSource = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_ModuleTestSource = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BuildMps_Solution = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GeneratorInternal_BuildMps_Module = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GeneratorInternal_BuildSourcePath = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GeneratorInternal_String = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("0cf935df-4699-4e9c-a132-fa109541cba3"), "jetbrains.mps.build.mps")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case 0:
        return props_BuildLayout_ToBinaryCopyProcessor;
      case 1:
        return props_BuildMPSPlugin;
      case 2:
        return props_BuildMpsAspect;
      case 3:
        return props_BuildMpsLayout_FolderWithSources;
      case 4:
        return props_BuildMpsLayout_ModuleJarContent;
      case 5:
        return props_BuildMpsLayout_ModuleJars;
      case 6:
        return props_BuildMpsLayout_ModuleSources;
      case 7:
        return props_BuildMpsLayout_ModuleXml;
      case 8:
        return props_BuildMpsLayout_ModuleXml_CustomJarLocation;
      case 9:
        return props_BuildMpsLayout_Plugin;
      case 10:
        return props_BuildMpsLayout_PluginDescriptor;
      case 11:
        return props_BuildMps_AbstractModule;
      case 12:
        return props_BuildMps_Branding;
      case 13:
        return props_BuildMps_BrandingCompany;
      case 14:
        return props_BuildMps_BrandingHelp;
      case 15:
        return props_BuildMps_BrandingKeymap;
      case 16:
        return props_BuildMps_BrandingStats;
      case 17:
        return props_BuildMps_BrandingUpdateSite;
      case 18:
        return props_BuildMps_DevKit;
      case 19:
        return props_BuildMps_DevKitExport;
      case 20:
        return props_BuildMps_DevKitExportLanguage;
      case 21:
        return props_BuildMps_DevKitExportSolution;
      case 22:
        return props_BuildMps_DevKitRef;
      case 23:
        return props_BuildMps_ExtractedModuleDependency;
      case 24:
        return props_BuildMps_Generator;
      case 25:
        return props_BuildMps_GeneratorOptions;
      case 26:
        return props_BuildMps_Group;
      case 27:
        return props_BuildMps_IdeaPlugin;
      case 28:
        return props_BuildMps_IdeaPluginContent;
      case 29:
        return props_BuildMps_IdeaPluginDependency;
      case 30:
        return props_BuildMps_IdeaPluginGroup;
      case 31:
        return props_BuildMps_IdeaPluginGroupCustomModule;
      case 32:
        return props_BuildMps_IdeaPluginModule;
      case 33:
        return props_BuildMps_IdeaPluginVendor;
      case 34:
        return props_BuildMps_Language;
      case 35:
        return props_BuildMps_Module;
      case 36:
        return props_BuildMps_ModuleDependency;
      case 37:
        return props_BuildMps_ModuleDependencyExtendLanguage;
      case 38:
        return props_BuildMps_ModuleDependencyJar;
      case 39:
        return props_BuildMps_ModuleDependencyOnDevKit;
      case 40:
        return props_BuildMps_ModuleDependencyOnJavaModule;
      case 41:
        return props_BuildMps_ModuleDependencyOnModule;
      case 42:
        return props_BuildMps_ModuleDependencyUseLanguage;
      case 43:
        return props_BuildMps_ModuleJavaSource;
      case 44:
        return props_BuildMps_ModuleModelRoot;
      case 45:
        return props_BuildMps_ModuleRuntime;
      case 46:
        return props_BuildMps_ModuleSolutionRuntime;
      case 47:
        return props_BuildMps_ModuleSource;
      case 48:
        return props_BuildMps_ModuleTestSource;
      case 49:
        return props_BuildMps_Solution;
      case 50:
        return props_GeneratorInternal_BuildMps_Module;
      case 51:
        return props_GeneratorInternal_BuildSourcePath;
      case 52:
        return props_GeneratorInternal_String;
    }
    throw new IllegalStateException();
  }
}
