package jetbrains.mps.build.mps.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.lang.editor.menus.transformation.MenuLocations;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.ParameterizedMenuPart;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import jetbrains.mps.nodeEditor.cellMenu.SideTransformCompletionActionItem;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.openapi.editor.selection.SelectionManager;

public class add_moduleLocationAndFlags extends TransformationMenuBase {
  private final Set<String> myLocations = SetSequence.fromSetAndArray(new HashSet<String>(), MenuLocations.RIGHT_SIDE_TRANSFORM);
  @Override
  public boolean isApplicableToLocation(@NotNull String location) {
    return SetSequence.fromSet(myLocations).contains(location);
  }

  @Override
  @NotNull
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.RIGHT_SIDE_TRANSFORM).contains(_context.getMenuLocation())) {
      result.add(new add_moduleLocationAndFlags.TransformationMenuPart_Group_vydzh3_a0());
    }
    return result;
  }

  public class TransformationMenuPart_Group_vydzh3_a0 extends GroupMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Override
    protected boolean isApplicable(TransformationMenuContext _context) {
      String sourcesKind = SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c446791464290f7L, 0x3be316509dccb82L, "sourcesKind"), null);
      return (sourcesKind == null || sourcesKind.length() == 0) || sourcesKind.equals("sources");
    }

    @Override
    protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
      return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new add_moduleLocationAndFlags.TransformationMenuPart_Group_vydzh3_a0.TransformationMenuPart_Parameterized_vydzh3_a0a());
    }
    private class TransformationMenuPart_Parameterized_vydzh3_a0a extends ParameterizedMenuPart<SNode, TransformationMenuItem, TransformationMenuContext> {

      @NotNull
      @Override
      protected List<TransformationMenuItem> createItems(SNode parameter, TransformationMenuContext context) {
        return new add_moduleLocationAndFlags.TransformationMenuPart_Group_vydzh3_a0.TransformationMenuPart_Parameterized_vydzh3_a0a.TransformationMenuPart_Action_vydzh3_a0a0(parameter).createItems(context);
      }

      @Nullable
      @Override
      protected Iterable<? extends SNode> getParameters(TransformationMenuContext _context) {
        return Sequence.fromArray(new SNode[]{SEnumOperations.getEnumMember(SEnumOperations.getEnum("r:0353b795-df17-4050-9687-ee47eeb7094f(jetbrains.mps.build.mps.structure)", "BuildMps_ModuleSourcesKind"), "tests"), SEnumOperations.getEnumMember(SEnumOperations.getEnum("r:0353b795-df17-4050-9687-ee47eeb7094f(jetbrains.mps.build.mps.structure)", "BuildMps_ModuleSourcesKind"), "sources and tests")});
      }

      private class TransformationMenuPart_Action_vydzh3_a0a0 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
        private final SNode myParameterObject;
        public TransformationMenuPart_Action_vydzh3_a0a0(SNode parameterObject) {
          myParameterObject = parameterObject;
        }
        @Nullable
        protected TransformationMenuItem createItem(TransformationMenuContext context) {
          return new add_moduleLocationAndFlags.TransformationMenuPart_Group_vydzh3_a0.TransformationMenuPart_Parameterized_vydzh3_a0a.TransformationMenuPart_Action_vydzh3_a0a0.Item(context);
        }

        private class Item extends ActionItemBase implements SideTransformCompletionActionItem {
          private final TransformationMenuContext _context;

          private Item(TransformationMenuContext context) {
            _context = context;
          }

          @Nullable
          @Override
          public String getLabelText(String pattern) {
            return "(with " + SEnumOperations.getEnumMemberName(myParameterObject) + ")";
          }

          @Override
          public void execute(@NotNull String pattern) {
            SPropertyOperations.set(_context.getNode(), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c446791464290f7L, 0x3be316509dccb82L, "sourcesKind"), "" + (myParameterObject));
            SelectionUtil.selectLabelCellAnSetCaret(_context.getEditorContext(), _context.getNode(), SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL + "|" + SelectionManager.FIRST_CELL, -1);
          }


        }
      }
    }
  }
}
