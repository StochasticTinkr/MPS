package jetbrains.mps.build.mps.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseAdditionalStructureProperties;
import jetbrains.mps.smodel.runtime.AdditionalConceptProperties;
import jetbrains.mps.smodel.runtime.ConceptPropsBuilder;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;

public class AdditionalStructurePropertiesImpl extends BaseAdditionalStructureProperties {
  private final AdditionalConceptProperties props_BuildLayout_ToBinaryCopyProcessor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMPSPlugin = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsAspect = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_FolderWithSources = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_ModuleJarContent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_ModuleJars = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_ModuleSources = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_ModuleXml = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_ModuleXml_CustomJarLocation = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_Plugin = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMpsLayout_PluginDescriptor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_AbstractModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Branding = new ConceptPropsBuilder().deprecated(MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e44L, "major"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e45L, "minor"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x3acf8ab06f017071L, "bugfixNr"), MetaAdapterFactory.getProperty(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, 0x308857b584c74e46L, "eap")).create();
  private final AdditionalConceptProperties props_BuildMps_BrandingCompany = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_BrandingHelp = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_BrandingKeymap = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_BrandingStats = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_BrandingUpdateSite = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_DevKit = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_DevKitExport = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_DevKitExportLanguage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_DevKitExportSolution = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_DevKitRef = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ExtractedModuleDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Generator = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_GeneratorOptions = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Group = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPlugin = new ConceptPropsBuilder().icon("plugin.png", AdditionalStructurePropertiesImpl.class).create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginContent = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginGroup = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginGroupCustomModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_IdeaPluginVendor = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Language = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Module = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependency = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyExtendLanguage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyJar = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyOnDevKit = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyOnJavaModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyOnModule = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleDependencyUseLanguage = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleJarRuntime = new ConceptPropsBuilder().deprecated().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleJavaSource = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleModelRoot = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleRuntime = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleSolutionRuntime = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleSource = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_ModuleTestSource = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_BuildMps_Solution = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GeneratorInternal_BuildMps_Module = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GeneratorInternal_BuildSourcePath = new ConceptPropsBuilder().create();
  private final AdditionalConceptProperties props_GeneratorInternal_String = new ConceptPropsBuilder().create();

  @Override
  @Nullable
  public AdditionalConceptProperties getDescriptor(SAbstractConcept c) {
    {
      SAbstractConcept cncpt = c;
      Integer preIndex = indices_4qogsf_a0dc.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return props_BuildLayout_ToBinaryCopyProcessor;
          }
          break;
        case 1:
          if (true) {
            return props_BuildMPSPlugin;
          }
          break;
        case 2:
          if (true) {
            return props_BuildMpsAspect;
          }
          break;
        case 3:
          if (true) {
            return props_BuildMpsLayout_FolderWithSources;
          }
          break;
        case 4:
          if (true) {
            return props_BuildMpsLayout_ModuleJarContent;
          }
          break;
        case 5:
          if (true) {
            return props_BuildMpsLayout_ModuleJars;
          }
          break;
        case 6:
          if (true) {
            return props_BuildMpsLayout_ModuleSources;
          }
          break;
        case 7:
          if (true) {
            return props_BuildMpsLayout_ModuleXml;
          }
          break;
        case 8:
          if (true) {
            return props_BuildMpsLayout_ModuleXml_CustomJarLocation;
          }
          break;
        case 9:
          if (true) {
            return props_BuildMpsLayout_Plugin;
          }
          break;
        case 10:
          if (true) {
            return props_BuildMpsLayout_PluginDescriptor;
          }
          break;
        case 11:
          if (true) {
            return props_BuildMps_AbstractModule;
          }
          break;
        case 12:
          if (true) {
            return props_BuildMps_Branding;
          }
          break;
        case 13:
          if (true) {
            return props_BuildMps_BrandingCompany;
          }
          break;
        case 14:
          if (true) {
            return props_BuildMps_BrandingHelp;
          }
          break;
        case 15:
          if (true) {
            return props_BuildMps_BrandingKeymap;
          }
          break;
        case 16:
          if (true) {
            return props_BuildMps_BrandingStats;
          }
          break;
        case 17:
          if (true) {
            return props_BuildMps_BrandingUpdateSite;
          }
          break;
        case 18:
          if (true) {
            return props_BuildMps_DevKit;
          }
          break;
        case 19:
          if (true) {
            return props_BuildMps_DevKitExport;
          }
          break;
        case 20:
          if (true) {
            return props_BuildMps_DevKitExportLanguage;
          }
          break;
        case 21:
          if (true) {
            return props_BuildMps_DevKitExportSolution;
          }
          break;
        case 22:
          if (true) {
            return props_BuildMps_DevKitRef;
          }
          break;
        case 23:
          if (true) {
            return props_BuildMps_ExtractedModuleDependency;
          }
          break;
        case 24:
          if (true) {
            return props_BuildMps_Generator;
          }
          break;
        case 25:
          if (true) {
            return props_BuildMps_GeneratorOptions;
          }
          break;
        case 26:
          if (true) {
            return props_BuildMps_Group;
          }
          break;
        case 27:
          if (true) {
            return props_BuildMps_IdeaPlugin;
          }
          break;
        case 28:
          if (true) {
            return props_BuildMps_IdeaPluginContent;
          }
          break;
        case 29:
          if (true) {
            return props_BuildMps_IdeaPluginDependency;
          }
          break;
        case 30:
          if (true) {
            return props_BuildMps_IdeaPluginGroup;
          }
          break;
        case 31:
          if (true) {
            return props_BuildMps_IdeaPluginGroupCustomModule;
          }
          break;
        case 32:
          if (true) {
            return props_BuildMps_IdeaPluginModule;
          }
          break;
        case 33:
          if (true) {
            return props_BuildMps_IdeaPluginVendor;
          }
          break;
        case 34:
          if (true) {
            return props_BuildMps_Language;
          }
          break;
        case 35:
          if (true) {
            return props_BuildMps_Module;
          }
          break;
        case 36:
          if (true) {
            return props_BuildMps_ModuleDependency;
          }
          break;
        case 37:
          if (true) {
            return props_BuildMps_ModuleDependencyExtendLanguage;
          }
          break;
        case 38:
          if (true) {
            return props_BuildMps_ModuleDependencyJar;
          }
          break;
        case 39:
          if (true) {
            return props_BuildMps_ModuleDependencyOnDevKit;
          }
          break;
        case 40:
          if (true) {
            return props_BuildMps_ModuleDependencyOnJavaModule;
          }
          break;
        case 41:
          if (true) {
            return props_BuildMps_ModuleDependencyOnModule;
          }
          break;
        case 42:
          if (true) {
            return props_BuildMps_ModuleDependencyUseLanguage;
          }
          break;
        case 43:
          if (true) {
            return props_BuildMps_ModuleJarRuntime;
          }
          break;
        case 44:
          if (true) {
            return props_BuildMps_ModuleJavaSource;
          }
          break;
        case 45:
          if (true) {
            return props_BuildMps_ModuleModelRoot;
          }
          break;
        case 46:
          if (true) {
            return props_BuildMps_ModuleRuntime;
          }
          break;
        case 47:
          if (true) {
            return props_BuildMps_ModuleSolutionRuntime;
          }
          break;
        case 48:
          if (true) {
            return props_BuildMps_ModuleSource;
          }
          break;
        case 49:
          if (true) {
            return props_BuildMps_ModuleTestSource;
          }
          break;
        case 50:
          if (true) {
            return props_BuildMps_Solution;
          }
          break;
        case 51:
          if (true) {
            return props_GeneratorInternal_BuildMps_Module;
          }
          break;
        case 52:
          if (true) {
            return props_GeneratorInternal_BuildSourcePath;
          }
          break;
        case 53:
          if (true) {
            return props_GeneratorInternal_String;
          }
          break;
        default:
      }
    }
    throw new IllegalStateException();
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_4qogsf_a0dc = buildConceptIndices(MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x127671bd5d8bb460L, "BuildLayout_ToBinaryCopyProcessor"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xc0bde9fc71699d9L, "BuildMPSPlugin"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5a408fb8c80220a9L, "BuildMpsAspect"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x1d38569c566c8c91L, "BuildMpsLayout_FolderWithSources"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2e490987db3dd252L, "BuildMpsLayout_ModuleJarContent"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x11918e0f209b83e7L, "BuildMpsLayout_ModuleJars"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x177c2feaf3463710L, "BuildMpsLayout_ModuleSources"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6a3e160a3efe6274L, "BuildMpsLayout_ModuleXml"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3c765492deb1a384L, "BuildMpsLayout_ModuleXml_CustomJarLocation"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb6eL, "BuildMpsLayout_Plugin"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4dee437cL, "BuildMpsLayout_PluginDescriptor"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d333ebL, "BuildMps_AbstractModule"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083b778dL, "BuildMps_Branding"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xad72aee24ac03d8L, "BuildMps_BrandingCompany"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083d2d08L, "BuildMps_BrandingHelp"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x51cd30ffb57f91cfL, "BuildMps_BrandingKeymap"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xad72aee24a9d06fL, "BuildMps_BrandingStats"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6b9a2011083d2d07L, "BuildMps_BrandingUpdateSite"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2060eL, "BuildMps_DevKit"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d23143L, "BuildMps_DevKitExport"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d29d6aL, "BuildMps_DevKitExportLanguage"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d29d7aL, "BuildMps_DevKitExportSolution"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d2313aL, "BuildMps_DevKitRef"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x64bd442e1cf7aaeeL, "BuildMps_ExtractedModuleDependency"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4c6db07d2e56a8b4L, "BuildMps_Generator"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3ba296405b6f3b1bL, "BuildMps_GeneratorOptions"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, "BuildMps_Group"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bb74L, "BuildMps_IdeaPlugin"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bbebL, "BuildMps_IdeaPluginContent"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bbd3L, "BuildMps_IdeaPluginDependency"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, "BuildMps_IdeaPluginGroup"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x37fdb3de482e2b27L, "BuildMps_IdeaPluginGroupCustomModule"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4de9bbdcL, "BuildMps_IdeaPluginModule"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x6cb3984bfe5b72d3L, "BuildMps_IdeaPluginVendor"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c446791464290f8L, "BuildMps_Language"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x48e82d508331930cL, "BuildMps_Module"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x48e82d5083341cb7L, "BuildMps_ModuleDependency"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3b60c4a45c19032eL, "BuildMps_ModuleDependencyExtendLanguage"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3b60c4a45c197e19L, "BuildMps_ModuleDependencyJar"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x4780308f5d5bc49L, "BuildMps_ModuleDependencyOnDevKit"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c4467914643e8fbL, "BuildMps_ModuleDependencyOnJavaModule"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x48e82d508334b11aL, "BuildMps_ModuleDependencyOnModule"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c4467914643d2d2L, "BuildMps_ModuleDependencyUseLanguage"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3b60c4a45c192890L, "BuildMps_ModuleJarRuntime"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x48e82d508334bdeaL, "BuildMps_ModuleJavaSource"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x3b60c4a45c195c50L, "BuildMps_ModuleModelRoot"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c446791464389f7L, "BuildMps_ModuleRuntime"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c4467914644b6e3L, "BuildMps_ModuleSolutionRuntime"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x48e82d5083341d2fL, "BuildMps_ModuleSource"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x21286cd3b0f27758L, "BuildMps_ModuleTestSource"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x2c446791464290f7L, "BuildMps_Solution"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x44e5dd192e7771cfL, "GeneratorInternal_BuildMps_Module"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x44e5dd192e77725eL, "GeneratorInternal_BuildSourcePath"), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0xd94b027412f0824L, "GeneratorInternal_String"));
}
