package jetbrains.mps.build.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.InlineCellProvider;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.OldNewCompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class GeneratorInternal_BuildSource_JavaJar_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_g0zw24_a(editorContext, node);
  }
  private EditorCell createCollection_g0zw24_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_g0zw24_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_g0zw24_a0(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_g0zw24_b0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_g0zw24_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "java jar");
    editorCell.setCellId("Constant_g0zw24_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefCell_g0zw24_b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("targetJar");
    provider.setNoTargetText("<no targetJar>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new GeneratorInternal_BuildSource_JavaJar_Editor._Inline_g0zw24_a1a());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("targetJar");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  public static class _Inline_g0zw24_a1a extends InlineCellProvider {
    public _Inline_g0zw24_a1a() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createCollection_g0zw24_a0b0(editorContext, node);
    }
    private EditorCell createCollection_g0zw24_a0b0(EditorContext editorContext, SNode node) {
      EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
      editorCell.setCellId("Collection_g0zw24_a0b0");
      editorCell.addEditorCell(this.createRefNode_g0zw24_a0a1a(editorContext, node));
      return editorCell;
    }
    private EditorCell createRefNode_g0zw24_a0a1a(EditorContext editorContext, SNode node) {
      SingleRoleCellProvider provider = new GeneratorInternal_BuildSource_JavaJar_Editor._Inline_g0zw24_a1a.pathSingleRoleHandler_g0zw24_a0a1a(node, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x11779a1dbcff551aL, 0x3395e884b61c23e2L, "path"), editorContext);
      return provider.createCell();
    }
    private class pathSingleRoleHandler_g0zw24_a0a1a extends SingleRoleCellProvider {
      public pathSingleRoleHandler_g0zw24_a0a1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
        super(ownerNode, containmentLink, context);
      }
      protected EditorCell createChildCell(SNode child) {
        EditorCell editorCell = super.createChildCell(child);
        installCellInfo(child, editorCell);
        return editorCell;
      }
      private void installCellInfo(SNode child, EditorCell editorCell) {
        editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x11779a1dbcff551aL, 0x3395e884b61c23e2L, "path"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
        if (editorCell.getRole() == null) {
          editorCell.setRole("path");
        }
      }
      @Override
      protected EditorCell createEmptyCell() {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_path");
        installCellInfo(null, editorCell);

        return editorCell;
      }
      protected String getNoTargetText() {
        return "<no path>";
      }
    }
  }
}
