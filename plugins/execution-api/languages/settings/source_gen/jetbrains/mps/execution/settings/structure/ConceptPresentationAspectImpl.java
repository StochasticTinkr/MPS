package jetbrains.mps.execution.settings.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ApplyTo_Function = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CheckProperitesOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CheckProperties_Function = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Configuration_Parameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CreateEditor_Function = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DeprecatedAnnotation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Dispose_Function = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EditorExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EditorOperationCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EditorOperationDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EditorPropertyDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EditorPropertyReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GetEditorOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GridBagConstraints = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IPersistentPropertyHolder = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfiguration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfigurationAssistent = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfigurationMethod = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfigurationTemplate = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfigurationTemplateInitializer = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentConfigurationType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentPropertyDeclaration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PersistentPropertyReferenceOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ProjectAccessExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ReportConfigurationErrorStatement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ResetFrom_Function = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_SettingsEditor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_SettingsEditorType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TemplateParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TemplateParameterReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TemplatePersistentConfigurationType = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ApplyTo_Function:
        return props_ApplyTo_Function;
      case LanguageConceptSwitch.CheckProperitesOperation:
        return props_CheckProperitesOperation;
      case LanguageConceptSwitch.CheckProperties_Function:
        return props_CheckProperties_Function;
      case LanguageConceptSwitch.Configuration_Parameter:
        return props_Configuration_Parameter;
      case LanguageConceptSwitch.CreateEditor_Function:
        return props_CreateEditor_Function;
      case LanguageConceptSwitch.DeprecatedAnnotation:
        return props_DeprecatedAnnotation;
      case LanguageConceptSwitch.Dispose_Function:
        return props_Dispose_Function;
      case LanguageConceptSwitch.EditorExpression:
        return props_EditorExpression;
      case LanguageConceptSwitch.EditorOperationCall:
        return props_EditorOperationCall;
      case LanguageConceptSwitch.EditorOperationDeclaration:
        return props_EditorOperationDeclaration;
      case LanguageConceptSwitch.EditorPropertyDeclaration:
        return props_EditorPropertyDeclaration;
      case LanguageConceptSwitch.EditorPropertyReference:
        return props_EditorPropertyReference;
      case LanguageConceptSwitch.GetEditorOperation:
        return props_GetEditorOperation;
      case LanguageConceptSwitch.GridBagConstraints:
        return props_GridBagConstraints;
      case LanguageConceptSwitch.IPersistentPropertyHolder:
        return props_IPersistentPropertyHolder;
      case LanguageConceptSwitch.PersistentConfiguration:
        return props_PersistentConfiguration;
      case LanguageConceptSwitch.PersistentConfigurationAssistent:
        return props_PersistentConfigurationAssistent;
      case LanguageConceptSwitch.PersistentConfigurationMethod:
        return props_PersistentConfigurationMethod;
      case LanguageConceptSwitch.PersistentConfigurationTemplate:
        return props_PersistentConfigurationTemplate;
      case LanguageConceptSwitch.PersistentConfigurationTemplateInitializer:
        return props_PersistentConfigurationTemplateInitializer;
      case LanguageConceptSwitch.PersistentConfigurationType:
        return props_PersistentConfigurationType;
      case LanguageConceptSwitch.PersistentPropertyDeclaration:
        return props_PersistentPropertyDeclaration;
      case LanguageConceptSwitch.PersistentPropertyReferenceOperation:
        return props_PersistentPropertyReferenceOperation;
      case LanguageConceptSwitch.ProjectAccessExpression:
        return props_ProjectAccessExpression;
      case LanguageConceptSwitch.ReportConfigurationErrorStatement:
        return props_ReportConfigurationErrorStatement;
      case LanguageConceptSwitch.ResetFrom_Function:
        return props_ResetFrom_Function;
      case LanguageConceptSwitch.SettingsEditor:
        return props_SettingsEditor;
      case LanguageConceptSwitch.SettingsEditorType:
        return props_SettingsEditorType;
      case LanguageConceptSwitch.TemplateParameter:
        return props_TemplateParameter;
      case LanguageConceptSwitch.TemplateParameterReference:
        return props_TemplateParameterReference;
      case LanguageConceptSwitch.TemplatePersistentConfigurationType:
        return props_TemplatePersistentConfigurationType;
    }
    return null;
  }
}
