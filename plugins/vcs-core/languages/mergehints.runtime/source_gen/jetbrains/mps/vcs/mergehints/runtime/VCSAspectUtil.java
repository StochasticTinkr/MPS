package jetbrains.mps.vcs.mergehints.runtime;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SConceptFeature;
import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.language.LanguageRegistry;

public abstract class VCSAspectUtil {
  private VCSAspectUtil() {
  }

  public static MergeStrategy getDefaultMergeStrategy(SAbstractConcept c) {
    return check_1naywg_a0a2(getVCSAspect(c));
  }

  public static MergeStrategy getDefaultMergeStrategy(SConceptFeature f) {
    return check_1naywg_a0a4(getVCSAspect(f.getOwner()), f);
  }

  public static VCSConceptAspect getVCSAspect(SAbstractConcept c) {
    LanguageRuntime runtime = LanguageRegistry.getInstance().getLanguage(c.getLanguage());
    return check_1naywg_a1a6(check_1naywg_a0b0g(runtime), c);
  }
  private static MergeStrategy check_1naywg_a0a2(VCSConceptAspect checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getDefaultStrategy();
    }
    return null;
  }
  private static MergeStrategy check_1naywg_a0a4(VCSConceptAspect checkedDotOperand, SConceptFeature f) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getDefaultStrategy(f);
    }
    return null;
  }
  private static VCSConceptAspect check_1naywg_a1a6(VCSAspectDescriptor checkedDotOperand, SAbstractConcept c) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getVCSDescriptor(c);
    }
    return null;
  }
  private static VCSAspectDescriptor check_1naywg_a0b0g(LanguageRuntime checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getAspect(VCSAspectDescriptor.class);
    }
    return null;
  }
}
