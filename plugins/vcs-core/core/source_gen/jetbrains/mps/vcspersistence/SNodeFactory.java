package jetbrains.mps.vcspersistence;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.LazySNode;
import jetbrains.mps.smodel.InterfaceSNode;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactoryByName;
import jetbrains.mps.util.InternUtil;

public class SNodeFactory {
  public static SNode newLazy(String conceptQualifiedName) {
    return new LazySNode(toConcept(conceptQualifiedName));
  }
  public static SNode newInterface(String conceptQualifiedName) {
    return new InterfaceSNode(toConcept(conceptQualifiedName));
  }
  public static SNode newRegular(String conceptQualifiedName) {
    return new SNode(toConcept(conceptQualifiedName));
  }
  private static SConcept toConcept(String conceptQualifiedName) {
    // this usage of by-name is reviewed 
    return MetaAdapterFactoryByName.getConcept(InternUtil.intern(conceptQualifiedName));
  }
}
