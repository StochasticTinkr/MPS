package jetbrains.mps.ide.make.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import jetbrains.mps.generator.GenerationSettingsProvider;
import com.intellij.icons.AllIcons;
import com.intellij.util.ui.EmptyIcon;
import jetbrains.mps.generator.IModifiableGenerationSettings;

public class CheckModelsBeforeGeneration_Action extends BaseAction {
  private static final Icon ICON = null;

  public CheckModelsBeforeGeneration_Action() {
    super("Check Models Before Generation", "Check models for errors before generation", ICON);
    this.setIsAlwaysVisible(true);
    this.setExecuteOutsideCommand(false);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  public void doUpdate(@NotNull AnActionEvent event, final Map<String, Object> _params) {
    boolean optionEnabled = GenerationSettingsProvider.getInstance().getGenerationSettings().isCheckModelsBeforeGeneration();
    if (optionEnabled) {
      event.getPresentation().setIcon(AllIcons.Actions.Checked_small);
    } else {
      event.getPresentation().setIcon(new EmptyIcon(18, 18));
    }
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    IModifiableGenerationSettings settings = GenerationSettingsProvider.getInstance().getGenerationSettings();
    settings.setCheckModelsBeforeGeneration(!(settings.isCheckModelsBeforeGeneration()));
  }
}
