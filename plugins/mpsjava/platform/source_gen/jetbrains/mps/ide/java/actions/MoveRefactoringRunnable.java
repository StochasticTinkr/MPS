package jetbrains.mps.ide.java.actions;

/*Generated by MPS */

import jetbrains.mps.ide.platform.refactoring.RefactoringAccessEx;
import jetbrains.mps.refactoring.framework.IRefactoring;
import jetbrains.mps.refactoring.framework.RefactoringContext;
import org.jetbrains.mps.openapi.model.SNode;

import java.util.Arrays;

public interface MoveRefactoringRunnable {
  void run(SNode whereToMove);

  class MyMoveRefactoringRunnable implements MoveRefactoringRunnable {
    private final IRefactoring myRefactoring;
    private final SNode myTarget;
    private final jetbrains.mps.project.Project myMpsProject;

    public MyMoveRefactoringRunnable(IRefactoring refactoring, SNode target, jetbrains.mps.project.Project project) {
      myRefactoring = refactoring;
      myTarget = target;
      myMpsProject = project;
    }

    @Override
    public void run(SNode whereToMove) {
      RefactoringAccessEx.getInstance().getRefactoringFacade().execute(
        RefactoringContext.createRefactoringContext(myRefactoring,
          Arrays.asList("destination"),
          Arrays.asList(whereToMove),
          myTarget,
          myMpsProject));
    }
  }
}
