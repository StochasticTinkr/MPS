package jetbrains.mps.ide.mpsmigration.v34;

/*Generated by MPS */

import jetbrains.mps.migration.global.BaseProjectMigration;
import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.model.EditableSModel;
import jetbrains.mps.smodel.SModelInternal;

/**
 * With engaged languages exposed as SLanguage rather than SModuleReference, the way we persist these imports
 * in model files has changed. This migration marks models with engaged languages as changed and re-saves them.
 */
public class EngagedLanguagesImports extends BaseProjectMigration {

  public EngagedLanguagesImports() {
    super(EngagedLanguagesImports.class.getName());
  }

  public String getDescription() {
    return "Update model with languages engaged on generation to use SLanguage";
  }

  @Override
  public boolean isRerunnable() {
    return true;
  }

  public boolean doExecute(Project project) {
    for (SModule module : ListSequence.fromList(project.getProjectModulesWithGenerators())) {
      for (SModel m : Sequence.fromIterable(module.getModels())) {
        if (!(m.isReadOnly()) && m instanceof EditableSModel && m instanceof SModelInternal) {
          if (((SModelInternal) m).getLanguagesEngagedOnGeneration().isEmpty()) {
            continue;
          }
          ((EditableSModel) m).setChanged(true);
          ((EditableSModel) m).save();
        }
      }
    }
    return true;
  }
}
