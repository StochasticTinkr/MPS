package jetbrains.mps.ide.vcs.modelmetadata.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(4);
  /*package*/ final ConceptDescriptor myConceptLanguageDependency = new ConceptDescriptorBuilder("jetbrains.mps.ide.vcs.modelmetadata.structure.LanguageDependency", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x660570953ee5d6b9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x660570953ee5dadfL, "value")).properties("value").create();
  /*package*/ final ConceptDescriptor myConceptModel = new ConceptDescriptorBuilder("jetbrains.mps.ide.vcs.modelmetadata.structure.Model", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x7439be589a4e116dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7439be589a4e11e6L, "longname"), new ConceptDescriptorBuilder.Prop(0x7439be589a4e11e8L, "uuid"), new ConceptDescriptorBuilder.Prop(0x7439be589a4e11f4L, "donotgenerate")).properties("longname", "uuid", "donotgenerate").childDescriptors(new ConceptDescriptorBuilder.Link(0x4104ff8d80188636L, "language", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x660570953ee5d6b9L), true, true, false), new ConceptDescriptorBuilder.Link(0x4104ff8d80188638L, "languageEngagedOnGeneration", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x660570953ee5d6b9L), true, true, false), new ConceptDescriptorBuilder.Link(0x4104ff8d8018863bL, "devkit", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x39c8ca3b79aaafe1L), true, true, false), new ConceptDescriptorBuilder.Link(0x4104ff8d8018863fL, "import", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x39c8ca3b79aaafdeL), true, true, false)).children(new String[]{"language", "languageEngagedOnGeneration", "devkit", "import"}, new boolean[]{true, true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptModelReference = new ConceptDescriptorBuilder("jetbrains.mps.ide.vcs.modelmetadata.structure.ModelReference", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x39c8ca3b79aaafdeL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x39c8ca3b79aaafdfL, "stringValue")).properties("stringValue").create();
  /*package*/ final ConceptDescriptor myConceptModuleReference = new ConceptDescriptorBuilder("jetbrains.mps.ide.vcs.modelmetadata.structure.ModuleReference", MetaIdFactory.conceptId(0x6df0089f32884998L, 0x9d57e698e7c8e145L, 0x39c8ca3b79aaafe1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x39c8ca3b79aaafe2L, "stringValue")).properties("stringValue").create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptLanguageDependency.getId(), 0);
    myIndexMap.put(myConceptModel.getId(), 1);
    myIndexMap.put(myConceptModelReference.getId(), 2);
    myIndexMap.put(myConceptModuleReference.getId(), 3);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptLanguageDependency, myConceptModel, myConceptModelReference, myConceptModuleReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptLanguageDependency;
      case 1:
        return myConceptModel;
      case 2:
        return myConceptModelReference;
      case 3:
        return myConceptModuleReference;
      default:
        throw new IllegalStateException();
    }
  }
}
