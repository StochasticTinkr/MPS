package testPrimitiveType.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_Generic_Item;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TypeWithProperties_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_8yz4v0_a(editorContext, node);
  }
  private EditorCell createCollection_8yz4v0_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_8yz4v0_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createComponent_8yz4v0_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_c0(editorContext, node));
    editorCell.addEditorCell(this.createAlternation_8yz4v0_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_e0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_f0(editorContext, node));
    editorCell.addEditorCell(this.createAlternation_8yz4v0_g0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_h0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_i0(editorContext, node));
    editorCell.addEditorCell(this.createAlternation_8yz4v0_j0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_8yz4v0_k0(editorContext, node));
    return editorCell;
  }
  private EditorCell createComponent_8yz4v0_a0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "[");
    editorCell.setCellId("Constant_8yz4v0_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "str=");
    editorCell.setCellId("Constant_8yz4v0_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createAlternation_8yz4v0_d0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = TypeWithProperties_Editor.renderingCondition_8yz4v0_a3a(node, editorContext);
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createProperty_8yz4v0_a3a(editorContext, node);
    } else {
      editorCell = this.createConstant_8yz4v0_a3a(editorContext, node);
    }
    return editorCell;
  }
  private static boolean renderingCondition_8yz4v0_a3a(SNode node, EditorContext editorContext) {
    return node.getProperty(MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556a2L, "str")) != null;
  }
  private EditorCell createProperty_8yz4v0_a3a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("str");
    provider.setNoTargetText("<no str>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_str");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_a3a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "null");
    editorCell.setCellId("Constant_8yz4v0_a3a");
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPartExt[]{new TypeWithProperties_Editor.TypeWithProperties_generic_cellMenu_8yz4v0_a0a3a()}));
    return editorCell;
  }
  public static class TypeWithProperties_generic_cellMenu_8yz4v0_a0a3a extends AbstractCellMenuPart_Generic_Item {
    public TypeWithProperties_generic_cellMenu_8yz4v0_a0a3a() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556a2L, "str"), "");
    }
    public String getMatchingText() {
      return "default";
    }
  }
  private EditorCell createConstant_8yz4v0_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ",");
    editorCell.setCellId("Constant_8yz4v0_e0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "num=");
    editorCell.setCellId("Constant_8yz4v0_f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createAlternation_8yz4v0_g0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = TypeWithProperties_Editor.renderingCondition_8yz4v0_a6a(node, editorContext);
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createProperty_8yz4v0_a6a(editorContext, node);
    } else {
      editorCell = this.createConstant_8yz4v0_a6a(editorContext, node);
    }
    return editorCell;
  }
  private static boolean renderingCondition_8yz4v0_a6a(SNode node, EditorContext editorContext) {
    return node.getProperty(MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556a8L, "num")) != null;
  }
  private EditorCell createProperty_8yz4v0_a6a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("num");
    provider.setNoTargetText("<no num>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_num");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_a6a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "null");
    editorCell.setCellId("Constant_8yz4v0_a6a");
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPartExt[]{new TypeWithProperties_Editor.TypeWithProperties_generic_cellMenu_8yz4v0_a0a6a()}));
    return editorCell;
  }
  public static class TypeWithProperties_generic_cellMenu_8yz4v0_a0a6a extends AbstractCellMenuPart_Generic_Item {
    public TypeWithProperties_generic_cellMenu_8yz4v0_a0a6a() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556a8L, "num"), "" + (0));
    }
    public String getMatchingText() {
      return "default";
    }
  }
  private EditorCell createConstant_8yz4v0_h0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ",");
    editorCell.setCellId("Constant_8yz4v0_h0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_i0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "bool=");
    editorCell.setCellId("Constant_8yz4v0_i0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createAlternation_8yz4v0_j0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = TypeWithProperties_Editor.renderingCondition_8yz4v0_a9a(node, editorContext);
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createProperty_8yz4v0_a9a(editorContext, node);
    } else {
      editorCell = this.createConstant_8yz4v0_a9a(editorContext, node);
    }
    return editorCell;
  }
  private static boolean renderingCondition_8yz4v0_a9a(SNode node, EditorContext editorContext) {
    return node.getProperty(MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556abL, "bool")) != null;
  }
  private EditorCell createProperty_8yz4v0_a9a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("bool");
    provider.setNoTargetText("<no bool>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_bool");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_8yz4v0_a9a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "null");
    editorCell.setCellId("Constant_8yz4v0_a9a");
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPartExt[]{new TypeWithProperties_Editor.TypeWithProperties_generic_cellMenu_8yz4v0_a0a9a()}));
    return editorCell;
  }
  public static class TypeWithProperties_generic_cellMenu_8yz4v0_a0a9a extends AbstractCellMenuPart_Generic_Item {
    public TypeWithProperties_generic_cellMenu_8yz4v0_a0a9a() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0x8a53c70515e44f87L, 0x8796457845605512L, 0x9cc88b154a54d6cL, 0x9cc88b154a556abL, "bool"), "" + (false));
    }
    public String getMatchingText() {
      return "default";
    }
  }
  private EditorCell createConstant_8yz4v0_k0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "]");
    editorCell.setCellId("Constant_8yz4v0_k0");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
