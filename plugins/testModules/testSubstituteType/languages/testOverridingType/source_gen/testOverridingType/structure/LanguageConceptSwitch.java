package testOverridingType.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ErrorType = 0;
  public static final int OverrideAnnotation = 1;
  public static final int OverridingPrimFloatType = 2;
  public static final int OverridingPrimIntType = 3;
  public static final int OverridingPrimNumConstant = 4;
  public static final int UnconditionalOverrideAnnotation = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x394e385732564e8bL, 0x96015abe7ad354d9L);
    builder.put(0x19f3ac4f6f2a7f40L, ErrorType);
    builder.put(0x391548fac32006d4L, OverrideAnnotation);
    builder.put(0x5b362c13a4993604L, OverridingPrimFloatType);
    builder.put(0x5b362c13a49935f1L, OverridingPrimIntType);
    builder.put(0x5b362c13a4988795L, OverridingPrimNumConstant);
    builder.put(0x19f3ac4f6f2a050aL, UnconditionalOverrideAnnotation);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
