package testAnnotatedType.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int PresenceCondition = 0;
  public static final int PrimDoubleType = 1;
  public static final int PrimFloatType = 2;
  public static final int PrimIntType = 3;
  public static final int PrimLongType = 4;
  public static final int PrimNumConstant = 5;
  public static final int PrimType = 6;
  public static final int SubstituteAnnotation = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L);
    builder.put(0x58e32a0782beb1c7L, PresenceCondition);
    builder.put(0x1469c391a09c62e6L, PrimDoubleType);
    builder.put(0x58e32a0782beb1bdL, PrimFloatType);
    builder.put(0x58e32a0782be609eL, PrimIntType);
    builder.put(0x786549534310b4f5L, PrimLongType);
    builder.put(0x1469c391a09a5eefL, PrimNumConstant);
    builder.put(0x58e32a0782beb1bcL, PrimType);
    builder.put(0x58e32a0782be61ecL, SubstituteAnnotation);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
