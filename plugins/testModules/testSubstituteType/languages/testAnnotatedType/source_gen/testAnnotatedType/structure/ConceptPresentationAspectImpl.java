package testAnnotatedType.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_PresenceCondition = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimDoubleType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimFloatType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimIntType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimLongType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimNumConstant = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PrimType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_SubstituteAnnotation = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.PresenceCondition:
        return props_PresenceCondition;
      case LanguageConceptSwitch.PrimDoubleType:
        return props_PrimDoubleType;
      case LanguageConceptSwitch.PrimFloatType:
        return props_PrimFloatType;
      case LanguageConceptSwitch.PrimIntType:
        return props_PrimIntType;
      case LanguageConceptSwitch.PrimLongType:
        return props_PrimLongType;
      case LanguageConceptSwitch.PrimNumConstant:
        return props_PrimNumConstant;
      case LanguageConceptSwitch.PrimType:
        return props_PrimType;
      case LanguageConceptSwitch.SubstituteAnnotation:
        return props_SubstituteAnnotation;
    }
    return null;
  }
}
