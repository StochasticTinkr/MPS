package jetbrains.mps.lang.editor.editorTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(51);
  /*package*/ final ConceptDescriptor myConceptAttractsFocusBlock = createDescriptorForAttractsFocusBlock();
  /*package*/ final ConceptDescriptor myConceptAttributeChild = createDescriptorForAttributeChild();
  /*package*/ final ConceptDescriptor myConceptAttributeWithChildren = createDescriptorForAttributeWithChildren();
  /*package*/ final ConceptDescriptor myConceptAttributedConcept = createDescriptorForAttributedConcept();
  /*package*/ final ConceptDescriptor myConceptBinaryExpression = createDescriptorForBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptBracesBlock = createDescriptorForBracesBlock();
  /*package*/ final ConceptDescriptor myConceptBracesStubBlock = createDescriptorForBracesStubBlock();
  /*package*/ final ConceptDescriptor myConceptClassReference = createDescriptorForClassReference();
  /*package*/ final ConceptDescriptor myConceptCollapsedByDefault = createDescriptorForCollapsedByDefault();
  /*package*/ final ConceptDescriptor myConceptCollapsedConditionally = createDescriptorForCollapsedConditionally();
  /*package*/ final ConceptDescriptor myConceptCollapsibleConcept = createDescriptorForCollapsibleConcept();
  /*package*/ final ConceptDescriptor myConceptComposition = createDescriptorForComposition();
  /*package*/ final ConceptDescriptor myConceptDelTestAbstractChild = createDescriptorForDelTestAbstractChild();
  /*package*/ final ConceptDescriptor myConceptDelTestChild1 = createDescriptorForDelTestChild1();
  /*package*/ final ConceptDescriptor myConceptDelTestChildContainer = createDescriptorForDelTestChildContainer();
  /*package*/ final ConceptDescriptor myConceptDelTestRoot = createDescriptorForDelTestRoot();
  /*package*/ final ConceptDescriptor myConceptFoldingContainer = createDescriptorForFoldingContainer();
  /*package*/ final ConceptDescriptor myConceptIBaseTestBlock = createDescriptorForIBaseTestBlock();
  /*package*/ final ConceptDescriptor myConceptInitAbstractChild = createDescriptorForInitAbstractChild();
  /*package*/ final ConceptDescriptor myConceptInitChildWithDirectCycle_card1 = createDescriptorForInitChildWithDirectCycle_card1();
  /*package*/ final ConceptDescriptor myConceptInitChildWithDirectCycle_card1n = createDescriptorForInitChildWithDirectCycle_card1n();
  /*package*/ final ConceptDescriptor myConceptInitChildWithIndirectCycle_card1 = createDescriptorForInitChildWithIndirectCycle_card1();
  /*package*/ final ConceptDescriptor myConceptInitChildWithIndirectCycle_card1n = createDescriptorForInitChildWithIndirectCycle_card1n();
  /*package*/ final ConceptDescriptor myConceptInitChildWithTwoSameConceptChildren = createDescriptorForInitChildWithTwoSameConceptChildren();
  /*package*/ final ConceptDescriptor myConceptInitContainer = createDescriptorForInitContainer();
  /*package*/ final ConceptDescriptor myConceptInitGrandChild = createDescriptorForInitGrandChild();
  /*package*/ final ConceptDescriptor myConceptInitGrandChildWithIndirectCycle_card1 = createDescriptorForInitGrandChildWithIndirectCycle_card1();
  /*package*/ final ConceptDescriptor myConceptInitGrandChildWithIndirectCycle_card1n = createDescriptorForInitGrandChildWithIndirectCycle_card1n();
  /*package*/ final ConceptDescriptor myConceptInspectorBlock = createDescriptorForInspectorBlock();
  /*package*/ final ConceptDescriptor myConceptIntegerLiteral = createDescriptorForIntegerLiteral();
  /*package*/ final ConceptDescriptor myConceptNonEmptyProperty = createDescriptorForNonEmptyProperty();
  /*package*/ final ConceptDescriptor myConceptNotEditableVaraileReference = createDescriptorForNotEditableVaraileReference();
  /*package*/ final ConceptDescriptor myConceptPlusExpression = createDescriptorForPlusExpression();
  /*package*/ final ConceptDescriptor myConceptReferenceAnnotataion = createDescriptorForReferenceAnnotataion();
  /*package*/ final ConceptDescriptor myConceptSelectionChild = createDescriptorForSelectionChild();
  /*package*/ final ConceptDescriptor myConceptSelectionContainer = createDescriptorForSelectionContainer();
  /*package*/ final ConceptDescriptor myConceptSideTranformWrapper = createDescriptorForSideTranformWrapper();
  /*package*/ final ConceptDescriptor myConceptSimplePropertyAttribute = createDescriptorForSimplePropertyAttribute();
  /*package*/ final ConceptDescriptor myConceptSimplePropertyContainer = createDescriptorForSimplePropertyContainer();
  /*package*/ final ConceptDescriptor myConceptStubBlock = createDescriptorForStubBlock();
  /*package*/ final ConceptDescriptor myConceptStyleChild = createDescriptorForStyleChild();
  /*package*/ final ConceptDescriptor myConceptStyleParent = createDescriptorForStyleParent();
  /*package*/ final ConceptDescriptor myConceptSubstMiddlewareChild = createDescriptorForSubstMiddlewareChild();
  /*package*/ final ConceptDescriptor myConceptSubstTestAbstractChild = createDescriptorForSubstTestAbstractChild();
  /*package*/ final ConceptDescriptor myConceptSubstTestBooleanPropertyChild = createDescriptorForSubstTestBooleanPropertyChild();
  /*package*/ final ConceptDescriptor myConceptSubstTestEnumPropertyChild = createDescriptorForSubstTestEnumPropertyChild();
  /*package*/ final ConceptDescriptor myConceptSubstTestRoot = createDescriptorForSubstTestRoot();
  /*package*/ final ConceptDescriptor myConceptTestBlockList = createDescriptorForTestBlockList();
  /*package*/ final ConceptDescriptor myConceptVariableDeclarationBlock = createDescriptorForVariableDeclarationBlock();
  /*package*/ final ConceptDescriptor myConceptVariableDeclarationReference = createDescriptorForVariableDeclarationReference();
  /*package*/ final ConceptDescriptor myConceptVerticalLayoutBlockList = createDescriptorForVerticalLayoutBlockList();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAttractsFocusBlock.getId(), 0);
    myIndexMap.put(myConceptAttributeChild.getId(), 1);
    myIndexMap.put(myConceptAttributeWithChildren.getId(), 2);
    myIndexMap.put(myConceptAttributedConcept.getId(), 3);
    myIndexMap.put(myConceptBinaryExpression.getId(), 4);
    myIndexMap.put(myConceptBracesBlock.getId(), 5);
    myIndexMap.put(myConceptBracesStubBlock.getId(), 6);
    myIndexMap.put(myConceptClassReference.getId(), 7);
    myIndexMap.put(myConceptCollapsedByDefault.getId(), 8);
    myIndexMap.put(myConceptCollapsedConditionally.getId(), 9);
    myIndexMap.put(myConceptCollapsibleConcept.getId(), 10);
    myIndexMap.put(myConceptComposition.getId(), 11);
    myIndexMap.put(myConceptDelTestAbstractChild.getId(), 12);
    myIndexMap.put(myConceptDelTestChild1.getId(), 13);
    myIndexMap.put(myConceptDelTestChildContainer.getId(), 14);
    myIndexMap.put(myConceptDelTestRoot.getId(), 15);
    myIndexMap.put(myConceptFoldingContainer.getId(), 16);
    myIndexMap.put(myConceptIBaseTestBlock.getId(), 17);
    myIndexMap.put(myConceptInitAbstractChild.getId(), 18);
    myIndexMap.put(myConceptInitChildWithDirectCycle_card1.getId(), 19);
    myIndexMap.put(myConceptInitChildWithDirectCycle_card1n.getId(), 20);
    myIndexMap.put(myConceptInitChildWithIndirectCycle_card1.getId(), 21);
    myIndexMap.put(myConceptInitChildWithIndirectCycle_card1n.getId(), 22);
    myIndexMap.put(myConceptInitChildWithTwoSameConceptChildren.getId(), 23);
    myIndexMap.put(myConceptInitContainer.getId(), 24);
    myIndexMap.put(myConceptInitGrandChild.getId(), 25);
    myIndexMap.put(myConceptInitGrandChildWithIndirectCycle_card1.getId(), 26);
    myIndexMap.put(myConceptInitGrandChildWithIndirectCycle_card1n.getId(), 27);
    myIndexMap.put(myConceptInspectorBlock.getId(), 28);
    myIndexMap.put(myConceptIntegerLiteral.getId(), 29);
    myIndexMap.put(myConceptNonEmptyProperty.getId(), 30);
    myIndexMap.put(myConceptNotEditableVaraileReference.getId(), 31);
    myIndexMap.put(myConceptPlusExpression.getId(), 32);
    myIndexMap.put(myConceptReferenceAnnotataion.getId(), 33);
    myIndexMap.put(myConceptSelectionChild.getId(), 34);
    myIndexMap.put(myConceptSelectionContainer.getId(), 35);
    myIndexMap.put(myConceptSideTranformWrapper.getId(), 36);
    myIndexMap.put(myConceptSimplePropertyAttribute.getId(), 37);
    myIndexMap.put(myConceptSimplePropertyContainer.getId(), 38);
    myIndexMap.put(myConceptStubBlock.getId(), 39);
    myIndexMap.put(myConceptStyleChild.getId(), 40);
    myIndexMap.put(myConceptStyleParent.getId(), 41);
    myIndexMap.put(myConceptSubstMiddlewareChild.getId(), 42);
    myIndexMap.put(myConceptSubstTestAbstractChild.getId(), 43);
    myIndexMap.put(myConceptSubstTestBooleanPropertyChild.getId(), 44);
    myIndexMap.put(myConceptSubstTestEnumPropertyChild.getId(), 45);
    myIndexMap.put(myConceptSubstTestRoot.getId(), 46);
    myIndexMap.put(myConceptTestBlockList.getId(), 47);
    myIndexMap.put(myConceptVariableDeclarationBlock.getId(), 48);
    myIndexMap.put(myConceptVariableDeclarationReference.getId(), 49);
    myIndexMap.put(myConceptVerticalLayoutBlockList.getId(), 50);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttractsFocusBlock, myConceptAttributeChild, myConceptAttributeWithChildren, myConceptAttributedConcept, myConceptBinaryExpression, myConceptBracesBlock, myConceptBracesStubBlock, myConceptClassReference, myConceptCollapsedByDefault, myConceptCollapsedConditionally, myConceptCollapsibleConcept, myConceptComposition, myConceptDelTestAbstractChild, myConceptDelTestChild1, myConceptDelTestChildContainer, myConceptDelTestRoot, myConceptFoldingContainer, myConceptIBaseTestBlock, myConceptInitAbstractChild, myConceptInitChildWithDirectCycle_card1, myConceptInitChildWithDirectCycle_card1n, myConceptInitChildWithIndirectCycle_card1, myConceptInitChildWithIndirectCycle_card1n, myConceptInitChildWithTwoSameConceptChildren, myConceptInitContainer, myConceptInitGrandChild, myConceptInitGrandChildWithIndirectCycle_card1, myConceptInitGrandChildWithIndirectCycle_card1n, myConceptInspectorBlock, myConceptIntegerLiteral, myConceptNonEmptyProperty, myConceptNotEditableVaraileReference, myConceptPlusExpression, myConceptReferenceAnnotataion, myConceptSelectionChild, myConceptSelectionContainer, myConceptSideTranformWrapper, myConceptSimplePropertyAttribute, myConceptSimplePropertyContainer, myConceptStubBlock, myConceptStyleChild, myConceptStyleParent, myConceptSubstMiddlewareChild, myConceptSubstTestAbstractChild, myConceptSubstTestBooleanPropertyChild, myConceptSubstTestEnumPropertyChild, myConceptSubstTestRoot, myConceptTestBlockList, myConceptVariableDeclarationBlock, myConceptVariableDeclarationReference, myConceptVerticalLayoutBlockList);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAttractsFocusBlock;
      case 1:
        return myConceptAttributeChild;
      case 2:
        return myConceptAttributeWithChildren;
      case 3:
        return myConceptAttributedConcept;
      case 4:
        return myConceptBinaryExpression;
      case 5:
        return myConceptBracesBlock;
      case 6:
        return myConceptBracesStubBlock;
      case 7:
        return myConceptClassReference;
      case 8:
        return myConceptCollapsedByDefault;
      case 9:
        return myConceptCollapsedConditionally;
      case 10:
        return myConceptCollapsibleConcept;
      case 11:
        return myConceptComposition;
      case 12:
        return myConceptDelTestAbstractChild;
      case 13:
        return myConceptDelTestChild1;
      case 14:
        return myConceptDelTestChildContainer;
      case 15:
        return myConceptDelTestRoot;
      case 16:
        return myConceptFoldingContainer;
      case 17:
        return myConceptIBaseTestBlock;
      case 18:
        return myConceptInitAbstractChild;
      case 19:
        return myConceptInitChildWithDirectCycle_card1;
      case 20:
        return myConceptInitChildWithDirectCycle_card1n;
      case 21:
        return myConceptInitChildWithIndirectCycle_card1;
      case 22:
        return myConceptInitChildWithIndirectCycle_card1n;
      case 23:
        return myConceptInitChildWithTwoSameConceptChildren;
      case 24:
        return myConceptInitContainer;
      case 25:
        return myConceptInitGrandChild;
      case 26:
        return myConceptInitGrandChildWithIndirectCycle_card1;
      case 27:
        return myConceptInitGrandChildWithIndirectCycle_card1n;
      case 28:
        return myConceptInspectorBlock;
      case 29:
        return myConceptIntegerLiteral;
      case 30:
        return myConceptNonEmptyProperty;
      case 31:
        return myConceptNotEditableVaraileReference;
      case 32:
        return myConceptPlusExpression;
      case 33:
        return myConceptReferenceAnnotataion;
      case 34:
        return myConceptSelectionChild;
      case 35:
        return myConceptSelectionContainer;
      case 36:
        return myConceptSideTranformWrapper;
      case 37:
        return myConceptSimplePropertyAttribute;
      case 38:
        return myConceptSimplePropertyContainer;
      case 39:
        return myConceptStubBlock;
      case 40:
        return myConceptStyleChild;
      case 41:
        return myConceptStyleParent;
      case 42:
        return myConceptSubstMiddlewareChild;
      case 43:
        return myConceptSubstTestAbstractChild;
      case 44:
        return myConceptSubstTestBooleanPropertyChild;
      case 45:
        return myConceptSubstTestEnumPropertyChild;
      case 46:
        return myConceptSubstTestRoot;
      case 47:
        return myConceptTestBlockList;
      case 48:
        return myConceptVariableDeclarationBlock;
      case 49:
        return myConceptVariableDeclarationReference;
      case 50:
        return myConceptVerticalLayoutBlockList;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAttractsFocusBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "AttractsFocusBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137f8d778L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/2613454275903805304");
    b.aggregate("child", 0x2444dad137f8d779L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(false).ordered(true).multiple(false).origin("2613454275903805305").done();
    b.alias("attracts focus");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "AttributeChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x50d5d1397cfbad50L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5824791737913814352");
    b.alias("child");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeWithChildren() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "AttributeWithChildren", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5ed256cba0c5b00L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/427038688578132736");
    b.aggregate("children", 0x5ed256cba0c5bc5L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x50d5d1397cfbad50L).optional(true).ordered(true).multiple(true).origin("427038688578132933").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributedConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "AttributedConcept", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5ed256cba0c5c3eL);
    b.class_(false, false, true);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/427038688578133054");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "BinaryExpression", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x46eb259b12f761daL);
    b.class_(false, true, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5110219550150320602");
    b.aggregate("left", 0x46eb259b12f761dcL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(false).ordered(true).multiple(false).origin("5110219550150320604").done();
    b.aggregate("right", 0x46eb259b12f761ddL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(false).ordered(true).multiple(false).origin("5110219550150320605").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBracesBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "BracesBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa8L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.TestBlockList", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d62dbbL);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3702466984434723496");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBracesStubBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "BracesStubBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x75ed75ef06861df4L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8497577741385080308");
    b.alias("braces stub");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "ClassReference", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x214b16e1c73042cfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/2399036385470202575");
    b.associate("class", 0x214b16e1c73043aaL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L).optional(false).origin("2399036385470202794").done();
    b.alias("classref");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollapsedByDefault() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "CollapsedByDefault", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x569b712fbc626858L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/6240706158489921624");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollapsedConditionally() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "CollapsedConditionally", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xc06e5dab9716359L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/866632705892246361");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollapsibleConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "CollapsibleConcept", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x671b139f12ae357fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7429553584211899775");
    b.prop("collapsedByDefault", 0x671b139f12ae35f2L, "7429553584211899890");
    b.aggregate("children", 0x671b139f12ae3580L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x671b139f12ae357fL).optional(true).ordered(true).multiple(true).origin("7429553584211899776").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComposition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "Composition", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2fd7ff1ee43ef592L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3447504547918837138");
    b.aggregate("children", 0x2fd7ff1ee43ef69fL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2c59702023f8181eL).optional(true).ordered(true).multiple(true).origin("3447504547918837407").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDelTestAbstractChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "DelTestAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c447L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7803854675610223687");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDelTestChild1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "DelTestChild1", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c480L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.DelTestAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c447L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7803854675610223744");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDelTestChildContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "DelTestChildContainer", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c222L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7803854675610223138");
    b.aggregate("child", 0x6c4cdc7b1a84c4f3L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c447L).optional(false).ordered(true).multiple(false).origin("7803854675610223859").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDelTestRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "DelTestRoot", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a8839faL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7803854675610450426");
    b.aggregate("container", 0x6c4cdc7b1a883a36L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6c4cdc7b1a84c222L).optional(true).ordered(true).multiple(false).origin("7803854675610450486").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFoldingContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "FoldingContainer", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x569b712fbc6572f0L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/6240706158490120944");
    b.prop("collapsed", 0xc06e5dab971f717L, "866632705892284183");
    b.aggregate("collapsedByDefault", 0x569b712fbc6572f1L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x569b712fbc626858L).optional(true).ordered(true).multiple(false).origin("6240706158490120945").done();
    b.aggregate("collapsedConditionally", 0xc06e5dab9716356L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xc06e5dab9716359L).optional(true).ordered(true).multiple(false).origin("866632705892246358").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIBaseTestBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "IBaseTestBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.interface_();
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3702466984434723497");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitAbstractChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/1945799951702688168");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitChildWithDirectCycle_card1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitChildWithDirectCycle_card1", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a5L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/1945799951702688165");
    b.aggregate("subChild", 0x1b00debf2d3601a9L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a5L).optional(false).ordered(true).multiple(false).origin("1945799951702688169").done();
    b.alias("card1_direct_cycle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitChildWithDirectCycle_card1n() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitChildWithDirectCycle_card1n", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c2593aL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8705753908477319482");
    b.aggregate("subChild", 0x78d10d0e00c2593bL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c2593aL).optional(false).ordered(true).multiple(true).origin("8705753908477319483").done();
    b.alias("card1n_direct_cycle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitChildWithIndirectCycle_card1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitChildWithIndirectCycle_card1", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c41e6eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8705753908477435502");
    b.aggregate("subChild", 0x78d10d0e00c41e6fL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c41e70L).optional(false).ordered(true).multiple(false).origin("8705753908477435503").done();
    b.alias("card1_indirect_cycle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitChildWithIndirectCycle_card1n() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitChildWithIndirectCycle_card1n", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c48499L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8705753908477461657");
    b.aggregate("subChild", 0x78d10d0e00c4849aL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c4849dL).optional(false).ordered(true).multiple(true).origin("8705753908477461658").done();
    b.alias("card1n_indirect_cycle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitChildWithTwoSameConceptChildren() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitChildWithTwoSameConceptChildren", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x67739d157f7a404bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.InitAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7454474523886895179");
    b.aggregate("ch1", 0x67739d157f7a404dL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x67739d157f7a404cL).optional(false).ordered(true).multiple(false).origin("7454474523886895181").done();
    b.aggregate("ch2", 0x67739d157f7a4055L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x67739d157f7a404cL).optional(false).ordered(true).multiple(false).origin("7454474523886895189").done();
    b.alias("two_same_children");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitContainer", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a4L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/1945799951702688164");
    b.aggregate("child", 0x1b00debf2d3601a6L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x1b00debf2d3601a8L).optional(true).ordered(true).multiple(true).origin("1945799951702688166").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitGrandChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitGrandChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x67739d157f7a404cL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7454474523886895180");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitGrandChildWithIndirectCycle_card1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitGrandChildWithIndirectCycle_card1", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c41e70L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8705753908477435504");
    b.aggregate("subchild", 0x78d10d0e00c41e71L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c41e6eL).optional(false).ordered(true).multiple(false).origin("8705753908477435505").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInitGrandChildWithIndirectCycle_card1n() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InitGrandChildWithIndirectCycle_card1n", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c4849dL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/8705753908477461661");
    b.aggregate("subchild", 0x78d10d0e00c4849eL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x78d10d0e00c48499L).optional(false).ordered(true).multiple(true).origin("8705753908477461662").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInspectorBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "InspectorBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x31b7f1691792b1f4L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3582597462265868788");
    b.aggregate("block", 0x31b7f1691792b1feL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(false).ordered(true).multiple(false).origin("3582597462265868798").done();
    b.alias("inspector");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegerLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "IntegerLiteral", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x46eb259b12f68107L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5110219550150263047");
    b.prop("value", 0x46eb259b12f68108L, "5110219550150263048");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonEmptyProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "NonEmptyProperty", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x4e2db2c9f6d76026L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5633355289409839142");
    b.prop("value", 0x4e2db2c9f6d76027L, "5633355289409839143");
    b.alias("non-empty-property");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotEditableVaraileReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "NotEditableVaraileReference", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x44e7cb3605ec4004L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/4965160547087302660");
    b.associate("variableDeclaration", 0x44e7cb3605ec4005L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137f90ed1L).optional(false).origin("4965160547087302661").done();
    b.alias("{<{variableDeclaration}>} not editable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlusExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "PlusExpression", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x46eb259b12fa01d4L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.BinaryExpression", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x46eb259b12f761daL);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5110219550150492628");
    b.alias("+");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceAnnotataion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "ReferenceAnnotataion", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x6a48144fa856f460L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.LinkAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da51L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7658393498702771296");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectionChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SelectionChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x617705b269dc8251L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7023088407745954385");
    b.prop("flag", 0x617705b269dc8252L, "7023088407745954386");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectionContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SelectionContainer", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x617705b269dc6674L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/7023088407745947252");
    b.aggregate("children", 0x617705b269dc8255L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x617705b269dc8251L).optional(true).ordered(true).multiple(true).origin("7023088407745954389").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSideTranformWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SideTranformWrapper", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x46eb259b12ef5172L);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/5110219550149792114");
    b.prop("rightOpen", 0x46eb259b12ef5179L, "5110219550149792121");
    b.aggregate("child", 0x46eb259b12ef5176L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(false).ordered(true).multiple(false).origin("5110219550149792118").done();
    b.alias("side-transform-wrapper");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimplePropertyAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SimplePropertyAttribute", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2c59702023f915adL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.PropertyAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3195708693940868525");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimplePropertyContainer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SimplePropertyContainer", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2c59702023f8181eL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3195708693940803614");
    b.prop("property", 0x2c59702023f818ddL, "3195708693940803805");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStubBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "StubBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d9420cL);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3702466984434811404");
    b.alias("stub");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStyleChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "StyleChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5a79ee4e778a5efcL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/6519503956375920380");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStyleParent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "StyleParent", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5a79ee4e778a5efbL);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/6519503956375920379");
    b.aggregate("child", 0x5a79ee4e778a5f1bL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5a79ee4e778a5efcL).optional(true).ordered(true).multiple(false).origin("6519503956375920411").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstMiddlewareChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SubstMiddlewareChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x7ebf3747d08cab96L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/9133079350911740822");
    b.aggregate("child", 0x7ebf3747d08cabf6L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL).optional(true).ordered(true).multiple(true).origin("9133079350911740918").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstTestAbstractChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SubstTestAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL);
    b.class_(false, true, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/957371990174086318");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstTestBooleanPropertyChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SubstTestBooleanPropertyChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c352dL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.SubstTestAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/957371990174086445");
    b.prop("myProperty", 0xd4944c0b03c7179L, "957371990174101881");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstTestEnumPropertyChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SubstTestEnumPropertyChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c35aeL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.SubstTestAbstractChild", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/957371990174086574");
    b.prop("myEnumProperty", 0xd4944c0b03fa02eL, "957371990174310446");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstTestRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "SubstTestRoot", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c33b7L);
    b.class_(false, false, false);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/957371990174086071");
    b.aggregate("singleChild", 0xd4944c0b03c35efL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL).optional(true).ordered(true).multiple(false).origin("957371990174086639").done();
    b.aggregate("singleChildWithNonEmptyCell", 0x281d4238bc38995bL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL).optional(true).ordered(true).multiple(false).origin("2890539347285154139").done();
    b.aggregate("multiChild", 0xd4944c0b0434672L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL).optional(true).ordered(true).multiple(true).origin("957371990174549618").done();
    b.aggregate("separatorChild", 0x7ebf3747d08ca4f6L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0xd4944c0b03c34aeL).optional(true).ordered(true).multiple(true).origin("9133079350911739126").done();
    b.aggregate("middlewareChild", 0x7ebf3747d08cabf9L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x7ebf3747d08cab96L).optional(true).ordered(true).multiple(false).origin("9133079350911740921").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestBlockList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "TestBlockList", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d62dbbL);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/3702466984434609595");
    b.aggregate("statement", 0x3361ce1b17d62dc2L).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L).optional(true).ordered(true).multiple(true).origin("3702466984434609602").done();
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclarationBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "VariableDeclarationBlock", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137f90ed1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/2613454275903819473");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclarationReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "VariableDeclarationReference", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137fa9b5cL);
    b.class_(false, false, false);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/2613454275903920988");
    b.associate("var", 0x2444dad137fa9b5dL).target(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137f90ed1L).optional(false).origin("2613454275903920989").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVerticalLayoutBlockList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jetbrains.mps.lang.editor.editorTest", "VerticalLayoutBlockList", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x5f322b2c7f2c2abaL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.editor.editorTest.structure.TestBlockList", 0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d62dbbL);
    b.parent(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x3361ce1b17d7eaa9L);
    b.origin("r:1a7fc406-f263-498c-a126-51036fe6a9da(jetbrains.mps.lang.editor.editorTest.structure)/6859592652550843066");
    b.alias("vericalLayout");
    return b.create();
  }
}
