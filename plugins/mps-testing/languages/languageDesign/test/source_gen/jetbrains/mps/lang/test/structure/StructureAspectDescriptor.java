package jetbrains.mps.lang.test.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(71);
  /*package*/ final ConceptDescriptor myConceptAbstractNodeAssert = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AbstractNodeAssert", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11ada7c82e2L, "nodeToCheck", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"nodeToCheck"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1214846310980")).create();
  /*package*/ final ConceptDescriptor myConceptAbstractNodeErrorCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL)).super_("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).parents("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7835233914436803226")).create();
  /*package*/ final ConceptDescriptor myConceptAbstractNodeRuleCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AbstractNodeRuleCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a42d28aL)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation", "jetbrains.mps.lang.test.structure.IChecksRules").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x770c2c9f6ef97f30L)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7835233914439520906")).create();
  /*package*/ final ConceptDescriptor myConceptAbstractNodeWarningCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L)).super_("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).parents("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8333855927564181193")).create();
  /*package*/ final ConceptDescriptor myConceptActionReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ActionReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1101347953350122484")).create();
  /*package*/ final ConceptDescriptor myConceptAnonymousCellAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AnonymousCellAnnotation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e31babe12L)).super_("jetbrains.mps.lang.test.structure.INodeAnnotation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e0d52da47L)).parents("jetbrains.mps.lang.test.structure.INodeAnnotation", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e0d52da47L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11e31babe13L, "cellId"), new ConceptDescriptorBuilder.Prop(0x11e31babe14L, "caretPosition"), new ConceptDescriptorBuilder.Prop(0x11e3fde6f41L, "isLastPosition"), new ConceptDescriptorBuilder.Prop(0x1ad0cd452e251146L, "useLabelSelection"), new ConceptDescriptorBuilder.Prop(0x56ffc0a94fe5fc33L, "selectionStart"), new ConceptDescriptorBuilder.Prop(0x56ffc0a94fe5fc35L, "selectionEnd"), new ConceptDescriptorBuilder.Prop(0x1b73330fb1241e01L, "isInInspector")).properties("cellId", "caretPosition", "isLastPosition", "useLabelSelection", "selectionStart", "selectionEnd", "isInInspector").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1ad0cd452e1f9accL, "nodeRangeSelectionStart", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true), new ConceptDescriptorBuilder.Ref(0x1ad0cd452e1f9acdL, "nodeRangeSelectionEnd", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true)).references("nodeRangeSelectionStart", "nodeRangeSelectionEnd").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1229194968594")).create();
  /*package*/ final ConceptDescriptor myConceptAssertMatch = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AssertMatch", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11a2f985130L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11a2f989195L, "before", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false), new ConceptDescriptorBuilder.Link(0x11a2f98d40fL, "after", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false)).children(new String[]{"before", "after"}, new boolean[]{true, true}).alias("assert match", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1211979288880")).create();
  /*package*/ final ConceptDescriptor myConceptBootstrapActionReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.BootstrapActionReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899d06L)).super_("jetbrains.mps.lang.test.structure.ActionReference").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L)).parents("jetbrains.mps.lang.test.structure.ActionReference").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xf48c620dd89b12eL, "actionId")).properties("actionId").alias("by id:", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1101347953350122758")).create();
  /*package*/ final ConceptDescriptor myConceptCheckDataFlowOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.CheckDataFlowOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b081c90baL)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).alias("for dataflow messages", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215611834554")).create();
  /*package*/ final ConceptDescriptor myConceptCheckNodeDataflow = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.CheckNodeDataflow", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b743c0e8cL)).super_("jetbrains.mps.lang.test.structure.AbstractNodeAssert").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L)).parents("jetbrains.mps.lang.test.structure.AbstractNodeAssert").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L)).alias("check node dataflow", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1217425837708")).create();
  /*package*/ final ConceptDescriptor myConceptCheckNodeForErrorMessagesOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.CheckNodeForErrorMessagesOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07d3d54aL)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xbd376db27cdbaadL, "allowErrors"), new ConceptDescriptorBuilder.Prop(0xbd376db27cdbaaeL, "allowWarnings"), new ConceptDescriptorBuilder.Prop(0x33f30f661f8cdca2L, "includeSelf")).properties("allowErrors", "allowWarnings", "includeSelf").alias("for error messages", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215607067978")).create();
  /*package*/ final ConceptDescriptor myConceptCheckNodeForErrors = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.CheckNodeForErrors", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ae82817b8L)).super_("jetbrains.mps.lang.test.structure.AbstractNodeAssert").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L)).parents("jetbrains.mps.lang.test.structure.AbstractNodeAssert").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x33f30f661f90afb9L, "includeSelf")).properties("includeSelf").alias("check nodes error messages", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215075719096")).create();
  /*package*/ final ConceptDescriptor myConceptDragMouseStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.DragMouseStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c55ca0a3L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x2ec0ea8c55ca1f0L, "x"), new ConceptDescriptorBuilder.Prop(0x2ec0ea8c55ca1f1L, "y")).properties("x", "y").alias("drag mouse", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "210559400608047267")).create();
  /*package*/ final ConceptDescriptor myConceptEditorComponentExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.EditorComponentExpression", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x501fdfb2963ab0ffL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("editor component", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "5773579205429866751")).create();
  /*package*/ final ConceptDescriptor myConceptEditorExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.EditorExpression", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d7249a7dbL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("editor", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1225983109083")).create();
  /*package*/ final ConceptDescriptor myConceptEditorOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.EditorOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11daf16c21cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).abstract_().staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1227003183644")).create();
  /*package*/ final ConceptDescriptor myConceptEditorTestCase = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.EditorTestCase", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod", "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase", "jetbrains.mps.lang.core.structure.ISuppressErrors", "jetbrains.mps.lang.core.structure.ImplementationPart", "jetbrains.mps.baseLanguage.structure.IStatementListContainer", "jetbrains.mps.baseLanguage.structure.IMethodLike").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b27438a3dL), MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b2709bd56L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11750ef8265L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x1a226282e4830468L, "description")).properties("description").childDescriptors(new ConceptDescriptorBuilder.Link(0x11e314b78e4L, "nodeToEdit", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, false, false), new ConceptDescriptorBuilder.Link(0x11e314bf3d3L, "result", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true, false, false), new ConceptDescriptorBuilder.Link(0x11e314cad13L, "code", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), true, false, false), new ConceptDescriptorBuilder.Link(0x486f8079df2fd868L, "logEvents", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x486f8079df2fd630L), true, true, false)).children(new String[]{"nodeToEdit", "result", "code", "logEvents"}, new boolean[]{false, false, false, true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1229187653856")).create();
  /*package*/ final ConceptDescriptor myConceptExpressionContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ExpressionContainer", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x254649f227ff5d72L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x254649f227ff5d73L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("{ expr }", "expression container (used inside test nodes)").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2685915532175039858")).create();
  /*package*/ final ConceptDescriptor myConceptIChecksRules = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.IChecksRules", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x770c2c9f6ef97f30L)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8578280453507219248")).create();
  /*package*/ final ConceptDescriptor myConceptINodeAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.INodeAnnotation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e0d52da47L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1228584180295")).create();
  /*package*/ final ConceptDescriptor myConceptIReferenceAttachable = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.IReferenceAttachable", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2827acdc621ed3acL)).version(1).interface_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2893471348147803052")).create();
  /*package*/ final ConceptDescriptor myConceptIRuleReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.IRuleReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4afab9dL)).version(1).interface_().referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x73a7cdcfba51f755L, "declaration", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false)).references("declaration").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7691029917083872157")).create();
  /*package*/ final ConceptDescriptor myConceptInfoStatementReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.InfoStatementReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbfe9cf9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.test.structure.IRuleReference").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4afab9dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2153278993334181113")).create();
  /*package*/ final ConceptDescriptor myConceptInvokeActionStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.InvokeActionStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x614c5660cccba06bL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xf48c620dd89b137L, "actionReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L), false, false, false)).children(new String[]{"actionReference"}, new boolean[]{false}).alias("invoke action", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7011073693661765739")).create();
  /*package*/ final ConceptDescriptor myConceptInvokeIntentionStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.InvokeIntentionStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d72af5892L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x11d72afec1bL, "intention", MetaIdFactory.conceptId(0xd7a92d38f7db40d0L, 0x8431763b0c3c9f20L, 0x115b81b652bL), false)).references("intention").alias("invoke intention", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1225989773458")).create();
  /*package*/ final ConceptDescriptor myConceptLogEvent = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.LogEvent", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x486f8079df2fd630L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x486f8079df380e64L, "level"), new ConceptDescriptorBuilder.Prop(0x486f8079df380e67L, "message")).properties("level", "message").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "5219531754069546544")).create();
  /*package*/ final ConceptDescriptor myConceptMPSActionReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.MPSActionReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3ad5e12a687a89d9L)).super_("jetbrains.mps.lang.test.structure.ActionReference").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L)).parents("jetbrains.mps.lang.test.structure.ActionReference").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xf48c620dd899bf4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3ad5e12a687a9317L, "action", MetaIdFactory.conceptId(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x1181ca87c38L), false)).references("action").alias("->", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "4239542196496927193")).create();
  /*package*/ final ConceptDescriptor myConceptMockAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.MockAnnotation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e6f14cfccL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1230224281548")).create();
  /*package*/ final ConceptDescriptor myConceptMockScopeProvider = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.MockScopeProvider", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbf63919L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1de1fbd5fbf67b13L, "entries", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbf67ae2L), false, true, false), new ConceptDescriptorBuilder.Link(0x1de1fbd5fbfc8785L, "node", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, false, false)).children(new String[]{"entries", "node"}, new boolean[]{true, false}).alias("mock scopes", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2153278993333631257")).create();
  /*package*/ final ConceptDescriptor myConceptModelExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ModelExpression", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d53b20b9cL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("model", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1225469856668")).create();
  /*package*/ final ConceptDescriptor myConceptNamedNodeReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NamedNodeReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbf9c211L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1de1fbd5fbf9c212L, "node", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), false)).references("node").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2153278993333862929")).create();
  /*package*/ final ConceptDescriptor myConceptNodeCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b27438a3dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().alias("", "tag for checking either type errors or error messages, attached to some node").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215601147424")).create();
  /*package*/ final ConceptDescriptor myConceptNodeConstraintsErrorCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeConstraintsErrorCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfba5276dfL)).super_("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL)).parents("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x73a7cdcfbacafee1L, "errorRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4af0d67L), false, false, false)).children(new String[]{"errorRef"}, new boolean[]{false}).alias("has constraints error", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8333855927540283103")).create();
  /*package*/ final ConceptDescriptor myConceptNodeConstraintsWarningCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeConstraintsWarningCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf8aadL)).super_("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L)).parents("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x73a7cdcfbbbf8c41L, "warningRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4af0d67L), false, false, false)).children(new String[]{"warningRef"}, new boolean[]{false}).alias("has constraints warning", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8333855927564208813")).create();
  /*package*/ final ConceptDescriptor myConceptNodeErrorCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeErrorCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b01e7283dL)).super_("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL)).parents("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x75cf259aa047ff15L, "errorRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3ee2cbee8b19b06dL), true, false, false)).children(new String[]{"errorRef"}, new boolean[]{false}).alias("has error", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215507671101")).create();
  /*package*/ final ConceptDescriptor myConceptNodeExpectedTypeCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeExpectedTypeCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3cff387beb174046L)).super_("jetbrains.mps.lang.test.structure.NodeTypeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b03034484L)).parents("jetbrains.mps.lang.test.structure.NodeTypeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b03034484L)).alias("has expected type", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "4395293866213195846")).create();
  /*package*/ final ConceptDescriptor myConceptNodeInfoCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeInfoCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbfe6272L)).super_("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).parents("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1de1fbd5fbfe97adL, "statementRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbfe9cf9L), true, false, false)).children(new String[]{"statementRef"}, new boolean[]{false}).alias("has info", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2153278993334166130")).create();
  /*package*/ final ConceptDescriptor myConceptNodeOperationsContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeOperationsContainer", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07a3d4b5L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute", "jetbrains.mps.lang.core.structure.ISuppressErrors").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b07abae7cL, "nodeOperations", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L), true, true, false)).children(new String[]{"nodeOperations"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215603922101")).create();
  /*package*/ final ConceptDescriptor myConceptNodePropertiesContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodePropertiesContainer", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b01e50b53L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b01eac99fL, "nodeCheckOperations", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L), true, true, false)).children(new String[]{"nodeCheckOperations"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215507532627")).create();
  /*package*/ final ConceptDescriptor myConceptNodeReachable = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeReachable", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b02f9eeb8L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).alias("reachable", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215525678776")).create();
  /*package*/ final ConceptDescriptor myConceptNodeRuleCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeRuleCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3bc62fcd9b027d04L)).super_("jetbrains.mps.lang.test.structure.AbstractNodeRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a42d28aL)).parents("jetbrains.mps.lang.test.structure.AbstractNodeRuleCheckOperation", "jetbrains.mps.lang.test.structure.IReferenceAttachable").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a42d28aL), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2827acdc621ed3acL)).abstract_().alias("", "check specific rule").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "4307182653741890820")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTypeCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeTypeCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b03034484L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b0304d838L, "type", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, false, false)).children(new String[]{"type"}, new boolean[]{false}).alias("has type", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215526290564")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTypeSetCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeTypeSetCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x15404cb86444497L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x15404cb86444498L, "type", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false, true, false)).children(new String[]{"type"}, new boolean[]{true}).alias("has type in", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "95706764259116183")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTypeSystemErrorCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeTypeSystemErrorCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x5f2a921acc5d63aL)).super_("jetbrains.mps.lang.test.structure.NodeTypeSystemRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4a391b6dc8e619d9L)).parents("jetbrains.mps.lang.test.structure.NodeTypeSystemRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4a391b6dc8e619d9L)).alias("has typesystem error", "check for unknown typesystem error").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "428590876651279930")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTypeSystemRuleCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeTypeSystemRuleCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4a391b6dc8e619d9L)).super_("jetbrains.mps.lang.test.structure.AbstractNodeRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a42d28aL)).parents("jetbrains.mps.lang.test.structure.AbstractNodeRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a42d28aL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "5348336190815082969")).create();
  /*package*/ final ConceptDescriptor myConceptNodeTypeSystemWarningCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeTypeSystemWarningCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x770c2c9f6f1bbfcaL)).super_("jetbrains.mps.lang.test.structure.NodeTypeSystemRuleCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4a391b6dc8e619d9L)).parents("jetbrains.mps.lang.test.structure.NodeTypeSystemRuleCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4a391b6dc8e619d9L)).alias("has typesystem warning", "check for unknown typesystem warning").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8578280453509464010")).create();
  /*package*/ final ConceptDescriptor myConceptNodeUnknownErrorCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeUnknownErrorCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a1917bdL)).super_("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL)).parents("jetbrains.mps.lang.test.structure.AbstractNodeErrorCheckOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6cbc57bb7a195a9aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x73a7cdcfba4e961eL, "errorRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4af0d67L), false, false, false)).children(new String[]{"errorRef"}, new boolean[]{false}).alias("has error", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7835233914436786109")).create();
  /*package*/ final ConceptDescriptor myConceptNodeUnknownWarningCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeUnknownWarningCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbc0b900L)).super_("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L)).parents("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x73a7cdcfbbc116a3L, "warningRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4af0d67L), false, false, false)).children(new String[]{"warningRef"}, new boolean[]{false}).alias("has warning", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8333855927564286208")).create();
  /*package*/ final ConceptDescriptor myConceptNodeUnreachable = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeUnreachable", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b082d1cb9L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).alias("unreachable", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215612918969")).create();
  /*package*/ final ConceptDescriptor myConceptNodeWarningCheckOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b0224b421L)).super_("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L)).parents("jetbrains.mps.lang.test.structure.AbstractNodeWarningCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x73a7cdcfbbbf1ec9L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x75cf259aa047ff8bL, "warningRef", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3ee2cbee8b386d76L), true, false, false)).children(new String[]{"warningRef"}, new boolean[]{false}).alias("has warning", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215511704609")).create();
  /*package*/ final ConceptDescriptor myConceptNodesTestCase = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodesTestCase", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier", "jetbrains.mps.lang.core.structure.ImplementationPart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b2709bd56L), MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bc6b2af5L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa7c0557L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x57f984daa37add4aL, "needsNoWriteAction")).properties("needsNoWriteAction").childDescriptors(new ConceptDescriptorBuilder.Link(0x11b78c37cc6L, "nodesToCheck", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b5a38fc01L), true, true, false), new ConceptDescriptorBuilder.Link(0x11b78c499b5L, "testMethods", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b54d88L), true, true, false), new ConceptDescriptorBuilder.Link(0x11b5a762e97L, "methods", MetaIdFactory.conceptId(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd6ee3c3L), true, true, false)).children(new String[]{"nodesToCheck", "testMethods", "methods"}, new boolean[]{true, true, true}).rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1216913645126")).create();
  /*package*/ final ConceptDescriptor myConceptNodesTestMethod = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.NodesTestMethod", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b54d88L)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x11b27438a3dL)).abstract_().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1216913689992")).create();
  /*package*/ final ConceptDescriptor myConceptPressKeyStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.PressKeyStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e223413eeL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11e22346d26L, "keyStrokes", MetaIdFactory.conceptId(0x28f9e4973b424291L, 0xaeba0a1039153ab1L, 0x11919c665d4L), false, true, false)).children(new String[]{"keyStrokes"}, new boolean[]{true}).alias("press keys", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1228934484974")).create();
  /*package*/ final ConceptDescriptor myConceptPressMouseStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.PressMouseStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c5348f79L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x2ec0ea8c53e9ee7L, "x"), new ConceptDescriptorBuilder.Prop(0x2ec0ea8c53e9ee8L, "y")).properties("x", "y").childDescriptors(new ConceptDescriptorBuilder.Link(0xfc092b6b78L, "statementList", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"statementList"}, new boolean[]{false}).alias("press mouse", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "210559400605421433")).create();
  /*package*/ final ConceptDescriptor myConceptProjectExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ProjectExpression", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d5387d7a1L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("project", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1225467090849")).create();
  /*package*/ final ConceptDescriptor myConceptReportErrorStatementReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ReportErrorStatementReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3ee2cbee8b19b06dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.test.structure.IRuleReference").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4afab9dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "4531408400484511853")).create();
  /*package*/ final ConceptDescriptor myConceptScopeEntry = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ScopeEntry", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbf67ae2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x1de1fbd5fbf99684L, "kind", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), false)).references("kind").childDescriptors(new ConceptDescriptorBuilder.Link(0x1de1fbd5fbf67ae5L, "nodes", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1de1fbd5fbf9c211L), true, true, false)).children(new String[]{"nodes"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "2153278993333648098")).create();
  /*package*/ final ConceptDescriptor myConceptScopesExpectedNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ScopesExpectedNode", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x32ba5b0ec25fe9f3L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x383e5e55de89bc1fL, "ref", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), false)).references("ref").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "3655334166513314291")).create();
  /*package*/ final ConceptDescriptor myConceptScopesTest = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.ScopesTest", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x7181d929c720809L)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x4b9f88d62c795596L, "checkingReference", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true)).references("checkingReference").childDescriptors(new ConceptDescriptorBuilder.Link(0x32ba5b0ec25fea03L, "nodes", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x32ba5b0ec25fe9f3L), true, true, false)).children(new String[]{"nodes"}, new boolean[]{true}).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "511191073233700873")).create();
  /*package*/ final ConceptDescriptor myConceptSimpleNodeTest = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.SimpleNodeTest", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d71fcb191L)).super_("jetbrains.mps.lang.test.structure.NodesTestMethod").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b54d88L)).parents("jetbrains.mps.lang.test.structure.NodesTestMethod").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b54d88L)).alias("test method", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1225978065297")).create();
  /*package*/ final ConceptDescriptor myConceptSwitchToInspector = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.SwitchToInspector", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x501fdfb29636e491L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).alias("switch to inspector", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "5773579205429617809")).create();
  /*package*/ final ConceptDescriptor myConceptTestInfo = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.TestInfo", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x46bca02bfb6e730aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x46bca02bfb6e730bL, "projectPath"), new ConceptDescriptorBuilder.Prop(0xe51f392b64685d9L, "reOpenProject")).properties("projectPath", "reOpenProject").rootable().sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "5097124989038916362")).create();
  /*package*/ final ConceptDescriptor myConceptTestNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.TestNode", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b5a38fc01L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b5a397b92L, "nodeToCheck", MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), true, false, false)).children(new String[]{"nodeToCheck"}, new boolean[]{false}).alias("test node", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1216989428737")).create();
  /*package*/ final ConceptDescriptor myConceptTestNodeAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.TestNodeAnnotation", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1c6609cL)).super_("jetbrains.mps.lang.test.structure.INodeAnnotation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e0d52da47L)).parents("jetbrains.mps.lang.test.structure.INodeAnnotation", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e0d52da47L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1210673684636")).create();
  /*package*/ final ConceptDescriptor myConceptTestNodeReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.TestNodeReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1d33213L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x119e1d356c6L, "declaration", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1c6609cL), false)).references("declaration").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1210674524691")).create();
  /*package*/ final ConceptDescriptor myConceptTypeKeyStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.TypeKeyStatement", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11db9c07f43L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x11db9e4d87aL, "keys")).properties("keys").alias("type", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1227182079811")).create();
  /*package*/ final ConceptDescriptor myConceptUnknownRuleReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.UnknownRuleReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4af0d67L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.test.structure.IRuleReference").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4afab9dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "7691029917083831655")).create();
  /*package*/ final ConceptDescriptor myConceptUntypedExpression = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.UntypedExpression", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x706cdc8a9fd69324L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("_", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "8101092317677916964")).create();
  /*package*/ final ConceptDescriptor myConceptVariableAlive = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.VariableAlive", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b086b4872L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b086b8b1aL, "var", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L), false, false, false)).children(new String[]{"var"}, new boolean[]{false}).alias("variable alive", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215616993394")).create();
  /*package*/ final ConceptDescriptor myConceptVariableInitialized = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.VariableInitialized", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b0843a235L)).super_("jetbrains.mps.lang.test.structure.NodeCheckOperation").version(1).super_(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).parents("jetbrains.mps.lang.test.structure.NodeCheckOperation").parentIds(MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11b0843f269L, "var", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e98L), false, false, false)).children(new String[]{"var"}, new boolean[]{false}).alias("variable initialized", "").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "1215614394933")).create();
  /*package*/ final ConceptDescriptor myConceptWarningStatementReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.WarningStatementReference", MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3ee2cbee8b386d76L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.test.structure.IRuleReference").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x6abc06f5f4afab9dL)).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)", "4531408400486526326")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractNodeAssert.getId(), 0);
    myIndexMap.put(myConceptAbstractNodeErrorCheckOperation.getId(), 1);
    myIndexMap.put(myConceptAbstractNodeRuleCheckOperation.getId(), 2);
    myIndexMap.put(myConceptAbstractNodeWarningCheckOperation.getId(), 3);
    myIndexMap.put(myConceptActionReference.getId(), 4);
    myIndexMap.put(myConceptAnonymousCellAnnotation.getId(), 5);
    myIndexMap.put(myConceptAssertMatch.getId(), 6);
    myIndexMap.put(myConceptBootstrapActionReference.getId(), 7);
    myIndexMap.put(myConceptCheckDataFlowOperation.getId(), 8);
    myIndexMap.put(myConceptCheckNodeDataflow.getId(), 9);
    myIndexMap.put(myConceptCheckNodeForErrorMessagesOperation.getId(), 10);
    myIndexMap.put(myConceptCheckNodeForErrors.getId(), 11);
    myIndexMap.put(myConceptDragMouseStatement.getId(), 12);
    myIndexMap.put(myConceptEditorComponentExpression.getId(), 13);
    myIndexMap.put(myConceptEditorExpression.getId(), 14);
    myIndexMap.put(myConceptEditorOperation.getId(), 15);
    myIndexMap.put(myConceptEditorTestCase.getId(), 16);
    myIndexMap.put(myConceptExpressionContainer.getId(), 17);
    myIndexMap.put(myConceptIChecksRules.getId(), 18);
    myIndexMap.put(myConceptINodeAnnotation.getId(), 19);
    myIndexMap.put(myConceptIReferenceAttachable.getId(), 20);
    myIndexMap.put(myConceptIRuleReference.getId(), 21);
    myIndexMap.put(myConceptInfoStatementReference.getId(), 22);
    myIndexMap.put(myConceptInvokeActionStatement.getId(), 23);
    myIndexMap.put(myConceptInvokeIntentionStatement.getId(), 24);
    myIndexMap.put(myConceptLogEvent.getId(), 25);
    myIndexMap.put(myConceptMPSActionReference.getId(), 26);
    myIndexMap.put(myConceptMockAnnotation.getId(), 27);
    myIndexMap.put(myConceptMockScopeProvider.getId(), 28);
    myIndexMap.put(myConceptModelExpression.getId(), 29);
    myIndexMap.put(myConceptNamedNodeReference.getId(), 30);
    myIndexMap.put(myConceptNodeCheckOperation.getId(), 31);
    myIndexMap.put(myConceptNodeConstraintsErrorCheckOperation.getId(), 32);
    myIndexMap.put(myConceptNodeConstraintsWarningCheckOperation.getId(), 33);
    myIndexMap.put(myConceptNodeErrorCheckOperation.getId(), 34);
    myIndexMap.put(myConceptNodeExpectedTypeCheckOperation.getId(), 35);
    myIndexMap.put(myConceptNodeInfoCheckOperation.getId(), 36);
    myIndexMap.put(myConceptNodeOperationsContainer.getId(), 37);
    myIndexMap.put(myConceptNodePropertiesContainer.getId(), 38);
    myIndexMap.put(myConceptNodeReachable.getId(), 39);
    myIndexMap.put(myConceptNodeRuleCheckOperation.getId(), 40);
    myIndexMap.put(myConceptNodeTypeCheckOperation.getId(), 41);
    myIndexMap.put(myConceptNodeTypeSetCheckOperation.getId(), 42);
    myIndexMap.put(myConceptNodeTypeSystemErrorCheckOperation.getId(), 43);
    myIndexMap.put(myConceptNodeTypeSystemRuleCheckOperation.getId(), 44);
    myIndexMap.put(myConceptNodeTypeSystemWarningCheckOperation.getId(), 45);
    myIndexMap.put(myConceptNodeUnknownErrorCheckOperation.getId(), 46);
    myIndexMap.put(myConceptNodeUnknownWarningCheckOperation.getId(), 47);
    myIndexMap.put(myConceptNodeUnreachable.getId(), 48);
    myIndexMap.put(myConceptNodeWarningCheckOperation.getId(), 49);
    myIndexMap.put(myConceptNodesTestCase.getId(), 50);
    myIndexMap.put(myConceptNodesTestMethod.getId(), 51);
    myIndexMap.put(myConceptPressKeyStatement.getId(), 52);
    myIndexMap.put(myConceptPressMouseStatement.getId(), 53);
    myIndexMap.put(myConceptProjectExpression.getId(), 54);
    myIndexMap.put(myConceptReportErrorStatementReference.getId(), 55);
    myIndexMap.put(myConceptScopeEntry.getId(), 56);
    myIndexMap.put(myConceptScopesExpectedNode.getId(), 57);
    myIndexMap.put(myConceptScopesTest.getId(), 58);
    myIndexMap.put(myConceptSimpleNodeTest.getId(), 59);
    myIndexMap.put(myConceptSwitchToInspector.getId(), 60);
    myIndexMap.put(myConceptTestInfo.getId(), 61);
    myIndexMap.put(myConceptTestNode.getId(), 62);
    myIndexMap.put(myConceptTestNodeAnnotation.getId(), 63);
    myIndexMap.put(myConceptTestNodeReference.getId(), 64);
    myIndexMap.put(myConceptTypeKeyStatement.getId(), 65);
    myIndexMap.put(myConceptUnknownRuleReference.getId(), 66);
    myIndexMap.put(myConceptUntypedExpression.getId(), 67);
    myIndexMap.put(myConceptVariableAlive.getId(), 68);
    myIndexMap.put(myConceptVariableInitialized.getId(), 69);
    myIndexMap.put(myConceptWarningStatementReference.getId(), 70);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractNodeAssert, myConceptAbstractNodeErrorCheckOperation, myConceptAbstractNodeRuleCheckOperation, myConceptAbstractNodeWarningCheckOperation, myConceptActionReference, myConceptAnonymousCellAnnotation, myConceptAssertMatch, myConceptBootstrapActionReference, myConceptCheckDataFlowOperation, myConceptCheckNodeDataflow, myConceptCheckNodeForErrorMessagesOperation, myConceptCheckNodeForErrors, myConceptDragMouseStatement, myConceptEditorComponentExpression, myConceptEditorExpression, myConceptEditorOperation, myConceptEditorTestCase, myConceptExpressionContainer, myConceptIChecksRules, myConceptINodeAnnotation, myConceptIReferenceAttachable, myConceptIRuleReference, myConceptInfoStatementReference, myConceptInvokeActionStatement, myConceptInvokeIntentionStatement, myConceptLogEvent, myConceptMPSActionReference, myConceptMockAnnotation, myConceptMockScopeProvider, myConceptModelExpression, myConceptNamedNodeReference, myConceptNodeCheckOperation, myConceptNodeConstraintsErrorCheckOperation, myConceptNodeConstraintsWarningCheckOperation, myConceptNodeErrorCheckOperation, myConceptNodeExpectedTypeCheckOperation, myConceptNodeInfoCheckOperation, myConceptNodeOperationsContainer, myConceptNodePropertiesContainer, myConceptNodeReachable, myConceptNodeRuleCheckOperation, myConceptNodeTypeCheckOperation, myConceptNodeTypeSetCheckOperation, myConceptNodeTypeSystemErrorCheckOperation, myConceptNodeTypeSystemRuleCheckOperation, myConceptNodeTypeSystemWarningCheckOperation, myConceptNodeUnknownErrorCheckOperation, myConceptNodeUnknownWarningCheckOperation, myConceptNodeUnreachable, myConceptNodeWarningCheckOperation, myConceptNodesTestCase, myConceptNodesTestMethod, myConceptPressKeyStatement, myConceptPressMouseStatement, myConceptProjectExpression, myConceptReportErrorStatementReference, myConceptScopeEntry, myConceptScopesExpectedNode, myConceptScopesTest, myConceptSimpleNodeTest, myConceptSwitchToInspector, myConceptTestInfo, myConceptTestNode, myConceptTestNodeAnnotation, myConceptTestNodeReference, myConceptTypeKeyStatement, myConceptUnknownRuleReference, myConceptUntypedExpression, myConceptVariableAlive, myConceptVariableInitialized, myConceptWarningStatementReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractNodeAssert;
      case 1:
        return myConceptAbstractNodeErrorCheckOperation;
      case 2:
        return myConceptAbstractNodeRuleCheckOperation;
      case 3:
        return myConceptAbstractNodeWarningCheckOperation;
      case 4:
        return myConceptActionReference;
      case 5:
        return myConceptAnonymousCellAnnotation;
      case 6:
        return myConceptAssertMatch;
      case 7:
        return myConceptBootstrapActionReference;
      case 8:
        return myConceptCheckDataFlowOperation;
      case 9:
        return myConceptCheckNodeDataflow;
      case 10:
        return myConceptCheckNodeForErrorMessagesOperation;
      case 11:
        return myConceptCheckNodeForErrors;
      case 12:
        return myConceptDragMouseStatement;
      case 13:
        return myConceptEditorComponentExpression;
      case 14:
        return myConceptEditorExpression;
      case 15:
        return myConceptEditorOperation;
      case 16:
        return myConceptEditorTestCase;
      case 17:
        return myConceptExpressionContainer;
      case 18:
        return myConceptIChecksRules;
      case 19:
        return myConceptINodeAnnotation;
      case 20:
        return myConceptIReferenceAttachable;
      case 21:
        return myConceptIRuleReference;
      case 22:
        return myConceptInfoStatementReference;
      case 23:
        return myConceptInvokeActionStatement;
      case 24:
        return myConceptInvokeIntentionStatement;
      case 25:
        return myConceptLogEvent;
      case 26:
        return myConceptMPSActionReference;
      case 27:
        return myConceptMockAnnotation;
      case 28:
        return myConceptMockScopeProvider;
      case 29:
        return myConceptModelExpression;
      case 30:
        return myConceptNamedNodeReference;
      case 31:
        return myConceptNodeCheckOperation;
      case 32:
        return myConceptNodeConstraintsErrorCheckOperation;
      case 33:
        return myConceptNodeConstraintsWarningCheckOperation;
      case 34:
        return myConceptNodeErrorCheckOperation;
      case 35:
        return myConceptNodeExpectedTypeCheckOperation;
      case 36:
        return myConceptNodeInfoCheckOperation;
      case 37:
        return myConceptNodeOperationsContainer;
      case 38:
        return myConceptNodePropertiesContainer;
      case 39:
        return myConceptNodeReachable;
      case 40:
        return myConceptNodeRuleCheckOperation;
      case 41:
        return myConceptNodeTypeCheckOperation;
      case 42:
        return myConceptNodeTypeSetCheckOperation;
      case 43:
        return myConceptNodeTypeSystemErrorCheckOperation;
      case 44:
        return myConceptNodeTypeSystemRuleCheckOperation;
      case 45:
        return myConceptNodeTypeSystemWarningCheckOperation;
      case 46:
        return myConceptNodeUnknownErrorCheckOperation;
      case 47:
        return myConceptNodeUnknownWarningCheckOperation;
      case 48:
        return myConceptNodeUnreachable;
      case 49:
        return myConceptNodeWarningCheckOperation;
      case 50:
        return myConceptNodesTestCase;
      case 51:
        return myConceptNodesTestMethod;
      case 52:
        return myConceptPressKeyStatement;
      case 53:
        return myConceptPressMouseStatement;
      case 54:
        return myConceptProjectExpression;
      case 55:
        return myConceptReportErrorStatementReference;
      case 56:
        return myConceptScopeEntry;
      case 57:
        return myConceptScopesExpectedNode;
      case 58:
        return myConceptScopesTest;
      case 59:
        return myConceptSimpleNodeTest;
      case 60:
        return myConceptSwitchToInspector;
      case 61:
        return myConceptTestInfo;
      case 62:
        return myConceptTestNode;
      case 63:
        return myConceptTestNodeAnnotation;
      case 64:
        return myConceptTestNodeReference;
      case 65:
        return myConceptTypeKeyStatement;
      case 66:
        return myConceptUnknownRuleReference;
      case 67:
        return myConceptUntypedExpression;
      case 68:
        return myConceptVariableAlive;
      case 69:
        return myConceptVariableInitialized;
      case 70:
        return myConceptWarningStatementReference;
      default:
        throw new IllegalStateException();
    }
  }
}
