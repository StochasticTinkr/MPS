package jetbrains.mps.lang.test.runtime;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import jetbrains.mps.project.Project;
import jetbrains.mps.util.MacrosFactory;
import java.io.File;
import jetbrains.mps.project.ProjectManager;
import java.io.IOException;

public class TransformationTestLightRunner extends TransformationTestRunner {
  public TransformationTestLightRunner() {
    super(new LightEnvironment());
  }

  @Override
  public void initTest(@NotNull final TransformationTest test, @NotNull String projectPath, String modelName, boolean reopenProject) throws Exception {
    // XXX the only difference with super is that we don't clear clipboard, and don't read system variables. Is that right? 
    Project testProject = openTestProject(projectPath, reopenProject);
    doInitTest(test, testProject, modelName);
    myEnvironment.flushAllEvents();
  }

  @Override
  protected Project openTestProject(String projectPath, boolean reopenProject_ignored) {
    String expandedProjectPath = MacrosFactory.getGlobal().expandPath(projectPath);
    File projectFile = new File(expandedProjectPath);
    for (Project project : ProjectManager.getInstance().getOpenedProjects()) {
      if (projectHasPath(project, projectFile)) {
        return project;
      }
    }
    String m = ((projectPath == null || projectPath.length() == 0) ? "You need to specify project with TestInfo root." : "Test project '%s' is not open.");
    throw new IllegalStateException(String.format(m, projectPath));
  }

  private static boolean projectHasPath(Project project, File path) {
    File projectFile = project.getProjectFile();
    if (projectFile == null) {
      return false;
    }
    try {
      String projectPath = projectFile.getCanonicalPath();
      String testedPath = path.getCanonicalPath();
      return projectPath.equals(testedPath);
    } catch (IOException e) {
      e.printStackTrace();
    }
    return false;
  }
}
