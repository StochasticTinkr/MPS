package jetbrains.mps.lang.test.matcher;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SProperty;

/*package*/ class PropertyDifference extends DifferenceItem {
  private final SProperty myProperty;
  private final String myActualValue;
  private final String myExpectedValue;

  public PropertyDifference(SProperty property, String actualValue, String expectedValue) {
    myProperty = property;
    myActualValue = actualValue;
    myExpectedValue = expectedValue;
  }

  @Override
  public String toString() {
    return "Different property: " + myProperty + " = " + myActualValue + ", expected: " + myExpectedValue;
  }

  @Override
  public int hashCode() {
    // XXX no idea why equals is based on myProperty only, here I just respect what's there in the equals() method. 
    return myProperty.hashCode();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (!((obj instanceof PropertyDifference))) {
      return false;
    }
    PropertyDifference diff = (PropertyDifference) obj;
    return myProperty.equals(diff.myProperty);
  }
}
