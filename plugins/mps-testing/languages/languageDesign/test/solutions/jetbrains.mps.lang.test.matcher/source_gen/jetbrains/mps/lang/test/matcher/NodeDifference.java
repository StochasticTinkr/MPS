package jetbrains.mps.lang.test.matcher;

/*Generated by MPS */

import java.util.List;
import java.util.Objects;

public final class NodeDifference extends DifferenceItem {
  private final String myName;
  private final List<DifferenceItem> myDifference;

  public NodeDifference(String name, List<DifferenceItem> diffs) {
    myName = name;
    myDifference = diffs;
  }

  public String print() {
    StringBuilder sb = new StringBuilder();
    print(sb, 0);
    return sb.toString();
  }

  @Override
  protected void print(StringBuilder buf, int indent) {
    super.print(buf, indent);
    for (DifferenceItem item : myDifference) {
      item.print(buf, indent + 1);
    }
  }

  @Override
  public String toString() {
    return "Node: " + myName;
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(myName) * 37 + myDifference.hashCode();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (!((obj instanceof NodeDifference))) {
      return false;
    }
    NodeDifference diff = (NodeDifference) obj;
    if (myName == null || !(myName.equals(diff.myName))) {
      return false;
    }
    if (!(myDifference.equals(diff.myDifference))) {
      return false;
    }
    return true;
  }
}
