package jetbrains.mps.lang.test.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.classifiers.behavior.IMember__BehaviorDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.baseLanguage.classifiers.behavior.ThisClassifierExpression__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.test.generator.template.util.TestsUtil;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestCase__BehaviorDescriptor;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestMethod__BehaviorDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.test.behavior.TestInfo__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.test.behavior.NodesTestCase__BehaviorDescriptor;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.migration.behavior.IMigrationUnit__BehaviorDescriptor;
import jetbrains.mps.lang.test.behavior.INodesTestMethod__BehaviorDescriptor;
import jetbrains.mps.lang.plugin.behavior.KeyMapKeystroke__BehaviorDescriptor;
import jetbrains.mps.lang.test.behavior.ActionReference__BehaviorDescriptor;
import jetbrains.mps.lang.intentions.behavior.BaseIntentionDeclaration__BehaviorDescriptor;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.test.behavior.DragMouseStatement__BehaviorDescriptor;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.behavior.ConceptId__BehaviorDescriptor;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.LinkedHashSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.MapRootRuleCondition;
import jetbrains.mps.generator.template.MapRootRuleContext;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean baseMappingRule_Condition_a0(final BaseMappingRuleContext _context) {
    return (SNodeOperations.getParent(_context.getNode()) == null);
  }
  public static boolean baseMappingRule_Condition_a4(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(IMember__BehaviorDescriptor.getContainer_idhEwIBCW.invoke(_context.getNode()), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase"));
  }
  public static boolean baseMappingRule_Condition_a5(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(ThisClassifierExpression__BehaviorDescriptor.getClassifier_idhEwJeDN.invoke(_context.getNode()), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase"));
  }
  public static boolean baseMappingRule_Condition_a31(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, "operation")), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11daf16c21cL, "jetbrains.mps.lang.test.structure.EditorOperation"));
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0(final PropertyMacroContext _context) {
    return TestsUtil.getProjectPath(SNodeOperations.getModel(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a0c0a0(final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getReference().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a1(final PropertyMacroContext _context) {
    return (String) ITestCase__BehaviorDescriptor.getSimpleClassName_idhSQIE8p.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0e(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0d6(final PropertyMacroContext _context) {
    SNode nodeToEdit = SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x11e314b78e4L, "nodeToEdit"));
    if ((nodeToEdit == null)) {
      _context.showErrorMessage(_context.getNode(), "A node in the 'before' section must be provided");
    }
    if (ListSequence.fromList(SNodeOperations.getNodeDescendants(nodeToEdit, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e31babe12L, "jetbrains.mps.lang.test.structure.AnonymousCellAnnotation"), false, new SAbstractConcept[]{})).isEmpty()) {
      _context.showWarningMessage(_context.getNode(), "A node in the 'before' section must have at least one AnonymousCellAnnotation attached");
    }
    return nodeToEdit.getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0d6(final PropertyMacroContext _context) {
    if (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x11e314bf3d3L, "result")) != null) {
      return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x11e314bf3d3L, "result")).getNodeId().toString();
    } else {
      return "";
    }
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0_0(final PropertyMacroContext _context) {
    return TestsUtil.getProjectPath(SNodeOperations.getModel(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a0c0a0_0(final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getReference().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0d0a0(final PropertyMacroContext _context) {
    return (boolean) TestInfo__BehaviorDescriptor.reOpenProject_idThWTaQhG7P.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x46bca02bfb6e730aL, "jetbrains.mps.lang.test.structure.TestInfo")), SNodeOperations.getModel(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a1_0(final PropertyMacroContext _context) {
    return (String) ITestCase__BehaviorDescriptor.getSimpleClassName_idhSQIE8p.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0e(final PropertyMacroContext _context) {
    return TestsUtil.getTestBodyClassName(ITestMethod__BehaviorDescriptor.getTestCase_idhGBgWVd.invoke(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0e(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895903a2(jetbrains.mps.lang.test.runtime)", "8951526261572145273"), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_a1e(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0a0a6(final PropertyMacroContext _context) {
    return _context.getNode().getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0g(final PropertyMacroContext _context) {
    return (String) NodesTestCase__BehaviorDescriptor.getTestBodyName_idhOw0ICJ.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0a0b6(final PropertyMacroContext _context) {
    return _context.getNode().getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a2g(final PropertyMacroContext _context) {
    return NameUtil.longNameFromNamespaceAndShortName(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x5bf7864595dddf89L, 0x5bf7864595dddf8aL, "migration")).getModel().getName().getLongName(), IMigrationUnit__BehaviorDescriptor.getClassName_id5Fumpqe4XH$.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x5bf7864595dddf89L, 0x5bf7864595dddf8aL, "migration"))));
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0_1(final PropertyMacroContext _context) {
    return TestsUtil.getProjectPath(SNodeOperations.getModel(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a0c0a0_1(final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getReference().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0d0a0_0(final PropertyMacroContext _context) {
    return (boolean) TestInfo__BehaviorDescriptor.reOpenProject_idThWTaQhG7P.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x46bca02bfb6e730aL, "jetbrains.mps.lang.test.structure.TestInfo")), SNodeOperations.getModel(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a1_1(final PropertyMacroContext _context) {
    return (String) ITestCase__BehaviorDescriptor.getSimpleClassName_idhSQIE8p.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0f(final PropertyMacroContext _context) {
    return TestsUtil.getTestBodyClassName(ITestMethod__BehaviorDescriptor.getTestCase_idhGBgWVd.invoke(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_a0b0a0f(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0c0a0f(final PropertyMacroContext _context) {
    return (boolean) NodesTestCase__BehaviorDescriptor.needsWriteAction_id5vTxdEzuQjU.invoke(SNodeOperations.cast(ITestMethod__BehaviorDescriptor.getTestCase_idhGBgWVd.invoke(_context.getNode()), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase")));
  }
  public static Object propertyMacro_GetPropertyValue_a1f(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0l(final PropertyMacroContext _context) {
    return (String) NodesTestCase__BehaviorDescriptor.getTestBodyName_idhOw0ICJ.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0c11(final PropertyMacroContext _context) {
    return _context.getNode().getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0b0c11(final PropertyMacroContext _context) {
    return INodesTestMethod__BehaviorDescriptor.getAnnotatedNode_id38gbJV0XvZR.invoke(_context.getNode()).getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a1c11(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a4l(final PropertyMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()).getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a4l(final PropertyMacroContext _context) {
    return "var" + _context.getNode().getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a1e11(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_a0d0a0c(final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ae82817b8L, 0x33f30f661f90afb9L, "includeSelf"));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0a41(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11db9c07f43L, 0x11db9e4d87aL, "keys"));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0a0a61(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c5348f79L, 0x2ec0ea8c53e9ee7L, "x"));
  }
  public static Object propertyMacro_GetPropertyValue_a1a0a0a0a0q(final PropertyMacroContext _context) {
    return _context.createUniqueName("x", _context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0b0a0a0a61(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c5348f79L, 0x2ec0ea8c53e9ee8L, "y"));
  }
  public static Object propertyMacro_GetPropertyValue_a1a1a0a0a0q(final PropertyMacroContext _context) {
    return _context.createUniqueName("y", _context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a2a0a0a0q(final PropertyMacroContext _context) {
    return _context.createUniqueName("eventTargetComponent", _context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a1a3a0a0r(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c55ca0a3L, 0x2ec0ea8c55ca1f0L, "x"));
  }
  public static Object propertyMacro_GetPropertyValue_a0a2a3a0a0r(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c55ca0a3L, 0x2ec0ea8c55ca1f1L, "y"));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0s(final PropertyMacroContext _context) {
    return (String) KeyMapKeystroke__BehaviorDescriptor.getKeyStroke_idhEwIlzu.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0v(final PropertyMacroContext _context) {
    return (String) ActionReference__BehaviorDescriptor.getActionId_idX8Ly3typOa.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0(final PropertyMacroContext _context) {
    return (String) BaseIntentionDeclaration__BehaviorDescriptor.getGeneratedId_id2ytFvC$HDcE.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d72af5892L, 0x11d72afec1bL, "intention")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0b0a0a(final PropertyMacroContext _context) {
    return (String) BaseIntentionDeclaration__BehaviorDescriptor.getGeneratedId_id2ytFvC$HDcE.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d72af5892L, 0x11d72afec1bL, "intention")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0_0(final PropertyMacroContext _context) {
    return (String) BaseIntentionDeclaration__BehaviorDescriptor.getGeneratedId_id2ytFvC$HDcE.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x110822ebf819cfd5L, 0x110822ebf819cfd8L, "intention")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0_1(final PropertyMacroContext _context) {
    return (String) BaseIntentionDeclaration__BehaviorDescriptor.getGeneratedId_id2ytFvC$HDcE.invoke(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x83a4b2183e44b99L, 0x83a4b2183e44b9aL, "intention")));
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0_2(final PropertyMacroContext _context) {
    return _context.getNode().getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_a1a0(final PropertyMacroContext _context) {
    return (String) ITestMethod__BehaviorDescriptor.getTestName_idhGBohAB.invoke(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_a0a0a0a0a0(final PropertyMacroContext _context) {
    return SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1d33213L, 0x119e1d356c6L, "declaration"))).getNodeId().toString();
  }
  public static Object referenceMacro_GetReferent_a0a0a0a5g(final ReferenceMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x486f8079df2fd630L, 0x486f8079df380e64L, "level"), "OFF") + "_INT";
  }
  public static Object referenceMacro_GetReferent_a1a0a0a5g(final ReferenceMacroContext _context) {
    if (SPropertyOperations.hasValue(_context.getNode(), MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x486f8079df2fd630L, 0x486f8079df380e64L, "level"), "TRACE", "OFF")) {
      return new SNodePointer("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:org.apache.log4j(MPS.Core/)", "~Level");
    }
    return new SNodePointer("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:org.apache.log4j(MPS.Core/)", "~Priority");
  }
  public static Object referenceMacro_GetReferent_a0a0g(final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bca97396L, 0x118bcb657ecL, "member")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object referenceMacro_GetReferent_a0a0d0a0a71(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(DragMouseStatement__BehaviorDescriptor.getPressMouseStatement_id3CVcUJxN49_.invoke(_context.getNode()), "eventTargetComponent");
  }
  public static Object referenceMacro_GetReferent_a0a1a3a0a0r(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(DragMouseStatement__BehaviorDescriptor.getPressMouseStatement_id3CVcUJxN49_.invoke(_context.getNode()), "pressMouseX");
  }
  public static Object referenceMacro_GetReferent_a0a2a3a0a0r(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(DragMouseStatement__BehaviorDescriptor.getPressMouseStatement_id3CVcUJxN49_.invoke(_context.getNode()), "pressMouseY");
  }
  public static boolean ifMacro_Condition_a0e6(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x486f8079df2fd868L, "logEvents"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_a0f6(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x486f8079df2fd868L, "logEvents"))).isNotEmpty();
  }
  public static boolean ifMacro_Condition_a0h(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb661L, "beforeTests")) != null);
  }
  public static boolean ifMacro_Condition_a0i(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb661L, "beforeTests")) != null);
  }
  public static boolean ifMacro_Condition_a0j(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb66cL, "afterTests")) != null);
  }
  public static boolean ifMacro_Condition_a0k(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb66cL, "afterTests")) != null);
  }
  public static boolean ifMacro_Condition_a0f0a0a0a61(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c5348f79L, 0xfc092b6b78L, "statementList")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"))).isEmpty();
  }
  public static boolean ifMacro_Condition_a0a0c0a0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x110e5250918L, 0x110e52557daL, "message")) == null);
  }
  public static boolean ifMacro_Condition_a1a0a0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d72af5892L, 0x7bf9131d2468ca92L, "parameter")) != null);
  }
  public static SNode sourceNodeQuery_a0a4l(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType"));
  }
  public static SNode sourceNodeQuery_a0a0a0c(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L, 0x11ada7c82e2L, "nodeToCheck"));
  }
  public static SNode sourceNodeQuery_a0a0a0d(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11ada7b9a44L, 0x11ada7c82e2L, "nodeToCheck"));
  }
  public static SNode sourceNodeQuery_a0a0n(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, "operation"));
  }
  public static SNode sourceNodeQuery_a0a0a0a0a91(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x614c5660cccba06bL, 0xf48c620dd89b137L, "actionReference"));
  }
  public static SNode sourceNodeQuery_a0a0a0a0a02(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0xb4991e715d477d8L, 0xb4991e715d477daL, "actionReference"));
  }
  public static SNode sourceNodeQuery_a0a0a0a2a0a(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x110e5250918L, 0x110e52557daL, "message")), MetaAdapterFactory.getContainmentLink(0xf61473f9130f42f6L, 0xb98d6c438812c2f6L, 0x110e5064e8fL, 0x110e50678bdL, "message"));
  }
  public static SNode sourceNodeQuery_a0b0a0a0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11d72af5892L, 0x7bf9131d2468ca92L, "parameter"));
  }
  public static SNode sourceNodeQuery_a0a0a0a0a0(final SourceSubstituteMacroNodeContext _context) {
    SNode conceptId = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x5fea1eb9fefb6fe7L, "jetbrains.mps.lang.smodel.structure.ConceptId"));
    ConceptId__BehaviorDescriptor.setConcept_id5ZE7FBYYR6j.invoke(conceptId, SNodeOperations.getConcept(SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1d33213L, 0x119e1d356c6L, "declaration")))));
    return conceptId;
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0d6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x11e314cad13L, "code")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0f6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, 0x486f8079df2fd868L, "logEvents"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0e(final SourceSubstituteMacroNodesContext _context) {
    return ITestCase__BehaviorDescriptor.getTestSet_idhGB2z8L.invoke(_context.getNode());
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0a0g(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4c010b30d9be4be7L, 0x4c010b30d9be4be8L, "inputNodes"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0a1g(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4c010b30d9be4be7L, 0x4c010b30d9be5494L, "outputNodes"));
  }
  public static Iterable<SNode> sourceNodesQuery_a1a0a0a2g(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x4c010b30d9be4be7L, 0x5bf7864595df8b02L, "migration"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0f(final SourceSubstituteMacroNodesContext _context) {
    return ITestCase__BehaviorDescriptor.getTestSet_idhGB2z8L.invoke(_context.getNode());
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0h(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb661L, "beforeTests")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0j(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x2045125020efb66cL, "afterTests")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a11(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b78c499b5L, "testMethods"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0c11(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getNodeDescendants(_context.getNode(), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"), false, new SAbstractConcept[]{});
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0e11(final SourceSubstituteMacroNodesContext _context) {
    Set<SNode> set = SetSequence.fromSet(new LinkedHashSet<SNode>());
    for (SNode ref : ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, "body")), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1d33213L, "jetbrains.mps.lang.test.structure.TestNodeReference"), false, new SAbstractConcept[]{}))) {
      SetSequence.fromSet(set).addElement(SLinkOperations.getTarget(ref, MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x119e1d33213L, 0x119e1d356c6L, "declaration")));
    }
    return ListSequence.fromListWithValues(new ArrayList<SNode>(), set);
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0e11(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0e11(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b5a762e97L, "methods"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a4l(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, "parameter"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a4l_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, "throwsItem"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x443f4c36fcf54eb6L, 0x95008d06ed259e3eL, 0x118bd711e29L, 0x118bd877799L, "actualArgument"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0a0a0a51(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e223413eeL, 0x11e22346d26L, "keyStrokes"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0d0a0a0a61(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2ec0ea8c5348f79L, 0xfc092b6b78L, "statementList")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0a0a0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11a2f985130L, 0x11a2f989195L, "before"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0b0a0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11a2f985130L, 0x11a2f98d40fL, "after"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a0(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> nodes = new ArrayList<SNode>();
    for (SNode nodeTocheck : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, "jetbrains.mps.lang.test.structure.NodesTestCase"), false, false), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b78c37cc6L, "nodesToCheck")))) {
      ListSequence.fromList(nodes).addElement(SNodeOperations.cast(nodeTocheck, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b5a38fc01L, "jetbrains.mps.lang.test.structure.TestNode")));
    }
    return nodes;
  }
  public static Iterable<SNode> sourceNodesQuery_a0b0a0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"));
  }
  public static Iterable<SNode> sourceNodesQuery_a0a0a(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, "annotation"));
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("1217247775420", new QueriesGenerated.RRC(i++));
    rrcMethods.put("1217247038443", new QueriesGenerated.RRC(i++));
    rrcMethods.put("1227010390717", new QueriesGenerated.RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(rrcMethods.containsKey(id))) {
      return super.getReductionRuleCondition(identity);
    }
    return rrcMethods.get(id);
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.baseMappingRule_Condition_a4(ctx);
        case 1:
          return QueriesGenerated.baseMappingRule_Condition_a5(ctx);
        case 2:
          return QueriesGenerated.baseMappingRule_Condition_a31(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, MapRootRuleCondition> mrrcMethods = new HashMap<String, MapRootRuleCondition>();
  {
    int i = 0;
    mrrcMethods.put("1216994496569", new QueriesGenerated.MRRC(i++));
  }
  @Override
  @NotNull
  public MapRootRuleCondition getMapRootRuleCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(mrrcMethods.containsKey(id))) {
      return super.getMapRootRuleCondition(identity);
    }
    return mrrcMethods.get(id);
  }
  private static class MRRC implements MapRootRuleCondition {
    private final int methodKey;
    public MRRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull MapRootRuleContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.baseMappingRule_Condition_a0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("4277730795458378995", new QueriesGenerated.SNQ(i++));
    snqMethods.put("4277730795458379007", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1227010390721", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1863298100471496915", new QueriesGenerated.SNQ(i++));
    snqMethods.put("6610965663658714965", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1765785632127538090", new QueriesGenerated.SNQ(i++));
    snqMethods.put("3455411064017536710", new QueriesGenerated.SNQ(i++));
    snqMethods.put("1221567898644", new QueriesGenerated.SNQ(i++));
    snqMethods.put("8933192351752021163", new QueriesGenerated.SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snqMethods.containsKey(id))) {
      return super.getSourceNodeQuery(identity);
    }
    return snqMethods.get(id);
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_a0a0a0c(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_a0a0a0d(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_a0a0n(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_a0a0a0a0a91(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_a0a0a0a0a02(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_a0a0a0a0a0(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_a0a0a0a2a0a(ctx);
        case 7:
          return QueriesGenerated.sourceNodeQuery_a0a4l(ctx);
        case 8:
          return QueriesGenerated.sourceNodeQuery_a0b0a0a0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("1225533437710", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1863298100471447341", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1863298100471541174", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("3200641626717975126", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("3200641626717975138", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1216995908944", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8762304748376777524", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8762304748376777926", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1225975607726", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1221567884870", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1221567898689", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1221567898723", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1221567898732", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1221567898748", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1732396662099747730", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1225976113129", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("1225976257814", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("9110034126561069135", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("7633582661619144970", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("5219531754070592234", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("5476670926298740062", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8951526261572314604", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("8951526261572327334", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("6626913010126012622", new QueriesGenerated.SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snsqMethods.containsKey(id))) {
      return super.getSourceNodesQuery(identity);
    }
    return snsqMethods.get(id);
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a6(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0a0a0a51(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0d0a0a0a61(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0a0a0(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0b0a0(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0f(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0h(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0j(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a11(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0c11(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0e11(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0e11(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0e11(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a4l(ctx));
        case 14:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a4l_0(ctx));
        case 15:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0(ctx));
        case 16:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0a0(ctx));
        case 17:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a(ctx));
        case 18:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0b0d6(ctx));
        case 19:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0f6(ctx));
        case 20:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0e(ctx));
        case 21:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0a0g(ctx));
        case 22:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a0a0a0a1g(ctx));
        case 23:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_a1a0a0a2g(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("3743352646565756793", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L, 0xf8cc56b202L, "value"), "false"));
    pvqMethods.put("1863298100471415971", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "keys"));
    pvqMethods.put("1863298100471541117", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "10"));
    pvqMethods.put("1863298100471541125", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "x"));
    pvqMethods.put("1863298100471541138", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "10"));
    pvqMethods.put("1863298100471541146", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "y"));
    pvqMethods.put("1863298100471541162", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "eventTargetComponent"));
    pvqMethods.put("6270156512831272167", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "15"));
    pvqMethods.put("6270156512831280036", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value"), "15"));
    pvqMethods.put("1230128844193", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "str"));
    pvqMethods.put("5105622777403291104", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "value"));
    pvqMethods.put("3426622257418792365", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), ""));
    pvqMethods.put("4484885613884807180", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "project path"));
    pvqMethods.put("4484885613884807190", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "model.fq.name"));
    pvqMethods.put("1031873601093426076", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L, 0xf8cc56b202L, "value"), "false"));
    pvqMethods.put("1216995305410", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "NodesTestCase"));
    pvqMethods.put("1216996538618", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "testMethod"));
    pvqMethods.put("1224603580888", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "TestCaseName$TestBody"));
    pvqMethods.put("1221573038179", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "testMethod"));
    pvqMethods.put("6339244025081889497", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L, 0xf8cc56b202L, "value"), "true"));
    pvqMethods.put("1224603647997", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "TestBody"));
    pvqMethods.put("3426622257418562354", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("1225535751451", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("1221567884880", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "test_NodesTestMethod"));
    pvqMethods.put("1221567898677", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("1221567898664", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "varName"));
    pvqMethods.put("1221567898738", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "method"));
    pvqMethods.put("1225976113120", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("1225976126785", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "method"));
    pvqMethods.put("3485705737562158822", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), null));
    pvqMethods.put("8933192351751945112", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), null));
    pvqMethods.put("1229198973223", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "project path"));
    pvqMethods.put("1229198973268", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "model.fq.name"));
    pvqMethods.put("1229198684555", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "EditorTestCaseName"));
    pvqMethods.put("1229198973211", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "testMethod"));
    pvqMethods.put("6270156512822429978", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "before"));
    pvqMethods.put("6270156512822432464", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "after"));
    pvqMethods.put("592868908271467485", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "id"));
    pvqMethods.put("5476670926298740080", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "project path"));
    pvqMethods.put("5476670926298740090", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "model.fq.name"));
    pvqMethods.put("5476670926298740103", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b201L, 0xf8cc56b202L, "value"), "false"));
    pvqMethods.put("5476670926298740050", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "MigrationTestCaseTemplate"));
    pvqMethods.put("5476670926298740069", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "testMethod"));
    pvqMethods.put("5476670926298740116", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "TestCaseName$TestBody"));
    pvqMethods.put("8951526261572721512", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "testMethod"));
    pvqMethods.put("8951526261572307416", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("8951526261572327321", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "nodeId"));
    pvqMethods.put("8951526261572351788", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x11157a3736dL, 0x11157a64c91L, "fqClassName"), "MigrationScript"));
    pvqMethods.put("5476670926298856539", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "TestBody"));
    pvqMethods.put("1227269295333973303", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), null));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0d0a0c(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0a41(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0a0a61(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1a0a0a0a0q(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0b0a0a0a61(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1a1a0a0a0q(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a2a0a0a0q(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a1a3a0a0r(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a2a3a0a0r(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0s(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0v(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0a0(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0_1(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0c0a0_1(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0d0a0_0(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1_1(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1f(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0f(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0f(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0c0a0f(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0l(ctx);
        case 21:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0c11(ctx);
        case 22:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0b0c11(ctx);
        case 23:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1c11(ctx);
        case 24:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a4l(ctx);
        case 25:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a4l(ctx);
        case 26:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1e11(ctx);
        case 27:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0_2(ctx);
        case 28:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1a0(ctx);
        case 29:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0(ctx);
        case 30:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0b0a0a(ctx);
        case 31:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0(ctx);
        case 32:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0c0a0(ctx);
        case 33:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1(ctx);
        case 34:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0e(ctx);
        case 35:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0d6(ctx);
        case 36:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0d6(ctx);
        case 37:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0_1(ctx);
        case 38:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0_0(ctx);
        case 39:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0c0a0_0(ctx);
        case 40:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0d0a0(ctx);
        case 41:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1_0(ctx);
        case 42:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a1e(ctx);
        case 43:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0e(ctx);
        case 44:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0b0a0e(ctx);
        case 45:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0a0a6(ctx);
        case 46:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0a0b6(ctx);
        case 47:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a2g(ctx);
        case 48:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0g(ctx);
        case 49:
          return QueriesGenerated.propertyMacro_GetPropertyValue_a0a0a0a0_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("1863298100471541194", new QueriesGenerated.IfMC(i++));
    imcMethods.put("3455411064017514090", new QueriesGenerated.IfMC(i++));
    imcMethods.put("8762304748376777546", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7965618678812608497", new QueriesGenerated.IfMC(i++));
    imcMethods.put("8762304748376777948", new QueriesGenerated.IfMC(i++));
    imcMethods.put("7965618678812561189", new QueriesGenerated.IfMC(i++));
    imcMethods.put("8933192351751931378", new QueriesGenerated.IfMC(i++));
    imcMethods.put("4296455270565126151", new QueriesGenerated.IfMC(i++));
    imcMethods.put("5219531754070576524", new QueriesGenerated.IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(imcMethods.containsKey(id))) {
      return super.getIfMacroCondition(identity);
    }
    return imcMethods.get(id);
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_a0f0a0a0a61(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_a0a0c0a0(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_a0h(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_a0i(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_a0j(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_a0k(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_a1a0a0(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_a0e6(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_a0f6(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("1225533437716", new QueriesGenerated.RTQ(0, null));
    rtqMethods.put("6270156512831270410", new QueriesGenerated.RTQ(1, "eventTargetComponent"));
    rtqMethods.put("6270156512831272175", new QueriesGenerated.RTQ(2, "x"));
    rtqMethods.put("6270156512831280044", new QueriesGenerated.RTQ(3, "y"));
    rtqMethods.put("5219531754070610759", new QueriesGenerated.RTQ(4, "ERROR_INT"));
    rtqMethods.put("3807954383032426142", new QueriesGenerated.RTQ(5, "Priority"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    final String id = queryKey.getTemplateNode().getNodeId().toString();
    if (!(rtqMethods.containsKey(id))) {
      return super.getReferenceTargetQuery(queryKey);
    }
    return rtqMethods.get(id);
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_a0a0g(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_a0a0d0a0a71(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_a0a1a3a0a0r(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_a0a2a3a0a0r(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_a0a0a0a5g(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_a1a0a0a5g(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
}
