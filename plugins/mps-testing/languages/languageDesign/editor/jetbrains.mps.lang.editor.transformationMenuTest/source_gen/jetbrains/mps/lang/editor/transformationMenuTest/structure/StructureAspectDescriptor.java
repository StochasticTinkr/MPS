package jetbrains.mps.lang.editor.transformationMenuTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(2);
  /*package*/ final ConceptDescriptor myConceptTransformationLocation_Test = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.transformationMenuTest.structure.TransformationLocation_Test", MetaIdFactory.conceptId(0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x595469d6668817a2L)).super_("jetbrains.mps.lang.editor.structure.TransformationLocation").super_(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defb64aa6L)).parents("jetbrains.mps.lang.editor.structure.TransformationLocation").parentIds(MetaIdFactory.conceptId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x7c45559defb64aa6L)).alias("test location", "location for use in tests").sourceNode(new SNodePointer("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.transformationMenuTest.structure)", "6436886136983394210")).create();
  /*package*/ final ConceptDescriptor myConceptTransformationMenuTestConcept = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.transformationMenuTest.structure.TransformationMenuTestConcept", MetaIdFactory.conceptId(0x4eb772b04df3414aL, 0xb89463abeb912f56L, 0x208970783ba43296L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).alias("transformation menu test concept", "").sourceNode(new SNodePointer("r:c6b5a119-ed4d-420e-b7df-fa1b4101c68f(jetbrains.mps.lang.editor.transformationMenuTest.structure)", "2344528742722056854")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptTransformationLocation_Test.getId(), 0);
    myIndexMap.put(myConceptTransformationMenuTestConcept.getId(), 1);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptTransformationLocation_Test, myConceptTransformationMenuTestConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptTransformationLocation_Test;
      case 1:
        return myConceptTransformationMenuTestConcept;
      default:
        throw new IllegalStateException();
    }
  }
}
