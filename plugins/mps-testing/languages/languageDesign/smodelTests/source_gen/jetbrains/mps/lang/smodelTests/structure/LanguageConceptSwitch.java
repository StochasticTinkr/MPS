package jetbrains.mps.lang.smodelTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Child = 0;
  public static final int ChildSubConcept = 1;
  public static final int GrandChild = 2;
  public static final int ReferenceContainer = 3;
  public static final int ReferenceContainerSubConcept = 4;
  public static final int Root = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL);
    builder.put(0x3dd540b968e9fbfL, Child);
    builder.put(0x7a02788de4ab4dL, ChildSubConcept);
    builder.put(0x3dd540b968e9fc4L, GrandChild);
    builder.put(0x798c0d67da965ac6L, ReferenceContainer);
    builder.put(0x279bb63b8ca8b7feL, ReferenceContainerSubConcept);
    builder.put(0x3dd540b968e9fc5L, Root);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
