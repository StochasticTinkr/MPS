package jetbrains.mps.lang.smodelTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(6);
  /*package*/ final ConceptDescriptor myConceptChild = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.Child", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc0L, "grandChild_0_1", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L), true, false, false), new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc1L, "grandChild_1", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L), false, false, false), new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc2L, "grandChild_0_n", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L), true, true, false), new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc3L, "grandChild_1_n", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L), false, true, false)).children(new String[]{"grandChild_0_1", "grandChild_1", "grandChild_0_n", "grandChild_1_n"}, new boolean[]{false, false, true, true}).sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "278471160714141631")).create();
  /*package*/ final ConceptDescriptor myConceptChildSubConcept = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.ChildSubConcept", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL)).super_("jetbrains.mps.lang.smodelTests.structure.Child").super_(MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL)).parents("jetbrains.mps.lang.smodelTests.structure.Child").parentIds(MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL)).sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "34342663958604621")).create();
  /*package*/ final ConceptDescriptor myConceptGrandChild = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.GrandChild", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "278471160714141636")).create();
  /*package*/ final ConceptDescriptor myConceptReferenceContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x798c0d67da965ac6L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ICanSuppressErrors").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f42L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x798c0d67da965ac7L, "root", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L), false), new ConceptDescriptorBuilder.Ref(0x798c0d67da965ac8L, "leftChild", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL), true), new ConceptDescriptorBuilder.Ref(0x798c0d67da965ac9L, "rightChild", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL), true)).references("root", "leftChild", "rightChild").sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "8758390115028851398")).create();
  /*package*/ final ConceptDescriptor myConceptReferenceContainerSubConcept = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x279bb63b8ca8b7feL)).super_("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer").super_(MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x798c0d67da965ac6L)).parents("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer").parentIds(MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x798c0d67da965ac6L)).sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "2854075155748534270")).create();
  /*package*/ final ConceptDescriptor myConceptRoot = new ConceptDescriptorBuilder("jetbrains.mps.lang.smodelTests.structure.Root", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fc5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.ICanSuppressErrors").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f42L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc6L, "child_0_n", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL), true, true, false), new ConceptDescriptorBuilder.Link(0x3dd540b968e9fc7L, "child_1_n", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x3dd540b968e9fbfL), false, true, false), new ConceptDescriptorBuilder.Link(0x7a02788de4ab50L, "childSubConcept_0_n", MetaIdFactory.conceptId(0xb02ae39f4c164545L, 0x8dfa88df16804e7eL, 0x7a02788de4ab4dL), true, true, false)).children(new String[]{"child_0_n", "child_1_n", "childSubConcept_0_n"}, new boolean[]{true, true, true}).sourceNode(new SNodePointer("r:43b4d418-d4ca-4d97-ab07-31e4f3ddb3e5(jetbrains.mps.lang.smodelTests.structure)", "278471160714141637")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptChild.getId(), 0);
    myIndexMap.put(myConceptChildSubConcept.getId(), 1);
    myIndexMap.put(myConceptGrandChild.getId(), 2);
    myIndexMap.put(myConceptReferenceContainer.getId(), 3);
    myIndexMap.put(myConceptReferenceContainerSubConcept.getId(), 4);
    myIndexMap.put(myConceptRoot.getId(), 5);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChild, myConceptChildSubConcept, myConceptGrandChild, myConceptReferenceContainer, myConceptReferenceContainerSubConcept, myConceptRoot);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptChild;
      case 1:
        return myConceptChildSubConcept;
      case 2:
        return myConceptGrandChild;
      case 3:
        return myConceptReferenceContainer;
      case 4:
        return myConceptReferenceContainerSubConcept;
      case 5:
        return myConceptRoot;
      default:
        throw new IllegalStateException();
    }
  }
}
