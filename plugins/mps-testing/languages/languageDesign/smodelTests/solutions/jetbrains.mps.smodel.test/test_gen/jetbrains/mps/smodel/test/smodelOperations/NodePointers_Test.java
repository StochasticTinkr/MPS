package jetbrains.mps.smodel.test.smodelOperations;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPointerOperations;
import org.jetbrains.mps.openapi.model.SModelReference;
import jetbrains.mps.lang.test.behavior.INodesTestMethod__BehaviorDescriptor;
import jetbrains.mps.smodel.SModelUtil_new;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.smodel.SReference;

@MPSLaunch
public class NodePointers_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(NodePointers_Test.class, "${mps_home}", "r:3526f944-06ad-48b3-a2a1-fffa752849ed(jetbrains.mps.smodel.test.smodelOperations@tests)", false);


  public NodePointers_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_ResolveData() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_ResolveData", true);
  }
  @Test
  public void test_PointerEquality() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_PointerEquality", true);
  }
  @Test
  public void test_IsOperation() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_IsOperation", true);
  }
  @Test
  public void test_SetPtrOperation() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_SetPtrOperation", true);
  }
  @Test
  public void test_ResolveDataModel() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_ResolveDataModel", true);
  }
  @Test
  public void test_ModelPointerEquality() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_ModelPointerEquality", true);
  }
  @Test
  public void test_NodePointerGetModelOp() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodePointerGetModelOp", true);
  }
  @Test
  public void test_OperationsNullSafe() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_OperationsNullSafe", true);
  }
  @Test
  public void test_NodeTypeCheck535833678907605667() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678907605667", true);
  }
  @Test
  public void test_NodeTypeCheck535833678907609256() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678907609256", true);
  }
  @Test
  public void test_NodeTypeCheck535833678905705670() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678905705670", true);
  }
  @Test
  public void test_NodeTypeCheck535833678905709959() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678905709959", true);
  }
  @Test
  public void test_NodeTargetNodeNotFoundInRepositoryCheck535833678906728045() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTargetNodeNotFoundInRepositoryCheck535833678906728045", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905879477() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905879477", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905721739() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905721739", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905852712() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905852712", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905854558() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905854558", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905860220() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905860220", true);
  }
  @Test
  public void test_NodeTypeCheck535833678905910987() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678905910987", true);
  }
  @Test
  public void test_NodeTypeCheck535833678905916302() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678905916302", true);
  }
  @Test
  public void test_NodeTypeCheck535833678905993796() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678905993796", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678905987697() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678905987697", true);
  }
  @Test
  public void test_NodeTypeCheck535833678906005800() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck535833678906005800", true);
  }
  @Test
  public void test_NodeTypeSystemCheck535833678906363602() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeSystemCheck535833678906363602", true);
  }
  @Test
  public void test_NodeTypeCheck6012981979751350087() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck6012981979751350087", true);
  }
  @Test
  public void test_NodeTypeCheck6012981979751302141() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_NodeTypeCheck6012981979751302141", true);
  }
  @Test
  public void test_ErrorMessagesCheck535833678905969550() throws Throwable {
    runTest("jetbrains.mps.smodel.test.smodelOperations.NodePointers_Test$TestBody", "test_ErrorMessagesCheck535833678905969550", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_ResolveData() throws Exception {
      addNodeById("535833678905714232");
      SNode data = this.resolveData();

      {
        List<SNode> nodesBefore = ListSequence.fromListAndArray(new ArrayList<SNode>(), data);
        List<SNode> nodesAfter = ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_hosvw_a0a0b0d0a33());
        Assert.assertNull("The nodes '" + nodesBefore + "' and '" + nodesAfter + "' do not match!", new NodesMatcher().match(nodesBefore, nodesAfter));
      }
    }
    public void test_PointerEquality() throws Exception {
      addNodeById("535833678905714232");
      SNode data = this.resolveData();

      Assert.assertEquals(SNodeOperations.getPointer(data), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908145106"));
      Assert.assertEquals(SNodeOperations.getPointer(SNodeOperations.getParent(data)), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678907595165"));
      Assert.assertEquals(SNodeOperations.getPointer(ListSequence.fromList(SLinkOperations.getChildren(data, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"))).first()), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908048646"));
    }
    public void test_IsOperation() throws Exception {
      addNodeById("535833678905714232");
      SNode data = this.resolveData();

      Assert.assertTrue(SNodeOperations.is(data, new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908145106")));
      Assert.assertTrue(SNodeOperations.is(SNodeOperations.getParent(data), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678907595165")));
      Assert.assertTrue(SNodeOperations.is(ListSequence.fromList(SLinkOperations.getChildren(data, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"))).first(), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908048646")));

      Assert.assertFalse(SNodeOperations.is(data, new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678907595165")));
    }
    public void test_SetPtrOperation() throws Exception {
      addNodeById("535833678905714232");
      SNode clType = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType"));

      SLinkOperations.setTargetPointer(clType, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908607806"));
      {
        List<SNode> nodesBefore = ListSequence.fromListAndArray(new ArrayList<SNode>(), clType);
        List<SNode> nodesAfter = ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_hosvw_a0a0b0e0d33());
        Assert.assertNull("The nodes '" + nodesBefore + "' and '" + nodesAfter + "' do not match!", new NodesMatcher().match(nodesBefore, nodesAfter));
      }

      SNodeReference classifier = new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908607934");
      SLinkOperations.setTargetPointer(clType, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), classifier);
      {
        List<SNode> nodesBefore = ListSequence.fromListAndArray(new ArrayList<SNode>(), clType);
        List<SNode> nodesAfter = ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_hosvw_a0a0b0i0d33());
        Assert.assertNull("The nodes '" + nodesBefore + "' and '" + nodesAfter + "' do not match!", new NodesMatcher().match(nodesBefore, nodesAfter));
      }
    }
    public void test_ResolveDataModel() throws Exception {
      addNodeById("535833678905714232");
      SModel dataModel = this.resolveDataModel();
      Assert.assertTrue(SNodeOperations.is(ListSequence.fromList(SModelOperations.nodes(dataModel, null)).first(), new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678907595165")));
    }
    public void test_ModelPointerEquality() throws Exception {
      addNodeById("535833678905714232");
      SModel dataModel = this.resolveDataModel();
      Assert.assertEquals(SModelOperations.getPointer(dataModel), PersistenceFacade.getInstance().createModelReference("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)"));
    }
    public void test_NodePointerGetModelOp() throws Exception {
      addNodeById("535833678905714232");
      Assert.assertEquals(SPointerOperations.getModel(new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678907595165")), PersistenceFacade.getInstance().createModelReference("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)"));
    }
    public void test_OperationsNullSafe() throws Exception {
      addNodeById("535833678905714232");
      SNodeReference np = null;
      SModelReference mp = null;
      SNode n = null;
      SModel m = null;

      Assert.assertNull(SPointerOperations.getModel(np));

      Assert.assertNull(SPointerOperations.resolveNode(np, myProject.getRepository()));
      Assert.assertNull(SPointerOperations.resolveNode(np, null));

      Assert.assertNull(SPointerOperations.resolveModel(mp, myProject.getRepository()));
      Assert.assertNull(SPointerOperations.resolveModel(mp, null));

      Assert.assertNull(SNodeOperations.getPointer(n));
      Assert.assertNull(SModelOperations.getPointer(m));
    }

    public void test_NodeTypeCheck535833678907605667() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678907605667"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678907605665"));
    }
    public void test_NodeTypeCheck535833678907609256() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678907609256"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678907609254"));
    }
    public void test_NodeTypeCheck535833678905705670() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905705670"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905632710"));
    }
    public void test_NodeTypeCheck535833678905709959() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905709959"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905706769"));
    }
    public void test_NodeTargetNodeNotFoundInRepositoryCheck535833678906728045() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678906728045"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905710102"));
    }
    public void test_NodeTypeSystemCheck535833678905879477() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905879477"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905879473"));
    }
    public void test_NodeTypeSystemCheck535833678905721739() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905721739"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905721167"));
    }
    public void test_NodeTypeSystemCheck535833678905852712() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905852712"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905852708"));
    }
    public void test_NodeTypeSystemCheck535833678905854558() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905854558"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905854554"));
    }
    public void test_NodeTypeSystemCheck535833678905860220() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905860220"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905857278"));
    }
    public void test_NodeTypeCheck535833678905910987() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905910987"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905903293"));
    }
    public void test_NodeTypeCheck535833678905916302() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905916302"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905912149"));
    }
    public void test_NodeTypeCheck535833678905993796() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905993796"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905981337"));
    }
    public void test_NodeTypeSystemCheck535833678905987697() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905987697"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905985146"));
    }
    public void test_NodeTypeCheck535833678906005800() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678906005800"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678906001974"));
    }
    public void test_NodeTypeSystemCheck535833678906363602() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678906363602"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678906356748"));
    }
    public void test_NodeTypeCheck6012981979751350087() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("6012981979751350087"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("6012981979751334876"));
    }
    public void test_NodeTypeCheck6012981979751302141() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("6012981979751302141"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("6012981979751298239"));
    }
    public void test_ErrorMessagesCheck535833678905969550() throws Exception {
      SNode operation = SNodeOperations.cast(getRealNodeById("535833678905969550"), MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x1510445f8a2c272dL, "jetbrains.mps.lang.test.structure.INodesTestMethod"));
      INodesTestMethod__BehaviorDescriptor.perform_id1kgh5YabdhC.invoke(operation, getRealNodeById("535833678905714262"));
    }

    public SNode resolveData() {
      return SPointerOperations.resolveNode(new SNodePointer("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)", "535833678908145106"), myProject.getRepository());
    }
    public SModel resolveDataModel() {
      return SPointerOperations.resolveModel(PersistenceFacade.getInstance().createModelReference("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)"), myProject.getRepository());
    }
    private static SNode _quotation_createNode_hosvw_a0a0b0d0a33() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0xf8c108ca66L, "ClassConcept"), null, null, false);
      SNodeAccessUtil.setProperty(quotedNode_1, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x73c6d8a8c021f99L, "nonStatic"), "true");
      SNodeAccessUtil.setProperty(quotedNode_1, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xfa5cee6dfaL, "abstractClass"), "false");
      SNodeAccessUtil.setProperty(quotedNode_1, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x11c6af4b284L, "isFinal"), "false");
      SNodeAccessUtil.setProperty(quotedNode_1, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "Data");
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0xf8c108ca68L, "FieldDeclaration"), null, null, false);
      SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "MEMBER");
      SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x120c4a208a1L, "isVolatile"), "false");
      SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, "isFinal"), "true");
      SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x776fe644792f90adL, "isTransient"), "false");
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x11d47da71ecL, "StringType"), null, null, false);
      quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type"), quotedNode_4);
      quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0xf93d565d10L, "StringLiteral"), null, null, false);
      SNodeAccessUtil.setProperty(quotedNode_5, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, "value"), "member");
      quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, "initializer"), quotedNode_5);
      quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x10af9581ff1L, "PublicVisibility"), null, null, false);
      quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility"), quotedNode_6);
      quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, "member"), quotedNode_2);
      quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x10af9581ff1L, "PublicVisibility"), null, null, false);
      quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility"), quotedNode_3);
      return quotedNode_1;
    }
    private static SNode _quotation_createNode_hosvw_a0a0b0e0d33() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x101de48bf9eL, "ClassifierType"), null, null, false);
      quotedNode_1.setReference(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), SReference.create(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), quotedNode_1, facade.createModelReference("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)"), facade.createNodeId("535833678908607806")));
      return quotedNode_1;
    }
    private static SNode _quotation_createNode_hosvw_a0a0b0i0d33() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage"), 0x101de48bf9eL, "ClassifierType"), null, null, false);
      quotedNode_1.setReference(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), SReference.create(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), quotedNode_1, facade.createModelReference("r:6598b34f-7cc0-4465-ba61-6e5504d2a2be(jetbrains.mps.smodel.test.data)"), facade.createNodeId("535833678908607934")));
      return quotedNode_1;
    }
  }
}
