package jetbrains.mps.lang.pattern.testLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ListValue = 0;
  public static final int PatternTest = 1;
  public static final int PropertyValue = 2;
  public static final int TestListReference = 3;
  public static final int TestPropertyVariableReference = 4;
  public static final int TestVariableReference = 5;
  public static final int VariableValue = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x5206c8887c5d4275L, 0xbc0a7c4da12f46e8L);
    builder.put(0x15b423b3f8d0614aL, ListValue);
    builder.put(0x78d6da5e3799eb08L, PatternTest);
    builder.put(0x15b423b3f8d042b6L, PropertyValue);
    builder.put(0x15b423b3f8d0614bL, TestListReference);
    builder.put(0x15b423b3f8cfebb8L, TestPropertyVariableReference);
    builder.put(0x78d6da5e3799eb11L, TestVariableReference);
    builder.put(0x78d6da5e3799eb0eL, VariableValue);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
