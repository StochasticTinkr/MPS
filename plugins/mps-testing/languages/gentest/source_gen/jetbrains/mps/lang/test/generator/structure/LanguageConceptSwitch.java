package jetbrains.mps.lang.test.generator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ArgumentReference = 0;
  public static final int GeneratorTest = 1;
  public static final int ModelArgument = 2;
  public static final int TestArgument = 3;
  public static final int TestAssertion = 4;
  public static final int TransformationMatchAssertion = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x68015e26cc4d49dbL, 0x8715b643faea1769L);
    builder.put(0x7b1db36ecf0d05bL, ArgumentReference);
    builder.put(0x7b1db36ecf092beL, GeneratorTest);
    builder.put(0x7b1db36ecf09c6eL, ModelArgument);
    builder.put(0x7b1db36ecf09c6aL, TestArgument);
    builder.put(0x7b1db36ecf0d058L, TestAssertion);
    builder.put(0x7b1db36ecf0d057L, TransformationMatchAssertion);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
