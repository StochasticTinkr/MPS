package jetbrains.mps.ide.mpsmigration.v_2018_2;

/*Generated by MPS */

import jetbrains.mps.migration.global.BaseProjectMigration;
import jetbrains.mps.migration.global.CleanupProjectMigration;
import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.lang.smodel.query.runtime.CommandUtil;
import jetbrains.mps.project.EditableFilteringScope;
import jetbrains.mps.lang.smodel.query.runtime.QueryExecutionContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ReapplyPatternMigration extends BaseProjectMigration implements CleanupProjectMigration {

  public ReapplyPatternMigration() {
    super("jetbrains.mps.ide.mpsmigration.v182.ReapplyPatternMigration");
  }

  @Override
  public String getDescription() {
    return "Fix pattern language usages";
  }
  @Override
  public boolean doExecute(Project project) {
    {
      SearchScope scope_idu4d8_a0e = CommandUtil.createScope(project);
      final SearchScope scope_idu4d8_a0e_0 = new EditableFilteringScope(scope_idu4d8_a0e);
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_idu4d8_a0e_0;
        }
      };
      for (SNode pattern : CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.selectScope(null, context), MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4791L, "jetbrains.mps.lang.pattern.structure.PatternExpression"), false))) {
        Iterable<? extends SNode> deprecatedChildren = pattern.getChildren(MetaAdapterFactory.getContainmentLink(-3143127453834064983L, -5836335846783251545L, 1136720037777L, 1136720037778L, "patternNode"));
        if (Sequence.fromIterable(deprecatedChildren).count() == 1 && SLinkOperations.getTarget(pattern, MetaAdapterFactory.getContainmentLink(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4791L, 0x7d8b4408504314cdL, "pattern")) == null) {
          SLinkOperations.setNewChild(pattern, MetaAdapterFactory.getContainmentLink(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4791L, 0x7d8b4408504314cdL, "pattern"), MetaAdapterFactory.getConcept(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104659L, "jetbrains.mps.lang.quotation.structure.Quotation"));
          SLinkOperations.setTarget(SLinkOperations.getTarget(pattern, MetaAdapterFactory.getContainmentLink(0xd4615e3bd6714ba9L, 0xaf012b78369b0ba7L, 0x108a9cb4791L, 0x7d8b4408504314cdL, "pattern")), MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL, 0xbbcc75c4219e9555L, 0x1168c104659L, 0x1168c10465aL, "quotedNode"), Sequence.fromIterable(deprecatedChildren).first());
        }
      }
      return true;
    }
  }
  @Override
  public void forceExecutionNextTime(Project project) {
    setExecuted(project, false);
  }
}
