package jetbrains.mps.ide.httpsupport.manager.plugin;

/*Generated by MPS */

import org.jetbrains.ide.HttpRequestHandler;
import org.jetbrains.annotations.NotNull;
import io.netty.handler.codec.http.FullHttpRequest;
import io.netty.handler.codec.http.HttpMethod;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import io.netty.handler.codec.http.QueryStringDecoder;
import io.netty.channel.ChannelHandlerContext;
import java.io.IOException;
import java.net.URISyntaxException;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.structure.ExtensionPoint;
import io.netty.handler.codec.http.HttpResponseStatus;
import org.apache.log4j.Level;

public class MPSRequestManager extends HttpRequestHandler {

  @Override
  public boolean isSupported(@NotNull FullHttpRequest request) {
    return request.method() == HttpMethod.GET;
  }

  protected static Logger LOG = LogManager.getLogger(MPSRequestManager.class);
  @Override
  public boolean process(@NotNull QueryStringDecoder decoder, @NotNull FullHttpRequest request, @NotNull ChannelHandlerContext context) throws IOException {
    HttpRequest boxedRequest;
    try {
      boxedRequest = new HttpRequest(request, decoder, context.channel());
    } catch (URISyntaxException exception) {
      return false;
    }

    for (IHttpRequestHandler handler : Sequence.fromIterable(new ExtensionPoint<IHttpRequestHandler>("jetbrains.mps.ide.httpsupport.HttpRequestHandlerEP").getObjects())) {
      if (handler.canHandle(boxedRequest)) {
        try {
          handler.handle(boxedRequest);
        } catch (Exception e) {
          String errorHeader = "Request handler '" + handler.getName() + "' throws exception";

          boxedRequest.sendErrorResponse(HttpResponseStatus.INTERNAL_SERVER_ERROR, errorHeader, e);
          if (LOG.isEnabledFor(Level.ERROR)) {
            LOG.error(errorHeader, e);
          }
        } finally {
          return true;
        }
      }
    }
    return false;
  }
}
