package jetbrains.mps.ide.httpsupport.manager.plugin;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Objects;

public abstract class HttpRequestHandlerBase implements IHttpRequestHandler {

  protected HttpRequest request;


  @Override
  public boolean canHandle(@NotNull HttpRequest request) {
    init(request);

    return checkQueryPrefix();
  }


  @Override
  public void handle(@NotNull HttpRequest request) throws Exception {
    init(request);
  }

  private void init(@NotNull HttpRequest request) {
    if (this.request == request) {
      return;
    }

    this.request = request;
    initParameterValues();
  }

  private boolean checkQueryPrefix() {
    List<String> applicationIDSegments = HttpRequest.getSegmentsFor(applicationID());
    List<String> queryPathSegments = request.getSegments();
    if (ListSequence.fromList(queryPathSegments).count() < ListSequence.fromList(applicationIDSegments).count()) {
      return false;
    }
    for (int i = 0; i < ListSequence.fromList(applicationIDSegments).count(); i++) {
      if (!(Objects.equals(ListSequence.fromList(queryPathSegments).getElement(i), ListSequence.fromList(applicationIDSegments).getElement(i)))) {
        return false;
      }
    }
    return true;
  }

  protected abstract void initParameterValues();
}
