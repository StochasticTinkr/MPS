package jetbrains.mps.ide.httpsupport.nodeaccess.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.ide.actions.MPSCommonDataKeys;
import jetbrains.mps.project.MPSProject;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.ide.datatransfer.CopyPasteUtil;
import io.netty.handler.codec.http.QueryStringEncoder;
import jetbrains.mps.ide.httpsupport.manager.plugin.MPSRequestPortManager;

public class NodeURI_Action extends BaseAction {
  private static final Icon ICON = null;

  public NodeURI_Action() {
    super("Copy Node as URI", "", ICON);
    this.setIsAlwaysVisible(true);
    this.setExecuteOutsideCommand(false);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      SNode node = event.getData(MPSCommonDataKeys.NODE);
      if (node == null) {
        return false;
      }
    }
    {
      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    CopyPasteUtil.copyTextToClipboard(buildRequest_aha6g5_a0a0a5(event));

  }
  private static String buildRequest_aha6g5_a0a0a5(AnActionEvent event) {
    QueryStringEncoder encoder = new QueryStringEncoder("http://127.0.0.1:" + MPSRequestPortManager.getCurrentPort() + "/node");

    encoder.addParam("node", new nodeByModelPersistence_Converter().toString(event.getData(MPSCommonDataKeys.NODE)));
    encoder.addParam("project", event.getData(MPSCommonDataKeys.MPS_PROJECT).getName());

    return encoder.toString();
  }
}
