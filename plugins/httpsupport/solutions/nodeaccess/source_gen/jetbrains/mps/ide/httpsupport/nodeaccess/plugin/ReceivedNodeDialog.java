package jetbrains.mps.ide.httpsupport.nodeaccess.plugin;

/*Generated by MPS */

import com.intellij.openapi.ui.DialogWrapper;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.UIEditorComponent;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.openapi.editor.extensions.EditorExtensionUtil;
import org.jetbrains.annotations.Nullable;
import javax.swing.JComponent;
import com.intellij.openapi.ui.LabeledComponent;
import org.jetbrains.annotations.NonNls;
import jetbrains.mps.ide.datatransfer.CopyPasteUtil;

public class ReceivedNodeDialog extends DialogWrapper {

  private final SNode myNode;
  private final UIEditorComponent myEditorComponent;
  private final MPSProject myProject;

  public ReceivedNodeDialog(MPSProject project, SNode node) {
    super(project.getProject(), true);
    myNode = node;
    myProject = project;

    setTitle("HTTP Support Plugin Receive a Node");
    setOKButtonText("&Copy Node");
    setCancelButtonText("Ca&ncel");
    myEditorComponent = new UIEditorComponent(myProject.getRepository(), null);
    EditorExtensionUtil.extendUsingProject(myEditorComponent, myProject);

    init();
  }


  @Nullable
  @Override
  protected JComponent createCenterPanel() {
    return LabeledComponent.create(myEditorComponent, "Node:");
  }


  @Nullable
  @Override
  public JComponent getPreferredFocusedComponent() {
    return myEditorComponent;
  }

  @Override
  public void show() {
    myProject.getRepository().getModelAccess().runReadAction(new Runnable() {
      public void run() {
        myEditorComponent.editNode(myNode);
      }
    });
    super.show();
  }



  @Nullable
  @NonNls
  @Override
  protected String getDimensionServiceKey() {
    return this.getClass().getCanonicalName();
  }


  @Override
  protected void doOKAction() {
    CopyPasteUtil.copyNodeToClipboard(myNode);

    super.doOKAction();
  }


  @Override
  protected void dispose() {
    myEditorComponent.dispose();
    super.dispose();
  }
}
