package jetbrains.mps.ide.httpsupport.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myQueryParameter__BehaviorDescriptor = new QueryParameter__BehaviorDescriptor();
  private final BHDescriptor mySerializeFunction__BehaviorDescriptor = new SerializeFunction__BehaviorDescriptor();
  private final BHDescriptor mySerializedValueParameter__BehaviorDescriptor = new SerializedValueParameter__BehaviorDescriptor();
  private final BHDescriptor myValueToSerializeParameter__BehaviorDescriptor = new ValueToSerializeParameter__BehaviorDescriptor();
  private final BHDescriptor myDeserializeFunction__BehaviorDescriptor = new DeserializeFunction__BehaviorDescriptor();
  private final BHDescriptor myRequestURIBuilderExpression__BehaviorDescriptor = new RequestURIBuilderExpression__BehaviorDescriptor();
  private final BHDescriptor myRequestHandler__BehaviorDescriptor = new RequestHandler__BehaviorDescriptor();
  private final BHDescriptor myHandleRequestFunction__BehaviorDescriptor = new HandleRequestFunction__BehaviorDescriptor();
  private final BHDescriptor myCanHandleRequestFunction__BehaviorDescriptor = new CanHandleRequestFunction__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0m.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myCanHandleRequestFunction__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myDeserializeFunction__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myHandleRequestFunction__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myQueryParameter__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myRequestHandler__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myRequestURIBuilderExpression__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return mySerializeFunction__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return mySerializedValueParameter__BehaviorDescriptor;
          }
          break;
        case 8:
          if (true) {
            return myValueToSerializeParameter__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0m = buildConceptIndices(MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x5354a94149f37316L, "jetbrains.mps.ide.httpsupport.structure.CanHandleRequestFunction"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x3d1bb14fe83a1b05L, "jetbrains.mps.ide.httpsupport.structure.DeserializeFunction"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x4d5ac72154f64136L, "jetbrains.mps.ide.httpsupport.structure.HandleRequestFunction"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x205f4376c585b439L, "jetbrains.mps.ide.httpsupport.structure.QueryParameter"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x4d5ac72154f4d780L, "jetbrains.mps.ide.httpsupport.structure.RequestHandler"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x4027f9073ff5ce93L, "jetbrains.mps.ide.httpsupport.structure.RequestURIBuilderExpression"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x3d1bb14fe838a4f9L, "jetbrains.mps.ide.httpsupport.structure.SerializeFunction"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x3d1bb14fe838c5e4L, "jetbrains.mps.ide.httpsupport.structure.SerializedValueParameter"), MetaAdapterFactory.getConcept(0x817e4e70961e4a95L, 0x98a115e9f32231f1L, 0x3d1bb14fe8393f24L, "jetbrains.mps.ide.httpsupport.structure.ValueToSerializeParameter"));
}
