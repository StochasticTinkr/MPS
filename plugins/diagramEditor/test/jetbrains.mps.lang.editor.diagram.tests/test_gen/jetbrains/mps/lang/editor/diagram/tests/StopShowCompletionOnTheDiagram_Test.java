package jetbrains.mps.lang.editor.diagram.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import java.awt.Component;
import java.awt.event.MouseEvent;
import junit.framework.Assert;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

@MPSLaunch
public class StopShowCompletionOnTheDiagram_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(StopShowCompletionOnTheDiagram_Test.class, "${mps_home}", "r:e41d7e03-7ef3-4161-a48a-e48d8152e422(jetbrains.mps.lang.editor.diagram.tests@tests)", false);

  public StopShowCompletionOnTheDiagram_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_StopShowCompletionOnTheDiagram() throws Throwable {
    new StopShowCompletionOnTheDiagram_Test.TestBody(this).testMethod();
  }

  /*package*/ static class TestBody extends BaseEditorTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2278461409094282964", "2278461409094282966");
      {
        int x_hpnf0e_a0 = 10;
        int y_hpnf0e_a0 = 10;
        Component eventTargetComponent_hpnf0e_a0 = processMouseEvent(x_hpnf0e_a0, y_hpnf0e_a0, MouseEvent.MOUSE_PRESSED);
        processSecondaryMouseEvent(eventTargetComponent_hpnf0e_a0, x_hpnf0e_a0, y_hpnf0e_a0, MouseEvent.MOUSE_RELEASED);
        processSecondaryMouseEvent(eventTargetComponent_hpnf0e_a0, x_hpnf0e_a0, y_hpnf0e_a0, MouseEvent.MOUSE_CLICKED);
      }
      Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isVisible());
      pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), " ESCAPE"));
      Assert.assertTrue(!(getEditorComponent().getNodeSubstituteChooser().isVisible()));

    }
  }
}
