package jetbrains.mps.lang.editor.diagram.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import java.awt.Component;
import java.awt.event.MouseEvent;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.jetpad.mapper.Mapper;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import junit.framework.Assert;
import jetbrains.mps.nodeEditor.cells.jetpad.DiagramCell;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.jetpad.projectional.view.View;

@MPSLaunch
public class SelectPortQuery_Test extends BaseTransformationTest {
  @Test
  public void test_SelectPortQuery() throws Throwable {
    initTest("${mps_home}", "r:e41d7e03-7ef3-4161-a48a-e48d8152e422(jetbrains.mps.lang.editor.diagram.tests@tests)");
    runTest("jetbrains.mps.lang.editor.diagram.tests.SelectPortQuery_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("2278461409091838099", "2278461409091838103");
      {
        int x_vw537p_a0 = 67;
        int y_vw537p_a0 = 32;
        Component eventTargetComponent_vw537p_a0 = processMouseEvent(x_vw537p_a0, y_vw537p_a0, MouseEvent.MOUSE_PRESSED);
        processSecondaryMouseEvent(eventTargetComponent_vw537p_a0, x_vw537p_a0, y_vw537p_a0, MouseEvent.MOUSE_RELEASED);
        processSecondaryMouseEvent(eventTargetComponent_vw537p_a0, x_vw537p_a0, y_vw537p_a0, MouseEvent.MOUSE_CLICKED);
      }
      final Wrappers._T<Mapper> descendantMapper = new Wrappers._T<Mapper>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          EditorCell selectedCell = getEditorComponent().getSelectedCell();
          Assert.assertTrue(selectedCell != null);
          DiagramCell diagramCell = CellFinderUtil.findChildByClass(getEditorComponent().getRootCell(), DiagramCell.class, true);
          descendantMapper.value = diagramCell.getRootMapper().getDescendantMapper(SPropertyOperations.getString(SNodeOperations.cast(getNodeById("2278461409092334466"), SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x50560c9658e49c5L, 0xb8e79e4db4c7e97fL, "jetbrains.mps.lang.editor.diagram.testLanguage"), 0x4ce40ecaf41f722aL, "OutputPort"))), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
        }
      });
      Assert.assertTrue(descendantMapper.value != null && descendantMapper.value.getTarget() != null);
      Assert.assertTrue(((View) descendantMapper.value.getTarget()).focused().get());

    }
  }
}
