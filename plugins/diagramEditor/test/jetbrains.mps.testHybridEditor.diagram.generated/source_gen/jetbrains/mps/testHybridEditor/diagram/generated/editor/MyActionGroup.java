package jetbrains.mps.testHybridEditor.diagram.generated.editor;

/*Generated by MPS */

import jetbrains.mps.lang.editor.diagram.runtime.jetpad.palette.openapi.PaletteActionGroup;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.jetpad.DiagramCell;
import jetbrains.mps.lang.editor.diagram.runtime.jetpad.palette.openapi.PaletteElement;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import javax.swing.Icon;

public class MyActionGroup implements PaletteActionGroup {
  private Iterable<SNode> myNodes;
  private DiagramCell myDiagramCell;
  private String myText;

  public MyActionGroup(Iterable<SNode> nodes, DiagramCell diagramCell, SNode container, String text) {
    myNodes = nodes;
    myDiagramCell = diagramCell;
    myText = text;
  }
  @Override
  public PaletteElement[] getElements() {
    final List<PaletteElement> paletteElements = ListSequence.fromList(new ArrayList<PaletteElement>());
    for (SNode node : Sequence.fromIterable(myNodes).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0x20a804e2ec40c2c8L, "jetbrains.mps.testHybridEditor.structure.MetaBlock"));
      }
    })) {
      ListSequence.fromList(paletteElements).addElement(new MyBlockCreationAction(myDiagramCell, SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0x20a804e2ec40c2c8L, "jetbrains.mps.testHybridEditor.structure.MetaBlock"))));
    }
    return ListSequence.fromList(paletteElements).toGenericArray(PaletteElement.class);
  }
  public boolean isPopup() {
    return true;
  }
  public Icon getIcon() {
    return null;
  }
  public String getText() {
    return myText;
  }
}
