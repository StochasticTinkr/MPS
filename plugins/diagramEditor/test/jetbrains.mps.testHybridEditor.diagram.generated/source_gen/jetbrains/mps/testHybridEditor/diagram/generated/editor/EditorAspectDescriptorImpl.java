package jetbrains.mps.testHybridEditor.diagram.generated.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      switch (index_xbvbvu_a0a.index(cncpt)) {
        case 0:
          return Collections.<ConceptEditor>singletonList(new Block_diagram_Editor());
        case 1:
          return Collections.<ConceptEditor>singletonList(new BlockInstance_diagram_Editor());
        case 2:
          return Collections.<ConceptEditor>singletonList(new Connector_diagram_Editor());
        case 3:
          return Collections.<ConceptEditor>singletonList(new ConnectorInstance_diagram_Editor());
        case 4:
          return Collections.<ConceptEditor>singletonList(new Diagram_diagram_Editor());
        case 5:
          return Collections.<ConceptEditor>singletonList(new InputPort_diagram_Editor());
        case 6:
          return Collections.<ConceptEditor>singletonList(new OutputPort_diagram_Editor());
        default:
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0xa10615a65702f98L), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0x20a804e2ec43f49dL), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0xa10615a65702fa1L), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0x20a804e2ec441516L), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0xa10615a65702ec1L), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0xa10615a65702fb4L), MetaIdFactory.conceptId(0x913a1d639e1948faL, 0xad03e33ecccd3814L, 0xa10615a65702fbfL)).seal();
}
