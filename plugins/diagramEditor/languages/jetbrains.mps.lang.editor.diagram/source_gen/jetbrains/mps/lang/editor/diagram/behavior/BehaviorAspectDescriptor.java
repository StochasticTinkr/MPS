package jetbrains.mps.lang.editor.diagram.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myCellModel_DiagramPort__BehaviorDescriptor = new CellModel_DiagramPort__BehaviorDescriptor();
  private final BHDescriptor myDiagramConnectorCreationHandler__BehaviorDescriptor = new DiagramConnectorCreationHandler__BehaviorDescriptor();
  private final BHDescriptor myDiagramConnectorCanCreateHandler__BehaviorDescriptor = new DiagramConnectorCanCreateHandler__BehaviorDescriptor();
  private final BHDescriptor myCellModel_DiagramNode__BehaviorDescriptor = new CellModel_DiagramNode__BehaviorDescriptor();
  private final BHDescriptor myAbstractFigureReference__BehaviorDescriptor = new AbstractFigureReference__BehaviorDescriptor();
  private final BHDescriptor myExternalFigureReference__BehaviorDescriptor = new ExternalFigureReference__BehaviorDescriptor();
  private final BHDescriptor myFigureParameterMapping__BehaviorDescriptor = new FigureParameterMapping__BehaviorDescriptor();
  private final BHDescriptor myAbstractDiagramCreation__BehaviorDescriptor = new AbstractDiagramCreation__BehaviorDescriptor();
  private final BHDescriptor myAttributedFigureReference__BehaviorDescriptor = new AttributedFigureReference__BehaviorDescriptor();
  private final BHDescriptor myCellModel_Diagram__BehaviorDescriptor = new CellModel_Diagram__BehaviorDescriptor();
  private final BHDescriptor myCellModel_DiagramConnector__BehaviorDescriptor = new CellModel_DiagramConnector__BehaviorDescriptor();
  private final BHDescriptor myDiagramElementCreationHandler__BehaviorDescriptor = new DiagramElementCreationHandler__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      switch (index_846f5o_a0p.index(cncpt)) {
        case 0:
          return myAbstractDiagramCreation__BehaviorDescriptor;
        case 1:
          return myAbstractFigureReference__BehaviorDescriptor;
        case 2:
          return myAttributedFigureReference__BehaviorDescriptor;
        case 3:
          return myCellModel_Diagram__BehaviorDescriptor;
        case 4:
          return myCellModel_DiagramConnector__BehaviorDescriptor;
        case 5:
          return myCellModel_DiagramNode__BehaviorDescriptor;
        case 6:
          return myCellModel_DiagramPort__BehaviorDescriptor;
        case 7:
          return myDiagramConnectorCanCreateHandler__BehaviorDescriptor;
        case 8:
          return myDiagramConnectorCreationHandler__BehaviorDescriptor;
        case 9:
          return myDiagramElementCreationHandler__BehaviorDescriptor;
        case 10:
          return myExternalFigureReference__BehaviorDescriptor;
        case 11:
          return myFigureParameterMapping__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0p = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x120f760a04397296L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xf301bf106a329d6L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x4b412569a095b4ceL), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x57869048dc89fbf7L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x58940e88f3ef74c9L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xf301bf106a326e1L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x3f6e840fd120282L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xd0b2f9de371634eL), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xd0b2f9de371007cL), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0x76f1cb20ba7726f7L), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xf301bf106a655cbL), MetaIdFactory.conceptId(0x6106f6117a7442d1L, 0x80deedc5c602bfd1L, 0xf301bf106a7d7c7L)).seal();
}
