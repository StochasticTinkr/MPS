package jetbrains.mps.lang.editor.diagram.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_AbstractArgument = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AbstractDiagramCreation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AbstractFigureReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ActionGroup = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ActionReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_AttributedFigureReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BLQueryArgument = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CellModel_Diagram = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CellModel_DiagramConnector = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CellModel_DiagramNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CellModel_DiagramPort = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConnectionEnd = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConnectionEndBLQuery = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CreationActionReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CustomElementReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramConnectorCanCreateHandler = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramConnectorCreation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramConnectorCreationHandler = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramElement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramElementBLQuery = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramElementCreationHandler = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DiagramElementsCreation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExternalFigureReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameterMapping = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FromIdFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FromNodeFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LinkArgument = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NodeFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Palette = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PaletteElement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_PropertyArgument = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Separator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_StubCellModel_Diagram = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_StubCellModel_DiagramConnector = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_StubCellModel_DiagramNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_StubCellModel_DiagramPort = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ThisEditorNodeExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ToIdFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ToNodeFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_XFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_YFunctionParameter = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractArgument:
        return props_AbstractArgument;
      case LanguageConceptSwitch.AbstractDiagramCreation:
        return props_AbstractDiagramCreation;
      case LanguageConceptSwitch.AbstractFigureReference:
        return props_AbstractFigureReference;
      case LanguageConceptSwitch.ActionGroup:
        return props_ActionGroup;
      case LanguageConceptSwitch.ActionReference:
        return props_ActionReference;
      case LanguageConceptSwitch.AttributedFigureReference:
        return props_AttributedFigureReference;
      case LanguageConceptSwitch.BLQueryArgument:
        return props_BLQueryArgument;
      case LanguageConceptSwitch.CellModel_Diagram:
        return props_CellModel_Diagram;
      case LanguageConceptSwitch.CellModel_DiagramConnector:
        return props_CellModel_DiagramConnector;
      case LanguageConceptSwitch.CellModel_DiagramNode:
        return props_CellModel_DiagramNode;
      case LanguageConceptSwitch.CellModel_DiagramPort:
        return props_CellModel_DiagramPort;
      case LanguageConceptSwitch.ConnectionEnd:
        return props_ConnectionEnd;
      case LanguageConceptSwitch.ConnectionEndBLQuery:
        return props_ConnectionEndBLQuery;
      case LanguageConceptSwitch.CreationActionReference:
        return props_CreationActionReference;
      case LanguageConceptSwitch.CustomElementReference:
        return props_CustomElementReference;
      case LanguageConceptSwitch.DiagramConnectorCanCreateHandler:
        return props_DiagramConnectorCanCreateHandler;
      case LanguageConceptSwitch.DiagramConnectorCreation:
        return props_DiagramConnectorCreation;
      case LanguageConceptSwitch.DiagramConnectorCreationHandler:
        return props_DiagramConnectorCreationHandler;
      case LanguageConceptSwitch.DiagramElement:
        return props_DiagramElement;
      case LanguageConceptSwitch.DiagramElementBLQuery:
        return props_DiagramElementBLQuery;
      case LanguageConceptSwitch.DiagramElementCreationHandler:
        return props_DiagramElementCreationHandler;
      case LanguageConceptSwitch.DiagramElementsCreation:
        return props_DiagramElementsCreation;
      case LanguageConceptSwitch.ExternalFigureReference:
        return props_ExternalFigureReference;
      case LanguageConceptSwitch.FigureParameterMapping:
        return props_FigureParameterMapping;
      case LanguageConceptSwitch.FromIdFunctionParameter:
        return props_FromIdFunctionParameter;
      case LanguageConceptSwitch.FromNodeFunctionParameter:
        return props_FromNodeFunctionParameter;
      case LanguageConceptSwitch.LinkArgument:
        return props_LinkArgument;
      case LanguageConceptSwitch.NodeFunctionParameter:
        return props_NodeFunctionParameter;
      case LanguageConceptSwitch.Palette:
        return props_Palette;
      case LanguageConceptSwitch.PaletteElement:
        return props_PaletteElement;
      case LanguageConceptSwitch.PropertyArgument:
        return props_PropertyArgument;
      case LanguageConceptSwitch.Separator:
        return props_Separator;
      case LanguageConceptSwitch.StubCellModel_Diagram:
        return props_StubCellModel_Diagram;
      case LanguageConceptSwitch.StubCellModel_DiagramConnector:
        return props_StubCellModel_DiagramConnector;
      case LanguageConceptSwitch.StubCellModel_DiagramNode:
        return props_StubCellModel_DiagramNode;
      case LanguageConceptSwitch.StubCellModel_DiagramPort:
        return props_StubCellModel_DiagramPort;
      case LanguageConceptSwitch.ThisEditorNodeExpression:
        return props_ThisEditorNodeExpression;
      case LanguageConceptSwitch.ToIdFunctionParameter:
        return props_ToIdFunctionParameter;
      case LanguageConceptSwitch.ToNodeFunctionParameter:
        return props_ToNodeFunctionParameter;
      case LanguageConceptSwitch.XFunctionParameter:
        return props_XFunctionParameter;
      case LanguageConceptSwitch.YFunctionParameter:
        return props_YFunctionParameter;
    }
    return null;
  }
}
