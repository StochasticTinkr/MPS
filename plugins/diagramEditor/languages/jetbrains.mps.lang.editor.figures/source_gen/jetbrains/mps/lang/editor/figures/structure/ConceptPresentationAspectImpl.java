package jetbrains.mps.lang.editor.figures.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_ExternalViewFigure = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ExternalViewFigureParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Figure = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureAttribute = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameterAttribute = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameterAttributeField = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameterAttributeMethod = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_FigureParameterAttributeViewProperty = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("d7722d50-4b93-4c3a-ae06-1903d05f95a7"), "jetbrains.mps.lang.editor.figures")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case 0:
        return props_ExternalViewFigure;
      case 1:
        return props_ExternalViewFigureParameter;
      case 2:
        return props_Figure;
      case 3:
        return props_FigureAttribute;
      case 4:
        return props_FigureParameter;
      case 5:
        return props_FigureParameterAttribute;
      case 6:
        return props_FigureParameterAttributeField;
      case 7:
        return props_FigureParameterAttributeMethod;
      case 8:
        return props_FigureParameterAttributeViewProperty;
    }
    throw new IllegalStateException();
  }
}
