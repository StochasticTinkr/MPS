package jetbrains.mps.lang.structure.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.DebugRegistry;
import jetbrains.mps.smodel.adapter.ids.MetaIdByDeclaration;
import jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import javax.swing.SwingUtilities;
import jetbrains.mps.smodel.ModelAccess;
import java.util.List;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.generator.impl.dependencies.GenerationDependenciesCache;

public class CommitUtil {
  public static boolean commitRename(EditorContext editorContext, SNode node, String oldValue, String newValue) {
    SModule lang = SNodeOperations.getModel(node).getModule();
    if (!(lang instanceof Language) || !(node instanceof jetbrains.mps.smodel.SNode)) {
      return false;
    }

    if (oldValue != null) {
      invalidateLanguageLater(((Language) lang));
    }
    if (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))) {
      DebugRegistry.getInstance().addConceptName(MetaIdByDeclaration.getConceptId(node), INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))));
    }
    if (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL, "jetbrains.mps.lang.structure.structure.PropertyDeclaration"))) {
      DebugRegistry.getInstance().addPropertyName(MetaIdByDeclaration.getPropId(node), newValue);
    }
    if (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, "jetbrains.mps.lang.structure.structure.LinkDeclaration"))) {
      if (SPropertyOperations.hasValue(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, "jetbrains.mps.lang.structure.structure.LinkDeclaration")), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086aL, 0xf980556927L, "metaClass"), "aggregation", "reference")) {
        DebugRegistry.getInstance().addLinkName(MetaIdByDeclaration.getLinkId(node), newValue);
      } else {
        DebugRegistry.getInstance().addRefName(MetaIdByDeclaration.getRefRoleId(node), newValue);
      }
    }
    return false;
  }

  public static void invalidateLanguageLater(final Language lang) {
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        ModelAccess.instance().runWriteActionInCommand(new Runnable() {
          public void run() {
            List<SModel> models = lang.getModels();
            ListSequence.fromList(models).where(new IWhereFilter<SModel>() {
              public boolean accept(SModel it) {
                return jetbrains.mps.util.SNodeOperations.isGeneratable(it);
              }
            }).visitAll(new IVisitor<SModel>() {
              public void visit(SModel it) {
                GenerationDependenciesCache.getInstance().discard(it);
              }
            });
          }
        });
      }
    });
  }
}
