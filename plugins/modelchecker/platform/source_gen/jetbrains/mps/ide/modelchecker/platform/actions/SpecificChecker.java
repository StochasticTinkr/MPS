package jetbrains.mps.ide.modelchecker.platform.actions;

/*Generated by MPS */

import jetbrains.mps.checkers.IChecker;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.errors.item.IssueKindReportItem;
import java.util.List;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import org.jetbrains.mps.openapi.module.SRepository;
import org.jetbrains.mps.openapi.util.Consumer;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public abstract class SpecificChecker implements IChecker<SModel, IssueKindReportItem> {
  public abstract List<? extends IssueKindReportItem> checkModel(SModel model, ProgressMonitor progressContext);
  @Override
  public void check(SModel toCheck, SRepository repository, Consumer<IssueKindReportItem> errorCollector, ProgressMonitor monitor) {
    List<? extends IssueKindReportItem> errors = checkModel(toCheck, monitor);
    for (IssueKindReportItem error : ListSequence.fromList(errors)) {
      errorCollector.consume(error);
    }
  }
}
