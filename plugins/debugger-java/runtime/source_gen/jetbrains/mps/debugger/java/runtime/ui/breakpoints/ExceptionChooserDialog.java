package jetbrains.mps.debugger.java.runtime.ui.breakpoints;

/*Generated by MPS */

import jetbrains.mps.project.Project;
import java.awt.HeadlessException;
import jetbrains.mps.ide.project.ProjectHelper;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Objects;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NonNls;

public class ExceptionChooserDialog extends StubsClassChooserDialog {
  private final Project myProject;
  public ExceptionChooserDialog(com.intellij.openapi.project.Project project, String title) throws HeadlessException {
    super(project, title);
    myProject = ProjectHelper.toMPSProject(project);
  }
  @Override
  protected boolean isValid(SNode node) {
    final SNode throwableClassifier = new SNodePointer("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)", "~Throwable").resolve(myProject.getRepository());
    SNode base = node;
    while (base != null && SNodeOperations.isInstanceOf(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept")) && !((Objects.equals(base, throwableClassifier)))) {
      base = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, "superclass")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"));
    }
    return (base != null) && SNodeOperations.isInstanceOf(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept"));
  }
  @Nullable
  @NonNls
  @Override
  protected String getDimensionServiceKey() {
    return ExceptionChooserDialog.class.getName();
  }
}
