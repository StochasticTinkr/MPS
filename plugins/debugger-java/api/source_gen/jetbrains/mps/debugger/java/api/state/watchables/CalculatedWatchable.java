package jetbrains.mps.debugger.java.api.state.watchables;

/*Generated by MPS */

import jetbrains.mps.debug.api.programState.IWatchable;
import jetbrains.mps.debugger.java.api.state.proxy.JavaValue;
import com.sun.jdi.ThreadReference;
import jetbrains.mps.debug.api.programState.WatchablesCategory;
import jetbrains.mps.debug.api.programState.IValue;
import javax.swing.Icon;

public class CalculatedWatchable extends JavaWatchable implements IWatchable {
  private final JavaValue myValue;
  private final String myName;
  public CalculatedWatchable(String name, JavaValue value, ThreadReference threadReference) {
    super(threadReference);
    myName = name;
    myValue = value;
  }
  @Override
  public WatchablesCategory getCategory() {
    return JavaWatchablesCategory.CALCULATED_VALUE;
  }
  @Override
  public String getName() {
    return myName;
  }
  @Override
  public IValue getValue() {
    return myValue;
  }
  @Override
  public Icon getPresentationIcon() {
    return myValue.getPresentationIcon();
  }
}
