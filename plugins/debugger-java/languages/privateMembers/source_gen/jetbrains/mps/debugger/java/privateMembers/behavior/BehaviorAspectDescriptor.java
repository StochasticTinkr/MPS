package jetbrains.mps.debugger.java.privateMembers.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myPrivateStaticFieldReference__BehaviorDescriptor = new PrivateStaticFieldReference__BehaviorDescriptor();
  private final BHDescriptor myPrivateFieldReferenceOperation__BehaviorDescriptor = new PrivateFieldReferenceOperation__BehaviorDescriptor();
  private final BHDescriptor myPrivateInstanceMethodCallOperation__BehaviorDescriptor = new PrivateInstanceMethodCallOperation__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      switch (index_846f5o_a0g.index(cncpt)) {
        case 0:
          return myPrivateFieldReferenceOperation__BehaviorDescriptor;
        case 1:
          return myPrivateInstanceMethodCallOperation__BehaviorDescriptor;
        case 2:
          return myPrivateStaticFieldReference__BehaviorDescriptor;
        default:
          // default 
      }
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0g = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x802088974572437dL, 0xb50e8f050cba9566L, 0x5eb820f649bb5379L), MetaIdFactory.conceptId(0x802088974572437dL, 0xb50e8f050cba9566L, 0x5eb820f649bb7006L), MetaIdFactory.conceptId(0x802088974572437dL, 0xb50e8f050cba9566L, 0x3900f3d0fb5b36c9L)).seal();
}
