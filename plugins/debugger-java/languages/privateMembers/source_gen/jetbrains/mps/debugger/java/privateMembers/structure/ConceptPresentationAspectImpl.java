package jetbrains.mps.debugger.java.privateMembers.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_PrivateFieldReferenceOperation;
  private ConceptPresentation props_PrivateInstanceMethodCallOperation;
  private ConceptPresentation props_PrivateStaticFieldReference;
  private ConceptPresentation props_PrivateStaticMethodCall;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.PrivateFieldReferenceOperation:
        if (props_PrivateFieldReferenceOperation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder(0x802088974572437dL, 0xb50e8f050cba9566L, 0x5eb820f649bb5379L);
          cpb.presentationByReference(0x116b484a653L, "fieldDeclaration", "", "");
          props_PrivateFieldReferenceOperation = cpb.create();
        }
        return props_PrivateFieldReferenceOperation;
      case LanguageConceptSwitch.PrivateInstanceMethodCallOperation:
        if (props_PrivateInstanceMethodCallOperation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder(0x802088974572437dL, 0xb50e8f050cba9566L, 0x5eb820f649bb7006L);
          cpb.presentationByReference(0xf8c78301adL, "baseMethodDeclaration", "", "");
          props_PrivateInstanceMethodCallOperation = cpb.create();
        }
        return props_PrivateInstanceMethodCallOperation;
      case LanguageConceptSwitch.PrivateStaticFieldReference:
        if (props_PrivateStaticFieldReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PrivateStaticFieldReference");
          props_PrivateStaticFieldReference = cpb.create();
        }
        return props_PrivateStaticFieldReference;
      case LanguageConceptSwitch.PrivateStaticMethodCall:
        if (props_PrivateStaticMethodCall == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PrivateStaticMethodCall");
          props_PrivateStaticMethodCall = cpb.create();
        }
        return props_PrivateStaticMethodCall;
    }
    return null;
  }
}
