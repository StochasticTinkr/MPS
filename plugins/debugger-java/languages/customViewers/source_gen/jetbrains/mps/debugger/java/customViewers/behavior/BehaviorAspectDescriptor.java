package jetbrains.mps.debugger.java.customViewers.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myGetHighLevelValuePresentation_ConceptFunction__BehaviorDescriptor = new GetHighLevelValuePresentation_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myGetHighLevelWatchablesBlock_ConceptFunction__BehaviorDescriptor = new GetHighLevelWatchablesBlock_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myCanWrapHighLevelValue_ConceptFunction__BehaviorDescriptor = new CanWrapHighLevelValue_ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myHighLevelCustomViewer__BehaviorDescriptor = new HighLevelCustomViewer__BehaviorDescriptor();
  private final BHDescriptor myToProcessMethod__BehaviorDescriptor = new ToProcessMethod__BehaviorDescriptor();
  private final BHDescriptor myWatchableListType__BehaviorDescriptor = new WatchableListType__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0j = concept;
    switch (index_846f5o_a0j.index(cncpt_a0j)) {
      case 0:
        return myCanWrapHighLevelValue_ConceptFunction__BehaviorDescriptor;
      case 1:
        return myGetHighLevelValuePresentation_ConceptFunction__BehaviorDescriptor;
      case 2:
        return myGetHighLevelWatchablesBlock_ConceptFunction__BehaviorDescriptor;
      case 3:
        return myHighLevelCustomViewer__BehaviorDescriptor;
      case 4:
        return myToProcessMethod__BehaviorDescriptor;
      case 5:
        return myWatchableListType__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0j = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0x9a1514043ecbdbL), MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0x9a1514043ecbd2L), MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0x9a1514043ecbd6L), MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0x97038071a3bfa40L), MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0xa01bb2d9f697c10L), MetaIdFactory.conceptId(0xfa8aeae94df94e13L, 0xbfb19b04c67ddb77L, 0x19926b3196c33bb3L)).seal();
}
