package jetbrains.mps.debugger.java.customViewers.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_CanWrapHighLevelValue_ConceptFunction = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CustomWatchable = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CustomWatchablesContainer = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GetHighLevelValuePresentation_ConceptFunction = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GetHighLevelWatchablesBlock_ConceptFunction = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_HighLevelCustomViewer = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_HighLevelValue_ConceptFunctionParameter = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_HighLevelWatchableCreator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ToProcessMethod = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_WatchableListType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_WatchableType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_WatchablesListCreator = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.CanWrapHighLevelValue_ConceptFunction:
        return props_CanWrapHighLevelValue_ConceptFunction;
      case LanguageConceptSwitch.CustomWatchable:
        return props_CustomWatchable;
      case LanguageConceptSwitch.CustomWatchablesContainer:
        return props_CustomWatchablesContainer;
      case LanguageConceptSwitch.GetHighLevelValuePresentation_ConceptFunction:
        return props_GetHighLevelValuePresentation_ConceptFunction;
      case LanguageConceptSwitch.GetHighLevelWatchablesBlock_ConceptFunction:
        return props_GetHighLevelWatchablesBlock_ConceptFunction;
      case LanguageConceptSwitch.HighLevelCustomViewer:
        return props_HighLevelCustomViewer;
      case LanguageConceptSwitch.HighLevelValue_ConceptFunctionParameter:
        return props_HighLevelValue_ConceptFunctionParameter;
      case LanguageConceptSwitch.HighLevelWatchableCreator:
        return props_HighLevelWatchableCreator;
      case LanguageConceptSwitch.ToProcessMethod:
        return props_ToProcessMethod;
      case LanguageConceptSwitch.WatchableListType:
        return props_WatchableListType;
      case LanguageConceptSwitch.WatchableType:
        return props_WatchableType;
      case LanguageConceptSwitch.WatchablesListCreator:
        return props_WatchablesListCreator;
    }
    return null;
  }
}
