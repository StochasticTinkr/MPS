package jetbrains.mps.debugger.java.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int DebuggedType = 0;
  public static final int DoNotTransformAnnotation = 1;
  public static final int DownCastToLowLevel = 2;
  public static final int Evaluator = 3;
  public static final int EvaluatorConcept = 4;
  public static final int EvaluatorsSuperMethodCall = 5;
  public static final int EvaluatorsThisExpression = 6;
  public static final int GenerationHelperAnnotation = 7;
  public static final int IEvaluatorConcept = 8;
  public static final int LowLevelVariable = 9;
  public static final int LowLevelVariableReference = 10;
  public static final int UnitNode = 11;
  public static final int UnprocessedAnnotation = 12;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x7da4580f9d754603L, 0x816251a896d78375L);
    builder.put(0x3f11b1341fa25ed8L, DebuggedType);
    builder.put(0x7eed83c2376f34a5L, DoNotTransformAnnotation);
    builder.put(0x6dd9f7bd221bb1d5L, DownCastToLowLevel);
    builder.put(0xbbe5b47d7cc5fa1L, Evaluator);
    builder.put(0x53c5060c6b18d925L, EvaluatorConcept);
    builder.put(0x53c5060c6b1ae1feL, EvaluatorsSuperMethodCall);
    builder.put(0x53c5060c6b1ae1c6L, EvaluatorsThisExpression);
    builder.put(0x17b1c8f7ef7ab40cL, GenerationHelperAnnotation);
    builder.put(0x7f4a99699cea367bL, IEvaluatorConcept);
    builder.put(0x53c5060c6b18d926L, LowLevelVariable);
    builder.put(0x7d9a547f857a394bL, LowLevelVariableReference);
    builder.put(0x3c2f40ee0bb3cbf5L, UnitNode);
    builder.put(0x50b810dd5c871ea2L, UnprocessedAnnotation);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
