package jetbrains.mps.debugger.java.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_DebuggedType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DoNotTransformAnnotation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DownCastToLowLevel = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Evaluator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EvaluatorConcept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EvaluatorsSuperMethodCall = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_EvaluatorsThisExpression = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GenerationHelperAnnotation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_IEvaluatorConcept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LowLevelVariable = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LowLevelVariableReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_UnitNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_UnprocessedAnnotation = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DebuggedType:
        return props_DebuggedType;
      case LanguageConceptSwitch.DoNotTransformAnnotation:
        return props_DoNotTransformAnnotation;
      case LanguageConceptSwitch.DownCastToLowLevel:
        return props_DownCastToLowLevel;
      case LanguageConceptSwitch.Evaluator:
        return props_Evaluator;
      case LanguageConceptSwitch.EvaluatorConcept:
        return props_EvaluatorConcept;
      case LanguageConceptSwitch.EvaluatorsSuperMethodCall:
        return props_EvaluatorsSuperMethodCall;
      case LanguageConceptSwitch.EvaluatorsThisExpression:
        return props_EvaluatorsThisExpression;
      case LanguageConceptSwitch.GenerationHelperAnnotation:
        return props_GenerationHelperAnnotation;
      case LanguageConceptSwitch.IEvaluatorConcept:
        return props_IEvaluatorConcept;
      case LanguageConceptSwitch.LowLevelVariable:
        return props_LowLevelVariable;
      case LanguageConceptSwitch.LowLevelVariableReference:
        return props_LowLevelVariableReference;
      case LanguageConceptSwitch.UnitNode:
        return props_UnitNode;
      case LanguageConceptSwitch.UnprocessedAnnotation:
        return props_UnprocessedAnnotation;
    }
    return null;
  }
}
