package jetbrains.mps.debugger.java.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptDebuggedType = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DebuggedType", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3f11b1341fa25ed8L)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4544608336420691693L, "isHigh")).properties("isHigh").childDescriptors(new ConceptDescriptorBuilder.Link(4544608336420691673L, "lowType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false), new ConceptDescriptorBuilder.Link(4544608336420691674L, "highType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"lowType", "highType"}, new boolean[]{false, false}).alias("debugged type", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDoNotTransformAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DoNotTransformAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7eed83c2376f34a5L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).alias("do not transform", "").create();
  /*package*/ final ConceptDescriptor myConceptDownCastToLowLevel = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DownCastToLowLevel", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x6dd9f7bd221bb1d5L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(7915630211773477790L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("downcast", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptEvaluator = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.Evaluator", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0xbbe5b47d7cc5fa1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ScopeProvider", "jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L), MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).childDescriptors(new ConceptDescriptorBuilder.Link(846214144113533056L, "code", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"code"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorConcept = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorConcept", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d925L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IMethodLike", "jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L), MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6036237525966243739L, "isShowContext")).properties("isShowContext").childDescriptors(new ConceptDescriptorBuilder.Link(6036237525966243735L, "variables", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d926L), true, true, false), new ConceptDescriptorBuilder.Link(4544608336420681235L, "thisNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L), true, false, false), new ConceptDescriptorBuilder.Link(4544608336420681237L, "contextNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L), true, false, false), new ConceptDescriptorBuilder.Link(1155520443816777472L, "evaluatedStatements", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"variables", "thisNode", "contextNode", "evaluatedStatements"}, new boolean[]{true, false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorsSuperMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsSuperMethodCall", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1feL)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodCall").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).alias("super", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorsThisExpression = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsThisExpression", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1c6L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("this", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationHelperAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).create();
  /*package*/ final ConceptDescriptor myConceptIEvaluatorConcept = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptLowLevelVariable = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariable", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d926L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6146091894852355121L, "isOutOfScope"), new ConceptDescriptorBuilder.Prop(7906267809293264975L, "highLevelNodeId"), new ConceptDescriptorBuilder.Prop(5600437724825490670L, "lowLevelName")).properties("isOutOfScope", "highLevelNodeId", "lowLevelName").create();
  /*package*/ final ConceptDescriptor myConceptLowLevelVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7d9a547f857a394bL)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableReference").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptToEvaluateAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.ToEvaluateAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x4135c73fbe7fc985L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).create();
  /*package*/ final ConceptDescriptor myConceptUnitNode = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.UnitNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4336756357323803640L, "highLevelNodeId")).properties("highLevelNodeId").childDescriptors(new ConceptDescriptorBuilder.Link(4544608336420717468L, "debuggedType", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3f11b1341fa25ed8L), false, false, false)).children(new String[]{"debuggedType"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptUnprocessedAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x50b810dd5c871ea2L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).alias("unprocessed", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDebuggedType, myConceptDoNotTransformAnnotation, myConceptDownCastToLowLevel, myConceptEvaluator, myConceptEvaluatorConcept, myConceptEvaluatorsSuperMethodCall, myConceptEvaluatorsThisExpression, myConceptGenerationHelperAnnotation, myConceptIEvaluatorConcept, myConceptLowLevelVariable, myConceptLowLevelVariableReference, myConceptToEvaluateAnnotation, myConceptUnitNode, myConceptUnprocessedAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_1htk8d_a0s.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myConceptDebuggedType;
          }
          break;
        case 1:
          if (true) {
            return myConceptDoNotTransformAnnotation;
          }
          break;
        case 2:
          if (true) {
            return myConceptDownCastToLowLevel;
          }
          break;
        case 3:
          if (true) {
            return myConceptEvaluator;
          }
          break;
        case 4:
          if (true) {
            return myConceptEvaluatorConcept;
          }
          break;
        case 5:
          if (true) {
            return myConceptEvaluatorsSuperMethodCall;
          }
          break;
        case 6:
          if (true) {
            return myConceptEvaluatorsThisExpression;
          }
          break;
        case 7:
          if (true) {
            return myConceptGenerationHelperAnnotation;
          }
          break;
        case 8:
          if (true) {
            return myConceptIEvaluatorConcept;
          }
          break;
        case 9:
          if (true) {
            return myConceptLowLevelVariable;
          }
          break;
        case 10:
          if (true) {
            return myConceptLowLevelVariableReference;
          }
          break;
        case 11:
          if (true) {
            return myConceptToEvaluateAnnotation;
          }
          break;
        case 12:
          if (true) {
            return myConceptUnitNode;
          }
          break;
        case 13:
          if (true) {
            return myConceptUnprocessedAnnotation;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_1htk8d_a0s = buildConceptIndices(MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3f11b1341fa25ed8L, "jetbrains.mps.debugger.java.evaluation.structure.DebuggedType"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7eed83c2376f34a5L, "jetbrains.mps.debugger.java.evaluation.structure.DoNotTransformAnnotation"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x6dd9f7bd221bb1d5L, "jetbrains.mps.debugger.java.evaluation.structure.DownCastToLowLevel"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0xbbe5b47d7cc5fa1L, "jetbrains.mps.debugger.java.evaluation.structure.Evaluator"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d925L, "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorConcept"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1feL, "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsSuperMethodCall"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1c6L, "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsThisExpression"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL, "jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation"), MetaAdapterFactory.getInterfaceConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL, "jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d926L, "jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariable"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7d9a547f857a394bL, "jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x4135c73fbe7fc985L, "jetbrains.mps.debugger.java.evaluation.structure.ToEvaluateAnnotation"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L, "jetbrains.mps.debugger.java.evaluation.structure.UnitNode"), MetaAdapterFactory.getConcept(0x7da4580f9d754603L, 0x816251a896d78375L, 0x50b810dd5c871ea2L, "jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation"));
}
