package jetbrains.mps.debugger.java.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(14);
  /*package*/ final ConceptDescriptor myConceptDebuggedType = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DebuggedType", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3f11b1341fa25ed8L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3f11b1341fa25eedL, "isHigh")).properties("isHigh").childDescriptors(new ConceptDescriptorBuilder.Link(0x3f11b1341fa25ed9L, "lowType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false), new ConceptDescriptorBuilder.Link(0x3f11b1341fa25edaL, "highType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL), false, false, false)).children(new String[]{"lowType", "highType"}, new boolean[]{false, false}).alias("debugged type", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "4544608336420691672")).create();
  /*package*/ final ConceptDescriptor myConceptDoNotTransformAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DoNotTransformAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7eed83c2376f34a5L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").version(1).super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).alias("do not transform", "").sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "9146111288436274341")).create();
  /*package*/ final ConceptDescriptor myConceptDownCastToLowLevel = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.DownCastToLowLevel", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x6dd9f7bd221bb1d5L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6dd9f7bd221bb39eL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("downcast", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "7915630211773477333")).create();
  /*package*/ final ConceptDescriptor myConceptEvaluator = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.Evaluator", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0xbbe5b47d7cc5fa1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ScopeProvider", "jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L), MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0xbbe5b47d7cc6080L, "code", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"code"}, new boolean[]{false}).rootable().sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "846214144113532833")).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorConcept = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorConcept", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d925L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IMethodLike", "jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1208f458d37L), MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x53c5060c6b19c79bL, "isShowContext")).properties("isShowContext").childDescriptors(new ConceptDescriptorBuilder.Link(0x53c5060c6b19c797L, "variables", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d926L), true, true, false), new ConceptDescriptorBuilder.Link(0x3f11b1341fa23613L, "thisNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L), true, false, false), new ConceptDescriptorBuilder.Link(0x3f11b1341fa23615L, "contextNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L), true, false, false), new ConceptDescriptorBuilder.Link(0x10093bb8b0669700L, "evaluatedStatements", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L), false, false, false)).children(new String[]{"variables", "thisNode", "contextNode", "evaluatedStatements"}, new boolean[]{true, false, false, false}).rootable().sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "6036237525966182693")).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorsSuperMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsSuperMethodCall", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1feL)).super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).parents("jetbrains.mps.baseLanguage.structure.BaseMethodCall").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c78301acL)).alias("super", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "6036237525966316030")).create();
  /*package*/ final ConceptDescriptor myConceptEvaluatorsThisExpression = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsThisExpression", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b1ae1c6L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("this", "").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "6036237525966315974")).create();
  /*package*/ final ConceptDescriptor myConceptGenerationHelperAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).super_("jetbrains.mps.lang.core.structure.NodeAttribute").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).parents("jetbrains.mps.lang.core.structure.NodeAttribute").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L)).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "1707366700950402060")).create();
  /*package*/ final ConceptDescriptor myConceptIEvaluatorConcept = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.IEvaluatorConcept", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7f4a99699cea367bL)).version(1).interface_().sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "9172312269976647291")).create();
  /*package*/ final ConceptDescriptor myConceptLowLevelVariable = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariable", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x53c5060c6b18d926L)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x554b4e03d5950431L, "isOutOfScope"), new ConceptDescriptorBuilder.Prop(0x6db8b4aef007e84fL, "highLevelNodeId"), new ConceptDescriptorBuilder.Prop(0x4db8c07036eb94eeL, "lowLevelName")).properties("isOutOfScope", "highLevelNodeId", "lowLevelName").sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "6036237525966182694")).create();
  /*package*/ final ConceptDescriptor myConceptLowLevelVariableReference = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x7d9a547f857a394bL)).super_("jetbrains.mps.baseLanguage.structure.BaseVariableReference").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).parents("jetbrains.mps.baseLanguage.structure.BaseVariableReference").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4c4b92003e49a704L)).staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "9050639307831392587")).create();
  /*package*/ final ConceptDescriptor myConceptToEvaluateAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.ToEvaluateAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x4135c73fbe7fc985L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").version(1).super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "4698880862823893381")).create();
  /*package*/ final ConceptDescriptor myConceptUnitNode = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.UnitNode", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3c2f40ee0bb3cbf5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3c2f40ee0bb3cbf8L, "highLevelNodeId")).properties("highLevelNodeId").childDescriptors(new ConceptDescriptorBuilder.Link(0x3f11b1341fa2c39cL, "debuggedType", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x3f11b1341fa25ed8L), false, false, false)).children(new String[]{"debuggedType"}, new boolean[]{false}).sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "4336756357323803637")).create();
  /*package*/ final ConceptDescriptor myConceptUnprocessedAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation", MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x50b810dd5c871ea2L)).super_("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").version(1).super_(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).parents("jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation").parentIds(MetaIdFactory.conceptId(0x7da4580f9d754603L, 0x816251a896d78375L, 0x17b1c8f7ef7ab40cL)).alias("unprocessed", "").sourceNode(new SNodePointer("r:3a27a6eb-dfce-419d-9e4c-ca44cc01a2e2(jetbrains.mps.debugger.java.evaluation.structure)", "5816417461675171490")).create();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptDebuggedType.getId(), 0);
    myIndexMap.put(myConceptDoNotTransformAnnotation.getId(), 1);
    myIndexMap.put(myConceptDownCastToLowLevel.getId(), 2);
    myIndexMap.put(myConceptEvaluator.getId(), 3);
    myIndexMap.put(myConceptEvaluatorConcept.getId(), 4);
    myIndexMap.put(myConceptEvaluatorsSuperMethodCall.getId(), 5);
    myIndexMap.put(myConceptEvaluatorsThisExpression.getId(), 6);
    myIndexMap.put(myConceptGenerationHelperAnnotation.getId(), 7);
    myIndexMap.put(myConceptIEvaluatorConcept.getId(), 8);
    myIndexMap.put(myConceptLowLevelVariable.getId(), 9);
    myIndexMap.put(myConceptLowLevelVariableReference.getId(), 10);
    myIndexMap.put(myConceptToEvaluateAnnotation.getId(), 11);
    myIndexMap.put(myConceptUnitNode.getId(), 12);
    myIndexMap.put(myConceptUnprocessedAnnotation.getId(), 13);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDebuggedType, myConceptDoNotTransformAnnotation, myConceptDownCastToLowLevel, myConceptEvaluator, myConceptEvaluatorConcept, myConceptEvaluatorsSuperMethodCall, myConceptEvaluatorsThisExpression, myConceptGenerationHelperAnnotation, myConceptIEvaluatorConcept, myConceptLowLevelVariable, myConceptLowLevelVariableReference, myConceptToEvaluateAnnotation, myConceptUnitNode, myConceptUnprocessedAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptDebuggedType;
      case 1:
        return myConceptDoNotTransformAnnotation;
      case 2:
        return myConceptDownCastToLowLevel;
      case 3:
        return myConceptEvaluator;
      case 4:
        return myConceptEvaluatorConcept;
      case 5:
        return myConceptEvaluatorsSuperMethodCall;
      case 6:
        return myConceptEvaluatorsThisExpression;
      case 7:
        return myConceptGenerationHelperAnnotation;
      case 8:
        return myConceptIEvaluatorConcept;
      case 9:
        return myConceptLowLevelVariable;
      case 10:
        return myConceptLowLevelVariableReference;
      case 11:
        return myConceptToEvaluateAnnotation;
      case 12:
        return myConceptUnitNode;
      case 13:
        return myConceptUnprocessedAnnotation;
      default:
        throw new IllegalStateException();
    }
  }
}
