package jetbrains.mps.core.xml.sax.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myXMLSAXAttributeHandler__BehaviorDescriptor = new XMLSAXAttributeHandler__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXChildHandler__BehaviorDescriptor = new XMLSAXChildHandler__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXChildRule__BehaviorDescriptor = new XMLSAXChildRule__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXFieldReference__BehaviorDescriptor = new XMLSAXFieldReference__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXHandlerFunction__BehaviorDescriptor = new XMLSAXHandlerFunction__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXNodeCreator__BehaviorDescriptor = new XMLSAXNodeCreator__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXNodeRule__BehaviorDescriptor = new XMLSAXNodeRule__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXNodeValidator__BehaviorDescriptor = new XMLSAXNodeValidator__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXParser__BehaviorDescriptor = new XMLSAXParser__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXTextHandler__BehaviorDescriptor = new XMLSAXTextHandler__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXAttributeHandler_value__BehaviorDescriptor = new XMLSAXAttributeHandler_value__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXTextHandler_value__BehaviorDescriptor = new XMLSAXTextHandler_value__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXDefaultChildHandler__BehaviorDescriptor = new XMLSAXDefaultChildHandler__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXDefaultChildHandler_tagName__BehaviorDescriptor = new XMLSAXDefaultChildHandler_tagName__BehaviorDescriptor();
  private final BHDescriptor myXMLSAXChildRuleCondition__BehaviorDescriptor = new XMLSAXChildRuleCondition__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0s.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myXMLSAXAttributeHandler__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myXMLSAXAttributeHandler_value__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myXMLSAXChildHandler__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myXMLSAXChildRule__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myXMLSAXChildRuleCondition__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myXMLSAXDefaultChildHandler__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myXMLSAXDefaultChildHandler_tagName__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myXMLSAXFieldReference__BehaviorDescriptor;
          }
          break;
        case 8:
          if (true) {
            return myXMLSAXHandlerFunction__BehaviorDescriptor;
          }
          break;
        case 9:
          if (true) {
            return myXMLSAXNodeCreator__BehaviorDescriptor;
          }
          break;
        case 10:
          if (true) {
            return myXMLSAXNodeRule__BehaviorDescriptor;
          }
          break;
        case 11:
          if (true) {
            return myXMLSAXNodeValidator__BehaviorDescriptor;
          }
          break;
        case 12:
          if (true) {
            return myXMLSAXParser__BehaviorDescriptor;
          }
          break;
        case 13:
          if (true) {
            return myXMLSAXTextHandler__BehaviorDescriptor;
          }
          break;
        case 14:
          if (true) {
            return myXMLSAXTextHandler_value__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0s = buildConceptIndices(MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2c1L, "jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x30181d5ee4a76f2eL, "jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler_value"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d2L, "jetbrains.mps.core.xml.sax.structure.XMLSAXChildHandler"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d8L, "jetbrains.mps.core.xml.sax.structure.XMLSAXChildRule"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x4180d2369bed9265L, "jetbrains.mps.core.xml.sax.structure.XMLSAXChildRuleCondition"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x3afd693759ffee07L, "jetbrains.mps.core.xml.sax.structure.XMLSAXDefaultChildHandler"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x3afd69375a089554L, "jetbrains.mps.core.xml.sax.structure.XMLSAXDefaultChildHandler_tagName"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2e0L, "jetbrains.mps.core.xml.sax.structure.XMLSAXFieldReference"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2e3L, "jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2efL, "jetbrains.mps.core.xml.sax.structure.XMLSAXNodeCreator"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, "jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2fcL, "jetbrains.mps.core.xml.sax.structure.XMLSAXNodeValidator"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e301L, "jetbrains.mps.core.xml.sax.structure.XMLSAXParser"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e308L, "jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler"), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x30181d5ee4a78284L, "jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler_value"));
}
