package jetbrains.mps.core.xml.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int XmlAttribute = 0;
  public static final int XmlBaseAttribute = 1;
  public static final int XmlBaseElement = 2;
  public static final int XmlBasePrologElement = 3;
  public static final int XmlCDATA = 4;
  public static final int XmlCharRef = 5;
  public static final int XmlCharRefValue = 6;
  public static final int XmlComment = 7;
  public static final int XmlCommentLine = 8;
  public static final int XmlContent = 9;
  public static final int XmlDeclaration = 10;
  public static final int XmlDoctypeDeclaration = 11;
  public static final int XmlDocument = 12;
  public static final int XmlElement = 13;
  public static final int XmlEntityRef = 14;
  public static final int XmlEntityRefValue = 15;
  public static final int XmlExternalId = 16;
  public static final int XmlFile = 17;
  public static final int XmlNoSpaceValue = 18;
  public static final int XmlPart = 19;
  public static final int XmlProcessingInstruction = 20;
  public static final int XmlProlog = 21;
  public static final int XmlPrologElement = 22;
  public static final int XmlText = 23;
  public static final int XmlTextValue = 24;
  public static final int XmlValuePart = 25;
  public static final int XmlWhitespace = 26;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x479c7a8c02f943b5L, 0x9139d910cb22f298L);
    builder.put(0x5c842a42c54b8df3L, XmlAttribute);
    builder.put(0x5c842a42c54b10b3L, XmlBaseAttribute);
    builder.put(0x5c842a42c549486dL, XmlBaseElement);
    builder.put(0x1d9c27c394f08788L, XmlBasePrologElement);
    builder.put(0x5c842a42c549487aL, XmlCDATA);
    builder.put(0x2abf08504ffe9886L, XmlCharRef);
    builder.put(0x2abf08504ffed7feL, XmlCharRefValue);
    builder.put(0x5c842a42c5494878L, XmlComment);
    builder.put(0x16838b3fce9bec5eL, XmlCommentLine);
    builder.put(0x5c842a42c549486bL, XmlContent);
    builder.put(0x4890619bb401ef6eL, XmlDeclaration);
    builder.put(0x1d9c27c394f4069bL, XmlDoctypeDeclaration);
    builder.put(0x5e2f66f285946ac9L, XmlDocument);
    builder.put(0x5c842a42c54b10b2L, XmlElement);
    builder.put(0x16838b3fce9c6f4dL, XmlEntityRef);
    builder.put(0x5c842a42c54cfd21L, XmlEntityRefValue);
    builder.put(0x1d9c27c394f6033fL, XmlExternalId);
    builder.put(0x5c842a42c54c94c0L, XmlFile);
    builder.put(0x2abf085050020e3cL, XmlNoSpaceValue);
    builder.put(0x1d9c27c394eff13eL, XmlPart);
    builder.put(0x5c842a42c5494875L, XmlProcessingInstruction);
    builder.put(0x5c842a42c5494871L, XmlProlog);
    builder.put(0x6988ccb84e3bd0e5L, XmlPrologElement);
    builder.put(0x16838b3fce9aa513L, XmlText);
    builder.put(0x5c842a42c54cfd1fL, XmlTextValue);
    builder.put(0x5c842a42c54cfd1cL, XmlValuePart);
    builder.put(0x6988ccb84e3cfaa8L, XmlWhitespace);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
