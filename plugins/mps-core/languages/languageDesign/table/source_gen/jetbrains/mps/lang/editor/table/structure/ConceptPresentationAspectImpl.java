package jetbrains.mps.lang.editor.table.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_CellModel_HierarchycalTable;
  private ConceptPresentation props_CellModel_Table;
  private ConceptPresentation props_QueryFunction_TableModel;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.CellModel_HierarchycalTable:
        if (props_CellModel_HierarchycalTable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_CellModel_HierarchycalTable = cpb.create();
        }
        return props_CellModel_HierarchycalTable;
      case LanguageConceptSwitch.CellModel_Table:
        if (props_CellModel_Table == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_CellModel_Table = cpb.create();
        }
        return props_CellModel_Table;
      case LanguageConceptSwitch.QueryFunction_TableModel:
        if (props_QueryFunction_TableModel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_QueryFunction_TableModel = cpb.create();
        }
        return props_QueryFunction_TableModel;
    }
    return null;
  }
}
