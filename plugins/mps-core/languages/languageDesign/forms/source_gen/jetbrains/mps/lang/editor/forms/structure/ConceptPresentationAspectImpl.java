package jetbrains.mps.lang.editor.forms.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AbstractCheckboxUI;
  private ConceptPresentation props_CellModel_Checkbox;
  private ConceptPresentation props_CheckboxUI_Platform;
  private ConceptPresentation props_CheckboxUI_Text;
  private ConceptPresentation props_StubCellModel_Checkbox;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractCheckboxUI:
        if (props_AbstractCheckboxUI == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_AbstractCheckboxUI = cpb.create();
        }
        return props_AbstractCheckboxUI;
      case LanguageConceptSwitch.CellModel_Checkbox:
        if (props_CellModel_Checkbox == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("checkbox");
          props_CellModel_Checkbox = cpb.create();
        }
        return props_CellModel_Checkbox;
      case LanguageConceptSwitch.CheckboxUI_Platform:
        if (props_CheckboxUI_Platform == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("platform checkbox UI");
          props_CheckboxUI_Platform = cpb.create();
        }
        return props_CheckboxUI_Platform;
      case LanguageConceptSwitch.CheckboxUI_Text:
        if (props_CheckboxUI_Text == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("text checkbox UI");
          props_CheckboxUI_Text = cpb.create();
        }
        return props_CheckboxUI_Text;
      case LanguageConceptSwitch.StubCellModel_Checkbox:
        if (props_StubCellModel_Checkbox == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_StubCellModel_Checkbox = cpb.create();
        }
        return props_StubCellModel_Checkbox;
    }
    return null;
  }
}
