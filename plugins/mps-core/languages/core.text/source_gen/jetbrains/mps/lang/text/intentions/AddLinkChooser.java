package jetbrains.mps.lang.text.intentions;

/*Generated by MPS */

import javax.swing.JTextField;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.EditorComponent;
import com.intellij.openapi.ui.popup.JBPopup;
import javax.swing.JPanel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.JLabel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import javax.swing.JButton;
import com.intellij.openapi.ui.popup.JBPopupFactory;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import com.intellij.ui.awt.RelativePoint;
import java.awt.Point;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import jetbrains.mps.editor.runtime.commands.EditorCommand;

/*package*/ class AddLinkChooser {

  private JTextField myTextField;
  private JTextField myLinkField;

  private SNode myWord;
  private EditorComponent myEditorComponent;
  private JBPopup myPopup;
  /*package*/ AddLinkChooser(SNode word, EditorComponent editorComponent) {
    myWord = word;
    myEditorComponent = editorComponent;
  }

  private JPanel createMainPanel() {
    JPanel mainPanel = new JPanel(new GridBagLayout());
    GridBagConstraints c = new GridBagConstraints();
    c.fill = GridBagConstraints.HORIZONTAL;
    c.gridy = 0;
    c.gridx = 0;
    c.anchor = GridBagConstraints.LINE_START;
    mainPanel.add(new JLabel("Text:"), c);

    c.gridx = 1;
    c.gridwidth = 3;
    c.anchor = GridBagConstraints.LINE_END;
    myTextField = new JTextField(SPropertyOperations.getString(myWord, MetaAdapterFactory.getProperty(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35f04L, 0x229012ddae35f05L, "value")), 20);
    mainPanel.add(myTextField, c);

    c.gridy = 1;
    c.gridx = 0;
    c.anchor = GridBagConstraints.LINE_START;
    mainPanel.add(new JLabel("Link: "), c);

    myLinkField = new JTextField(20);
    c.gridx = 1;
    mainPanel.add(myLinkField, c);

    c.gridy = 2;
    c.gridx = 1;
    c.gridwidth = 1;
    c.anchor = GridBagConstraints.LAST_LINE_END;
    mainPanel.add(new JButton(new AddLinkChooser.ApplyAction()), c);
    return mainPanel;
  }
  /*package*/ void showPopup() {
    JPanel mainPanel = createMainPanel();

    myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(mainPanel, null).setResizable(true).createPopup();

    EditorCell cell = myEditorComponent.getSelectedCell();
    if (cell == null) {
      return;
    }
    myPopup.show(new RelativePoint(myEditorComponent, new Point(cell.getX(), cell.getY() + cell.getHeight())));
  }
  /*package*/ String getLinkText() {
    return myLinkField.getText();
  }
  private class ApplyAction extends AbstractAction {

    public ApplyAction() {
      super("Apply");
    }
    @Override
    public void actionPerformed(ActionEvent event) {
      myEditorComponent.getEditorContext().getRepository().getModelAccess().executeCommand(new EditorCommand(myEditorComponent) {
        protected void doExecute() {
          SPropertyOperations.set(myWord, MetaAdapterFactory.getProperty(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35f04L, 0x229012ddae35f05L, "value"), myTextField.getText());
          SPropertyOperations.set(myWord, MetaAdapterFactory.getProperty(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x229012ddae35f04L, 0x57d1fa7f2af1d485L, "url"), myLinkField.getText());
          myPopup.closeOk(null);
        }
      });
    }
  }
}
