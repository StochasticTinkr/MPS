package jetbrains.mps.lang.richText.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.cells.BigCellUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;

/*package*/ class Word_InspectorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public Word_InspectorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createAlternation_8g1p9d_a();
  }

  private EditorCell createAlternation_8g1p9d_a() {
    boolean alternationCondition = true;
    alternationCondition = nodeCondition_8g1p9d_a0();
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = createCollection_8g1p9d_a0();
    } else {
      editorCell = createConstant_8g1p9d_a0_0();
    }
    EditorCell bigCell = BigCellUtil.findBigCell(editorCell, getNode());
    if (bigCell != null) {
      bigCell.setBig(true);
      bigCell.setCellContext(getCellFactory().getCellContext());
    }
    return editorCell;
  }
  private boolean nodeCondition_8g1p9d_a0() {
    return (AttributeOperations.getAttribute(myNode, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x55a21ffdaa8d982fL, "jetbrains.mps.lang.richText.structure.LinkElementAttribute"))) != null);
  }
  private EditorCell createCollection_8g1p9d_a0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_8g1p9d_a0");
    editorCell.addEditorCell(createConstant_8g1p9d_a0a());
    editorCell.addEditorCell(createModelAccess_8g1p9d_b0a());
    return editorCell;
  }
  private EditorCell createConstant_8g1p9d_a0a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "link:");
    editorCell.setCellId("Constant_8g1p9d_a0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_8g1p9d_b0a() {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        return SPropertyOperations.getString(AttributeOperations.getAttribute(myNode, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x55a21ffdaa8d982fL, "jetbrains.mps.lang.richText.structure.LinkElementAttribute"))), MetaAdapterFactory.getProperty(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x55a21ffdaa8d982fL, 0x55a21ffdaa8d9832L, "link"));
      }
      public void setText(String text) {
        SPropertyOperations.set(AttributeOperations.getAttribute(myNode, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x55a21ffdaa8d982fL, "jetbrains.mps.lang.richText.structure.LinkElementAttribute"))), MetaAdapterFactory.getProperty(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L, 0x55a21ffdaa8d982fL, 0x55a21ffdaa8d9832L, "link"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(getEditorContext(), modelAccessor, myNode);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_8g1p9d_b0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_8g1p9d_a0_0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "");
    editorCell.setCellId("Constant_8g1p9d_a0_0");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
