package jetbrains.mps.lang.text.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Line = 0;
  public static final int NodeWrapperElement = 1;
  public static final int Text = 2;
  public static final int TextElement = 3;
  public static final int Word = 4;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xc7fb639fbe784307L, 0x89b0b5959c3fa8c8L);
    builder.put(0x2331694e561af166L, Line);
    builder.put(0x2b7b49e536031fe9L, NodeWrapperElement);
    builder.put(0x2331694e5619f411L, Text);
    builder.put(0x229012ddae35ee7L, TextElement);
    builder.put(0x229012ddae35f04L, Word);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
