package jetbrains.mps.execution.configurations.implementation.plugin.plugin;

/*Generated by MPS */

import javax.swing.JPanel;
import jetbrains.mps.execution.lib.ui.RawLineEditorComponent;
import jetbrains.mps.execution.lib.ui.FieldWithPathChooseDialog;
import java.awt.GridBagLayout;
import javax.swing.JLabel;
import jetbrains.mps.ide.common.LayoutUtil;

public class MpsStartupSettingsEditorComponent extends JPanel {
  private RawLineEditorComponent myVmOptions = new RawLineEditorComponent();
  private FieldWithPathChooseDialog myJrePath = new FieldWithPathChooseDialog();
  private FieldWithPathChooseDialog mySettingsPath = new FieldWithPathChooseDialog();

  public MpsStartupSettingsEditorComponent() {
    super(new GridBagLayout());

    this.add(new JLabel("MPS settings path:"), LayoutUtil.createLabelConstraints(0));
    this.add(mySettingsPath, LayoutUtil.createFieldConstraints(1));
    myVmOptions.setDialogCaption("Virtual machine parameters");
    myVmOptions.setText(Mps_Command.getDefaultVirtualMachineParameters());
    this.add(new JLabel("Virtual machine parameters:"), LayoutUtil.createLabelConstraints(2));
    this.add(myVmOptions, LayoutUtil.createFieldConstraints(3));
    this.add(new JLabel("Alternative JRE path:"), LayoutUtil.createLabelConstraints(4));
    this.add(myJrePath, LayoutUtil.createFieldConstraints(5));
  }

  public void applyTo(MpsStartupSettings_Configuration configuration) {
    configuration.setVmOptions(myVmOptions.getText());
    configuration.setJrePath(myJrePath.getText());
    configuration.setShrinkedSettingsPath(mySettingsPath.getText());
  }

  public void resetFrom(MpsStartupSettings_Configuration configuration) {
    myVmOptions.setText(configuration.getVmOptions());
    myJrePath.setText(configuration.getJrePath());
    mySettingsPath.setText(configuration.getSettingsPath());
  }

  public void setEditable(boolean editable) {
    myVmOptions.setEditable(editable);
    myJrePath.setEditable(editable);
    mySettingsPath.setEditable(editable);
  }
}
