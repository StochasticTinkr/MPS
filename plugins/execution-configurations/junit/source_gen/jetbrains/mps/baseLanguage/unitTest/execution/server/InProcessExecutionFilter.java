package jetbrains.mps.baseLanguage.unitTest.execution.server;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import jetbrains.mps.baseLanguage.unitTest.execution.client.ITestNodeWrapper;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.test.behavior.TestInfo__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/**
 * Check ITestNodeWrapper if it's suitable for in-process execution, replace original request with a failing one if not.
 */
/*package*/ class InProcessExecutionFilter {

  public void check(@NotNull ITestNodeWrapper testNodeWrapper, @Nullable SModel testNodeModel) throws InProcessExecutionFilter.MPSException {
    if (!(testNodeWrapper.canRunInProcess())) {
      throw new InProcessExecutionFilter.MPSException("The test is set not to be executed in-process. Test " + testNodeWrapper.getName() + " is ignored.");
    }
    if ((boolean) TestInfo__BehaviorDescriptor.reOpenProject_idThWTaQhG7P.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x46bca02bfb6e730aL, "jetbrains.mps.lang.test.structure.TestInfo")), testNodeModel)) {
      throw new InProcessExecutionFilter.MPSException("The project properties given in the TestInfo file is impossible to set in-process. Test " + testNodeWrapper.getName() + " is ignored.");
    }
  }

  /*package*/ static final class MPSException extends Exception {
    public MPSException(String msg) {
      super(msg);
    }

    public Throwable fillInStackTrace() {
      return this;
    }
  }
}
