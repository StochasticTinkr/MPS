package jetbrains.mps.baseLanguage.unitTest.execution;

/*Generated by MPS */

import org.jetbrains.mps.annotations.Immutable;
import jetbrains.mps.baseLanguage.unitTest.execution.client.ITestNodeWrapper;
import org.jetbrains.annotations.NotNull;

/**
 * messages from the process come as strings so the keys here are strings
 */
@Immutable
public final class TestCaseNodeKey implements TestNodeKey {
  private final String myTestCaseFqName;
  private final ITestNodeWrapper myNode;

  public TestCaseNodeKey(@NotNull ITestNodeWrapper node) {
    if (!(node.isTestCase())) {
      throw new IllegalArgumentException("The passed node is not points to a test method rather than to a test case");
    }

    myNode = node;
    myTestCaseFqName = node.getFqName();
  }

  @Override
  public String getTestCaseFqName() {
    return myTestCaseFqName;
  }

  @NotNull
  public TestCaseNodeKey getTestCaseNodeKey() {
    return this;
  }

  @NotNull
  @Override
  public ITestNodeWrapper getNode() {
    return myNode;
  }

  @Override
  public String getQualifiedName() {
    return myTestCaseFqName;
  }

  @Override
  public boolean equals(Object object) {
    if (object instanceof TestCaseNodeKey) {
      return myNode.equals(((TestCaseNodeKey) object).getNode());
    }
    return false;
  }

  @Override
  public int hashCode() {
    return myNode.hashCode();
  }

  @Override
  public String toString() {
    return "TestCaseKey[" + myTestCaseFqName + "]";
  }

  @NotNull
  @Override
  public TestType getType() {
    return TestType.TESTCASE;
  }
}
