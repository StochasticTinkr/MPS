package jetbrains.mps.baseLanguage.unitTest.execution.client;

/*Generated by MPS */

import org.jetbrains.mps.annotations.Immutable;
import org.jetbrains.annotations.NotNull;
import java.util.Objects;

/**
 * 
 */
@Immutable
/*package*/ final class TestMethodKey {
  private final String myTestCaseFqName;
  private final String myTestMethodFqName;

  /*package*/ TestMethodKey(@NotNull String classFqName, @NotNull String methodFqName) {
    myTestCaseFqName = classFqName;
    myTestMethodFqName = methodFqName;
  }

  public String getTestCaseFqName() {
    return myTestCaseFqName;
  }

  public String getTestMethodFqName() {
    return myTestMethodFqName;
  }

  public String getQualifiedName() {
    return myTestCaseFqName + "." + myTestMethodFqName;
  }

  @Override
  public boolean equals(Object object) {
    if (object instanceof TestMethodKey) {
      return myTestCaseFqName.equals(((TestMethodKey) object).myTestCaseFqName) && myTestMethodFqName.equals(((TestMethodKey) object).myTestMethodFqName);
    }
    return false;
  }

  @Override
  public int hashCode() {
    return Objects.hash(myTestCaseFqName, myTestMethodFqName);
  }

  @Override
  public String toString() {
    return "TestMethodKey[" + myTestCaseFqName + "." + myTestMethodFqName + "]";
  }
}
