package jetbrains.mps.debugger.api.lang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BreakpointCreator = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BreakpointableNodeItem = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptDeclarationReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_Concept = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_Debug_Project = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunctionParameter_DebuggableNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunction_CreateBreakpoint = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ConceptFunction_IsApplicableBreakpoint = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_CreateBreakpointOperation = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DebuggerConfiguration = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DebuggerReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_DebuggerType = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_GetDebuggerSettings_Function = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BreakpointCreator:
        return props_BreakpointCreator;
      case LanguageConceptSwitch.BreakpointableNodeItem:
        return props_BreakpointableNodeItem;
      case LanguageConceptSwitch.ConceptDeclarationReference:
        return props_ConceptDeclarationReference;
      case LanguageConceptSwitch.ConceptFunctionParameter_Concept:
        return props_ConceptFunctionParameter_Concept;
      case LanguageConceptSwitch.ConceptFunctionParameter_Debug_Project:
        return props_ConceptFunctionParameter_Debug_Project;
      case LanguageConceptSwitch.ConceptFunctionParameter_DebuggableNode:
        return props_ConceptFunctionParameter_DebuggableNode;
      case LanguageConceptSwitch.ConceptFunction_CreateBreakpoint:
        return props_ConceptFunction_CreateBreakpoint;
      case LanguageConceptSwitch.ConceptFunction_IsApplicableBreakpoint:
        return props_ConceptFunction_IsApplicableBreakpoint;
      case LanguageConceptSwitch.CreateBreakpointOperation:
        return props_CreateBreakpointOperation;
      case LanguageConceptSwitch.DebuggerConfiguration:
        return props_DebuggerConfiguration;
      case LanguageConceptSwitch.DebuggerReference:
        return props_DebuggerReference;
      case LanguageConceptSwitch.DebuggerType:
        return props_DebuggerType;
      case LanguageConceptSwitch.GetDebuggerSettings_Function:
        return props_GetDebuggerSettings_Function;
    }
    return null;
  }
}
