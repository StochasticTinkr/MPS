package jetbrains.mps.debugger.api.lang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BreakpointCreator = 0;
  public static final int BreakpointableNodeItem = 1;
  public static final int ConceptDeclarationReference = 2;
  public static final int ConceptFunctionParameter_Concept = 3;
  public static final int ConceptFunctionParameter_Debug_Project = 4;
  public static final int ConceptFunctionParameter_DebuggableNode = 5;
  public static final int ConceptFunction_CreateBreakpoint = 6;
  public static final int ConceptFunction_IsApplicableBreakpoint = 7;
  public static final int CreateBreakpointOperation = 8;
  public static final int DebuggerConfiguration = 9;
  public static final int DebuggerReference = 10;
  public static final int DebuggerType = 11;
  public static final int GetDebuggerSettings_Function = 12;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xfbc142795e2a4c87L, 0xa5d15f7061e6c456L);
    builder.put(0x2bd07aa080dfb3a4L, BreakpointCreator);
    builder.put(0x2bd07aa080dfb937L, BreakpointableNodeItem);
    builder.put(0x5058b4b262ffd5deL, ConceptDeclarationReference);
    builder.put(0x79747203892d4ccdL, ConceptFunctionParameter_Concept);
    builder.put(0x11a2c8c0148e628cL, ConceptFunctionParameter_Debug_Project);
    builder.put(0x11a2c8c0148e6290L, ConceptFunctionParameter_DebuggableNode);
    builder.put(0x2bd07aa080dfb93aL, ConceptFunction_CreateBreakpoint);
    builder.put(0x2b1681328a5d4b64L, ConceptFunction_IsApplicableBreakpoint);
    builder.put(0x23a852e9c43bcae9L, CreateBreakpointOperation);
    builder.put(0x5d457621242d16f5L, DebuggerConfiguration);
    builder.put(0xf528808f912d151L, DebuggerReference);
    builder.put(0xf528808f912bd83L, DebuggerType);
    builder.put(0x5d457621242d18e2L, GetDebuggerSettings_Function);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
