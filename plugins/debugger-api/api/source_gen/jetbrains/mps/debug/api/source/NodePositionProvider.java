package jetbrains.mps.debug.api.source;

/*Generated by MPS */

import jetbrains.mps.project.MPSProject;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.debug.api.programState.ILocation;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.debug.api.AbstractDebugSession;
import jetbrains.mps.debug.api.programState.NullLocation;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.traceInfo.TraceInfoUtil;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.annotations.NonNls;
import jetbrains.mps.util.annotation.ToRemove;

public class NodePositionProvider implements IPositionProvider<NodeSourcePosition> {
  private final MPSProject myProject;

  public NodePositionProvider(MPSProject mpsProject) {
    myProject = mpsProject;
  }


  @Nullable
  public NodeSourcePosition getPosition(@Nullable ILocation location, @NotNull AbstractDebugSession session) {
    if (location == null || location instanceof NullLocation) {
      return null;
    }
    SNodeReference node = getSNodePointer(location, session);
    if (node != null) {
      return new NodeSourcePosition(node);
    }
    return null;
  }

  @Nullable
  protected SNodeReference getSNodePointer(@NotNull ILocation location, @NotNull AbstractDebugSession session) {
    SNode node = TraceInfoUtil.getNode(location.getUnitName(), location.getFileName(), location.getLineNumber());
    if (node == null) {
      return null;
    }
    return new SNodePointer(node);
  }

  @Nullable
  @Override
  @Deprecated
  public NodeSourcePosition getPosition(@Nullable ILocation location) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  @Nullable
  @Override
  @Deprecated
  public NodeSourcePosition getPosition(@NotNull String unitName, @NotNull String fileName, int lineNumber) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  @Nullable
  @Deprecated
  protected SNodeReference getSNodePointer(@Nullable ILocation location) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  @Nullable
  @Deprecated
  protected SNodeReference getSNodePointer(@NonNls final String unitName, @NonNls final String fileName, final int position) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  /**
   * 
   * @deprecated {@link jetbrains.mps.debug.api.source.NodePositionProvider#getSNodePointer(ILocation, AbstractDebugSession) } shall be sufficient}
   */
  @Nullable
  @Deprecated
  @ToRemove(version = 3.4)
  public SNode getNode(@Nullable ILocation location) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  /**
   * 
   * @deprecated {@link jetbrains.mps.debug.api.source.NodePositionProvider#getSNodePointer(ILocation, AbstractDebugSession) shall be sufficient}
   */
  @Nullable
  @Deprecated
  @ToRemove(version = 3.4)
  public SNode getNode(@NonNls String unitName, @NonNls String fileName, int position) {
    throw new UnsupportedOperationException("This method is deprecated. Nobody invokes it");
  }

  @Override
  public boolean accepts(AbstractDebugSession session) {
    return true;
  }
}
