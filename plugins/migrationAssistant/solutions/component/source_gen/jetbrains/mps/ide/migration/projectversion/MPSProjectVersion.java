package jetbrains.mps.ide.migration.projectversion;

/*Generated by MPS */

import com.intellij.openapi.components.State;
import com.intellij.openapi.components.Storage;
import com.intellij.openapi.components.AbstractProjectComponent;
import jetbrains.mps.migration.global.ProjectVersion;
import com.intellij.openapi.components.PersistentStateComponent;
import jetbrains.mps.migration.global.Version;
import com.intellij.openapi.project.Project;

@State(name = "ProjectVersion", storages = @Storage(value = "version.xml")
)
public class MPSProjectVersion extends AbstractProjectComponent implements ProjectVersion, PersistentStateComponent<MPSProjectVersion.MyState> {
  private static final Version DEFAULT = Version.fromString("1.5");
  private Version myVersion = DEFAULT;
  protected MPSProjectVersion(Project project) {
    super(project);
  }
  @Override
  public MPSProjectVersion.MyState getState() {
    MPSProjectVersion.MyState res = new MPSProjectVersion.MyState();
    res.version = myVersion.toString();
    return res;
  }
  @Override
  public void loadState(MPSProjectVersion.MyState state) {
    try {
      myVersion = Version.fromString(state.version);
    } catch (IllegalArgumentException e) {
      myVersion = DEFAULT;
    }
  }
  public Version getVersion() {
    return myVersion;
  }
  public void setVersion(Version version) {
    myVersion = version;
  }
  public static class MyState {
    public String version;
  }
}
