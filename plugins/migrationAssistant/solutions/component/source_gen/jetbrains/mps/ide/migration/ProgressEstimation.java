package jetbrains.mps.ide.migration;

/*Generated by MPS */


public class ProgressEstimation {
  private static final double MIGRATIONS_FRACTION = 0.5;
  private static final double CHECKS_FRACTION = 0.4;
  private static final double OTHER_FRACTION = 1.0 - MIGRATIONS_FRACTION - CHECKS_FRACTION;

  private static final double START_FRACTION = OTHER_FRACTION;

  private static final double PRECHECK_FRACTION = CHECKS_FRACTION * 0.2;
  private static final double POSTCHECK_FRACTION = CHECKS_FRACTION * 0.2;
  private static final double NONMIGRATEDCHECK_FRACTION = CHECKS_FRACTION * 0.5;
  private static final double MIGRATIONS_CHECK_FRACTION = CHECKS_FRACTION - PRECHECK_FRACTION - POSTCHECK_FRACTION - NONMIGRATEDCHECK_FRACTION;

  private static final double PROJECT_MIGRATIONS_FRACTION = MIGRATIONS_FRACTION * 0.3;
  private static final double LANGUAGE_MIGRATIONS_FRACTION = MIGRATIONS_FRACTION * 0.6;
  private static final double CLEANUP_MIGRATIONS_FRACTION = MIGRATIONS_FRACTION - PROJECT_MIGRATIONS_FRACTION - LANGUAGE_MIGRATIONS_FRACTION;

  public static double initial() {
    return ProgressEstimation.START_FRACTION;
  }

  public static double migrationsCheck(double doneFraction) {
    return initial() + MIGRATIONS_CHECK_FRACTION * doneFraction;
  }

  public static double cleanupMigrations(double doneFraction) {
    return migrationsCheck(1.0) + CLEANUP_MIGRATIONS_FRACTION * doneFraction;
  }

  public static double preCheck(double doneFraction) {
    return cleanupMigrations(1.0) + PRECHECK_FRACTION * doneFraction;
  }

  public static double fallbackPreCheck(double doneFraction) {
    return preCheck(1.0) + PRECHECK_FRACTION * doneFraction;
  }

  public static double projectMigrations(double doneFraction) {
    return preCheck(1.0) + PROJECT_MIGRATIONS_FRACTION * doneFraction;
  }

  public static double languageMigrations(double doneFraction) {
    return projectMigrations(1.0) + LANGUAGE_MIGRATIONS_FRACTION * doneFraction;
  }

  public static double postCheck(double doneFraction) {
    return languageMigrations(1.0) + POSTCHECK_FRACTION * doneFraction;
  }

  public static double nonMigratedCheck(double doneFraction) {
    return postCheck(1.0) + NONMIGRATEDCHECK_FRACTION * doneFraction;
  }
}
