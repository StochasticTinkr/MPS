package jetbrains.mps.migration.component.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.GeneratedActionGroup;
import jetbrains.mps.plugins.actions.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;

public class MigrationsMenu_ActionGroup extends GeneratedActionGroup {
  public static final String ID = "jetbrains.mps.migration.component.plugin.MigrationsMenu_ActionGroup";
  public static final String LABEL_ID_migrations = ID + "migrations";
  public static final String LABEL_ID_utils = ID + "utils";
  public MigrationsMenu_ActionGroup() {
    super("MigrationsMenu", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    MigrationsMenu_ActionGroup.this.addAction("jetbrains.mps.migration.component.plugin.ExecuteMigrationAssistant_Action");
    MigrationsMenu_ActionGroup.this.addAction("jetbrains.mps.migration.component.plugin.ShowDeprecatedStuff_Action");
    MigrationsMenu_ActionGroup.this.addAction("jetbrains.mps.migration.component.plugin.ShowDeprecatedUsages_Action");
    MigrationsMenu_ActionGroup.this.addAction("jetbrains.mps.migration.component.plugin.RunPreUpdateCheck_Action");
    {
      LabelledAnchor action = new LabelledAnchor(MigrationsMenu_ActionGroup.LABEL_ID_migrations);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.migration.component"));
      MigrationsMenu_ActionGroup.this.addAction(action);
    }
    {
      LabelledAnchor action = new LabelledAnchor(MigrationsMenu_ActionGroup.LABEL_ID_utils);
      ActionManagerEx manager = ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.migration.component"));
      MigrationsMenu_ActionGroup.this.addAction(action);
    }
  }
}
