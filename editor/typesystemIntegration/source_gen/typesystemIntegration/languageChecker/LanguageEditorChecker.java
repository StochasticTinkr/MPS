package typesystemIntegration.languageChecker;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.module.SRepository;
import java.util.List;
import jetbrains.mps.checkers.AbstractNodeCheckerInEditor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.checkers.ConstraintsChecker;
import jetbrains.mps.project.validation.StructureChecker;
import jetbrains.mps.checkers.TargetConceptChecker;
import jetbrains.mps.checkers.UsedLanguagesChecker;

public class LanguageEditorChecker extends LanguageEditorCheckerBase {
  public LanguageEditorChecker(@NotNull SRepository projectRepo) {
    super(projectRepo, checkers());
  }
  public static List<AbstractNodeCheckerInEditor> checkers() {
    List<AbstractNodeCheckerInEditor> rules = ListSequence.fromList(new ArrayList<AbstractNodeCheckerInEditor>());
    ListSequence.fromList(rules).addElement(new ConstraintsChecker());
    ListSequence.fromList(rules).addElement(new RefScopeCheckerInEditor());
    ListSequence.fromList(rules).addElement((AbstractNodeCheckerInEditor) (AbstractNodeCheckerInEditor) new StructureChecker().withoutBrokenReferences());
    ListSequence.fromList(rules).addElement(new TargetConceptChecker());
    ListSequence.fromList(rules).addElement(new UsedLanguagesChecker());
    return rules;
  }
}
