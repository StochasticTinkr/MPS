package jetbrains.mps.editor.runtime.impl.cellActions;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Objects;
import jetbrains.mps.openapi.editor.selection.Selection;
import jetbrains.mps.nodeEditor.selection.EditorCellLabelSelection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.behaviour.BHReflection;
import jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId;

public class CellAction_CommentOrUncommentChild extends CellAction_CommentOrUncomment {
  private final SNode myNode;
  private final SContainmentLink myLink;


  public CellAction_CommentOrUncommentChild(@NotNull SNode node, @NotNull SContainmentLink link) {
    myNode = node;
    this.myLink = link;
  }

  @Override
  public void execute(EditorContext editorContext) {
    if (!(Objects.equals(editorContext.getSelectedNode(), myNode))) {
      super.execute(editorContext);
    }
  }
  @Override
  public boolean canExecute(EditorContext editorContext) {
    if (!(isTrivialSelection(editorContext))) {
      return false;
    }
    if (Objects.equals(editorContext.getSelectedNode(), myNode)) {
      return true;
    }
    return super.canExecute(editorContext);
  }

  private boolean isTrivialSelection(EditorContext editorContext) {
    Selection selection = editorContext.getSelectionManager().getSelection();
    return selection instanceof EditorCellLabelSelection && !(((EditorCellLabelSelection) selection).hasNonTrivialSelection());
  }
  protected SNode getNodeToProcess(EditorContext editorContext) {
    SNode currentNode = editorContext.getSelectedNode();
    while (currentNode != null) {
      if (Objects.equals(SNodeOperations.getParent(currentNode), myNode)) {
        SContainmentLink link = (SNodeOperations.isInstanceOf(currentNode, MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute")) ? ((SContainmentLink) BHReflection.invoke0(SNodeOperations.cast(currentNode, MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute")), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), SMethodTrimmedId.create("getLink", MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), "BpxLfMirzf"))) : currentNode.getContainmentLink());
        return (Objects.equals(link, myLink) ? currentNode : null);
      }
      currentNode = SNodeOperations.getParent(currentNode);
    }
    return null;
  }
}
