package jetbrains.mps.editor.runtime.impl.cellActions;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.cells.EditorCellContext;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BHReflection;
import jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.legacy.ConceptMetaInfoConverter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.SNodeLegacy;
import jetbrains.mps.smodel.SNodeUtil;
import jetbrains.mps.kernel.model.SModelUtil;

public class CellAction_InsertPlaceholder extends AbstractCellAction {
  private final boolean myIsAfter;
  public CellAction_InsertPlaceholder(boolean isAfter) {
    myIsAfter = isAfter;
  }

  @Override
  public boolean canExecute(EditorContext editorContext) {
    return findPlaceToInsert(editorContext.getContextCell()) != null;
  }
  public void execute(EditorContext editorContext) {
    findPlaceToInsert(editorContext.getContextCell()).withAfter(myIsAfter).insertPlaceholder();
  }
  private CellAction_InsertPlaceholder.PlaceToInsert findPlaceToInsert(EditorCell contextCell) {
    CellAction_InsertPlaceholder.PlaceToInsert placeFromCollectionCell = getPlaceFromCollectionCell(contextCell);
    if (placeFromCollectionCell != null) {
      return placeFromCollectionCell;
    }

    SNode parentNode;
    SNode childNode;
    SContainmentLink containmentLink;

    while (contextCell != null) {
      EditorCellContext cellContext = contextCell.getCellContext();
      CellAction_InsertPlaceholder.PlaceToInsert placeToInsert = null;
      if (cellContext != null) {
        SNodeLocation nodeLocation = cellContext.getNodeLocation();
        if (nodeLocation != null) {
          parentNode = nodeLocation.getParent();
          childNode = nodeLocation.getContextNode();
          containmentLink = nodeLocation.getContainmentLink();
          if (eq_d2uk49_a0d0b0c0h0f(containmentLink, MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, 0x47bf8397520e5942L, "smodelAttribute"))) {
            if (SNodeOperations.isInstanceOf(((SNode) childNode), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"))) {
              containmentLink = ((SContainmentLink) BHReflection.invoke0(SNodeOperations.cast(childNode, MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute")), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), SMethodTrimmedId.create("getLink", MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), "BpxLfMirzf")));
            } else {
              containmentLink = null;
            }
          }
          if (containmentLink != null && containmentLink.isMultiple() && parentNode != null) {
            return new CellAction_InsertPlaceholder.PlaceToInsert(parentNode, childNode, containmentLink);
          }
        }
      }
      contextCell = contextCell.getParent();
    }
    return null;
  }

  private static class PlaceToInsert {
    @NotNull
    private final SNode myParentNode;
    @Nullable
    private final SNode myChildNode;
    @NotNull
    private SContainmentLink myContainmentLink;
    private boolean myIsAfter = true;

    private PlaceToInsert(@NotNull SNode parentNode, @Nullable SNode childNode, @NotNull SContainmentLink containmentLink) {
      myParentNode = parentNode;
      myChildNode = childNode;
      myContainmentLink = containmentLink;
    }
    private PlaceToInsert(@NotNull SNode parentNode, @Nullable SNode childNode, @NotNull String role) {
      this(parentNode, childNode, ((ConceptMetaInfoConverter) parentNode.getConcept()).convertAggregation(role));
    }

    /*package*/ void insertPlaceholder() {
      SNode placeholder = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x339681b4da4ef1a7L, "jetbrains.mps.lang.core.structure.BasePlaceholder"));
      BHReflection.invoke0(placeholder, MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), SMethodTrimmedId.create("setLink", MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x9d98713f247885aL, "jetbrains.mps.lang.core.structure.ChildAttribute"), "BpxLfMirzM"), myContainmentLink);
      if (myIsAfter) {
        myParentNode.insertChildAfter(MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, 0x47bf8397520e5942L, "smodelAttribute"), placeholder, myChildNode);
      } else {
        myParentNode.insertChildBefore(MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL, 0x47bf8397520e5942L, "smodelAttribute"), placeholder, myChildNode);
      }
    }

    /*package*/ CellAction_InsertPlaceholder.PlaceToInsert withAfter(boolean isAfter) {
      myIsAfter = isAfter;
      return this;
    }
  }


  private static CellAction_InsertPlaceholder.PlaceToInsert getPlaceFromCollectionCell(EditorCell cell) {
    if (cell.getRole() != null) {
      String role = cell.getRole();
      SNode currentNode = cell.getSNode();
      SNode linkDeclaration = (SNode) new SNodeLegacy(currentNode).getLinkDeclaration(role);
      if (linkDeclaration != null && !(SNodeUtil.getLinkDeclaration_IsReference(linkDeclaration)) && SModelUtil.isMultipleLinkDeclaration(linkDeclaration)) {
        return new CellAction_InsertPlaceholder.PlaceToInsert(currentNode, null, role);
      }
    }
    return null;
  }

  private static boolean eq_d2uk49_a0d0b0c0h0f(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
