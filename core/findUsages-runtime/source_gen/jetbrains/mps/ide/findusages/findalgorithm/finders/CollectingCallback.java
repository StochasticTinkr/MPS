package jetbrains.mps.ide.findusages.findalgorithm.finders;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.ide.findusages.model.SearchResult;
import java.util.ArrayList;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.ide.findusages.model.SearchResults;

public class CollectingCallback implements IFinder.FindCallback {
  private final List<SearchResult<?>> myResultList = new ArrayList<SearchResult<?>>();
  private final List<SearchedObjects<?>> mySearchedObjectsList = new ArrayList<SearchedObjects<?>>();

  public CollectingCallback() {
  }

  @Override
  public void onUsageFound(@NotNull SearchResult<?> result) {
    myResultList.add(result);
  }

  @Override
  public void onSearchedObjectsCalculated(@NotNull SearchedObjects<?> searchedObjects) {
    mySearchedObjectsList.add(searchedObjects);
  }

  @NotNull
  public SearchResults<?> getResults() {
    SearchedObjects<?> union = SearchedObjects.union(mySearchedObjectsList.toArray(new SearchedObjects[0]));
    return new SearchResults(union, myResultList);
  }
}
