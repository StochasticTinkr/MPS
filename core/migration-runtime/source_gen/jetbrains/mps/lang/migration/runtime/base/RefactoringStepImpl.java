package jetbrains.mps.lang.migration.runtime.base;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import org.jetbrains.mps.openapi.module.SModule;

public class RefactoringStepImpl implements RefactoringLog {
  private String myCaption;
  private RefactoringLogReference myDescriptor;
  private List<RefactoringLogReference> myExecuteAfter;
  private List<RefactoringPart> myParts;
  public RefactoringStepImpl(String caption, RefactoringLogReference descriptor, List<RefactoringLogReference> executeAfter, List<RefactoringPart> parts) {
    myCaption = caption;
    myDescriptor = descriptor;
    myExecuteAfter = ListSequence.fromListWithValues(new ArrayList<RefactoringLogReference>(), executeAfter);
    myParts = ListSequence.fromListWithValues(new ArrayList<RefactoringPart>(), parts);
  }
  public String getCaption() {
    return myCaption;
  }
  public RefactoringLogReference getDescriptor() {
    return myDescriptor;
  }
  public Iterable<RefactoringLogReference> getExecuteAfter() {
    return myExecuteAfter;
  }
  public void execute(SModule module, RefactoringSession refactoringSession) {
    for (RefactoringPart part : ListSequence.fromList(myParts)) {
      part.execute(module, refactoringSession);
    }
  }
}
