package jetbrains.mps.internal.make.cfg;

/*Generated by MPS */

import jetbrains.mps.make.script.PropertyPoolInitializer;
import jetbrains.mps.compiler.JavaCompilerOptions;
import jetbrains.mps.make.script.IPropertiesPool;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.make.facet.ITarget;

public final class JavaCompileFacetInitializer implements PropertyPoolInitializer {
  private Boolean mySkipCompilation;
  private JavaCompilerOptions myOptions;

  public JavaCompileFacetInitializer() {
  }
  public JavaCompileFacetInitializer skipCompilation(Boolean skip) {
    mySkipCompilation = skip;
    return this;
  }

  public JavaCompileFacetInitializer setJavaCompileOptions(JavaCompilerOptions options) {
    myOptions = options;
    return this;
  }

  @Override
  public void populate(IPropertiesPool ppool) {
    Tuples._3<Boolean, Boolean, JavaCompilerOptions> compileProps = (Tuples._3<Boolean, Boolean, JavaCompilerOptions>) ppool.properties(new ITarget.Name("jetbrains.mps.make.facets.JavaCompile.compile"), Object.class);
    if (compileProps != null) {
      compileProps._1(mySkipCompilation);
      compileProps._2(myOptions);
    }
  }
}
