package jetbrains.mps.internal.make.runtime.util;

/*Generated by MPS */

import org.jetbrains.mps.annotations.Immutable;
import jetbrains.mps.vfs.IFile;

@Immutable
public final class DeltaKey {
  private final String myKey;

  public DeltaKey(IFile dir) {
    myKey = DirUtil.asDir(DirUtil.straighten(DirUtil.urlToPath(dir.getPath())));
  }

  private DeltaKey(String key) {
    myKey = key;
  }

  public DeltaKey commonPrefix(DeltaKey other) {
    return new DeltaKey(DirUtil.commonDirPrefix(myKey, other.myKey));
  }

  public boolean isEmpty() {
    return (myKey == null || myKey.length() == 0);
  }

  public boolean contains(DeltaKey other) {
    return DirUtil.startsWith(other.myKey, myKey);
  }

  @Override
  public int hashCode() {
    return myKey.hashCode();
  }
  @Override
  public boolean equals(Object object) {
    if (object instanceof DeltaKey) {
      return ((DeltaKey) object).myKey.equals(myKey);
    }
    return false;
  }
}
