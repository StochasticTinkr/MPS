/*
 * Copyright 2003-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.errors.item;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SLanguage;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.project.AbstractModule;
import java.util.HashSet;
import org.jetbrains.mps.openapi.module.SDependency;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.classloading.ClassLoaderManager;

public class LanguageNotLoadedProblem extends LanguageMissingProblem {
  public LanguageNotLoadedProblem(SLanguage language, SNode instance) {
    super(language, instance, createMessage(language));
  }

  private static String createMessage(SLanguage lang) {
    String err = "Language " + lang + " can't be loaded";

    AbstractModule langModule = (AbstractModule) lang.getSourceModule();

    HashSet<String> invalidDep = new HashSet<>();
    for (SDependency dep : Sequence.fromIterable(langModule.getDeclaredDependencies())) {
      if (!(ClassLoaderManager.getInstance().isValidForClassloading(dep.getTargetModule()))) {
        invalidDep.add(dep.getTargetModule().getModuleName());
      }
    }
    if (!(invalidDep.isEmpty())) {
      err += String.format(": dependencies %s can't be loaded", invalidDep);
    }

    return err;
  }

  public ItemKind getIssueKind() {
    return IssueKindReportItem.ENVIRONMENT_PROBLEM.deriveItemKind("language not loaded, dependency problem?");
  }
}
