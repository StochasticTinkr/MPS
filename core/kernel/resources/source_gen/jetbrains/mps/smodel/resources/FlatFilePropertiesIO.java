package jetbrains.mps.smodel.resources;

/*Generated by MPS */

import jetbrains.mps.make.resources.IPropertiesIO;
import jetbrains.mps.vfs.IFile;
import java.util.Map;
import java.io.IOException;
import java.util.Properties;
import java.io.InputStream;
import jetbrains.mps.util.FileUtil;
import java.util.HashMap;

public class FlatFilePropertiesIO implements IPropertiesIO {
  private IFile descFile;
  public FlatFilePropertiesIO(IFile descFile) {
    this.descFile = descFile;
  }
  @Override
  public void writeProperties(Map<String, String> store) throws IOException {
    throw new UnsupportedOperationException();
  }
  @Override
  public Map<String, String> readProperties() throws IOException {
    if (descFile == null) {
      return null;
    }
    IFile dir = descFile.getParent();
    IFile pf = dir.getDescendant("make.properties");
    if (!(pf.exists())) {
      return null;
    }
    Properties props = null;
    InputStream is = null;
    try {
      is = pf.openInputStream();
      props = new Properties();
      props.load(is);
    } catch (IOException e) {
    } finally {
      FileUtil.closeFileSafe(is);
    }
    return (Map<String, String>) ((props != null ? new HashMap(props) : null));
  }
  @Override
  public Object getKey() {
    return (descFile != null ? descFile.getPath() : null);
  }
}
