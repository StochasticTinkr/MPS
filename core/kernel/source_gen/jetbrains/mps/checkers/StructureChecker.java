package jetbrains.mps.checkers;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.errors.item.NodeReportItem;
import org.jetbrains.mps.openapi.module.SRepository;
import jetbrains.mps.project.validation.ValidationUtil;
import org.jetbrains.mps.openapi.util.Processor;
import jetbrains.mps.errors.item.IssueKindReportItem;

public class StructureChecker extends AbstractNodeCheckerInEditor implements IChecker<SNode, NodeReportItem> {
  public void checkNodeInEditor(SNode node, final LanguageErrorsCollector errorsCollector, SRepository repository) {
    ValidationUtil.validateSingleNode(node, new Processor<NodeReportItem>() {
      public boolean process(NodeReportItem vp) {
        errorsCollector.addError(vp);
        return true;
      }
    });
  }
  @Override
  public String getCategory() {
    return IssueKindReportItem.STRUCTURE;
  }
  @Override
  public IChecker.AbstractNodeChecker.ErrorSkipCondition skipCondition() {
    return AbstractConstraintsCheckerRootCheckerAdapter.SUPPRESS_ERRORS_CONDITION;
  }
}
