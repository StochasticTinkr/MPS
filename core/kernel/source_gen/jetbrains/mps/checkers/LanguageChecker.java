package jetbrains.mps.checkers;

/*Generated by MPS */

import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SRepository;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.util.Cancellable;

public class LanguageChecker implements INodeChecker {
  private Set<AbstractConstraintsChecker> myRules = SetSequence.fromSet(new HashSet<AbstractConstraintsChecker>());
  public LanguageChecker() {
    SetSequence.fromSet(myRules).addElement(new ConstraintsChecker());
    SetSequence.fromSet(myRules).addElement(new RefScopeChecker());
    SetSequence.fromSet(myRules).addElement(new TargetConceptChecker());
    SetSequence.fromSet(myRules).addElement(new UsedLanguagesChecker());
  }
  @Override
  public Set<IErrorReporter> getErrors(SNode rootNode, SRepository repository) {
    LanguageErrorsComponent errorsComponent = new LanguageErrorsComponent(SNodeOperations.getModel(rootNode));
    errorsComponent.check(rootNode, myRules, repository, Cancellable.NEVER);
    Set<IErrorReporter> result = errorsComponent.getErrors();
    errorsComponent.dispose();
    return result;
  }
}
