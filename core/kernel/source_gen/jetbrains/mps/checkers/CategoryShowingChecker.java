package jetbrains.mps.checkers;

/*Generated by MPS */

import jetbrains.mps.errors.item.ReportItem;
import org.jetbrains.mps.openapi.module.SRepository;
import org.jetbrains.mps.openapi.util.Consumer;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import org.jetbrains.mps.openapi.util.SubProgressKind;

public class CategoryShowingChecker<O, I extends ReportItem> implements IAbstractChecker<O, I> {
  private IAbstractChecker<O, ? extends I> myOrigin;
  private String myCategory;
  public CategoryShowingChecker(IChecker<O, ? extends I> origin) {
    myOrigin = origin;
    myCategory = origin.getCategory();
  }

  public static class CategoryWrapper<O, I extends ReportItem> implements IChecker<O, I> {
    private IAbstractChecker<O, I> myOrigin;
    private String myCategory;
    public CategoryWrapper(IAbstractChecker<O, I> origin, String category) {
      myOrigin = origin;
      myCategory = category;
    }
    @Override
    public String getCategory() {
      return myCategory;
    }
    @Override
    public void check(O toCheck, SRepository repository, Consumer<? super I> errorCollector, ProgressMonitor monitor) {
      myOrigin.check(toCheck, repository, errorCollector, monitor);
    }
  }

  @Override
  public void check(O toCheck, SRepository repository, Consumer<? super I> errorCollector, ProgressMonitor monitor) {
    monitor.start(myCategory, 1);
    myOrigin.check(toCheck, repository, errorCollector, monitor.subTask(1, SubProgressKind.IGNORED));
    monitor.done();
  }
}
