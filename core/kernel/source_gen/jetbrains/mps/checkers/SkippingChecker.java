package jetbrains.mps.checkers;

/*Generated by MPS */

import jetbrains.mps.errors.item.ReportItem;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import org.jetbrains.mps.openapi.module.SRepository;
import org.jetbrains.mps.openapi.util.Consumer;
import org.jetbrains.mps.openapi.util.ProgressMonitor;

public class SkippingChecker<O, I extends ReportItem> implements IAbstractChecker<O, I> {
  private IAbstractChecker<O, ? extends I> myOrigin;
  private _FunctionTypes._return_P2_E0<? extends Boolean, ? super O, ? super SRepository> myAccept;
  public SkippingChecker(IAbstractChecker<O, ? extends I> origin, _FunctionTypes._return_P2_E0<? extends Boolean, ? super O, ? super SRepository> accept) {
    myOrigin = origin;
    myAccept = accept;
  }
  @Override
  public void check(O toCheck, SRepository repository, Consumer<? super I> errorCollector, ProgressMonitor monitor) {
    if (myAccept.invoke(toCheck, repository)) {
      myOrigin.check(toCheck, repository, errorCollector, monitor);
    }
  }
}
