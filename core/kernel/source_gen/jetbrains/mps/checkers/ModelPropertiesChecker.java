package jetbrains.mps.checkers;

/*Generated by MPS */

import jetbrains.mps.errors.item.ModelReportItem;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.module.SRepository;
import org.jetbrains.mps.openapi.util.Consumer;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import jetbrains.mps.project.validation.ValidationUtil;
import org.jetbrains.mps.openapi.util.Processor;
import jetbrains.mps.errors.item.IssueKindReportItem;

public class ModelPropertiesChecker extends IChecker.AbstractModelChecker<ModelReportItem> {

  @Override
  public void check(SModel model, SRepository repository, final Consumer<? super ModelReportItem> errorCollector, final ProgressMonitor monitor) {
    ValidationUtil.validateModel(model, new Processor<ModelReportItem>() {
      public boolean process(final ModelReportItem problem) {
        errorCollector.consume(problem);
        return monitor.isCanceled();
      }
    });
  }

  @Override
  public IssueKindReportItem.CheckerCategory getCategory() {
    return IssueKindReportItem.MODEL_PROPERTIES;
  }
}
