package jetbrains.mps.core.tool.environment.common;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import java.io.File;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.Nullable;

public class FileUtil {
  public FileUtil() {
  }
  @NotNull
  public static String unquote(String urlString) {
    urlString = urlString.replace('/', File.separatorChar);
    return URLUtil.unescapePercentSequences(urlString);
  }
  @NotNull
  public static String toSystemDependentName(@NonNls @NotNull String aFileName) {
    return aFileName.replace('/', File.separatorChar).replace('\\', File.separatorChar);
  }
  @Nullable
  public static File findFirstThatExist(String... paths) {
    for (String path : paths) {
      if (!(StringUtil.isEmptyOrSpaces(path))) {
        File file = new File(FileUtil.toSystemDependentName(path));
        if (file.exists()) {
          return file;
        }
      }
    }
    return null;
  }

  public static String getAbsolutePath(String path) {
    // copy of j.m.util.PathUtil.getAbsolutePath, to avoid dependency from MPS.Core/[kernel] 
    if (path.startsWith("~/") || path.startsWith("~\\")) {
      path = System.getProperty("user.home") + path.substring(1);
    }
    return new File(path).getAbsolutePath();
  }

  public static String trimPathQuotes(String path) {
    if (path == null || path.length() < 3) {
      return path;
    }
    if (StringUtil.startsWithChar(path, '"') && StringUtil.endsWithChar(path, '"')) {
      return path.substring(1, path.length() - 1);
    }
    return path;
  }
}
