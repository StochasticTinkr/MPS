package jetbrains.mps.tool.builder;

/*Generated by MPS */

import org.jetbrains.mps.openapi.module.SModuleReference;
import jetbrains.mps.tool.common.Script;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import java.io.File;
import java.io.IOException;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.project.Project;

public class MpsWorkerTest extends MpsWorker {
  private SModuleReference myModuleRef;
  private boolean myIsPresent;

  public MpsWorkerTest(Script whatToDo, MpsWorker.AntLogger logger, SModuleReference module, boolean isPresent) {
    super(whatToDo, logger);
    myModuleRef = module;
    myIsPresent = isPresent;
  }

  @Override
  public void work() {
    SModule module = MPSModuleRepository.getInstance().getModule(myModuleRef);
    if (module == null ^ myIsPresent) {
      try {
        new File("result.txt").createNewFile();
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
    dispose();
  }

  public static void main(String[] args) {
    MpsWorkerTest testWorker = new MpsWorkerTest(Script.fromDumpInFile(new File(args[0])), new MpsWorker.SystemOutLogger(), ModuleReference.parseReference(args[1]), Boolean.parseBoolean(args[2]));
    testWorker.workFromMain();
  }

  protected void executeTask(Project project, MpsWorker.ObjectsToProcess go) {
  }

  protected void showStatistic() {
  }
}
