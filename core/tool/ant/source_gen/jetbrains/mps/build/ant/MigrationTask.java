package jetbrains.mps.build.ant;

/*Generated by MPS */

import java.io.File;
import java.util.Set;
import java.util.List;
import org.apache.tools.ant.BuildException;
import java.util.LinkedHashSet;

public class MigrationTask extends MpsLoadTask {
  public MigrationTask() {
  }

  public void setProject(String project) {
    myWhatToDo.addProjectFile(new File(project));
  }

  protected String getWorkerClass() {
    return "jetbrains.mps.build.migration.MigrationWorker";
  }

  @Override
  protected Set<File> calculateClassPath(boolean fork) {
    // todo try using super method 
    checkMpsHome();

    // copied from GenerationTask 
    List<File> classPathRoots = MPSClasspathUtil.getClassPathRootsFromDependencies(getProject());
    if (classPathRoots.isEmpty()) {
      throw new BuildException("Dependency on MPS build scripts is required to generate MPS modules.");
    }
    Set<File> classPath = new LinkedHashSet<File>();
    File mpsHome = getMpsHome();
    assert mpsHome != null : "MPSLoadTask.getMpsHome() == null. MPS home folder was not specified.";
    String mpsHomePath = mpsHome.getAbsolutePath();
    classPath.add(new File(mpsHomePath + "/plugins/mps-build/languages/build/jetbrains.mps.build.migration.jar"));
    classPath.add(new File(mpsHomePath + "/plugins/modelchecker.jar"));
    classPath.add(new File(mpsHomePath + "/plugins/migration/lib/migration.jar"));
    classPath.add(new File(mpsHomePath + "/plugins/migration/lib/migration-platform.jar"));
    for (File file : classPathRoots) {
      MPSClasspathUtil.gatherAllClassesAndJarsUnder(file, classPath);
    }
    return classPath;
  }
}
