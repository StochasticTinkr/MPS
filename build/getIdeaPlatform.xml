<project name="Get Idea Platform" default="install" xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="idea.platform.version" value="163.7743.44"/>
  <property name="idea.platform.snapshot" value="163-SNAPSHOT"/>
  <property name="ivy.jar.dir" value="${basedir}/ivy"/>
  <property name="ivy.cache.ttl.default" value="eternal"/>

  <target name="install-ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <typedef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <target name="check" depends="version" description="Check version of currently downloaded platform">
    <condition property="platform.need.update" value="true" else="false">
      <not>
        <equals arg1="${idea.platform.version}" arg2="${current.version}"/>
      </not>
    </condition>
    <echo message="Platform is need to be updated: ${platform.need.update}"/>
  </target>

  <target name="version-file" description="Util task to check if build.txt exists">
    <condition property="build.txt.exists" value="true" else="false">
      <available file="../lib/build.txt"/>
    </condition>
  </target>

  <target name="version" depends="version-file" description="Load platform version from build.txt to property" if="${build.txt.exists}">
    <loadfile property="current.version" srcfile="../lib/build.txt">
      <filterchain>
        <replacestring from="MPS-" to=""/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
    <echo message="File build.txt contains build number: ${current.version}"/>
  </target>

  <!--TODO: investigate ivy behaviour and remove if not needed-->
  <target name="snapshot" depends="version" description="Compare current platform version with snapshot">
    <condition property="is.snapshot" value="true" else="false">
      <equals arg1="${idea.platform.snapshot}" arg2="${idea.platform.version}"/>
    </condition>
  </target>

  <target name="invalidate" depends="snapshot" if="${is.snapshot}" description="Cleans local ivy cache. Can dramatically increase build time!">
    <ivy:cleancache/>
  </target>

  <target name="download" description="Download all platform libs and sources">
    <antcall target="download-platform"/>
    <antcall target="download-diffutils"/>
    <antcall target="download-testlib"/>
  </target>

  <target name="download-platform" depends="install-ivy, invalidate" description="Download platform based on IDEA Community from TeamCity">
    <ivy:resolve file="ivy.xml" showprogress="true"/>
    <ivy:retrieve pattern="../[artifact].[ext]" overwritemode="different"/>

  </target>

  <target name="download-diffutils" depends="install-ivy" description="Download com.googlecode.java-diff-utils-diffutils library">
    <ivy:resolve file="ivyDiffUtils.xml" showprogress="true"/>
    <ivy:retrieve pattern="../lib/([classifier]/)[artifact]-[revision](-[classifier]).[ext]" overwritemode="different"/>
  </target>

  <target name="download-testlib" depends="install-ivy" description="Download jmock and hamcrest libraries">
    <ivy:resolve file="ivyUnitTestLibs.xml" transitive="false" type="source,jar" showprogress="true"/>
    <ivy:retrieve pattern="../languages/baseLanguage/unitTest/lib/[artifact]-[revision](-[classifier]).[ext]" overwritemode="different"/>
  </target>

  <target name="install" depends="check" description="Download and install MPS platform" if="${platform.need.update}">
    <antcall target="clean"/>
    <antcall target="download"/>
    <unzip src="../mps-platform.zip" dest="../" overwrite="true">
      <!--TODO use license files from IDEA Community-->
      <patternset>
        <exclude name="license/*"/>
      </patternset>
    </unzip>
  </target>

  <target name="clean" description="Delete platform files and downloaded libraries">
    <delete dir="../lib" includeemptydirs="true"/>
    <delete dir="../plugins/cvsIntegration/lib"/>
    <delete dir="../plugins/git4idea/lib"/>
    <delete dir="../plugins/svn4idea/lib"/>
    <delete dir="../plugins/terminal"/>

    <delete dir="../languages/baseLanguage/unitTest/lib">
      <exclude name=".gitignore"/>
    </delete>
  </target>

</project>