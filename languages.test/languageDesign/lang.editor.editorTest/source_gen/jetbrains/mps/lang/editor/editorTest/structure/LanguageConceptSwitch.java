package jetbrains.mps.lang.editor.editorTest.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Abstract_SubstTestChild_WithNextApplicableEditorAndMenu = 0;
  public static final int ActionMapDeleteBackspaceTester = 1;
  public static final int ActionMapImportTester = 2;
  public static final int ActionMapIndividualImportTester = 3;
  public static final int AttractsFocusBlock = 4;
  public static final int AttributeChild = 5;
  public static final int AttributeWithChildren = 6;
  public static final int AttributedConcept = 7;
  public static final int AutoResolveChildWithErrorCell = 8;
  public static final int AutoResolveNodeToReference = 9;
  public static final int AutoResolveRoot = 10;
  public static final int Bar = 11;
  public static final int BinaryExpression = 12;
  public static final int BracesBlock = 13;
  public static final int BracesStubBlock = 14;
  public static final int ClassReference = 15;
  public static final int CollapsedByDefault = 16;
  public static final int CollapsedConditionally = 17;
  public static final int CollapsibleConcept = 18;
  public static final int CompletionChild = 19;
  public static final int CompletionParent = 20;
  public static final int Composition = 21;
  public static final int Container = 22;
  public static final int CustomPlaceholder = 23;
  public static final int DelTestAbstractChild = 24;
  public static final int DelTestChild1 = 25;
  public static final int DelTestChildContainer = 26;
  public static final int DelTestChildReferenceContainer = 27;
  public static final int DelTestChildSpecialContainer = 28;
  public static final int DelTestChildWithSmartReference = 29;
  public static final int DelTestChildWithUsualReference = 30;
  public static final int DelTestNodeToReference = 31;
  public static final int DelTestRoot = 32;
  public static final int DelTestSpecialAbstractChild = 33;
  public static final int DelTestSpecialChild1 = 34;
  public static final int DeleteLineTestChild = 35;
  public static final int DeleteLineTestChildWithNested = 36;
  public static final int DeleteLineTestReadOnlyChild = 37;
  public static final int DeleteLineTestRoot = 38;
  public static final int DeleteWrapperChild = 39;
  public static final int DeleteWrapperRoot = 40;
  public static final int FoldedCell = 41;
  public static final int FoldingContainer = 42;
  public static final int Foo = 43;
  public static final int IBaseTestBlock = 44;
  public static final int IDelTestChild = 45;
  public static final int IDelTestConcreteChild = 46;
  public static final int ISpecialDelTestChild = 47;
  public static final int ISpecialDelTestConcreteChild = 48;
  public static final int ImmediateCompletionChild = 49;
  public static final int InitAbstractChild = 50;
  public static final int InitChildWithDirectCycle_card1 = 51;
  public static final int InitChildWithDirectCycle_card1n = 52;
  public static final int InitChildWithIndirectCycle_card1 = 53;
  public static final int InitChildWithIndirectCycle_card1n = 54;
  public static final int InitChildWithTwoSameConceptChildren = 55;
  public static final int InitContainer = 56;
  public static final int InitGrandChild = 57;
  public static final int InitGrandChildWithIndirectCycle_card1 = 58;
  public static final int InitGrandChildWithIndirectCycle_card1n = 59;
  public static final int InspectorBlock = 60;
  public static final int IntegerLiteral = 61;
  public static final int LabelConceptWithProperty = 62;
  public static final int MenuTraceChildCellMenu = 63;
  public static final int MenuTraceGrandChildCellMenu = 64;
  public static final int MenuTraceGrandChildSubChildCellMenu = 65;
  public static final int MenuTraceNodeToReference = 66;
  public static final int MenuTraceParent = 67;
  public static final int MenuTraceSubstituteChild = 68;
  public static final int MenuTraceSubstituteSubChild1 = 69;
  public static final int MenuTraceSubstituteSubChild2 = 70;
  public static final int MenuTraceTransformationChild = 71;
  public static final int MenuTraceTransformationChildSuper = 72;
  public static final int MenuTraceTransformationChildWithEnum = 73;
  public static final int NonEmptyProperty = 74;
  public static final int NonSelectableContainer = 75;
  public static final int NotEditableVaraileReference = 76;
  public static final int PlaceholderChild = 77;
  public static final int PlaceholderChildAttribute = 78;
  public static final int PlaceholderParent = 79;
  public static final int PlusExpression = 80;
  public static final int ReferenceAnnotataion = 81;
  public static final int Selectable = 82;
  public static final int SelectableContainer = 83;
  public static final int SelectableCustomizedContainer = 84;
  public static final int SelectionChild = 85;
  public static final int SelectionContainer = 86;
  public static final int SideTranformWrapper = 87;
  public static final int SimpleNode = 88;
  public static final int SimpleNodeHidingAttribute = 89;
  public static final int SimpleNodesContainer = 90;
  public static final int SimplePropertyAttribute = 91;
  public static final int SimplePropertyContainer = 92;
  public static final int StubBlock = 93;
  public static final int StyleChild = 94;
  public static final int StyleParent = 95;
  public static final int SubstMiddlewareChild = 96;
  public static final int SubstTestAbstractChild = 97;
  public static final int SubstTestAbstractChild_WithDefaultConcreteConcept = 98;
  public static final int SubstTestBooleanPropertyChild = 99;
  public static final int SubstTestChild_DefaultConcreteConcept = 100;
  public static final int SubstTestChild_WithNextApplicableEditorAndMenu_1 = 101;
  public static final int SubstTestChild_WithNextApplicableEditorAndMenu_2 = 102;
  public static final int SubstTestEnumPropertyChild = 103;
  public static final int SubstTestRoot = 104;
  public static final int SubstTestRoot_NoEditor = 105;
  public static final int SwingComponent = 106;
  public static final int SwingComponentContainer = 107;
  public static final int SwingComponentinFoldedCell = 108;
  public static final int TestBlockList = 109;
  public static final int TwoStepDeleteAbstractChildContainer = 110;
  public static final int TwoStepDeleteAttribute = 111;
  public static final int TwoStepDeleteCellCollectionChild = 112;
  public static final int TwoStepDeleteCustomChild = 113;
  public static final int TwoStepDeleteCustomChildContainer = 114;
  public static final int TwoStepDeleteDefaultChild = 115;
  public static final int TwoStepDeleteDefaultChildContainer = 116;
  public static final int TwoStepDeleteLabelChild = 117;
  public static final int TwoStepDeleteTestRoot = 118;
  public static final int VariableDeclarationBlock = 119;
  public static final int VariableDeclarationReference = 120;
  public static final int VerticalLayoutBlockList = 121;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L);
    builder.put(0x818e8ddb10c8044L, Abstract_SubstTestChild_WithNextApplicableEditorAndMenu);
    builder.put(0x5a72f9ab5123191bL, ActionMapDeleteBackspaceTester);
    builder.put(0x3a5c07622668cc83L, ActionMapImportTester);
    builder.put(0x1454bfe1d0c7b8f5L, ActionMapIndividualImportTester);
    builder.put(0x2444dad137f8d778L, AttractsFocusBlock);
    builder.put(0x50d5d1397cfbad50L, AttributeChild);
    builder.put(0x5ed256cba0c5b00L, AttributeWithChildren);
    builder.put(0x5ed256cba0c5c3eL, AttributedConcept);
    builder.put(0x69fa786de51723b6L, AutoResolveChildWithErrorCell);
    builder.put(0x69fa786de517150fL, AutoResolveNodeToReference);
    builder.put(0x69fa786de517150eL, AutoResolveRoot);
    builder.put(0x254c0c6ea80b7097L, Bar);
    builder.put(0x46eb259b12f761daL, BinaryExpression);
    builder.put(0x3361ce1b17d7eaa8L, BracesBlock);
    builder.put(0x75ed75ef06861df4L, BracesStubBlock);
    builder.put(0x214b16e1c73042cfL, ClassReference);
    builder.put(0x569b712fbc626858L, CollapsedByDefault);
    builder.put(0xc06e5dab9716359L, CollapsedConditionally);
    builder.put(0x671b139f12ae357fL, CollapsibleConcept);
    builder.put(0x57524858938023adL, CompletionChild);
    builder.put(0x57524858938023acL, CompletionParent);
    builder.put(0x2fd7ff1ee43ef592L, Composition);
    builder.put(0x6c1b61fd2cd1eefeL, Container);
    builder.put(0x611ca85be0637678L, CustomPlaceholder);
    builder.put(0x6c4cdc7b1a84c447L, DelTestAbstractChild);
    builder.put(0x6c4cdc7b1a84c480L, DelTestChild1);
    builder.put(0x6c4cdc7b1a84c222L, DelTestChildContainer);
    builder.put(0x7a6a3ef59ad69da7L, DelTestChildReferenceContainer);
    builder.put(0x4ab6508b9ada958eL, DelTestChildSpecialContainer);
    builder.put(0x7a6a3ef59ad69dadL, DelTestChildWithSmartReference);
    builder.put(0x7a6a3ef59ad69dacL, DelTestChildWithUsualReference);
    builder.put(0x7a6a3ef59ad69daeL, DelTestNodeToReference);
    builder.put(0x6c4cdc7b1a8839faL, DelTestRoot);
    builder.put(0x4ab6508b9ada958dL, DelTestSpecialAbstractChild);
    builder.put(0x4ab6508b9adb37c7L, DelTestSpecialChild1);
    builder.put(0x5d883c30af22ebf7L, DeleteLineTestChild);
    builder.put(0x6c7380c23c9a0f89L, DeleteLineTestChildWithNested);
    builder.put(0x5d883c30af22ed6aL, DeleteLineTestReadOnlyChild);
    builder.put(0x5d883c30af22ec31L, DeleteLineTestRoot);
    builder.put(0xef41522699c4da7L, DeleteWrapperChild);
    builder.put(0xef41522699c4da4L, DeleteWrapperRoot);
    builder.put(0x3511b2d0e7eb7dc1L, FoldedCell);
    builder.put(0x569b712fbc6572f0L, FoldingContainer);
    builder.put(0x254c0c6ea80b7096L, Foo);
    builder.put(0x3361ce1b17d7eaa9L, IBaseTestBlock);
    builder.put(0x28d7d34707431fcdL, IDelTestChild);
    builder.put(0x28d7d34707431fceL, IDelTestConcreteChild);
    builder.put(0x28d7d34707454167L, ISpecialDelTestChild);
    builder.put(0x28d7d3470745416aL, ISpecialDelTestConcreteChild);
    builder.put(0x5704ec6c43ce50dL, ImmediateCompletionChild);
    builder.put(0x1b00debf2d3601a8L, InitAbstractChild);
    builder.put(0x1b00debf2d3601a5L, InitChildWithDirectCycle_card1);
    builder.put(0x78d10d0e00c2593aL, InitChildWithDirectCycle_card1n);
    builder.put(0x78d10d0e00c41e6eL, InitChildWithIndirectCycle_card1);
    builder.put(0x78d10d0e00c48499L, InitChildWithIndirectCycle_card1n);
    builder.put(0x67739d157f7a404bL, InitChildWithTwoSameConceptChildren);
    builder.put(0x1b00debf2d3601a4L, InitContainer);
    builder.put(0x67739d157f7a404cL, InitGrandChild);
    builder.put(0x78d10d0e00c41e70L, InitGrandChildWithIndirectCycle_card1);
    builder.put(0x78d10d0e00c4849dL, InitGrandChildWithIndirectCycle_card1n);
    builder.put(0x31b7f1691792b1f4L, InspectorBlock);
    builder.put(0x46eb259b12f68107L, IntegerLiteral);
    builder.put(0x19a61c3cfece0e26L, LabelConceptWithProperty);
    builder.put(0x13376377600dd75eL, MenuTraceChildCellMenu);
    builder.put(0x133763776010fa0dL, MenuTraceGrandChildCellMenu);
    builder.put(0x133763776011067dL, MenuTraceGrandChildSubChildCellMenu);
    builder.put(0xcac9bf5431fed8dL, MenuTraceNodeToReference);
    builder.put(0xac2d3ee357de206L, MenuTraceParent);
    builder.put(0xac2d3ee357de209L, MenuTraceSubstituteChild);
    builder.put(0xcac9bf54312e4b4L, MenuTraceSubstituteSubChild1);
    builder.put(0xcac9bf543140230L, MenuTraceSubstituteSubChild2);
    builder.put(0x133763776035327cL, MenuTraceTransformationChild);
    builder.put(0x13376377603d0351L, MenuTraceTransformationChildSuper);
    builder.put(0x326616b1fdb24fd3L, MenuTraceTransformationChildWithEnum);
    builder.put(0x4e2db2c9f6d76026L, NonEmptyProperty);
    builder.put(0x6c1b61fd2cd1eefcL, NonSelectableContainer);
    builder.put(0x44e7cb3605ec4004L, NotEditableVaraileReference);
    builder.put(0x5f4994bb9f207829L, PlaceholderChild);
    builder.put(0x34450358999d2201L, PlaceholderChildAttribute);
    builder.put(0x5f4994bb9f207828L, PlaceholderParent);
    builder.put(0x46eb259b12fa01d4L, PlusExpression);
    builder.put(0x6a48144fa856f460L, ReferenceAnnotataion);
    builder.put(0x6c1b61fd2cd1eeffL, Selectable);
    builder.put(0x6c1b61fd2cd1eefdL, SelectableContainer);
    builder.put(0x75a0f7b242cdb65bL, SelectableCustomizedContainer);
    builder.put(0x617705b269dc8251L, SelectionChild);
    builder.put(0x617705b269dc6674L, SelectionContainer);
    builder.put(0x46eb259b12ef5172L, SideTranformWrapper);
    builder.put(0x36c6196241a7cd02L, SimpleNode);
    builder.put(0x36c6196241a7cd03L, SimpleNodeHidingAttribute);
    builder.put(0x36c6196241a7cd1cL, SimpleNodesContainer);
    builder.put(0x2c59702023f915adL, SimplePropertyAttribute);
    builder.put(0x2c59702023f8181eL, SimplePropertyContainer);
    builder.put(0x3361ce1b17d9420cL, StubBlock);
    builder.put(0x5a79ee4e778a5efcL, StyleChild);
    builder.put(0x5a79ee4e778a5efbL, StyleParent);
    builder.put(0x7ebf3747d08cab96L, SubstMiddlewareChild);
    builder.put(0xd4944c0b03c34aeL, SubstTestAbstractChild);
    builder.put(0x31877f5a4018caf5L, SubstTestAbstractChild_WithDefaultConcreteConcept);
    builder.put(0xd4944c0b03c352dL, SubstTestBooleanPropertyChild);
    builder.put(0x31877f5a4018d19eL, SubstTestChild_DefaultConcreteConcept);
    builder.put(0x818e8ddb10a611eL, SubstTestChild_WithNextApplicableEditorAndMenu_1);
    builder.put(0x818e8ddb10b1390L, SubstTestChild_WithNextApplicableEditorAndMenu_2);
    builder.put(0xd4944c0b03c35aeL, SubstTestEnumPropertyChild);
    builder.put(0xd4944c0b03c33b7L, SubstTestRoot);
    builder.put(0x5a7d53aa6fc18c8cL, SubstTestRoot_NoEditor);
    builder.put(0x4c2f3af68cc2ba66L, SwingComponent);
    builder.put(0x4c2f3af68ccbed52L, SwingComponentContainer);
    builder.put(0x3511b2d0e7e6e5e7L, SwingComponentinFoldedCell);
    builder.put(0x3361ce1b17d62dbbL, TestBlockList);
    builder.put(0x29e25dc0d0251d65L, TwoStepDeleteAbstractChildContainer);
    builder.put(0x2198294affa4d593L, TwoStepDeleteAttribute);
    builder.put(0x1139cad76e28ba86L, TwoStepDeleteCellCollectionChild);
    builder.put(0x1139cad76e33a281L, TwoStepDeleteCustomChild);
    builder.put(0x29e25dc0d0251d67L, TwoStepDeleteCustomChildContainer);
    builder.put(0x29e25dc0d0251d5eL, TwoStepDeleteDefaultChild);
    builder.put(0x29e25dc0d024c706L, TwoStepDeleteDefaultChildContainer);
    builder.put(0x1139cad76e268c56L, TwoStepDeleteLabelChild);
    builder.put(0x29e25dc0d024c773L, TwoStepDeleteTestRoot);
    builder.put(0x2444dad137f90ed1L, VariableDeclarationBlock);
    builder.put(0x2444dad137fa9b5cL, VariableDeclarationReference);
    builder.put(0x5f322b2c7f2c2abaL, VerticalLayoutBlockList);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
