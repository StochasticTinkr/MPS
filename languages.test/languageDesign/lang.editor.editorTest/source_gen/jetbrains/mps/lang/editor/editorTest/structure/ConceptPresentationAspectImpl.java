package jetbrains.mps.lang.editor.editorTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Abstract_SubstTestChild_WithNextApplicableEditorAndMenu;
  private ConceptPresentation props_AttractsFocusBlock;
  private ConceptPresentation props_AttributeChild;
  private ConceptPresentation props_AttributeWithChildren;
  private ConceptPresentation props_AttributedConcept;
  private ConceptPresentation props_BinaryExpression;
  private ConceptPresentation props_BracesBlock;
  private ConceptPresentation props_BracesStubBlock;
  private ConceptPresentation props_ClassReference;
  private ConceptPresentation props_CollapsedByDefault;
  private ConceptPresentation props_CollapsedConditionally;
  private ConceptPresentation props_CollapsibleConcept;
  private ConceptPresentation props_CompletionChild;
  private ConceptPresentation props_CompletionParent;
  private ConceptPresentation props_Composition;
  private ConceptPresentation props_Container;
  private ConceptPresentation props_DelTestAbstractChild;
  private ConceptPresentation props_DelTestChild1;
  private ConceptPresentation props_DelTestChildContainer;
  private ConceptPresentation props_DelTestChildSpecialContainer;
  private ConceptPresentation props_DelTestRoot;
  private ConceptPresentation props_DelTestSpecialAbstractChild;
  private ConceptPresentation props_DelTestSpecialChild1;
  private ConceptPresentation props_DeleteWrapperChild;
  private ConceptPresentation props_DeleteWrapperRoot;
  private ConceptPresentation props_FoldedCell;
  private ConceptPresentation props_FoldingContainer;
  private ConceptPresentation props_IBaseTestBlock;
  private ConceptPresentation props_IDelTestChild;
  private ConceptPresentation props_IDelTestConcreteChild;
  private ConceptPresentation props_ISpecialDelTestChild;
  private ConceptPresentation props_ISpecialDelTestConcreteChild;
  private ConceptPresentation props_InitAbstractChild;
  private ConceptPresentation props_InitChildWithDirectCycle_card1;
  private ConceptPresentation props_InitChildWithDirectCycle_card1n;
  private ConceptPresentation props_InitChildWithIndirectCycle_card1;
  private ConceptPresentation props_InitChildWithIndirectCycle_card1n;
  private ConceptPresentation props_InitChildWithTwoSameConceptChildren;
  private ConceptPresentation props_InitContainer;
  private ConceptPresentation props_InitGrandChild;
  private ConceptPresentation props_InitGrandChildWithIndirectCycle_card1;
  private ConceptPresentation props_InitGrandChildWithIndirectCycle_card1n;
  private ConceptPresentation props_InspectorBlock;
  private ConceptPresentation props_IntegerLiteral;
  private ConceptPresentation props_LabelConceptWithProperty;
  private ConceptPresentation props_MenuTraceChildCellMenu;
  private ConceptPresentation props_MenuTraceGrandChildCellMenu;
  private ConceptPresentation props_MenuTraceGrandChildSubChildCellMenu;
  private ConceptPresentation props_MenuTraceNodeToReference;
  private ConceptPresentation props_MenuTraceParent;
  private ConceptPresentation props_MenuTraceSubstituteChild;
  private ConceptPresentation props_MenuTraceSubstituteSubChild1;
  private ConceptPresentation props_MenuTraceSubstituteSubChild2;
  private ConceptPresentation props_MenuTraceTransformationChild;
  private ConceptPresentation props_MenuTraceTransformationChildSuper;
  private ConceptPresentation props_MenuTraceTransformationChildWithEnum;
  private ConceptPresentation props_NonEmptyProperty;
  private ConceptPresentation props_NonSelectableContainer;
  private ConceptPresentation props_NotEditableVaraileReference;
  private ConceptPresentation props_PlusExpression;
  private ConceptPresentation props_ReferenceAnnotataion;
  private ConceptPresentation props_Selectable;
  private ConceptPresentation props_SelectableContainer;
  private ConceptPresentation props_SelectableCustomizedContainer;
  private ConceptPresentation props_SelectionChild;
  private ConceptPresentation props_SelectionContainer;
  private ConceptPresentation props_SideTranformWrapper;
  private ConceptPresentation props_SimpleNode;
  private ConceptPresentation props_SimpleNodeHidingAttribute;
  private ConceptPresentation props_SimpleNodesContainer;
  private ConceptPresentation props_SimplePropertyAttribute;
  private ConceptPresentation props_SimplePropertyContainer;
  private ConceptPresentation props_StubBlock;
  private ConceptPresentation props_StyleChild;
  private ConceptPresentation props_StyleParent;
  private ConceptPresentation props_SubstMiddlewareChild;
  private ConceptPresentation props_SubstTestAbstractChild;
  private ConceptPresentation props_SubstTestBooleanPropertyChild;
  private ConceptPresentation props_SubstTestChild_WithNextApplicableEditorAndMenu_1;
  private ConceptPresentation props_SubstTestChild_WithNextApplicableEditorAndMenu_2;
  private ConceptPresentation props_SubstTestEnumPropertyChild;
  private ConceptPresentation props_SubstTestRoot;
  private ConceptPresentation props_SwingComponent;
  private ConceptPresentation props_SwingComponentContainer;
  private ConceptPresentation props_SwingComponentinFoldedCell;
  private ConceptPresentation props_TestBlockList;
  private ConceptPresentation props_TwoStepDeleteAbstractChildContainer;
  private ConceptPresentation props_TwoStepDeleteAttribute;
  private ConceptPresentation props_TwoStepDeleteCellCollectionChild;
  private ConceptPresentation props_TwoStepDeleteCustomChild;
  private ConceptPresentation props_TwoStepDeleteCustomChildContainer;
  private ConceptPresentation props_TwoStepDeleteDefaultChild;
  private ConceptPresentation props_TwoStepDeleteDefaultChildContainer;
  private ConceptPresentation props_TwoStepDeleteLabelChild;
  private ConceptPresentation props_TwoStepDeleteTestRoot;
  private ConceptPresentation props_VariableDeclarationBlock;
  private ConceptPresentation props_VariableDeclarationReference;
  private ConceptPresentation props_VerticalLayoutBlockList;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Abstract_SubstTestChild_WithNextApplicableEditorAndMenu:
        if (props_Abstract_SubstTestChild_WithNextApplicableEditorAndMenu == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Abstract_SubstTestChild_WithNextApplicableEditorAndMenu = cpb.create();
        }
        return props_Abstract_SubstTestChild_WithNextApplicableEditorAndMenu;
      case LanguageConceptSwitch.AttractsFocusBlock:
        if (props_AttractsFocusBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("attracts focus");
          props_AttractsFocusBlock = cpb.create();
        }
        return props_AttractsFocusBlock;
      case LanguageConceptSwitch.AttributeChild:
        if (props_AttributeChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("child");
          props_AttributeChild = cpb.create();
        }
        return props_AttributeChild;
      case LanguageConceptSwitch.AttributeWithChildren:
        if (props_AttributeWithChildren == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AttributeWithChildren");
          props_AttributeWithChildren = cpb.create();
        }
        return props_AttributeWithChildren;
      case LanguageConceptSwitch.AttributedConcept:
        if (props_AttributedConcept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AttributedConcept");
          props_AttributedConcept = cpb.create();
        }
        return props_AttributedConcept;
      case LanguageConceptSwitch.BinaryExpression:
        if (props_BinaryExpression == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_BinaryExpression = cpb.create();
        }
        return props_BinaryExpression;
      case LanguageConceptSwitch.BracesBlock:
        if (props_BracesBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("BracesBlock");
          props_BracesBlock = cpb.create();
        }
        return props_BracesBlock;
      case LanguageConceptSwitch.BracesStubBlock:
        if (props_BracesStubBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("braces stub");
          props_BracesStubBlock = cpb.create();
        }
        return props_BracesStubBlock;
      case LanguageConceptSwitch.ClassReference:
        if (props_ClassReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("classref");
          props_ClassReference = cpb.create();
        }
        return props_ClassReference;
      case LanguageConceptSwitch.CollapsedByDefault:
        if (props_CollapsedByDefault == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CollapsedByDefault");
          props_CollapsedByDefault = cpb.create();
        }
        return props_CollapsedByDefault;
      case LanguageConceptSwitch.CollapsedConditionally:
        if (props_CollapsedConditionally == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CollapsedConditionally");
          props_CollapsedConditionally = cpb.create();
        }
        return props_CollapsedConditionally;
      case LanguageConceptSwitch.CollapsibleConcept:
        if (props_CollapsibleConcept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_CollapsibleConcept = cpb.create();
        }
        return props_CollapsibleConcept;
      case LanguageConceptSwitch.CompletionChild:
        if (props_CompletionChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_CompletionChild = cpb.create();
        }
        return props_CompletionChild;
      case LanguageConceptSwitch.CompletionParent:
        if (props_CompletionParent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CompletionParent");
          props_CompletionParent = cpb.create();
        }
        return props_CompletionParent;
      case LanguageConceptSwitch.Composition:
        if (props_Composition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Composition");
          props_Composition = cpb.create();
        }
        return props_Composition;
      case LanguageConceptSwitch.Container:
        if (props_Container == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Container = cpb.create();
        }
        return props_Container;
      case LanguageConceptSwitch.DelTestAbstractChild:
        if (props_DelTestAbstractChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestAbstractChild");
          props_DelTestAbstractChild = cpb.create();
        }
        return props_DelTestAbstractChild;
      case LanguageConceptSwitch.DelTestChild1:
        if (props_DelTestChild1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestChild1");
          props_DelTestChild1 = cpb.create();
        }
        return props_DelTestChild1;
      case LanguageConceptSwitch.DelTestChildContainer:
        if (props_DelTestChildContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestChildContainer");
          props_DelTestChildContainer = cpb.create();
        }
        return props_DelTestChildContainer;
      case LanguageConceptSwitch.DelTestChildSpecialContainer:
        if (props_DelTestChildSpecialContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestChildSpecialContainer");
          props_DelTestChildSpecialContainer = cpb.create();
        }
        return props_DelTestChildSpecialContainer;
      case LanguageConceptSwitch.DelTestRoot:
        if (props_DelTestRoot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestRoot");
          props_DelTestRoot = cpb.create();
        }
        return props_DelTestRoot;
      case LanguageConceptSwitch.DelTestSpecialAbstractChild:
        if (props_DelTestSpecialAbstractChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestSpecialAbstractChild");
          props_DelTestSpecialAbstractChild = cpb.create();
        }
        return props_DelTestSpecialAbstractChild;
      case LanguageConceptSwitch.DelTestSpecialChild1:
        if (props_DelTestSpecialChild1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DelTestSpecialChild1");
          props_DelTestSpecialChild1 = cpb.create();
        }
        return props_DelTestSpecialChild1;
      case LanguageConceptSwitch.DeleteWrapperChild:
        if (props_DeleteWrapperChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DeleteWrapperChild");
          props_DeleteWrapperChild = cpb.create();
        }
        return props_DeleteWrapperChild;
      case LanguageConceptSwitch.DeleteWrapperRoot:
        if (props_DeleteWrapperRoot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DeleteWrapperRoot");
          props_DeleteWrapperRoot = cpb.create();
        }
        return props_DeleteWrapperRoot;
      case LanguageConceptSwitch.FoldedCell:
        if (props_FoldedCell == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("FoldedCell");
          props_FoldedCell = cpb.create();
        }
        return props_FoldedCell;
      case LanguageConceptSwitch.FoldingContainer:
        if (props_FoldingContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("FoldingContainer");
          props_FoldingContainer = cpb.create();
        }
        return props_FoldingContainer;
      case LanguageConceptSwitch.IBaseTestBlock:
        if (props_IBaseTestBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IBaseTestBlock = cpb.create();
        }
        return props_IBaseTestBlock;
      case LanguageConceptSwitch.IDelTestChild:
        if (props_IDelTestChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IDelTestChild = cpb.create();
        }
        return props_IDelTestChild;
      case LanguageConceptSwitch.IDelTestConcreteChild:
        if (props_IDelTestConcreteChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IDelTestConcreteChild");
          props_IDelTestConcreteChild = cpb.create();
        }
        return props_IDelTestConcreteChild;
      case LanguageConceptSwitch.ISpecialDelTestChild:
        if (props_ISpecialDelTestChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISpecialDelTestChild = cpb.create();
        }
        return props_ISpecialDelTestChild;
      case LanguageConceptSwitch.ISpecialDelTestConcreteChild:
        if (props_ISpecialDelTestConcreteChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ISpecialDelTestConcreteChild");
          props_ISpecialDelTestConcreteChild = cpb.create();
        }
        return props_ISpecialDelTestConcreteChild;
      case LanguageConceptSwitch.InitAbstractChild:
        if (props_InitAbstractChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitAbstractChild");
          props_InitAbstractChild = cpb.create();
        }
        return props_InitAbstractChild;
      case LanguageConceptSwitch.InitChildWithDirectCycle_card1:
        if (props_InitChildWithDirectCycle_card1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("card1_direct_cycle");
          props_InitChildWithDirectCycle_card1 = cpb.create();
        }
        return props_InitChildWithDirectCycle_card1;
      case LanguageConceptSwitch.InitChildWithDirectCycle_card1n:
        if (props_InitChildWithDirectCycle_card1n == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("card1n_direct_cycle");
          props_InitChildWithDirectCycle_card1n = cpb.create();
        }
        return props_InitChildWithDirectCycle_card1n;
      case LanguageConceptSwitch.InitChildWithIndirectCycle_card1:
        if (props_InitChildWithIndirectCycle_card1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("card1_indirect_cycle");
          props_InitChildWithIndirectCycle_card1 = cpb.create();
        }
        return props_InitChildWithIndirectCycle_card1;
      case LanguageConceptSwitch.InitChildWithIndirectCycle_card1n:
        if (props_InitChildWithIndirectCycle_card1n == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("card1n_indirect_cycle");
          props_InitChildWithIndirectCycle_card1n = cpb.create();
        }
        return props_InitChildWithIndirectCycle_card1n;
      case LanguageConceptSwitch.InitChildWithTwoSameConceptChildren:
        if (props_InitChildWithTwoSameConceptChildren == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("two_same_children");
          props_InitChildWithTwoSameConceptChildren = cpb.create();
        }
        return props_InitChildWithTwoSameConceptChildren;
      case LanguageConceptSwitch.InitContainer:
        if (props_InitContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitContainer");
          props_InitContainer = cpb.create();
        }
        return props_InitContainer;
      case LanguageConceptSwitch.InitGrandChild:
        if (props_InitGrandChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitGrandChild");
          props_InitGrandChild = cpb.create();
        }
        return props_InitGrandChild;
      case LanguageConceptSwitch.InitGrandChildWithIndirectCycle_card1:
        if (props_InitGrandChildWithIndirectCycle_card1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitGrandChildWithIndirectCycle_card1");
          props_InitGrandChildWithIndirectCycle_card1 = cpb.create();
        }
        return props_InitGrandChildWithIndirectCycle_card1;
      case LanguageConceptSwitch.InitGrandChildWithIndirectCycle_card1n:
        if (props_InitGrandChildWithIndirectCycle_card1n == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("InitGrandChildWithIndirectCycle_card1n");
          props_InitGrandChildWithIndirectCycle_card1n = cpb.create();
        }
        return props_InitGrandChildWithIndirectCycle_card1n;
      case LanguageConceptSwitch.InspectorBlock:
        if (props_InspectorBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("inspector");
          props_InspectorBlock = cpb.create();
        }
        return props_InspectorBlock;
      case LanguageConceptSwitch.IntegerLiteral:
        if (props_IntegerLiteral == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IntegerLiteral");
          props_IntegerLiteral = cpb.create();
        }
        return props_IntegerLiteral;
      case LanguageConceptSwitch.LabelConceptWithProperty:
        if (props_LabelConceptWithProperty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LabelConceptWithProperty");
          props_LabelConceptWithProperty = cpb.create();
        }
        return props_LabelConceptWithProperty;
      case LanguageConceptSwitch.MenuTraceChildCellMenu:
        if (props_MenuTraceChildCellMenu == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace child cell menu");
          props_MenuTraceChildCellMenu = cpb.create();
        }
        return props_MenuTraceChildCellMenu;
      case LanguageConceptSwitch.MenuTraceGrandChildCellMenu:
        if (props_MenuTraceGrandChildCellMenu == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MenuTraceGrandChildCellMenu = cpb.create();
        }
        return props_MenuTraceGrandChildCellMenu;
      case LanguageConceptSwitch.MenuTraceGrandChildSubChildCellMenu:
        if (props_MenuTraceGrandChildSubChildCellMenu == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MenuTraceGrandChildSubChildCellMenu = cpb.create();
        }
        return props_MenuTraceGrandChildSubChildCellMenu;
      case LanguageConceptSwitch.MenuTraceNodeToReference:
        if (props_MenuTraceNodeToReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MenuTraceNodeToReference = cpb.create();
        }
        return props_MenuTraceNodeToReference;
      case LanguageConceptSwitch.MenuTraceParent:
        if (props_MenuTraceParent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MenuTraceParent");
          props_MenuTraceParent = cpb.create();
        }
        return props_MenuTraceParent;
      case LanguageConceptSwitch.MenuTraceSubstituteChild:
        if (props_MenuTraceSubstituteChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace substitute child");
          props_MenuTraceSubstituteChild = cpb.create();
        }
        return props_MenuTraceSubstituteChild;
      case LanguageConceptSwitch.MenuTraceSubstituteSubChild1:
        if (props_MenuTraceSubstituteSubChild1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace substitute subchild1");
          props_MenuTraceSubstituteSubChild1 = cpb.create();
        }
        return props_MenuTraceSubstituteSubChild1;
      case LanguageConceptSwitch.MenuTraceSubstituteSubChild2:
        if (props_MenuTraceSubstituteSubChild2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace substitute subchild2");
          props_MenuTraceSubstituteSubChild2 = cpb.create();
        }
        return props_MenuTraceSubstituteSubChild2;
      case LanguageConceptSwitch.MenuTraceTransformationChild:
        if (props_MenuTraceTransformationChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace transformation child");
          props_MenuTraceTransformationChild = cpb.create();
        }
        return props_MenuTraceTransformationChild;
      case LanguageConceptSwitch.MenuTraceTransformationChildSuper:
        if (props_MenuTraceTransformationChildSuper == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("menu trace transformation child super");
          props_MenuTraceTransformationChildSuper = cpb.create();
        }
        return props_MenuTraceTransformationChildSuper;
      case LanguageConceptSwitch.MenuTraceTransformationChildWithEnum:
        if (props_MenuTraceTransformationChildWithEnum == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MenuTraceTransformationChildWithEnum");
          props_MenuTraceTransformationChildWithEnum = cpb.create();
        }
        return props_MenuTraceTransformationChildWithEnum;
      case LanguageConceptSwitch.NonEmptyProperty:
        if (props_NonEmptyProperty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("non-empty-property");
          props_NonEmptyProperty = cpb.create();
        }
        return props_NonEmptyProperty;
      case LanguageConceptSwitch.NonSelectableContainer:
        if (props_NonSelectableContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("non selectable");
          props_NonSelectableContainer = cpb.create();
        }
        return props_NonSelectableContainer;
      case LanguageConceptSwitch.NotEditableVaraileReference:
        if (props_NotEditableVaraileReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x44e7cb3605ec4004L, 0x44e7cb3605ec4005L, "variableDeclaration", "{", "} not editable");
          props_NotEditableVaraileReference = cpb.create();
        }
        return props_NotEditableVaraileReference;
      case LanguageConceptSwitch.PlusExpression:
        if (props_PlusExpression == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("+");
          props_PlusExpression = cpb.create();
        }
        return props_PlusExpression;
      case LanguageConceptSwitch.ReferenceAnnotataion:
        if (props_ReferenceAnnotataion == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ReferenceAnnotataion");
          props_ReferenceAnnotataion = cpb.create();
        }
        return props_ReferenceAnnotataion;
      case LanguageConceptSwitch.Selectable:
        if (props_Selectable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Selectable = cpb.create();
        }
        return props_Selectable;
      case LanguageConceptSwitch.SelectableContainer:
        if (props_SelectableContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("selectable");
          props_SelectableContainer = cpb.create();
        }
        return props_SelectableContainer;
      case LanguageConceptSwitch.SelectableCustomizedContainer:
        if (props_SelectableCustomizedContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("selectable customized");
          props_SelectableCustomizedContainer = cpb.create();
        }
        return props_SelectableCustomizedContainer;
      case LanguageConceptSwitch.SelectionChild:
        if (props_SelectionChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SelectionChild");
          props_SelectionChild = cpb.create();
        }
        return props_SelectionChild;
      case LanguageConceptSwitch.SelectionContainer:
        if (props_SelectionContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SelectionContainer");
          props_SelectionContainer = cpb.create();
        }
        return props_SelectionContainer;
      case LanguageConceptSwitch.SideTranformWrapper:
        if (props_SideTranformWrapper == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("side-transform-wrapper");
          props_SideTranformWrapper = cpb.create();
        }
        return props_SideTranformWrapper;
      case LanguageConceptSwitch.SimpleNode:
        if (props_SimpleNode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimpleNode");
          props_SimpleNode = cpb.create();
        }
        return props_SimpleNode;
      case LanguageConceptSwitch.SimpleNodeHidingAttribute:
        if (props_SimpleNodeHidingAttribute == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimpleNodeHidingAttribute");
          props_SimpleNodeHidingAttribute = cpb.create();
        }
        return props_SimpleNodeHidingAttribute;
      case LanguageConceptSwitch.SimpleNodesContainer:
        if (props_SimpleNodesContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimpleNodesContainer");
          props_SimpleNodesContainer = cpb.create();
        }
        return props_SimpleNodesContainer;
      case LanguageConceptSwitch.SimplePropertyAttribute:
        if (props_SimplePropertyAttribute == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimplePropertyAttribute");
          props_SimplePropertyAttribute = cpb.create();
        }
        return props_SimplePropertyAttribute;
      case LanguageConceptSwitch.SimplePropertyContainer:
        if (props_SimplePropertyContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SimplePropertyContainer");
          props_SimplePropertyContainer = cpb.create();
        }
        return props_SimplePropertyContainer;
      case LanguageConceptSwitch.StubBlock:
        if (props_StubBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("stub");
          props_StubBlock = cpb.create();
        }
        return props_StubBlock;
      case LanguageConceptSwitch.StyleChild:
        if (props_StyleChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("StyleChild");
          props_StyleChild = cpb.create();
        }
        return props_StyleChild;
      case LanguageConceptSwitch.StyleParent:
        if (props_StyleParent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("StyleParent");
          props_StyleParent = cpb.create();
        }
        return props_StyleParent;
      case LanguageConceptSwitch.SubstMiddlewareChild:
        if (props_SubstMiddlewareChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstMiddlewareChild");
          props_SubstMiddlewareChild = cpb.create();
        }
        return props_SubstMiddlewareChild;
      case LanguageConceptSwitch.SubstTestAbstractChild:
        if (props_SubstTestAbstractChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_SubstTestAbstractChild = cpb.create();
        }
        return props_SubstTestAbstractChild;
      case LanguageConceptSwitch.SubstTestBooleanPropertyChild:
        if (props_SubstTestBooleanPropertyChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstTestBooleanPropertyChild");
          props_SubstTestBooleanPropertyChild = cpb.create();
        }
        return props_SubstTestBooleanPropertyChild;
      case LanguageConceptSwitch.SubstTestChild_WithNextApplicableEditorAndMenu_1:
        if (props_SubstTestChild_WithNextApplicableEditorAndMenu_1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstTestChild_WithNextApplicableEditorAndMenu_1");
          props_SubstTestChild_WithNextApplicableEditorAndMenu_1 = cpb.create();
        }
        return props_SubstTestChild_WithNextApplicableEditorAndMenu_1;
      case LanguageConceptSwitch.SubstTestChild_WithNextApplicableEditorAndMenu_2:
        if (props_SubstTestChild_WithNextApplicableEditorAndMenu_2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstTestChild_WithNextApplicableEditorAndMenu_2");
          props_SubstTestChild_WithNextApplicableEditorAndMenu_2 = cpb.create();
        }
        return props_SubstTestChild_WithNextApplicableEditorAndMenu_2;
      case LanguageConceptSwitch.SubstTestEnumPropertyChild:
        if (props_SubstTestEnumPropertyChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstTestEnumPropertyChild");
          props_SubstTestEnumPropertyChild = cpb.create();
        }
        return props_SubstTestEnumPropertyChild;
      case LanguageConceptSwitch.SubstTestRoot:
        if (props_SubstTestRoot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SubstTestRoot");
          props_SubstTestRoot = cpb.create();
        }
        return props_SubstTestRoot;
      case LanguageConceptSwitch.SwingComponent:
        if (props_SwingComponent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SwingComponent");
          props_SwingComponent = cpb.create();
        }
        return props_SwingComponent;
      case LanguageConceptSwitch.SwingComponentContainer:
        if (props_SwingComponentContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SwingComponentContainer");
          props_SwingComponentContainer = cpb.create();
        }
        return props_SwingComponentContainer;
      case LanguageConceptSwitch.SwingComponentinFoldedCell:
        if (props_SwingComponentinFoldedCell == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("SwingComponentinFoldedCell");
          props_SwingComponentinFoldedCell = cpb.create();
        }
        return props_SwingComponentinFoldedCell;
      case LanguageConceptSwitch.TestBlockList:
        if (props_TestBlockList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("{");
          props_TestBlockList = cpb.create();
        }
        return props_TestBlockList;
      case LanguageConceptSwitch.TwoStepDeleteAbstractChildContainer:
        if (props_TwoStepDeleteAbstractChildContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_TwoStepDeleteAbstractChildContainer = cpb.create();
        }
        return props_TwoStepDeleteAbstractChildContainer;
      case LanguageConceptSwitch.TwoStepDeleteAttribute:
        if (props_TwoStepDeleteAttribute == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteAttribute");
          props_TwoStepDeleteAttribute = cpb.create();
        }
        return props_TwoStepDeleteAttribute;
      case LanguageConceptSwitch.TwoStepDeleteCellCollectionChild:
        if (props_TwoStepDeleteCellCollectionChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteCellCollectionChild");
          props_TwoStepDeleteCellCollectionChild = cpb.create();
        }
        return props_TwoStepDeleteCellCollectionChild;
      case LanguageConceptSwitch.TwoStepDeleteCustomChild:
        if (props_TwoStepDeleteCustomChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteCustomChild");
          props_TwoStepDeleteCustomChild = cpb.create();
        }
        return props_TwoStepDeleteCustomChild;
      case LanguageConceptSwitch.TwoStepDeleteCustomChildContainer:
        if (props_TwoStepDeleteCustomChildContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteCustomChildContainer");
          props_TwoStepDeleteCustomChildContainer = cpb.create();
        }
        return props_TwoStepDeleteCustomChildContainer;
      case LanguageConceptSwitch.TwoStepDeleteDefaultChild:
        if (props_TwoStepDeleteDefaultChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_TwoStepDeleteDefaultChild = cpb.create();
        }
        return props_TwoStepDeleteDefaultChild;
      case LanguageConceptSwitch.TwoStepDeleteDefaultChildContainer:
        if (props_TwoStepDeleteDefaultChildContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteDefaultChildContainer");
          props_TwoStepDeleteDefaultChildContainer = cpb.create();
        }
        return props_TwoStepDeleteDefaultChildContainer;
      case LanguageConceptSwitch.TwoStepDeleteLabelChild:
        if (props_TwoStepDeleteLabelChild == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TwoStepDeleteLabelChild");
          props_TwoStepDeleteLabelChild = cpb.create();
        }
        return props_TwoStepDeleteLabelChild;
      case LanguageConceptSwitch.TwoStepDeleteTestRoot:
        if (props_TwoStepDeleteTestRoot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_TwoStepDeleteTestRoot = cpb.create();
        }
        return props_TwoStepDeleteTestRoot;
      case LanguageConceptSwitch.VariableDeclarationBlock:
        if (props_VariableDeclarationBlock == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_VariableDeclarationBlock = cpb.create();
        }
        return props_VariableDeclarationBlock;
      case LanguageConceptSwitch.VariableDeclarationReference:
        if (props_VariableDeclarationReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x81f0abb8d71e4d13L, 0xa0c1d2291fbb28b7L, 0x2444dad137fa9b5cL, 0x2444dad137fa9b5dL, "var", "", "");
          props_VariableDeclarationReference = cpb.create();
        }
        return props_VariableDeclarationReference;
      case LanguageConceptSwitch.VerticalLayoutBlockList:
        if (props_VerticalLayoutBlockList == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("vericalLayout");
          props_VerticalLayoutBlockList = cpb.create();
        }
        return props_VerticalLayoutBlockList;
    }
    return null;
  }
}
