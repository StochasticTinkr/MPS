package jetbrains.mps.lang.editor.test.generation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractCellTest = 0;
  public static final int Constant = 1;
  public static final int Error = 2;
  public static final int ModelAccess = 3;
  public static final int ReadOnlyModelAccessor = 4;
  public static final int RefNodeList = 5;
  public static final int TestTargetConcept = 6;
  public static final int TransactionalProperty = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xeaa98d49af584b80L, 0xb585c05e7b5fd335L);
    builder.put(0xbde89531a681a1L, AbstractCellTest);
    builder.put(0xbde8953186ee02L, Constant);
    builder.put(0xbde89531a5a543L, Error);
    builder.put(0xbde89531a70c22L, ModelAccess);
    builder.put(0xbde89531a70c23L, ReadOnlyModelAccessor);
    builder.put(0xbde89531adc76dL, RefNodeList);
    builder.put(0x34b9ac382393ec2L, TestTargetConcept);
    builder.put(0xbde89531aadcccL, TransactionalProperty);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
