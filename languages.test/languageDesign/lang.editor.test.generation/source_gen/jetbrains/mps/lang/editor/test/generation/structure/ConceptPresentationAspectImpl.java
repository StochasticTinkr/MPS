package jetbrains.mps.lang.editor.test.generation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_AbstractCellTest = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Constant = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Error = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ModelAccess = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ReadOnlyModelAccessor = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_RefNodeList = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_TransactionalProperty = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractCellTest:
        return props_AbstractCellTest;
      case LanguageConceptSwitch.Constant:
        return props_Constant;
      case LanguageConceptSwitch.Error:
        return props_Error;
      case LanguageConceptSwitch.ModelAccess:
        return props_ModelAccess;
      case LanguageConceptSwitch.ReadOnlyModelAccessor:
        return props_ReadOnlyModelAccessor;
      case LanguageConceptSwitch.RefNodeList:
        return props_RefNodeList;
      case LanguageConceptSwitch.TransactionalProperty:
        return props_TransactionalProperty;
    }
    return null;
  }
}
