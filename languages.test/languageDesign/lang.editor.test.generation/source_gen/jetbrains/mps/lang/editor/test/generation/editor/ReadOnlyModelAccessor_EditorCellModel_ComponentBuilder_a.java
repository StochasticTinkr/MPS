package jetbrains.mps.lang.editor.test.generation.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfoPartEx;
import jetbrains.mps.editor.runtime.style.FocusPolicy;
import jetbrains.mps.lang.editor.menus.transformation.NamedTransformationMenuLookup;
import jetbrains.mps.smodel.language.LanguageRegistry;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_Generic_Group;
import java.util.List;
import jetbrains.mps.smodel.IOperationContext;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.openapi.editor.menus.EditorMenuDescriptor;
import jetbrains.mps.lang.editor.menus.EditorMenuDescriptorBase;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ReplaceNode_Group;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ApplySideTransforms;
import jetbrains.mps.nodeEditor.CellSide;
import jetbrains.mps.openapi.editor.cells.SubstituteAction;
import jetbrains.mps.nodeEditor.cellMenu.CellContext;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_Generic_Item;
import java.util.function.Function;
import jetbrains.mps.smodel.action.NodeSubstituteActionWrapper;
import jetbrains.mps.openapi.editor.menus.EditorMenuTraceInfo;
import jetbrains.mps.nodeEditor.menus.EditorMenuTraceInfoImpl;
import java.util.stream.Collectors;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ReplaceNode_CustomNodeConcept;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

/*package*/ class ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_55ttgk_a();
  }

  private EditorCell createCollection_55ttgk_a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Horizontal());
    editorCell.setCellId("Collection_55ttgk_a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    editorCell.getStyle().putAll(style);
    if (nodeCondition_55ttgk_a0a()) {
      editorCell.addEditorCell(createReadOnlyModelAccessor_55ttgk_a0());
    }
    return editorCell;
  }
  private boolean nodeCondition_55ttgk_a0a() {
    return getEditorContext() != null && myNode != null;
  }
  private EditorCell createReadOnlyModelAccessor_55ttgk_a0() {
    EditorCell_Property editorCell = EditorCell_Property.create(getEditorContext(), new ModelAccessor() {
      public String getText() {
        return null;
      }
      public void setText(String s) {
      }
      public boolean isValidText(String s) {
        return EqualUtil.equals(s, getText());
      }
    }, myNode);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(getEditorContext(), new BasicCellContext(myNode), new SubstituteInfoPartExt[]{new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_generic_cellMenu_55ttgk_a0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_generic_cellMenu_55ttgk_b0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_c0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_d0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ApplySideTransforms_left_cellMenu_55ttgk_e0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_component_cellMenu_55ttgk_f0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReadOnlyModelAccessor_generic_cellMenu_55ttgk_g0a0(), new ReadOnlyModelAccessor_EditorCellModel_ComponentBuilder_a.ReplaceWith_Error_cellMenu_55ttgk_h0a0(), new SChildSubstituteInfoPartEx(editorCell)}));
    editorCell.setCellId("theId");
    Style style = new StyleImpl();
    style.set(StyleAttributes.EDITABLE, false);
    editorCell.getStyle().putAll(style);
    if (nodeCondition_55ttgk_a0a_0()) {
      editorCell.getStyle().set(StyleAttributes.FOCUS_POLICY, FocusPolicy.ATTRACTS_FOCUS);
    }
    TestTargetActionMap.setCellActions(editorCell, myNode, getEditorContext());
    editorCell.addKeyMap(new TestTargetKeymap());
    editorCell.setTransformationMenuLookup(new NamedTransformationMenuLookup(LanguageRegistry.getInstance(getEditorContext().getRepository()), MetaAdapterFactory.getConcept(0xeaa98d49af584b80L, 0xb585c05e7b5fd335L, 0xbde89531a681a1L, "jetbrains.mps.lang.editor.test.generation.structure.AbstractCellTest"), "jetbrains.mps.lang.editor.test.generation.editor.TestTargetTransformationMenu"));
    return editorCell;
  }
  private boolean nodeCondition_55ttgk_a0a_0() {
    return getEditorContext() != null && myNode != null;
  }
  public static class ReadOnlyModelAccessor_generic_cellMenu_55ttgk_a0a0 extends AbstractCellMenuPart_Generic_Group {
    public ReadOnlyModelAccessor_generic_cellMenu_55ttgk_a0a0() {
    }

    public List<?> createParameterObjects(SNode node, IOperationContext operationContext, EditorContext editorContext) {
      boolean var = operationContext != null || node != null || editorContext != null;
      return (var ? null : null);
    }
    protected void handleAction(Object parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      this.handleAction_impl((String) parameterObject, node, model, operationContext, editorContext);
    }
    public void handleAction_impl(String parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      boolean var = parameterObject != null || node != null || model != null || editorContext != null || operationContext != null;
      if (var) {
        // just usage of var 
      }
    }
    public boolean isReferentPresentation() {
      return false;
    }

    @Override
    protected EditorMenuDescriptor getEditorMenuDescriptor(Object parameterObject) {
      return new EditorMenuDescriptorBase("generic group with parameter: " + ((parameterObject == null ? "null" : parameterObject.toString())), new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334343"));
    }
  }
  public static class ReadOnlyModelAccessor_generic_cellMenu_55ttgk_b0a0 extends AbstractCellMenuPart_Generic_Group {
    public ReadOnlyModelAccessor_generic_cellMenu_55ttgk_b0a0() {
    }

    public List<?> createParameterObjects(SNode node, IOperationContext operationContext, EditorContext editorContext) {
      return null;
    }
    protected void handleAction(Object parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      this.handleAction_impl((String) parameterObject, node, model, operationContext, editorContext);
    }
    public void handleAction_impl(String parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
    }
    public boolean isReferentPresentation() {
      return false;
    }
    public String getMatchingText(Object parameterObject) {
      return this.getMatchingText_internal((String) parameterObject);
    }
    public String getMatchingText_internal(String parameterObject) {
      return String.valueOf(parameterObject);
    }
    public String getDescriptionText(Object parameterObject) {
      return this.getDescriptionText_internal((String) parameterObject);
    }
    public String getDescriptionText_internal(String parameterObject) {
      return String.valueOf(parameterObject);
    }

    @Override
    protected EditorMenuDescriptor getEditorMenuDescriptor(Object parameterObject) {
      return new EditorMenuDescriptorBase("generic group with parameter: " + ((parameterObject == null ? "null" : parameterObject.toString())), new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334395"));
    }
  }
  public static class ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_c0a0 extends AbstractCellMenuPart_ReplaceNode_Group {
    public ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_c0a0() {
    }
    public List<?> createParameterObjects(SNode node, IOperationContext operationContext, EditorContext editorContext) {
      boolean var = operationContext != null || node != null || editorContext != null;
      return (var ? null : null);
    }
    public SNode createReplacementNode(Object parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      return createReplacementNode_impl((String) parameterObject, node, model, operationContext, editorContext);
    }
    public SNode createReplacementNode_impl(String parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      boolean var = parameterObject != null || node != null || model != null || editorContext != null || operationContext != null;
      return (var ? null : null);
    }
    public boolean isReferentPresentation() {
      return false;
    }
    @Override
    protected EditorMenuDescriptor getEditorMenuDescriptor(Object parameterObject) {
      return new EditorMenuDescriptorBase("replace node (group of custom actions) with parameter: " + ((parameterObject == null ? "null" : parameterObject.toString())), new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334413"));
    }

  }
  public static class ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_d0a0 extends AbstractCellMenuPart_ReplaceNode_Group {
    public ReadOnlyModelAccessor_customReplace_cellMenu_55ttgk_d0a0() {
    }
    public List<?> createParameterObjects(SNode node, IOperationContext operationContext, EditorContext editorContext) {
      return null;
    }
    public SNode createReplacementNode(Object parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      return createReplacementNode_impl((String) parameterObject, node, model, operationContext, editorContext);
    }
    public SNode createReplacementNode_impl(String parameterObject, SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      return null;
    }
    public boolean isReferentPresentation() {
      return false;
    }
    public String getMatchingText(Object parameterObject) {
      return this.getMatchingText_internal((String) parameterObject);
    }
    public String getMatchingText_internal(String parameterObject) {
      return String.valueOf(parameterObject);
    }
    public String getDescriptionText(Object parameterObject) {
      return this.getDescriptionText_internal((String) parameterObject);
    }
    public String getDescriptionText_internal(String parameterObject) {
      return String.valueOf(parameterObject);
    }
    @Override
    protected EditorMenuDescriptor getEditorMenuDescriptor(Object parameterObject) {
      return new EditorMenuDescriptorBase("replace node (group of custom actions) with parameter: " + ((parameterObject == null ? "null" : parameterObject.toString())), new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334465"));
    }

  }
  public static class ApplySideTransforms_left_cellMenu_55ttgk_e0a0 extends AbstractCellMenuPart_ApplySideTransforms {
    public ApplySideTransforms_left_cellMenu_55ttgk_e0a0() {
      super(CellSide.LEFT, "ext_1_RTransform");
    }
  }
  public static class ReadOnlyModelAccessor_component_cellMenu_55ttgk_f0a0 implements SubstituteInfoPartExt {
    private TestTargetMenuComponent myComponent;
    public ReadOnlyModelAccessor_component_cellMenu_55ttgk_f0a0() {
      this.myComponent = new TestTargetMenuComponent();
    }
    public List<SubstituteAction> createActions(CellContext cellContext, EditorContext editorContext) {
      return this.myComponent.createSubstituteActions(cellContext, editorContext);
    }
  }
  public static class ReadOnlyModelAccessor_generic_cellMenu_55ttgk_g0a0 extends AbstractCellMenuPart_Generic_Item {
    public ReadOnlyModelAccessor_generic_cellMenu_55ttgk_g0a0() {
    }
    @Override
    public List<SubstituteAction> createActions(CellContext cellContext, EditorContext editorContext) {
      List<SubstituteAction> actions = super.createActions(cellContext, editorContext);
      Function<SubstituteAction, SubstituteAction> mapper = new Function<SubstituteAction, SubstituteAction>() {
        public SubstituteAction apply(SubstituteAction action) {
          return new NodeSubstituteActionWrapper(action) {
            @Override
            public EditorMenuTraceInfo getEditorMenuTraceInfo() {
              EditorMenuTraceInfoImpl result = new EditorMenuTraceInfoImpl();
              result.setDescriptor(new EditorMenuDescriptorBase("Generic item", new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334487")));
              return result;
            }
          };
        }
      };
      return actions.stream().map(mapper).collect(Collectors.toList());
    }

    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      boolean var = node != null || model != null || editorContext != null || operationContext != null;
      if (var) {
        // just usage of var 
      }
    }
    public String getMatchingText() {
      return "matchingText";
    }
  }
  public static class ReplaceWith_Error_cellMenu_55ttgk_h0a0 extends AbstractCellMenuPart_ReplaceNode_CustomNodeConcept {
    public ReplaceWith_Error_cellMenu_55ttgk_h0a0() {
    }
    public SAbstractConcept getReplacementConcept() {
      return MetaAdapterFactory.getConcept(0xeaa98d49af584b80L, 0xb585c05e7b5fd335L, 0xbde89531a5a543L, "jetbrains.mps.lang.editor.test.generation.structure.Error");
    }
    @Override
    protected EditorMenuDescriptor createEditorMenuDescriptor(CellContext cellContext, EditorContext editorContext) {
      return new EditorMenuDescriptorBase("replace node (custom node concept: " + "Error" + ")", new SNodePointer("r:5198f57a-b6fe-4b27-af15-f0dc1a790395(jetbrains.mps.lang.editor.test.generation.editor)", "53454498079334513"));
    }
  }
}
