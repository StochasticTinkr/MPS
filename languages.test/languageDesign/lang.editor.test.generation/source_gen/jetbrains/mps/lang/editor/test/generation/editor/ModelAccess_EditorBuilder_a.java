package jetbrains.mps.lang.editor.test.generation.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;

/*package*/ class ModelAccess_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public ModelAccess_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createModelAccess_tdtdsv_a();
  }

  private EditorCell createModelAccess_tdtdsv_a() {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        boolean var = getEditorContext() != null || myNode != null;
        return (var ? "" : "");
      }
      public void setText(String text) {
        boolean var = text != null || getEditorContext() != null || myNode != null;
        if (var) {

        }
      }
      public boolean isValidText(String text) {
        boolean var = text != null || myNode != null || this.getText() != null || getEditorContext() != null;
        return var;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(getEditorContext(), modelAccessor, myNode);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_tdtdsv_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    editorCell.setDefaultText("text");
    return editorCell;
  }
}
